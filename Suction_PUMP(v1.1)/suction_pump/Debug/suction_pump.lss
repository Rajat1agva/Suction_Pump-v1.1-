
suction_pump.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000013e  00800100  00007392  00007426  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00007392  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002bc  0080023e  0080023e  00007564  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00007564  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000075c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000a28  00000000  00000000  00007600  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0001ab01  00000000  00000000  00008028  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000036fc  00000000  00000000  00022b29  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00005d65  00000000  00000000  00026225  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000026ac  00000000  00000000  0002bf8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000486b  00000000  00000000  0002e638  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000ed2c  00000000  00000000  00032ea3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000a08  00000000  00000000  00041bcf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__dtors_end>
       4:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
       8:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
       c:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
      10:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
      14:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
      18:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
      1c:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
      20:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
      24:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
      28:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
      2c:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
      30:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
      34:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
      38:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
      3c:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
      40:	0c 94 db 19 	jmp	0x33b6	; 0x33b6 <__vector_16>
      44:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
      48:	0c 94 a5 17 	jmp	0x2f4a	; 0x2f4a <__vector_18>
      4c:	0c 94 d7 17 	jmp	0x2fae	; 0x2fae <__vector_19>
      50:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
      54:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
      58:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
      5c:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
      60:	0c 94 4c 30 	jmp	0x6098	; 0x6098 <__vector_24>
      64:	0c 94 64 10 	jmp	0x20c8	; 0x20c8 <__bad_interrupt>
      68:	15 1e       	adc	r1, r21
      6a:	24 1e       	adc	r2, r20
      6c:	28 1e       	adc	r2, r24
      6e:	2c 1e       	adc	r2, r28
      70:	30 1e       	adc	r3, r16
      72:	34 1e       	adc	r3, r20
      74:	38 1e       	adc	r3, r24
      76:	3c 1e       	adc	r3, r28
      78:	40 1e       	adc	r4, r16
      7a:	44 1e       	adc	r4, r20
      7c:	48 1e       	adc	r4, r24
      7e:	4c 1e       	adc	r4, r28
      80:	50 1e       	adc	r5, r16
      82:	54 1e       	adc	r5, r20
      84:	58 1e       	adc	r5, r24
      86:	5c 1e       	adc	r5, r28
      88:	60 1e       	adc	r6, r16
      8a:	64 1e       	adc	r6, r20
      8c:	68 1e       	adc	r6, r24
      8e:	6c 1e       	adc	r6, r28
      90:	70 1e       	adc	r7, r16
      92:	74 1e       	adc	r7, r20

00000094 <__trampolines_end>:
      94:	00 40       	sbci	r16, 0x00	; 0
      96:	7a 10       	cpse	r7, r10
      98:	f3 5a       	subi	r31, 0xA3	; 163
      9a:	00 a0       	ldd	r0, Z+32	; 0x20
      9c:	72 4e       	sbci	r23, 0xE2	; 226
      9e:	18 09       	sbc	r17, r8
      a0:	00 10       	cpse	r0, r0
      a2:	a5 d4       	rcall	.+2378   	; 0x9ee <__stack+0xef>
      a4:	e8 00       	.word	0x00e8	; ????
      a6:	00 e8       	ldi	r16, 0x80	; 128
      a8:	76 48       	sbci	r23, 0x86	; 134
      aa:	17 00       	.word	0x0017	; ????
      ac:	00 e4       	ldi	r16, 0x40	; 64
      ae:	0b 54       	subi	r16, 0x4B	; 75
      b0:	02 00       	.word	0x0002	; ????
      b2:	00 ca       	rjmp	.-3072   	; 0xfffff4b4 <__eeprom_end+0xff7ef4b4>
      b4:	9a 3b       	cpi	r25, 0xBA	; 186
      b6:	00 00       	nop
      b8:	00 e1       	ldi	r16, 0x10	; 16
      ba:	f5 05       	cpc	r31, r5
      bc:	00 00       	nop
      be:	80 96       	adiw	r24, 0x20	; 32
      c0:	98 00       	.word	0x0098	; ????
      c2:	00 00       	nop
      c4:	40 42       	sbci	r20, 0x20	; 32
      c6:	0f 00       	.word	0x000f	; ????
      c8:	00 00       	nop
      ca:	a0 86       	std	Z+8, r10	; 0x08
      cc:	01 00       	.word	0x0001	; ????
      ce:	00 00       	nop
      d0:	10 27       	eor	r17, r16
      d2:	00 00       	nop
      d4:	00 00       	nop
      d6:	e8 03       	fmulsu	r22, r16
      d8:	00 00       	nop
      da:	00 00       	nop
      dc:	64 00       	.word	0x0064	; ????
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	0a 00       	.word	0x000a	; ????
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	01 00       	.word	0x0001	; ????
      ea:	00 00       	nop
      ec:	00 00       	nop
      ee:	2c 76       	andi	r18, 0x6C	; 108
      f0:	d8 88       	ldd	r13, Y+16	; 0x10
      f2:	dc 67       	ori	r29, 0x7C	; 124
      f4:	4f 08       	sbc	r4, r15
      f6:	23 df       	rcall	.-442    	; 0xffffff3e <__eeprom_end+0xff7eff3e>
      f8:	c1 df       	rcall	.-126    	; 0x7c <__SREG__+0x3d>
      fa:	ae 59       	subi	r26, 0x9E	; 158
      fc:	e1 b1       	in	r30, 0x01	; 1
      fe:	b7 96       	adiw	r30, 0x27	; 39
     100:	e5 e3       	ldi	r30, 0x35	; 53
     102:	e4 53       	subi	r30, 0x34	; 52
     104:	c6 3a       	cpi	r28, 0xA6	; 166
     106:	e6 51       	subi	r30, 0x16	; 22
     108:	99 76       	andi	r25, 0x69	; 105
     10a:	96 e8       	ldi	r25, 0x86	; 134
     10c:	e6 c2       	rjmp	.+1484   	; 0x6da <_ZL22FreeSerif12pt7bBitmaps+0x25c>
     10e:	84 26       	eor	r8, r20
     110:	eb 89       	ldd	r30, Y+19	; 0x13
     112:	8c 9b       	sbis	0x11, 4	; 17
     114:	62 ed       	ldi	r22, 0xD2	; 210
     116:	40 7c       	andi	r20, 0xC0	; 192
     118:	6f fc       	.word	0xfc6f	; ????
     11a:	ef bc       	out	0x2f, r14	; 47
     11c:	9c 9f       	mul	r25, r28
     11e:	40 f2       	brcs	.-112    	; 0xb0 <__trampolines_end+0x1c>
     120:	ba a5       	ldd	r27, Y+42	; 0x2a
     122:	6f a5       	ldd	r22, Y+47	; 0x2f
     124:	f4 90       	lpm	r15, Z
     126:	05 5a       	subi	r16, 0xA5	; 165
     128:	2a f7       	brpl	.-54     	; 0xf4 <__trampolines_end+0x60>
     12a:	5c 93       	st	X, r21
     12c:	6b 6c       	ori	r22, 0xCB	; 203
     12e:	f9 67       	ori	r31, 0x79	; 121
     130:	6d c1       	rjmp	.+730    	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
     132:	1b fc       	.word	0xfc1b	; ????
     134:	e0 e4       	ldi	r30, 0x40	; 64
     136:	0d 47       	sbci	r16, 0x7D	; 125
     138:	fe f5       	brtc	.+126    	; 0x1b8 <_ZL5batt3+0x2a>
     13a:	20 e6       	ldi	r18, 0x60	; 96
     13c:	b5 00       	.word	0x00b5	; ????
     13e:	d0 ed       	ldi	r29, 0xD0	; 208
     140:	90 2e       	mov	r9, r16
     142:	03 00       	.word	0x0003	; ????
     144:	94 35       	cpi	r25, 0x54	; 84
     146:	77 05       	cpc	r23, r7
     148:	00 80       	ld	r0, Z
     14a:	84 1e       	adc	r8, r20
     14c:	08 00       	.word	0x0008	; ????
     14e:	00 20       	and	r0, r0
     150:	4e 0a       	sbc	r4, r30
     152:	00 00       	nop
     154:	00 c8       	rjmp	.-4096   	; 0xfffff156 <__eeprom_end+0xff7ef156>
     156:	0c 33       	cpi	r16, 0x3C	; 60
     158:	33 33       	cpi	r19, 0x33	; 51
     15a:	33 0f       	add	r19, r19
     15c:	98 6e       	ori	r25, 0xE8	; 232
     15e:	12 83       	std	Z+2, r17	; 0x02
     160:	11 41       	sbci	r17, 0x11	; 17
     162:	ef 8d       	ldd	r30, Y+31	; 0x1f
     164:	21 14       	cp	r2, r1
     166:	89 3b       	cpi	r24, 0xB9	; 185
     168:	e6 55       	subi	r30, 0x56	; 86
     16a:	16 cf       	rjmp	.-468    	; 0xffffff98 <__eeprom_end+0xff7eff98>
     16c:	fe e6       	ldi	r31, 0x6E	; 110
     16e:	db 18       	sub	r13, r11
     170:	d1 84       	ldd	r13, Z+9	; 0x09
     172:	4b 38       	cpi	r20, 0x8B	; 139
     174:	1b f7       	brvc	.-58     	; 0x13c <__trampolines_end+0xa8>
     176:	7c 1d       	adc	r23, r12
     178:	90 1d       	adc	r25, r0
     17a:	a4 bb       	out	0x14, r26	; 20
     17c:	e4 24       	eor	r14, r4
     17e:	20 32       	cpi	r18, 0x20	; 32
     180:	84 72       	andi	r24, 0x24	; 36
     182:	5e 22       	and	r5, r30
     184:	81 00       	.word	0x0081	; ????
     186:	c9 f1       	breq	.+114    	; 0x1fa <_ZL21FreeSerif12pt7bGlyphs+0x15>
     188:	24 ec       	ldi	r18, 0xC4	; 196
     18a:	a1 e5       	ldi	r26, 0x51	; 81
     18c:	3d 27       	eor	r19, r29

0000018e <_ZL5batt3>:
	...
     19a:	3f ff ff 00 3f ff 81 00 3f ff 81 00 3f ff 81 f8     ?...?...?...?...
     1aa:	3f ff 80 08 3f ff 80 08 3f ff 80 08 3f ff 80 08     ?...?...?...?...
     1ba:	3f ff 80 08 3f ff 80 08 3f ff 81 f8 3f ff 81 00     ?...?...?...?...
     1ca:	3f ff 81 00 3f ff ff 00 00 00 00 00 00 00 00 00     ?...?...........
     1da:	00 00 00 00                                         ....

000001de <_ZL15FreeSerif12pt7b>:
     1de:	7e 04 e5 01 20 7e 1d                                ~... ~.

000001e5 <_ZL21FreeSerif12pt7bGlyphs>:
     1e5:	00 00 00 00 06 00 01 00 00 02 10 08 03 f1 04 00     ................
     1f5:	06 06 0a 01 f1 09 00 0c 10 0c 00 f1 21 00 0a 12     ............!...
     205:	0c 01 f0 38 00 12 11 14 01 f0 5f 00 11 10 13 01     ...8......_.....
     215:	f1 81 00 02 06 05 01 f1 83 00 06 14 08 01 f1 92     ................
     225:	00 06 14 08 01 f1 a1 00 08 0a 0c 03 f2 ab 00 0b     ................
     235:	0b 0e 01 f6 bb 00 03 06 06 02 fe be 00 06 01 08     ................
     245:	01 fb bf 00 02 03 06 02 fe c0 00 07 11 07 00 f0     ................
     255:	cf 00 0a 11 0c 01 f0 e5 00 06 11 0c 03 f0 f2 00     ................
     265:	0a 0f 0c 01 f2 05 01 0a 10 0c 01 f1 19 01 0a 10     ................
     275:	0c 01 f1 2d 01 0a 11 0c 01 f0 43 01 0a 11 0c 01     ...-......C.....
     285:	f0 59 01 0a 10 0c 00 f1 6d 01 0a 11 0c 01 f0 83     .Y......m.......
     295:	01 0a 12 0c 01 f0 9a 01 02 0c 06 02 f5 9d 01 04     ................
     2a5:	0f 06 02 f5 a5 01 0c 0d 0e 01 f4 b9 01 0c 06 0e     ................
     2b5:	01 f8 c2 01 0c 0d 0e 01 f5 d6 01 08 11 0b 02 f0     ................
     2c5:	e7 01 11 10 15 02 f1 09 02 11 10 11 00 f1 2b 02     ..............+.
     2d5:	0c 10 0f 01 f1 43 02 0f 10 10 01 f1 61 02 10 10     .....C......a...
     2e5:	11 00 f1 81 02 0e 10 0f 00 f1 9d 02 0e 10 0e 00     ................
     2f5:	f1 b9 02 10 10 11 01 f1 d9 02 10 10 11 00 f1 f9     ................
     305:	02 06 10 08 01 f1 05 03 08 10 09 00 f1 15 03 10     ................
     315:	10 11 01 f1 35 03 0f 10 0f 00 f1 53 03 13 10 15     ....5......S....
     325:	01 f1 79 03 10 10 11 01 f1 99 03 0f 10 11 01 f1     ..y.............
     335:	b7 03 0c 10 0e 00 f1 cf 03 10 14 11 01 f1 f7 03     ................
     345:	0f 10 10 00 f1 15 04 0b 10 0d 00 f1 2b 04 0f 10     ............+...
     355:	0f 00 f1 49 04 10 10 11 01 f1 69 04 11 10 11 00     ...I......i.....
     365:	f1 8b 04 16 10 17 00 f1 b7 04 11 10 11 00 f1 d9     ................
     375:	04 10 10 11 00 f1 f9 04 0e 10 0f 01 f1 15 05 05     ................
     385:	14 08 02 f1 22 05 07 11 07 00 f0 31 05 05 14 08     ...."......1....
     395:	01 f1 3e 05 0a 09 0b 01 f1 4a 05 0c 01 0c 00 03     ..>......J......
     3a5:	4c 05 05 04 06 00 f1 4f 05 0a 0b 0a 01 f6 5d 05     L......O......].
     3b5:	0a 11 0c 01 f0 73 05 08 0b 0b 01 f6 7e 05 0a 11     .....s......~...
     3c5:	0c 01 f0 94 05 0a 0b 0b 01 f6 a2 05 09 11 09 00     ................
     3d5:	f0 b6 05 0c 10 0b 00 f6 ce 05 0b 11 0c 00 f0 e6     ................
     3e5:	05 05 10 07 00 f1 f0 05 06 15 08 00 f1 00 06 0b     ................
     3f5:	11 0c 01 f0 18 06 05 11 06 00 f0 23 06 12 0b 13     ...........#....
     405:	00 f6 3c 06 0b 0b 0c 00 f6 4c 06 0a 0b 0c 01 f6     ..<......L......
     415:	5a 06 0b 10 0c 00 f6 70 06 0a 10 0c 01 f6 84 06     Z......p........
     425:	08 0b 08 00 f6 8f 06 07 0b 09 01 f6 99 06 06 0d     ................
     435:	07 01 f4 a3 06 0a 0b 0c 01 f6 b1 06 0b 0b 0b 00     ................
     445:	f6 c1 06 10 0b 10 00 f6 d7 06 0b 0b 0c 00 f6 e7     ................
     455:	06 0b 10 0b 00 f6 fd 06 0a 0b 0a 00 f6 0b 07 05     ................
     465:	15 0c 02 f0 19 07 01 11 05 02 f0 1c 07 05 15 0c     ................
     475:	05 f1 2a 07 0c 03 0c 00 fa                          ..*......

0000047e <_ZL22FreeSerif12pt7bBitmaps>:
     47e:	ff fe a8 3f cf 3c f3 8a 20 0c 40 c4 08 40 8c 08     ...?.<.. .@..@..
     48e:	c7 ff 18 81 88 10 81 08 ff e1 18 31 03 10 31 02     ...........1..1.
     49e:	10 04 07 c6 5b 12 c4 b1 0f 41 f0 1e 01 e0 58 13     ....[....A....X.
     4ae:	84 e1 3c 4f 96 3f 01 00 00 04 03 83 03 9f 81 c2     ..<O.?..........
     4be:	20 60 90 38 24 0c 12 03 0d 00 c6 47 9e 23 10 09      `.8$......G.#..
     4ce:	84 04 e1 03 30 40 8c 20 43 08 10 c4 08 1e 00 03     ....0@. C.......
     4de:	c0 02 30 03 08 01 84 00 c4 00 7c f8 1c 38 1e 08     ..0.......|..8..
     4ee:	33 0c 31 c4 10 74 18 3a 0c 0e 07 03 83 c3 e2 7e     3.1..t.:.......~
     4fe:	3e ff a0 04 21 08 61 0c 30 c3 0c 30 c1 04 18 20     >...!.a.0..0... 
     50e:	40 81 81 02 04 18 20 83 0c 30 c3 0c 30 86 10 84     @..... ..0..0...
     51e:	20 30 b3 d7 54 38 7c d3 30 30 10 04 00 80 10 02      0..T8|.00......
     52e:	00 41 ff c1 00 20 04 00 80 10 00 df 95 00 fc fc     .A... ..........
     53e:	06 0c 10 60 c1 06 0c 10 60 c1 06 0c 10 60 c0 1e     ...`....`....`..
     54e:	0c c6 19 86 c0 b0 3c 0f 03 c0 f0 3c 0f 03 c0 d8     ......<....<....
     55e:	66 18 cc 1e 00 11 c3 0c 30 c3 0c 30 c3 0c 30 c3     f.......0..0..0.
     56e:	0c fc 1e 18 c4 1a 06 01 80 60 10 0c 02 01 00 c0     .........`......
     57e:	60 30 18 1f f8 1e 18 e8 18 06 01 00 80 f0 7e 03     `0............~.
     58e:	c0 70 0c 03 00 c0 6e 11 f8 01 00 c0 70 2c 0b 04     .p....n.....p,..
     59e:	c2 30 8c 43 20 c8 33 ff 03 00 c0 30 0c 00 03 f1     .0.C .3....0....
     5ae:	00 40 18 0f 80 f8 0e 01 c0 30 0c 03 00 c0 20 1b     .@.......0.... .
     5be:	8c 7c 00 01 c3 c1 c0 c0 70 18 0e f3 ce c1 f0 3c     .|......p......<
     5ce:	0f 03 c0 d8 36 08 c6 1e 00 3f d0 38 08 06 01 80     ....6....?.8....
     5de:	40 10 0c 02 00 80 20 10 04 01 00 80 20 1f 18 6c     @..... ..... ..l
     5ee:	0f 03 c0 f8 67 30 f0 1e 09 e6 3b 07 c0 f0 3c 0d     ....g0....;...<.
     5fe:	86 1f 00 1e 08 c6 1b 02 c0 f0 3c 0f 03 e0 dc 73     ..........<....s
     60e:	ec 06 01 80 c0 70 38 38 18 00 fc 00 3f cc c0 00     .....p88....?...
     61e:	00 06 77 12 40 00 00 07 01 e0 78 1e 07 00 c0 0f     ..w.@.....x.....
     62e:	00 3c 00 f0 03 c0 07 00 10 ff f0 00 00 00 00 00     .<..............
     63e:	0f ff 80 0e 00 3c 00 f0 03 c0 0f 00 30 0e 07 81     .....<......0...
     64e:	e0 78 0e 00 00 00 7c 86 83 c3 03 03 06 0c 08 08     .x....|.........
     65e:	10 10 00 00 30 30 30 03 f0 06 06 06 00 86 00 26     ....000........&
     66e:	0e d3 0c c7 0c 63 84 31 c6 18 e3 08 71 8c 4c c6     .....c.1....q.L.
     67e:	46 3d c1 80 00 30 10 07 f0 00 80 00 60 00 70 00     F=...0......`.p.
     68e:	38 00 2e 00 13 00 19 c0 08 60 04 38 04 0c 03 ff     8........`.8....
     69e:	03 03 81 00 e1 80 70 c0 3d f0 3f ff 83 0c 30 63     ......p.=.?...0c
     6ae:	06 30 63 06 30 c3 f0 30 e3 06 30 33 03 30 33 07     .0c.0..0..03.03.
     6be:	30 ef fc 07 e2 38 3c c0 3b 00 36 00 38 00 30 00     0....8<.;.6.8.0.
     6ce:	60 00 c0 01 80 03 00 03 00 06 00 06 00 47 03 03     `............G..
     6de:	f8 ff c0 30 78 30 1c 30 0e 30 06 30 03 30 03 30     ...0x0.0.0.0.0.0
     6ee:	03 30 03 30 03 30 03 30 06 30 06 30 0c 30 78 ff     .0.0.0.0.0.0.0x.
     6fe:	c0 ff fc c0 33 00 4c 00 30 00 c0 43 03 0f fc 30     ....3.L.0..C...0
     70e:	30 c0 43 00 0c 00 30 08 c0 23 03 bf fe ff fc c0     0.C...0..#......
     71e:	33 00 4c 00 30 00 c0 43 03 0f fc 30 30 c0 43 00     3.L.0..C...00.C.
     72e:	0c 00 30 00 c0 03 00 3f 00 07 e4 1c 3c 30 0c 60     ..0....?....<0.`
     73e:	0c 60 04 c0 00 c0 00 c0 3f c0 0c c0 0c c0 0c 60     .`......?......`
     74e:	0c 60 0c 30 0c 1c 1c 07 e0 fc 3f 30 0c 30 0c 30     .`.0......?0.0.0
     75e:	0c 30 0c 30 0c 30 0c 3f fc 30 0c 30 0c 30 0c 30     .0.0.0.?.0.0.0.0
     76e:	0c 30 0c 30 0c 30 0c fc 3f fc c3 0c 30 c3 0c 30     .0.0.0..?...0..0
     77e:	c3 0c 30 c3 3f 3f 0c 0c 0c 0c 0c 0c 0c 0c 0c 0c     ..0.??..........
     78e:	0c 0c 0c c8 f0 fc fe 30 38 30 20 30 40 30 80 33     .......080 0@0.3
     79e:	00 36 00 3e 00 37 00 33 80 31 c0 30 e0 30 70 30     .6.>.7.3.1.0.0p0
     7ae:	38 30 3c fc 7f fc 00 60 00 c0 01 80 03 00 06 00     80<....`........
     7be:	0c 00 18 00 30 00 60 00 c0 01 80 03 00 26 00 8c     ....0.`......&..
     7ce:	07 7f fe f8 01 e7 00 70 e0 0e 1e 03 c2 c0 58 5c     .......p......X\
     7de:	1b 09 82 61 38 4c 27 11 84 72 30 8e c6 10 d0 c2     ...a8L'..r0.....
     7ee:	1e 18 41 83 1c 30 67 c4 3f f0 1f 78 0e 3c 04 3e     ..A..0g.?..x.<.>
     7fe:	04 2e 04 27 04 23 84 23 c4 21 e4 20 e4 20 74 20     ...'.#.#.!. . t 
     80e:	3c 20 1c 20 0c 70 0c f8 04 07 c0 30 60 c0 63 00     < . .p.....0`.c.
     81e:	66 00 d8 00 f0 01 e0 03 c0 07 80 0f 00 1b 00 66     f..............f
     82e:	00 c6 03 06 0c 03 e0 ff 83 0e 30 73 03 30 33 03     ..........0s.03.
     83e:	30 63 0e 3f 83 00 30 03 00 30 03 00 30 0f c0 0f     0c.?..0..0..0...
     84e:	e0 18 30 30 18 60 0c 60 0c c0 06 c0 06 c0 06 c0     ..00.`.`........
     85e:	06 c0 06 c0 06 60 0c 60 0c 30 18 18 30 07 c0 03     .....`.`.0..0...
     86e:	c0 01 e0 00 78 00 1f ff 80 61 c0 c1 c1 81 83 03     ....x....a......
     87e:	06 06 0c 1c 18 70 3f 80 67 00 c7 01 8f 03 0f 06     .....p?.g.......
     88e:	0e 0c 0e 7e 0f 1f 46 19 81 30 27 02 f0 0f 00 f8     ...~..F..0'.....
     89e:	07 c0 38 03 c0 34 06 80 dc 32 7c ff ff 86 0e 0c     ..8..4...2|.....
     8ae:	1c 18 10 30 00 60 00 c0 01 80 03 00 06 00 0c 00     ...0.`..........
     8be:	18 00 30 00 60 00 c0 07 e0 fc 1f 30 0e 30 04 30     ..0.`......0.0.0
     8ce:	04 30 04 30 04 30 04 30 04 30 04 30 04 30 04 30     .0.0.0.0.0.0.0.0
     8de:	04 30 04 18 08 1c 18 07 e0 fe 0f 9c 03 0e 01 83     .0..............
     8ee:	00 81 c0 40 60 40 38 20 0c 30 07 10 01 98 00 e8     ...@`@8 .0......
     8fe:	00 34 00 1e 00 06 00 03 00 01 00 fc fc 3d e1 c0     .4...........=..
     90e:	63 83 01 86 0e 04 1c 18 10 70 70 80 c3 c2 03 8b     c........pp.....
     91e:	08 06 6e 40 1d 19 00 74 78 00 e1 e0 03 83 80 0e     ..n@...tx.......
     92e:	0c 00 10 10 00 40 40 7f 1f 9e 03 07 03 01 c3 00     .....@@.........
     93e:	71 00 19 00 0f 00 03 80 01 e0 01 b0 01 9c 00 87     q...............
     94e:	00 81 c0 80 e0 c0 79 f8 7f fe 1f 78 0c 38 08 1c     ......y....x.8..
     95e:	18 0e 10 06 20 07 60 03 c0 01 80 01 80 01 80 01     .... .`.........
     96e:	80 01 80 01 80 01 80 07 e0 7f fb 00 c8 07 20 38     .............. 8
     97e:	01 c0 07 00 38 01 c0 07 00 38 01 c0 0e 00 38 05     ....8....8....8.
     98e:	c0 3e 01 bf fe fe 31 8c 63 18 c6 31 8c 63 18 c6     .>....1.c..1.c..
     99e:	31 f0 c1 81 03 06 04 0c 18 10 30 60 40 c1 81 03     1.........0`@...
     9ae:	06 f8 c6 31 8c 63 18 c6 31 8c 63 18 c7 f0 0c 07     ...1.c..1.c.....
     9be:	01 60 d8 23 18 c4 1b 06 80 c0 ff f0 c7 0c 30 3e     .`.#..........0>
     9ce:	31 8c 30 0c 03 07 c6 33 0c c3 31 c7 b8 20 38 06     1.0....3..1.. 8.
     9de:	01 80 60 18 06 f1 c6 61 d8 36 0d 83 60 d8 26 19     ..`....a.6..`.&.
     9ee:	84 3e 00 1e 23 63 c0 c0 c0 c0 c0 e1 72 3c 00 80     .>..#c......r<..
     9fe:	e0 18 06 01 80 61 d8 8e 61 b0 6c 1b 06 c1 b0 6e     .....a..a.l....n
     a0e:	19 ce 3d c0 1e 08 e4 1b fe c0 30 0c 03 81 60 9c     ..=.......0...`.
     a1e:	41 e0 0f 08 c4 06 03 01 81 f0 60 30 18 0c 06 03     A.........`0....
     a2e:	01 80 c0 60 fc 00 1f 03 1f 60 c6 0c 60 c3 18 1f     ...`.....`..`...
     a3e:	02 00 40 07 fc 40 24 02 c0 2c 04 e0 83 f0 30 1e     ..@..@$..,....0.
     a4e:	00 c0 18 03 00 60 0d e1 ce 30 c6 18 c3 18 63 0c     .....`...0....c.
     a5e:	61 8c 31 86 79 e0 31 80 00 09 c6 31 8c 63 18 df     a.1.y.1....1.c..
     a6e:	0c 30 00 00 31 c3 0c 30 c3 0c 30 c3 0c 30 f2 f0     .0..1..0..0..0..
     a7e:	20 1c 01 80 30 06 00 c0 18 fb 08 62 0c 81 e0 3e      ...0......b...>
     a8e:	06 e0 ce 18 c3 0e f3 e0 13 8c 63 18 c6 31 8c 63     ..........c..1.c
     a9e:	18 c6 f8 f7 8f 0e 3c e3 0c 18 c3 06 30 c1 8c 30     ......<.....0..0
     aae:	63 0c 18 c3 06 30 c1 8c 30 67 9e 3c f7 87 18 c3     c....0..0g.<....
     abe:	18 63 0c 61 8c 31 86 30 c6 19 e7 80 1e 18 e4 1b     .c.a.1.0........
     ace:	03 c0 f0 3c 0f 03 60 9c 41 e0 77 87 18 c3 98 33     ...<..`.A.w....3
     ade:	06 60 cc 19 83 30 c7 10 dc 18 03 00 60 0c 07 e0     .`...0......`...
     aee:	1e 8c e6 1b 06 c1 b0 6c 1b 06 e1 98 e3 d8 06 01     .......l........
     afe:	80 60 18 1f 37 7b 30 30 30 30 30 30 30 30 7c 7b     .`..7{00000000|{
     b0e:	0e 1c 1e 0f 07 c3 87 8a e0 21 8f 98 61 86 18 61     .........!..a..a
     b1e:	86 19 38 e3 98 66 19 86 61 98 66 19 86 61 9c e3     ..8..f..a.f..a..
     b2e:	dc f8 ee 08 c1 18 41 88 32 03 40 68 06 00 c0 10     ......A.2.@h....
     b3e:	00 f3 e7 61 83 70 c2 30 c2 30 c4 19 64 19 68 0e     ...a.p.0.0..d.h.
     b4e:	38 0e 38 0c 30 04 10 fb c6 30 64 0f 00 c0 0c 03     8.8.0....0d.....
     b5e:	c0 98 21 8c 3b cf 80 f8 ee 08 c1 18 41 88 31 03     ..!.;.......A.1.
     b6e:	40 68 06 00 c0 08 02 00 40 10 1e 03 80 7f 90 e0     @h......@.......
     b7e:	30 18 0e 03 01 c0 e0 30 5c 3f f8 19 8c 63 18 c6     0......0\?...c..
     b8e:	31 b0 63 18 c6 31 8c 61 80 ff ff 80 c3 18 c6 31     1.c..1.a.......1
     b9e:	8c 63 06 c6 31 8c 63 18 cc 00 38 06 62 41 c0        .c..1.c...8.bA.

00000bad <_ZL15FreeSerif18pt7b>:
     bad:	4d 0e b4 0b 20 7e 2a                                M... ~*

00000bb4 <_ZL21FreeSerif18pt7bGlyphs>:
     bb4:	00 00 00 00 09 00 01 00 00 04 18 0c 05 e9 0c 00     ................
     bc4:	08 09 0e 03 e9 15 00 11 17 11 00 ea 46 00 0d 1b     ............F...
     bd4:	11 02 e8 72 00 19 17 1d 02 ea ba 00 19 19 1b 01     ...r............
     be4:	e8 09 01 03 09 07 02 e9 0d 01 09 1e 0c 02 e9 2f     .............../
     bf4:	01 09 1e 0c 01 ea 51 01 0c 0e 12 03 e9 66 01 10     ......Q......f..
     c04:	12 14 02 ef 8a 01 04 09 09 02 fd 8f 01 08 02 0c     ................
     c14:	01 f8 91 01 04 04 09 02 fd 93 01 0a 18 0a 00 e9     ................
     c24:	b1 01 10 18 12 01 e9 e1 01 0a 18 12 03 e9 ff 01     ................
     c34:	10 18 11 01 e9 2f 02 0d 18 11 02 e9 56 02 10 17     ...../......V...
     c44:	12 00 ea 84 02 0d 18 11 02 e9 ab 02 10 18 12 01     ................
     c54:	e9 db 02 0e 17 12 01 ea 04 03 0c 19 12 02 e8 2a     ...............*
     c64:	03 10 1a 11 01 e8 5e 03 04 11 09 02 f0 67 03 05     ......^......g..
     c74:	16 09 02 f0 75 03 12 12 14 01 ef 9e 03 12 09 14     ....u...........
     c84:	01 f4 b3 03 12 12 14 01 ef dc 03 0d 19 10 02 e8     ................
     c94:	05 04 18 19 1e 03 e8 50 04 18 17 19 01 ea 95 04     .......P........
     ca4:	14 17 16 01 ea cf 04 16 18 17 01 e9 11 05 17 17     ................
     cb4:	19 01 ea 54 05 14 17 15 02 ea 8e 05 11 17 14 02     ...T............
     cc4:	ea bf 05 17 18 19 01 e9 04 06 16 17 19 02 ea 44     ...............D
     cd4:	06 09 17 0b 02 ea 5e 06 0c 17 0d 00 ea 81 06 17     ......^.........
     ce4:	17 19 02 ea c4 06 13 17 15 02 ea fb 06 1d 17 1f     ................
     cf4:	01 ea 4f 07 17 17 19 01 ea 92 07 17 18 19 01 e9     ..O.............
     d04:	d7 07 12 17 14 01 ea 0b 08 17 1e 19 01 e9 62 08     ..............b.
     d14:	15 17 17 02 ea 9f 08 10 18 13 01 e9 cf 08 14 17     ................
     d24:	15 01 ea 09 09 16 17 19 02 ea 49 09 18 17 19 00     ..........I.....
     d34:	ea 8e 09 21 17 21 00 ea ed 09 19 17 19 00 ea 35     ...!.!.........5
     d44:	0a 18 17 19 01 ea 7a 0a 15 17 15 00 ea b7 0a 07     ......z.........
     d54:	1c 0c 03 ea d0 0a 0a 18 0a 00 e9 ee 0a 07 1c 0c     ................
     d64:	02 ea 07 0b 0f 0d 10 01 ea 20 0b 12 02 11 00 03     ......... ......
     d74:	25 0b 08 06 09 01 e9 2b 0b 0d 10 0f 02 f1 45 0b     %......+......E.
     d84:	10 19 11 01 e8 77 0b 0e 10 10 01 f1 93 0b 10 19     .....w..........
     d94:	11 01 e8 c5 0b 0d 10 10 01 f1 df 0b 0d 19 0d 00     ................
     da4:	e8 08 0c 10 18 10 01 f1 38 0c 10 19 11 01 e8 6a     ........8......j
     db4:	0c 08 18 0a 00 e9 82 0c 09 20 0c 00 e9 a6 0c 11     ......... ......
     dc4:	19 12 01 e8 dc 0c 08 19 09 00 e8 f5 0c 1a 10 1b     ................
     dd4:	01 f1 29 0d 10 10 11 01 f1 49 0d 10 10 11 01 f1     ..)......I......
     de4:	69 0d 10 18 11 01 f1 99 0d 10 18 11 01 f1 c9 0d     i...............
     df4:	0b 10 0c 01 f1 df 0d 0a 10 0d 01 f1 f3 0d 08 13     ................
     e04:	0a 02 ee 06 0e 10 10 11 01 f1 26 0e 10 10 10 00     ..........&.....
     e14:	f1 46 0e 18 10 18 00 f1 76 0e 11 10 11 00 f1 98     .F......v.......
     e24:	0e 10 18 10 00 f1 c8 0e 0e 10 0f 00 f1 e4 0e 08     ................
     e34:	1e 11 03 e9 02 0f 02 18 07 02 e9 08 0f 08 1e 11     ................
     e44:	06 ea 26 0f 10 04 11 01 f6                          ..&......

00000e4d <_ZL22FreeSerif18pt7bBitmaps>:
     e4d:	6f ff ff fe 66 66 66 64 40 00 6f f6 e7 e7 e7 e7     o...fffd@.o.....
     e5d:	e7 46 42 42 42 03 06 01 83 00 c1 80 61 c0 30 c0     .FBBB.......a.0.
     e6d:	38 60 18 30 ff ff 7f ff 83 06 01 86 00 c3 00 c1     8`.0............
     e7d:	87 ff ff ff fe 18 30 0c 18 06 18 06 0c 03 06 01     ......0.........
     e8d:	83 00 c1 80 60 c0 02 00 10 03 e0 64 e6 23 61 1b     ....`......d.#a.
     e9d:	08 58 42 e2 03 90 1f 80 7e 00 fc 01 f0 0f c0 4e     .XB.....~......N
     ead:	02 38 10 e0 87 04 3c 21 e1 1b c9 cf fc 1f 80 10     .8....<!........
     ebd:	00 80 07 80 20 0f f0 70 0f 07 d0 0f 02 18 07 01     .... ..p........
     ecd:	18 07 00 8c 03 80 4c 01 80 44 00 c0 26 00 60 22     ......L..D..&.`"
     edd:	0f 30 33 1f cc 73 1e 37 f1 8e 19 e1 8e 04 00 86     .03..s.7........
     eed:	02 00 c7 01 00 c3 80 80 61 80 80 60 c0 40 30 60     ........a..`.@0`
     efd:	40 30 38 e0 30 0f e0 18 03 c0 00 78 00 00 7e 00     @08.0......x..~.
     f0d:	00 61 80 00 60 60 00 30 30 00 18 18 00 0c 0c 00     .a..``.00.......
     f1d:	06 0c 00 03 8e 00 01 ce 00 00 7c 3f c0 38 07 80     ..........|?.8..
     f2d:	3e 03 80 77 01 80 73 c0 80 f0 f0 c0 70 7c c0 78     >..w..s.....p|.x
     f3d:	1e 40 3c 07 c0 1e 01 e0 0f 00 78 0f c0 ff 0d f0     .@<.......x.....
     f4d:	c7 fc 7f c1 fc 1f 80 3c 00 ff fe 92 40 00 80 80     .......<....@...
     f5d:	80 80 80 c0 c0 60 70 30 18 1c 0e 07 03 81 c0 e0     .....`p0........
     f6d:	70 38 0c 06 03 80 c0 60 18 0c 03 00 c0 30 0c 80     p8.....`.....0..
     f7d:	30 0c 03 00 c0 60 18 0c 07 01 80 c0 70 38 1c 0e     0....`......p8..
     f8d:	07 03 81 c0 e0 60 30 38 18 0c 0c 04 04 04 04 04     .....`08........
     f9d:	00 0c 00 c0 0c 0c 46 e4 f7 5e 1f 00 c0 17 8e 4e     ......F..^.....N
     fad:	e4 fc c6 0c 00 c0 01 80 01 80 01 80 01 80 01 80     ................
     fbd:	01 80 01 80 01 80 ff ff ff ff 01 80 01 80 01 80     ................
     fcd:	01 80 01 80 01 80 01 80 01 80 6f ff 11 24 80 ff     ..........o..$..
     fdd:	ff 6f f6 00 c0 60 18 06 03 80 c0 30 1c 06 01 80     .o...`.....0....
     fed:	e0 30 0c 07 01 80 60 38 0c 03 01 c0 60 18 0e 03     .0....`8....`...
     ffd:	00 03 e0 0e 70 1c 38 38 1c 38 1c 78 1e 70 0e f0     ....p.88.8.x.p..
    100d:	0f f0 0f f0 0f f0 0f f0 0f f0 0f f0 0f f0 0f f0     ................
    101d:	0f 70 0e 70 0e 78 1e 38 1c 38 1c 1c 38 0c 30 03     .p.p.x.8.8..8.0.
    102d:	c0 06 03 83 e3 38 0e 03 80 e0 38 0e 03 80 e0 38     .....8....8....8
    103d:	0e 03 80 e0 38 0e 03 80 e0 38 0e 03 81 e1 ff 07     ....8....8......
    104d:	c0 1f f0 3f f8 70 f8 60 3c c0 3c 80 1c 00 1c 00     ...?.p.`<.<.....
    105d:	1c 00 18 00 18 00 30 00 30 00 60 00 c0 00 80 01     ......0.0.`.....
    106d:	00 02 00 04 00 08 01 10 02 3f fe 7f fc ff fc 0f     .........?......
    107d:	c0 ff 0c 3c 80 e4 03 00 18 00 c0 04 00 40 04 00     ...<.........@..
    108d:	f8 1f e0 0f 00 1c 00 e0 03 00 18 00 c0 06 00 60     ...............`
    109d:	03 78 73 ff 0f c0 00 30 00 30 00 70 00 f0 00 b0     .xs....0.0.p....
    10ad:	01 30 03 30 06 30 04 30 08 30 18 30 10 30 20 30     .0.0.0.0.0.0.0 0
    10bd:	60 30 c0 30 ff ff ff ff 00 30 00 30 00 30 00 30     `0.0.....0.0.0.0
    10cd:	00 30 00 30 00 00 7f c3 fe 1f e1 80 08 00 c0 07     .0.0............
    10dd:	c0 7f 81 ff 00 fc 01 e0 07 80 1c 00 60 03 00 18     ............`...
    10ed:	00 c0 06 00 60 07 78 73 ff 0f c0 00 0e 00 f8 03     ....`.xs........
    10fd:	c0 07 80 0f 00 1e 00 3c 00 7c 00 79 f0 7f fc f8     .......<.|.y....
    110d:	3c f0 1e f0 1f f0 0f f0 0f f0 0f f0 0f 70 0f 78     <............p.x
    111d:	0f 78 0e 3c 1e 1e 3c 0f f8 07 e0 3f fd ff f7 ff     .x.<..<....?....
    112d:	f0 06 80 18 00 60 03 00 0c 00 30 01 80 06 00 18     .....`....0.....
    113d:	00 e0 03 00 0c 00 70 01 80 06 00 38 00 c0 03 00     ......p....8....
    114d:	1c 00 60 00 0f 83 fc 70 e6 07 c0 3c 03 c0 3e 03     ..`....p...<..>.
    115d:	70 67 8c 3d 81 f0 0f 81 7c 21 e6 0e c0 7c 03 c0     pg.=....|!...|..
    116d:	3c 03 c0 36 06 70 e3 fc 0f 80 07 c0 1f f0 3c 78     <..6.p........<x
    117d:	38 3c 78 1e 70 1e f0 0e f0 0f f0 0f f0 0f f0 0f     8<x.p...........
    118d:	f0 0f f8 0f 78 0f 3c 3f 1f ee 0f 9e 00 1e 00 3c     ....x.<?.......<
    119d:	00 38 00 78 00 f0 01 e0 07 80 1e 00 70 00 6f f6     .8.x........p.o.
    11ad:	00 00 00 00 06 ff 60 67 bc c0 00 00 00 00 00 19     ......`g........
    11bd:	ef 78 42 22 20 00 00 c0 00 f0 01 f8 01 f8 01 f8     .xB" ...........
    11cd:	01 f0 03 f0 03 f0 00 f0 00 3e 00 07 e0 00 7e 00     .........>....~.
    11dd:	03 e0 00 3e 00 03 f0 00 3f 00 03 c0 00 10 ff ff     ...>....?.......
    11ed:	ff ff f0 00 00 00 00 00 00 00 00 00 00 03 ff ff     ................
    11fd:	ff ff c0 80 00 3c 00 0f c0 00 fc 00 07 c0 00 7c     .....<.........|
    120d:	00 07 e0 00 7e 00 07 c0 00 f0 00 fc 00 fc 00 f8     ....~...........
    121d:	01 f8 01 f8 01 f8 00 f0 00 30 00 00 1f 81 ff 18     .........0......
    122d:	7d 81 ec 07 f0 3f 81 e0 0f 00 70 03 80 38 01 80     }....?....p..8..
    123d:	08 00 c0 04 00 20 02 00 10 00 80 00 00 00 03 00     ..... ..........
    124d:	3c 01 e0 07 00 00 7f 00 01 ff c0 07 80 f0 0f 00     <...............
    125d:	38 1c 00 1c 38 00 0c 38 00 06 70 1e 02 70 3f e3     8...8..8..p..p?.
    126d:	f0 71 e1 e0 e0 c1 e0 c0 c1 e0 c1 c1 e1 81 c1 e1     .q..............
    127d:	81 83 e1 83 82 e1 83 86 71 c7 8c 70 f9 f8 38 f0     ........q..p..8.
    128d:	f0 3c 00 00 1e 00 00 07 80 70 03 ff e0 00 7f 00     .<.......p......
    129d:	00 10 00 00 38 00 00 38 00 00 38 00 00 7c 00 00     ....8..8..8..|..
    12ad:	5c 00 00 de 00 00 8e 00 01 8f 00 01 87 00 03 07     \...............
    12bd:	80 03 03 80 02 03 c0 06 03 c0 07 ff c0 0f ff e0     ................
    12cd:	0c 01 e0 18 00 f0 18 00 f0 30 00 78 30 00 78 70     .........0.x0.xp
    12dd:	00 7c fc 01 ff ff fc 03 ff f8 1e 0f c1 e0 3c 1e     .|............<.
    12ed:	01 e1 e0 1e 1e 01 e1 e0 1e 1e 03 c1 e0 78 1f fe     .............x..
    12fd:	01 ff f0 1e 07 c1 e0 1e 1e 00 f1 e0 0f 1e 00 f1     ................
    130d:	e0 0f 1e 00 f1 e0 1e 1e 07 e3 ff f8 ff fe 00 00     ................
    131d:	fe 08 0f ff 60 fc 1f 87 c0 1e 3c 00 38 f0 00 67     ....`.....<.8..g
    132d:	80 01 9e 00 02 f0 00 03 c0 00 0f 00 00 3c 00 00     .............<..
    133d:	f0 00 03 c0 00 0f 00 00 3c 00 00 78 00 01 e0 00     ........<..x....
    134d:	03 c0 00 0f 00 02 1f 00 38 3f 03 80 7f fc 00 3f     ........8?.....?
    135d:	80 ff fc 00 7f ff 00 78 3f 80 f0 0f 81 e0 0f 83     .......x?.......
    136d:	c0 0f 07 80 0f 0f 00 1e 1e 00 1e 3c 00 3c 78 00     ...........<.<x.
    137d:	78 f0 00 f1 e0 01 e3 c0 03 c7 80 07 8f 00 1e 1e     x...............
    138d:	00 3c 3c 00 f0 78 01 e0 f0 0f 81 e0 7e 07 ff f0     .<<..x......~...
    139d:	3f ff 00 00 ff ff 87 ff f8 3c 01 83 c0 08 3c 00     ?........<....<.
    13ad:	83 c0 00 3c 00 03 c0 00 3c 02 03 c0 60 3f fe 03     ...<....<...`?..
    13bd:	ff e0 3c 06 03 c0 20 3c 00 03 c0 00 3c 00 03 c0     ..<... <....<...
    13cd:	01 3c 00 23 c0 06 3c 01 e7 ff fe ff ff c0 ff ff     .<.#..<.........
    13dd:	bf ff cf 00 67 80 13 c0 09 e0 00 f0 00 78 00 3c     ....g........x.<
    13ed:	02 1e 03 0f ff 87 ff c3 c0 61 e0 10 f0 00 78 00     .........a....x.
    13fd:	3c 00 1e 00 0f 00 07 80 03 c0 03 f0 03 fc 00 00     <...............
    140d:	fe 04 07 ff b8 1f 03 f0 f8 01 e3 e0 01 c7 80 01     ................
    141d:	9e 00 01 3c 00 00 f0 00 01 e0 00 03 c0 00 07 80     ...<............
    142d:	07 ff 00 07 de 00 07 bc 00 0f 78 00 1e 78 00 3c     ..........x..x.<
    143d:	f0 00 78 f0 00 f1 f0 01 e1 f0 03 c1 f8 1f 00 ff     ..x.............
    144d:	fc 00 3f 80 ff 03 fd f8 07 e3 c0 0f 0f 00 3c 3c     ..?...........<<
    145d:	00 f0 f0 03 c3 c0 0f 0f 00 3c 3c 00 f0 f0 03 c3     .........<<.....
    146d:	ff ff 0f ff fc 3c 00 f0 f0 03 c3 c0 0f 0f 00 3c     .....<.........<
    147d:	3c 00 f0 f0 03 c3 c0 0f 0f 00 3c 3c 00 f1 f8 07     <.........<<....
    148d:	ef f0 3f c0 ff bf 0f 07 83 c1 e0 f0 78 3c 1e 0f     ..?.........x<..
    149d:	07 83 c1 e0 f0 78 3c 1e 0f 07 83 c3 f3 fe 0f f0     .....x<.........
    14ad:	7e 03 c0 3c 03 c0 3c 03 c0 3c 03 c0 3c 03 c0 3c     ~..<..<..<..<..<
    14bd:	03 c0 3c 03 c0 3c 03 c0 3c 03 c6 38 f3 8f f0 7c     ..<..<..<..8...|
    14cd:	00 ff 07 fc fc 03 c0 f0 07 01 e0 1c 03 c0 60 07     ..............`.
    14dd:	81 80 0f 06 00 1e 18 00 3c 60 00 79 80 00 ff 00     ........<`.y....
    14ed:	01 ff 00 03 df 00 07 8f 00 0f 0f 00 1e 0f 00 3c     ...............<
    14fd:	0f 00 78 0f 00 f0 1f 01 e0 1f 03 c0 1f 0f c0 3f     ..x............?
    150d:	3f c1 ff 80 ff 00 0f c0 00 f0 00 1e 00 03 c0 00     ?...............
    151d:	78 00 0f 00 01 e0 00 3c 00 07 80 00 f0 00 1e 00     x......<........
    152d:	03 c0 00 78 00 0f 00 01 e0 00 3c 00 07 80 04 f0     ...x......<.....
    153d:	01 1e 00 63 c0 3c ff ff bf ff e0 fc 00 03 f9 f0     ...c.<..........
    154d:	00 1f 87 80 01 f8 3e 00 0f c1 f0 00 5e 0b c0 06     ......>.....^...
    155d:	f0 5e 00 37 82 78 03 3c 13 c0 19 e0 8f 01 8f 04     .^.7.x.<........
    156d:	78 0c 78 21 e0 c3 c1 0f 06 1e 08 3c 60 f0 41 e3     x.x!.......<`.A.
    157d:	07 82 07 b0 3c 10 3d 81 e0 81 f8 0f 04 07 c0 78     ....<.=........x
    158d:	20 3c 03 c1 00 e0 1e 1c 06 01 fb f8 10 1f e0 fc      <..............
    159d:	00 fe 78 00 70 78 00 40 f8 00 81 f8 01 02 f8 02     ..x.px.@........
    15ad:	04 f8 04 08 f0 08 11 f0 10 21 f0 20 41 f0 40 81     .........!. A.@.
    15bd:	f0 81 01 f1 02 01 e2 04 03 e4 08 03 e8 10 03 f0     ................
    15cd:	20 03 e0 40 03 c0 80 03 81 00 07 07 00 06 3f 80      ..@..........?.
    15dd:	04 00 00 fe 00 07 ff 00 3e 0f 80 f0 07 83 c0 07     ........>.......
    15ed:	87 80 07 1e 00 0f 3c 00 1e f0 00 1f e0 00 3f c0     ......<.......?.
    15fd:	00 7f 80 00 ff 00 01 fe 00 03 fc 00 07 f8 00 0f     ................
    160d:	78 00 3c f0 00 78 e0 01 e1 e0 03 c1 e0 0f 01 f0     x.<..x..........
    161d:	7c 00 ff e0 00 7f 00 ff f8 1f ff 83 c1 f0 f0 1e     |...............
    162d:	3c 07 cf 00 f3 c0 3c f0 0f 3c 03 cf 01 f3 c0 78     <.....<..<.....x
    163d:	f0 7c 3f fe 0f fe 03 c0 00 f0 00 3c 00 0f 00 03     .|?........<....
    164d:	c0 00 f0 00 3c 00 1f 00 0f f0 00 00 fe 00 07 ff     ....<...........
    165d:	00 3e 0f 80 f0 07 83 c0 07 87 80 0f 1e 00 0f 3c     .>.............<
    166d:	00 1e f0 00 1d e0 00 3f c0 00 7f 80 00 ff 00 01     .......?........
    167d:	fe 00 03 fc 00 07 f8 00 0f 70 00 1c f0 00 79 e0     .........p....y.
    168d:	00 f1 e0 03 c1 c0 07 01 c0 1c 01 e0 f0 00 7f 00     ................
    169d:	00 7c 00 00 7c 00 00 7c 00 00 7e 00 00 1f 00 00     .|..|..|..~.....
    16ad:	0f c0 ff f0 03 ff f0 0f 07 c0 78 1e 03 c0 78 1e     ..........x...x.
    16bd:	03 c0 f0 1e 07 80 f0 3c 07 81 e0 78 0f 0f 80 7f     .......<...x....
    16cd:	f8 03 fe 00 1e 78 00 f1 e0 07 87 80 3c 3c 01 e0     .....x......<<..
    16dd:	f0 0f 03 c0 78 0f 03 c0 7c 3f 01 f3 fc 07 e0 07     ....x...|?......
    16ed:	84 1f fc 3c 3e 30 0e 70 06 70 06 70 02 78 00 7c     ...<>0.p.p.p.x.|
    16fd:	00 3f 00 1f c0 0f e0 03 f8 00 fc 00 3e 00 1f 80     .?..........>...
    170d:	0f 80 0f c0 0f e0 0f 70 1e 78 3c 4f f8 43 f0 ff     .......p.x<O.C..
    171d:	ff ff ff ff e0 f0 7c 0f 03 80 f0 10 0f 00 00 f0     ......|.........
    172d:	00 0f 00 00 f0 00 0f 00 00 f0 00 0f 00 00 f0 00     ................
    173d:	0f 00 00 f0 00 0f 00 00 f0 00 0f 00 00 f0 00 0f     ................
    174d:	00 00 f0 00 1f 80 03 fc 00 ff 01 fd f8 01 c3 c0     ................
    175d:	02 0f 00 08 3c 00 20 f0 00 83 c0 02 0f 00 08 3c     ....<. ........<
    176d:	00 20 f0 00 83 c0 02 0f 00 08 3c 00 20 f0 00 83     . ........<. ...
    177d:	c0 02 0f 00 08 3c 00 20 f0 00 81 e0 04 07 80 30     .....<. .......0
    178d:	0f 81 80 1f fc 00 1f c0 00 ff c0 7f 3e 00 1e 1e     ............>...
    179d:	00 0c 0e 00 18 0f 00 18 07 00 10 07 80 30 07 80     .............0..
    17ad:	30 03 c0 60 03 c0 60 01 e0 40 01 e0 c0 00 f0 c0     0..`..`..@......
    17bd:	00 f1 80 00 71 80 00 7b 00 00 3b 00 00 3e 00 00     ....q..{..;..>..
    17cd:	1e 00 00 1e 00 00 0c 00 00 0c 00 00 08 00 ff 9f     ................
    17dd:	f0 3f 9f 03 e0 07 07 80 f0 03 03 c0 78 01 80 e0     .?..........x...
    17ed:	1e 00 80 78 0f 00 c0 1c 03 80 60 0f 01 e0 20 07     ...x......`... .
    17fd:	81 f0 30 01 c0 bc 18 00 f0 de 08 00 78 67 0c 00     ..0.........xg..
    180d:	1e 23 c4 00 0f 31 e6 00 03 90 7b 00 01 f8 3d 00     .#...1....{...=.
    181d:	00 fc 0f 80 00 3c 07 c0 00 1e 03 c0 00 0f 00 e0     .....<..........
    182d:	00 03 00 70 00 01 80 10 00 00 80 08 00 7f e0 ff     ...p............
    183d:	0f c0 1e 03 e0 0e 00 f0 06 00 3c 06 00 0f 06 00     ..........<.....
    184d:	07 86 00 01 e6 00 00 7b 00 00 3f 00 00 0f 00 00     .......{..?.....
    185d:	03 c0 00 03 f0 00 03 78 00 01 9e 00 01 87 80 01     .......x........
    186d:	83 e0 01 80 f0 01 80 3c 01 80 1f 01 c0 07 c1 e0     .......<........
    187d:	03 f3 fe 0f fe ff c0 ff 7e 00 1c 1e 00 18 1f 00     ........~.......
    188d:	30 0f 00 60 07 80 60 03 c0 c0 03 e1 80 01 e1 80     0..`..`.........
    189d:	00 f3 00 00 fe 00 00 7e 00 00 3c 00 00 3c 00 00     .......~..<..<..
    18ad:	3c 00 00 3c 00 00 3c 00 00 3c 00 00 3c 00 00 3c     <..<..<..<..<..<
    18bd:	00 00 3c 00 00 7e 00 01 ff 80 3f ff f1 ff ff 9c     ..<..~....?.....
    18cd:	00 78 c0 07 84 00 38 00 03 c0 00 3c 00 03 c0 00     .x....8....<....
    18dd:	1c 00 01 e0 00 1e 00 01 e0 00 0e 00 00 f0 00 0f     ................
    18ed:	00 00 f0 00 07 00 00 78 00 47 80 06 78 00 33 80     .......x.G..x.3.
    18fd:	07 3f ff fb ff ff c0 ff 83 06 0c 18 30 60 c1 83     .?..........0`..
    190d:	06 0c 18 30 60 c1 83 06 0c 18 30 60 c1 83 07 f0     ...0`.....0`....
    191d:	c0 18 06 01 80 70 0c 03 00 e0 18 06 01 c0 30 0c     .....p........0.
    192d:	03 80 60 18 07 00 c0 30 0e 01 80 60 1c 03 fe 0c     ..`....0...`....
    193d:	18 30 60 c1 83 06 0c 18 30 60 c1 83 06 0c 18 30     .0`.....0`.....0
    194d:	60 c1 83 06 0c 1f f0 03 80 0f 00 1f 00 76 00 ce     `............v..
    195d:	03 8c 06 1c 1c 18 30 30 e0 31 80 67 00 6c 00 c0     ......00.1.g.l..
    196d:	ff ff ff ff f0 c0 e0 70 18 0c 03 1f 03 8c 38 31     .......p......81
    197d:	c1 8e 0c 00 60 0f 01 98 30 c3 86 38 31 c1 8e 0c     ....`...0..81...
    198d:	78 e5 fb cf 0c 00 00 38 00 f8 00 38 00 38 00 38     x......8...8.8.8
    199d:	00 38 00 38 00 38 00 39 f0 3b fc 3c 3e 38 0e 38     .8.8.8.9.;.<>8.8
    19ad:	0f 38 07 38 07 38 07 38 07 38 07 38 06 38 0e 38     .8.8.8.8.8.8.8.8
    19bd:	0c 3c 1c 1f f0 07 e0 07 e0 7f e3 87 d8 0f 60 1b     .<............`.
    19cd:	00 0c 00 30 00 c0 03 00 0e 00 3c 01 78 19 ff c3     ...0......<.x...
    19dd:	fe 03 e0 00 00 00 1c 00 7c 00 1c 00 1c 00 1c 00     ........|.......
    19ed:	1c 00 1c 00 1c 07 9c 1f dc 38 7c 70 3c 70 1c 60     .........8|p<p.`
    19fd:	1c e0 1c e0 1c e0 1c e0 1c e0 1c f0 1c 70 1c 7c     .............p.|
    1a0d:	3e 3f df 0f 90 0f 81 ff 08 3c 80 e7 ff 7f ff 00     >?.......<......
    1a1d:	18 00 c0 07 00 38 03 e0 37 83 3f f0 ff 03 f0 01     .....8..7.?.....
    1a2d:	f0 3f c3 8e 18 00 c0 0e 00 70 03 80 1c 03 fe 1f     .?.......p......
    1a3d:	f0 38 01 c0 0e 00 70 03 80 1c 00 e0 07 00 38 01     .8....p.......8.
    1a4d:	c0 0e 00 70 07 c0 ff 80 0f c0 1f ff 38 ff 70 70     ...p........8.pp
    1a5d:	70 70 70 30 70 30 70 30 38 20 1c 60 0f 80 10 00     ppp0p0p08 .`....
    1a6d:	20 00 60 00 7f e0 3f fc 1f fe 20 06 40 02 c0 02      .`...?... .@...
    1a7d:	c0 04 f0 18 7f f0 1f 80 00 00 38 00 f8 00 38 00     ..........8...8.
    1a8d:	38 00 38 00 38 00 38 00 38 00 38 f0 3b f8 3e 3c     8.8.8.8.8.8.;.><
    1a9d:	3c 1c 38 1c 38 1c 38 1c 38 1c 38 1c 38 1c 38 1c     <.8.8.8.8.8.8.8.
    1aad:	38 1c 38 1c 38 1c 7c 3e fe 7f 18 3c 3c 18 00 00     8.8.8.|>...<<...
    1abd:	00 00 04 3c 7c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c     ...<|...........
    1acd:	3c ff 03 03 c1 e0 60 00 00 00 00 00 83 c3 e0 70     <.....`........p
    1add:	38 1c 0e 07 03 81 c0 e0 70 38 1c 0e 07 03 81 c0     8.......p8......
    1aed:	e0 70 37 3b f8 f8 00 00 1c 00 3e 00 07 00 03 80     .p7;......>.....
    1afd:	01 c0 00 e0 00 70 00 38 00 1c 3f 8e 0f 07 06 03     .....p.8..?.....
    1b0d:	86 01 c4 00 e4 00 7e 00 3f 80 1d c0 0e 70 07 1c     ......~.?....p..
    1b1d:	03 8f 01 c3 c0 e0 f0 f8 3c fe 7f 80 00 1c 7c 1c     ........<.....|.
    1b2d:	1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c     ................
    1b3d:	1c 1c 1c 3c ff 38 f0 7c 3e fe 7f 83 e3 f0 e0 e0     ...<.8.|>.......
    1b4d:	70 1c 38 1c 07 0e 07 01 c3 81 c0 70 e0 70 1c 38     p.8........p.p.8
    1b5d:	1c 07 0e 07 01 c3 81 c0 70 e0 70 1c 38 1c 07 0e     ........p.p.8...
    1b6d:	07 01 c3 81 e0 73 f9 fc 7f 38 f0 fb f8 3e 3c 38     .....s...8...><8
    1b7d:	1c 38 1c 38 1c 38 1c 38 1c 38 1c 38 1c 38 1c 38     .8.8.8.8.8.8.8.8
    1b8d:	1c 38 1c 38 1c 78 3c fe 7f 07 e0 1f f8 3c 7c 78     .8.8.x<......<|x
    1b9d:	3e 70 1e f0 0f f0 0f f0 0f f0 0f f0 0f f8 0f 78     >p.............x
    1bad:	0e 7c 1c 3e 3c 0f f0 07 c0 18 f0 fb fc 3e 1e 38     .|.><........>.8
    1bbd:	0e 38 0f 38 07 38 07 38 07 38 07 38 07 38 06 38     .8.8.8.8.8.8.8.8
    1bcd:	0e 38 0c 3e 1c 3b f8 39 e0 38 00 38 00 38 00 38     .8.>.;.9.8.8.8.8
    1bdd:	00 38 00 38 00 7c 00 ff 00 07 c4 1f ec 3c 3c 70     .8.8.|.......<<p
    1bed:	1c 70 1c 60 1c e0 1c e0 1c e0 1c e0 1c e0 1c f0     .p.`............
    1bfd:	1c 70 1c 78 3c 3f dc 1f 1c 00 1c 00 1c 00 1c 00     .p.x<?..........
    1c0d:	1c 00 1c 00 1c 00 3e 00 ff 19 ff 7c f3 9c 03 80     ......>....|....
    1c1d:	70 0e 01 c0 38 07 00 e0 1c 03 80 70 1f 07 f0 3e     p...8......p...>
    1c2d:	58 7c 0f 03 c0 7c 07 80 f8 1f 81 f8 1e 03 c0 f0     X|...|..........
    1c3d:	3e 1a 7c 10 30 70 fe fe 70 70 70 70 70 70 70 70     >.|.0p..pppppppp
    1c4d:	70 70 70 79 7e 3c f8 7c 38 3c 38 1c 38 1c 38 1c     pppy~<.|8<8.8.8.
    1c5d:	38 1c 38 1c 38 1c 38 1c 38 1c 38 1c 38 1c 38 1c     8.8.8.8.8.8.8.8.
    1c6d:	3c 7c 1f df 0f 18 fe 1f 7c 06 38 04 1c 04 1c 0c     <|......|.8.....
    1c7d:	0e 08 0e 18 07 10 07 10 07 20 03 a0 03 e0 01 c0     ......... ......
    1c8d:	01 c0 00 80 00 80 fc 7f 1f 78 3c 06 38 1c 04 38     .........x<.8..8
    1c9d:	1c 04 1c 1c 0c 1c 0e 08 1c 1e 18 0e 17 10 0e 37     ...............7
    1cad:	10 07 23 30 07 63 a0 07 43 e0 03 c1 c0 03 81 c0     ..#0.c..C.......
    1cbd:	01 80 80 01 00 80 7f 7e 1e 0c 07 8c 01 c4 00 76     .......~.......v
    1ccd:	00 3e 00 0e 00 03 80 03 e0 01 70 01 1c 01 8f 01     .>........p.....
    1cdd:	83 80 80 e0 c0 79 f0 ff fe 0f 7c 06 38 06 1c 04     .....y....|.8...
    1ced:	1c 0c 0e 0c 0e 08 0f 18 07 10 07 90 03 b0 03 a0     ................
    1cfd:	01 e0 01 e0 00 c0 00 c0 00 80 00 80 01 80 01 00     ................
    1d0d:	03 00 7e 00 7c 00 78 00 7f f9 ff e6 07 10 38 00     ..~.|.x.......8.
    1d1d:	e0 07 00 38 01 e0 07 00 38 01 e0 07 01 38 0d c0     ...8....8....8..
    1d2d:	3f ff bf fe 07 0e 1c 18 18 18 18 18 18 18 18 18     ?...............
    1d3d:	18 30 60 60 10 18 18 18 18 18 18 18 18 18 18 1c     .0``............
    1d4d:	0e 07 ff ff ff ff ff ff e0 70 38 18 18 18 18 18     .........p8.....
    1d5d:	18 18 18 18 18 08 06 06 08 18 18 18 18 18 18 18     ................
    1d6d:	18 18 18 38 70 e0 3e 00 7f 87 e3 fe 00 7c           ...8p.>......|

00001d7b <Terminal6x8>:
    1d7b:	06 08 20 60 04 00 00 00 00 00 00 05 00 00 06 5f     .. `..........._
    1d8b:	06 00 06 00 07 03 00 07 03 06 00 24 7e 24 7e 24     ...........$~$~$
    1d9b:	05 00 24 2b 6a 12 00 06 00 63 13 08 64 63 06 00     ..$+j....c..dc..
    1dab:	36 49 56 20 50 04 00 00 07 03 00 00 04 00 00 3e     6IV P..........>
    1dbb:	41 00 00 04 00 00 41 3e 00 00 06 00 08 3e 1c 3e     A.....A>.....>.>
    1dcb:	08 06 00 08 08 3e 08 08 04 00 00 e0 60 00 00 06     .....>......`...
    1ddb:	00 08 08 08 08 08 04 00 00 60 60 00 00 06 00 20     .........``.... 
    1deb:	10 08 04 02 06 00 3e 51 49 45 3e 05 00 00 42 7f     ......>QIE>...B.
    1dfb:	40 00 06 00 62 51 49 49 46 06 00 22 49 49 49 36     @...bQIIF.."III6
    1e0b:	06 00 18 14 12 7f 10 06 00 2f 49 49 49 31 06 00     ........./III1..
    1e1b:	3c 4a 49 49 30 06 00 01 71 09 05 03 06 00 36 49     <JII0...q.....6I
    1e2b:	49 49 36 06 00 06 49 49 29 1e 04 00 00 6c 6c 00     II6...II)....ll.
    1e3b:	00 04 00 00 ec 6c 00 00 05 00 08 14 22 41 00 06     .....l......"A..
    1e4b:	00 24 24 24 24 24 06 00 00 41 22 14 08 06 00 02     .$$$$$...A".....
    1e5b:	01 59 09 06 06 00 3e 41 5d 55 1e 06 00 7e 11 11     .Y....>A]U...~..
    1e6b:	11 7e 06 00 7f 49 49 49 36 06 00 3e 41 41 41 22     .~...III6..>AAA"
    1e7b:	06 00 7f 41 41 41 3e 06 00 7f 49 49 49 41 06 00     ...AAA>...IIIA..
    1e8b:	7f 09 09 09 01 06 00 3e 41 49 49 7a 06 00 7f 08     .......>AIIz....
    1e9b:	08 08 7f 05 00 00 41 7f 41 00 06 00 30 40 40 40     ......A.A...0@@@
    1eab:	3f 06 00 7f 08 14 22 41 06 00 7f 40 40 40 40 06     ?....."A...@@@@.
    1ebb:	00 7f 02 04 02 7f 06 00 7f 02 04 08 7f 06 00 3e     ...............>
    1ecb:	41 41 41 3e 06 00 7f 09 09 09 06 06 00 3e 41 51     AAA>.........>AQ
    1edb:	21 5e 06 00 7f 09 09 19 66 06 00 26 49 49 49 32     !^......f..&III2
    1eeb:	06 00 01 01 7f 01 01 06 00 3f 40 40 40 3f 06 00     .........?@@@?..
    1efb:	1f 20 40 20 1f 06 00 3f 40 3c 40 3f 06 00 63 14     . @ ...?@<@?..c.
    1f0b:	08 14 63 06 00 07 08 70 08 07 05 00 71 49 45 43     ..c....p....qIEC
    1f1b:	00 05 00 00 7f 41 41 00 06 00 02 04 08 10 20 05     .....AA....... .
    1f2b:	00 00 41 41 7f 00 06 00 04 02 01 02 04 06 80 80     ..AA............
    1f3b:	80 80 80 80 04 00 00 03 07 00 00 06 00 20 54 54     ............. TT
    1f4b:	54 78 06 00 7f 44 44 44 38 06 00 38 44 44 44 28     Tx...DDD8..8DDD(
    1f5b:	06 00 38 44 44 44 7f 06 00 38 54 54 54 08 05 00     ..8DDD...8TTT...
    1f6b:	08 7e 09 09 00 06 00 18 a4 a4 a4 7c 05 00 7f 04     .~.........|....
    1f7b:	04 78 00 05 00 00 00 7d 40 00 05 00 40 80 84 7d     .x.....}@...@..}
    1f8b:	00 05 00 7f 10 28 44 00 05 00 00 00 7f 40 00 06     .....(D......@..
    1f9b:	00 7c 04 18 04 78 05 00 7c 04 04 78 00 06 00 38     .|...x..|..x...8
    1fab:	44 44 44 38 06 00 fc 44 44 44 38 06 00 38 44 44     DDD8...DDD8..8DD
    1fbb:	44 fc 06 00 44 78 44 04 08 06 00 08 54 54 54 20     D...DxD.....TTT 
    1fcb:	05 00 04 3e 44 24 00 05 00 3c 40 20 7c 00 06 00     ...>D$...<@ |...
    1fdb:	1c 20 40 20 1c 06 00 3c 60 30 60 3c 05 00 6c 10     . @ ...<`0`<..l.
    1feb:	10 6c 00 05 00 9c a0 60 3c 00 05 00 64 54 54 4c     .l.....`<...dTTL
    1ffb:	00 05 00 08 3e 41 41 00 04 00 00 00 77 00 00 06     ....>AA.....w...
    200b:	00 00 41 41 3e 08 05 00 02 01 02 01 00 06 00 3c     ..AA>..........<
    201b:	26 23 26 3c                                         &#&<

0000201f <digital_pin_to_timer_PGM>:
    201f:	00 00 00 08 00 02 01 00 00 03 04 07 00 00 00 00     ................
    202f:	00 00 00 00                                         ....

00002033 <digital_pin_to_bit_mask_PGM>:
    2033:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
    2043:	04 08 10 20                                         ... 

00002047 <digital_pin_to_port_PGM>:
    2047:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
    2057:	03 03 03 03                                         ....

0000205b <port_to_output_PGM>:
    205b:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

00002065 <port_to_mode_PGM>:
    2065:	00 00 00 00 24 00 27 00 2a 00 00                    ....$.'.*..

00002070 <__ctors_start>:
    2070:	75 14       	cp	r7, r5
    2072:	07 18       	sub	r0, r7
    2074:	80 2c       	mov	r8, r0

00002076 <__ctors_end>:
    2076:	91 14       	cp	r9, r1

00002078 <__dtors_end>:
    2078:	11 24       	eor	r1, r1
    207a:	1f be       	out	0x3f, r1	; 63
    207c:	cf ef       	ldi	r28, 0xFF	; 255
    207e:	d8 e0       	ldi	r29, 0x08	; 8
    2080:	de bf       	out	0x3e, r29	; 62
    2082:	cd bf       	out	0x3d, r28	; 61

00002084 <__do_copy_data>:
    2084:	12 e0       	ldi	r17, 0x02	; 2
    2086:	a0 e0       	ldi	r26, 0x00	; 0
    2088:	b1 e0       	ldi	r27, 0x01	; 1
    208a:	e2 e9       	ldi	r30, 0x92	; 146
    208c:	f3 e7       	ldi	r31, 0x73	; 115
    208e:	02 c0       	rjmp	.+4      	; 0x2094 <__do_copy_data+0x10>
    2090:	05 90       	lpm	r0, Z+
    2092:	0d 92       	st	X+, r0
    2094:	ae 33       	cpi	r26, 0x3E	; 62
    2096:	b1 07       	cpc	r27, r17
    2098:	d9 f7       	brne	.-10     	; 0x2090 <__do_copy_data+0xc>

0000209a <__do_clear_bss>:
    209a:	24 e0       	ldi	r18, 0x04	; 4
    209c:	ae e3       	ldi	r26, 0x3E	; 62
    209e:	b2 e0       	ldi	r27, 0x02	; 2
    20a0:	01 c0       	rjmp	.+2      	; 0x20a4 <.do_clear_bss_start>

000020a2 <.do_clear_bss_loop>:
    20a2:	1d 92       	st	X+, r1

000020a4 <.do_clear_bss_start>:
    20a4:	aa 3f       	cpi	r26, 0xFA	; 250
    20a6:	b2 07       	cpc	r27, r18
    20a8:	e1 f7       	brne	.-8      	; 0x20a2 <.do_clear_bss_loop>

000020aa <__do_global_ctors>:
    20aa:	10 e1       	ldi	r17, 0x10	; 16
    20ac:	cb e3       	ldi	r28, 0x3B	; 59
    20ae:	d0 e1       	ldi	r29, 0x10	; 16
    20b0:	04 c0       	rjmp	.+8      	; 0x20ba <__do_global_ctors+0x10>
    20b2:	21 97       	sbiw	r28, 0x01	; 1
    20b4:	fe 01       	movw	r30, r28
    20b6:	0e 94 55 32 	call	0x64aa	; 0x64aa <__tablejump2__>
    20ba:	c8 33       	cpi	r28, 0x38	; 56
    20bc:	d1 07       	cpc	r29, r17
    20be:	c9 f7       	brne	.-14     	; 0x20b2 <__do_global_ctors+0x8>
    20c0:	0e 94 35 18 	call	0x306a	; 0x306a <main>
    20c4:	0c 94 bc 39 	jmp	0x7378	; 0x7378 <__do_global_dtors>

000020c8 <__bad_interrupt>:
    20c8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000020cc <setup>:
TFT_22_ILI9225 tft = TFT_22_ILI9225(TFT_RST, TFT_RS, TFT_CS, TFT_LED, TFT_BRIGHTNESS);
AMS5812 dPress(Wire,0x10,AMS5812::AMS5812_1000_D);
void fill_area(int area,uint16_t colour);
void AgVa_logo(void);
/**************************************************************************************/
void setup() {
    20cc:	cf 92       	push	r12
    20ce:	df 92       	push	r13
    20d0:	ef 92       	push	r14
    20d2:	ff 92       	push	r15
    20d4:	0f 93       	push	r16
    20d6:	1f 93       	push	r17
    20d8:	cf 93       	push	r28
    20da:	df 93       	push	r29
    20dc:	cd b7       	in	r28, 0x3d	; 61
    20de:	de b7       	in	r29, 0x3e	; 62
    20e0:	2c 97       	sbiw	r28, 0x0c	; 12
    20e2:	0f b6       	in	r0, 0x3f	; 63
    20e4:	f8 94       	cli
    20e6:	de bf       	out	0x3e, r29	; 62
    20e8:	0f be       	out	0x3f, r0	; 63
    20ea:	cd bf       	out	0x3d, r28	; 61
  public:
    inline HardwareSerial(
      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
      volatile uint8_t *ucsrc, volatile uint8_t *udr);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
    20ec:	26 e0       	ldi	r18, 0x06	; 6
    20ee:	40 e8       	ldi	r20, 0x80	; 128
    20f0:	55 e2       	ldi	r21, 0x25	; 37
    20f2:	60 e0       	ldi	r22, 0x00	; 0
    20f4:	70 e0       	ldi	r23, 0x00	; 0
    20f6:	82 e8       	ldi	r24, 0x82	; 130
    20f8:	93 e0       	ldi	r25, 0x03	; 3
    20fa:	0e 94 3d 17 	call	0x2e7a	; 0x2e7a <_ZN14HardwareSerial5beginEmh>
  Serial.begin(9600);
  tft.begin();  //Tft initialize 
    20fe:	88 e2       	ldi	r24, 0x28	; 40
    2100:	93 e0       	ldi	r25, 0x03	; 3
    2102:	0e 94 c8 23 	call	0x4790	; 0x4790 <_ZN14TFT_22_ILI92255beginEv>
  tft.setOrientation(3);  //Set tft Orientation
    2106:	63 e0       	ldi	r22, 0x03	; 3
    2108:	88 e2       	ldi	r24, 0x28	; 40
    210a:	93 e0       	ldi	r25, 0x03	; 3
    210c:	0e 94 52 20 	call	0x40a4	; 0x40a4 <_ZN14TFT_22_ILI922514setOrientationEh>
  tft.setBacklight(HIGH); //Set back light high
    2110:	61 e0       	ldi	r22, 0x01	; 1
    2112:	88 e2       	ldi	r24, 0x28	; 40
    2114:	93 e0       	ldi	r25, 0x03	; 3
    2116:	0e 94 43 20 	call	0x4086	; 0x4086 <_ZN14TFT_22_ILI922512setBacklightEb>
  tft.setFont(Terminal6x8);
    211a:	40 e0       	ldi	r20, 0x00	; 0
    211c:	6b e7       	ldi	r22, 0x7B	; 123
    211e:	7d e1       	ldi	r23, 0x1D	; 29
    2120:	88 e2       	ldi	r24, 0x28	; 40
    2122:	93 e0       	ldi	r25, 0x03	; 3
    2124:	0e 94 36 21 	call	0x426c	; 0x426c <_ZN14TFT_22_ILI92257setFontEPhb>
  String s2;
    2128:	6a e8       	ldi	r22, 0x8A	; 138
    212a:	71 e0       	ldi	r23, 0x01	; 1
    212c:	ce 01       	movw	r24, r28
    212e:	07 96       	adiw	r24, 0x07	; 7
    2130:	0e 94 74 1b 	call	0x36e8	; 0x36e8 <_ZN6StringC1EPKc>
  //Printing AgVa logo on screen
  tft.fillRectangle(0,0,219,176,COLOR_WHITE);
    2134:	ee 24       	eor	r14, r14
    2136:	ea 94       	dec	r14
    2138:	fe 2c       	mov	r15, r14
    213a:	00 eb       	ldi	r16, 0xB0	; 176
    213c:	10 e0       	ldi	r17, 0x00	; 0
    213e:	2b ed       	ldi	r18, 0xDB	; 219
    2140:	30 e0       	ldi	r19, 0x00	; 0
    2142:	40 e0       	ldi	r20, 0x00	; 0
    2144:	50 e0       	ldi	r21, 0x00	; 0
    2146:	60 e0       	ldi	r22, 0x00	; 0
    2148:	70 e0       	ldi	r23, 0x00	; 0
    214a:	88 e2       	ldi	r24, 0x28	; 40
    214c:	93 e0       	ldi	r25, 0x03	; 3
    214e:	0e 94 54 23 	call	0x46a8	; 0x46a8 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj>
  tft.setGFXFont(&FreeSerif12pt7b);    //Set gfx font free serif
    2152:	6e ed       	ldi	r22, 0xDE	; 222
    2154:	71 e0       	ldi	r23, 0x01	; 1
    2156:	88 e2       	ldi	r24, 0x28	; 40
    2158:	93 e0       	ldi	r25, 0x03	; 3
    215a:	0e 94 35 2a 	call	0x546a	; 0x546a <_ZN14TFT_22_ILI922510setGFXFontEPK7GFXfont>
  s2="AgVa";
    215e:	6e e1       	ldi	r22, 0x1E	; 30
    2160:	71 e0       	ldi	r23, 0x01	; 1
    2162:	ce 01       	movw	r24, r28
    2164:	07 96       	adiw	r24, 0x07	; 7
    2166:	0e 94 f2 1b 	call	0x37e4	; 0x37e4 <_ZN6StringaSEPKc>
  tft.drawGFXText(20,90, s2,COLOR_DEEP_PINK);
    216a:	be 01       	movw	r22, r28
    216c:	69 5f       	subi	r22, 0xF9	; 249
    216e:	7f 4f       	sbci	r23, 0xFF	; 255
    2170:	ce 01       	movw	r24, r28
    2172:	01 96       	adiw	r24, 0x01	; 1
    2174:	0e 94 dd 1b 	call	0x37ba	; 0x37ba <_ZN6StringC1ERKS_>
    2178:	0b ee       	ldi	r16, 0xEB	; 235
    217a:	18 ef       	ldi	r17, 0xF8	; 248
    217c:	9e 01       	movw	r18, r28
    217e:	2f 5f       	subi	r18, 0xFF	; 255
    2180:	3f 4f       	sbci	r19, 0xFF	; 255
    2182:	4a e5       	ldi	r20, 0x5A	; 90
    2184:	50 e0       	ldi	r21, 0x00	; 0
    2186:	64 e1       	ldi	r22, 0x14	; 20
    2188:	70 e0       	ldi	r23, 0x00	; 0
    218a:	88 e2       	ldi	r24, 0x28	; 40
    218c:	93 e0       	ldi	r25, 0x03	; 3
    218e:	0e 94 d9 2a 	call	0x55b2	; 0x55b2 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj>
    2192:	ce 01       	movw	r24, r28
    2194:	01 96       	adiw	r24, 0x01	; 1
    2196:	0e 94 03 1b 	call	0x3606	; 0x3606 <_ZN6StringD1Ev>
  s2="Healthcare";
    219a:	63 e2       	ldi	r22, 0x23	; 35
    219c:	71 e0       	ldi	r23, 0x01	; 1
    219e:	ce 01       	movw	r24, r28
    21a0:	07 96       	adiw	r24, 0x07	; 7
    21a2:	0e 94 f2 1b 	call	0x37e4	; 0x37e4 <_ZN6StringaSEPKc>
  tft.drawGFXText(90,90, s2,COLOR_BLACK);
    21a6:	be 01       	movw	r22, r28
    21a8:	69 5f       	subi	r22, 0xF9	; 249
    21aa:	7f 4f       	sbci	r23, 0xFF	; 255
    21ac:	ce 01       	movw	r24, r28
    21ae:	01 96       	adiw	r24, 0x01	; 1
    21b0:	0e 94 dd 1b 	call	0x37ba	; 0x37ba <_ZN6StringC1ERKS_>
    21b4:	00 e0       	ldi	r16, 0x00	; 0
    21b6:	10 e0       	ldi	r17, 0x00	; 0
    21b8:	9e 01       	movw	r18, r28
    21ba:	2f 5f       	subi	r18, 0xFF	; 255
    21bc:	3f 4f       	sbci	r19, 0xFF	; 255
    21be:	4a e5       	ldi	r20, 0x5A	; 90
    21c0:	50 e0       	ldi	r21, 0x00	; 0
    21c2:	6a e5       	ldi	r22, 0x5A	; 90
    21c4:	70 e0       	ldi	r23, 0x00	; 0
    21c6:	88 e2       	ldi	r24, 0x28	; 40
    21c8:	93 e0       	ldi	r25, 0x03	; 3
    21ca:	0e 94 d9 2a 	call	0x55b2	; 0x55b2 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj>
    21ce:	ce 01       	movw	r24, r28
    21d0:	01 96       	adiw	r24, 0x01	; 1
    21d2:	0e 94 03 1b 	call	0x3606	; 0x3606 <_ZN6StringD1Ev>
  delay(5000);
    21d6:	68 e8       	ldi	r22, 0x88	; 136
    21d8:	73 e1       	ldi	r23, 0x13	; 19
    21da:	80 e0       	ldi	r24, 0x00	; 0
    21dc:	90 e0       	ldi	r25, 0x00	; 0
    21de:	0e 94 4a 1a 	call	0x3494	; 0x3494 <delay>
  tft.clear();
    21e2:	88 e2       	ldi	r24, 0x28	; 40
    21e4:	93 e0       	ldi	r25, 0x03	; 3
    21e6:	0e 94 9a 23 	call	0x4734	; 0x4734 <_ZN14TFT_22_ILI92255clearEv>
   tft.drawRectangle(0, 0, tft.maxX() - 1, tft.maxY() - 1, primary_color);  //Drawing rectangle at boundary of tft screen.
    21ea:	88 e2       	ldi	r24, 0x28	; 40
    21ec:	93 e0       	ldi	r25, 0x03	; 3
    21ee:	0e 94 6f 20 	call	0x40de	; 0x40de <_ZN14TFT_22_ILI92254maxYEv>
    21f2:	8c 01       	movw	r16, r24
    21f4:	88 e2       	ldi	r24, 0x28	; 40
    21f6:	93 e0       	ldi	r25, 0x03	; 3
    21f8:	0e 94 6b 20 	call	0x40d6	; 0x40d6 <_ZN14TFT_22_ILI92254maxXEv>
    21fc:	01 50       	subi	r16, 0x01	; 1
    21fe:	11 09       	sbc	r17, r1
    2200:	9c 01       	movw	r18, r24
    2202:	21 50       	subi	r18, 0x01	; 1
    2204:	31 09       	sbc	r19, r1
    2206:	40 e0       	ldi	r20, 0x00	; 0
    2208:	50 e0       	ldi	r21, 0x00	; 0
    220a:	60 e0       	ldi	r22, 0x00	; 0
    220c:	70 e0       	ldi	r23, 0x00	; 0
    220e:	88 e2       	ldi	r24, 0x28	; 40
    2210:	93 e0       	ldi	r25, 0x03	; 3
    2212:	0e 94 08 27 	call	0x4e10	; 0x4e10 <_ZN14TFT_22_ILI922513drawRectangleEjjjjj>
  tft.drawRectangle(1, 1, tft.maxX() - 2, tft.maxY() - 2, primary_color);
    2216:	88 e2       	ldi	r24, 0x28	; 40
    2218:	93 e0       	ldi	r25, 0x03	; 3
    221a:	0e 94 6f 20 	call	0x40de	; 0x40de <_ZN14TFT_22_ILI92254maxYEv>
    221e:	8c 01       	movw	r16, r24
    2220:	88 e2       	ldi	r24, 0x28	; 40
    2222:	93 e0       	ldi	r25, 0x03	; 3
    2224:	0e 94 6b 20 	call	0x40d6	; 0x40d6 <_ZN14TFT_22_ILI92254maxXEv>
    2228:	02 50       	subi	r16, 0x02	; 2
    222a:	11 09       	sbc	r17, r1
    222c:	9c 01       	movw	r18, r24
    222e:	22 50       	subi	r18, 0x02	; 2
    2230:	31 09       	sbc	r19, r1
    2232:	41 e0       	ldi	r20, 0x01	; 1
    2234:	50 e0       	ldi	r21, 0x00	; 0
    2236:	61 e0       	ldi	r22, 0x01	; 1
    2238:	70 e0       	ldi	r23, 0x00	; 0
    223a:	88 e2       	ldi	r24, 0x28	; 40
    223c:	93 e0       	ldi	r25, 0x03	; 3
    223e:	0e 94 08 27 	call	0x4e10	; 0x4e10 <_ZN14TFT_22_ILI922513drawRectangleEjjjjj>
  tft.drawRectangle(2, 2, tft.maxX() - 3, tft.maxY() - 3, primary_color);
    2242:	88 e2       	ldi	r24, 0x28	; 40
    2244:	93 e0       	ldi	r25, 0x03	; 3
    2246:	0e 94 6f 20 	call	0x40de	; 0x40de <_ZN14TFT_22_ILI92254maxYEv>
    224a:	8c 01       	movw	r16, r24
    224c:	88 e2       	ldi	r24, 0x28	; 40
    224e:	93 e0       	ldi	r25, 0x03	; 3
    2250:	0e 94 6b 20 	call	0x40d6	; 0x40d6 <_ZN14TFT_22_ILI92254maxXEv>
    2254:	03 50       	subi	r16, 0x03	; 3
    2256:	11 09       	sbc	r17, r1
    2258:	9c 01       	movw	r18, r24
    225a:	23 50       	subi	r18, 0x03	; 3
    225c:	31 09       	sbc	r19, r1
    225e:	42 e0       	ldi	r20, 0x02	; 2
    2260:	50 e0       	ldi	r21, 0x00	; 0
    2262:	62 e0       	ldi	r22, 0x02	; 2
    2264:	70 e0       	ldi	r23, 0x00	; 0
    2266:	88 e2       	ldi	r24, 0x28	; 40
    2268:	93 e0       	ldi	r25, 0x03	; 3
    226a:	0e 94 08 27 	call	0x4e10	; 0x4e10 <_ZN14TFT_22_ILI922513drawRectangleEjjjjj>
  
  tft.drawRectangle(30, 100, 190, 140,primary_color);  //Draw rectangle to show pressure display
    226e:	0c e8       	ldi	r16, 0x8C	; 140
    2270:	10 e0       	ldi	r17, 0x00	; 0
    2272:	2e eb       	ldi	r18, 0xBE	; 190
    2274:	30 e0       	ldi	r19, 0x00	; 0
    2276:	44 e6       	ldi	r20, 0x64	; 100
    2278:	50 e0       	ldi	r21, 0x00	; 0
    227a:	6e e1       	ldi	r22, 0x1E	; 30
    227c:	70 e0       	ldi	r23, 0x00	; 0
    227e:	88 e2       	ldi	r24, 0x28	; 40
    2280:	93 e0       	ldi	r25, 0x03	; 3
    2282:	0e 94 08 27 	call	0x4e10	; 0x4e10 <_ZN14TFT_22_ILI922513drawRectangleEjjjjj>
  tft.drawRectangle(28, 98, 192, 142, primary_color);
    2286:	0e e8       	ldi	r16, 0x8E	; 142
    2288:	10 e0       	ldi	r17, 0x00	; 0
    228a:	20 ec       	ldi	r18, 0xC0	; 192
    228c:	30 e0       	ldi	r19, 0x00	; 0
    228e:	42 e6       	ldi	r20, 0x62	; 98
    2290:	50 e0       	ldi	r21, 0x00	; 0
    2292:	6c e1       	ldi	r22, 0x1C	; 28
    2294:	70 e0       	ldi	r23, 0x00	; 0
    2296:	88 e2       	ldi	r24, 0x28	; 40
    2298:	93 e0       	ldi	r25, 0x03	; 3
    229a:	0e 94 08 27 	call	0x4e10	; 0x4e10 <_ZN14TFT_22_ILI922513drawRectangleEjjjjj>
  tft.drawRectangle(27, 97, 193, 143, primary_color);
    229e:	0f e8       	ldi	r16, 0x8F	; 143
    22a0:	10 e0       	ldi	r17, 0x00	; 0
    22a2:	21 ec       	ldi	r18, 0xC1	; 193
    22a4:	30 e0       	ldi	r19, 0x00	; 0
    22a6:	41 e6       	ldi	r20, 0x61	; 97
    22a8:	50 e0       	ldi	r21, 0x00	; 0
    22aa:	6b e1       	ldi	r22, 0x1B	; 27
    22ac:	70 e0       	ldi	r23, 0x00	; 0
    22ae:	88 e2       	ldi	r24, 0x28	; 40
    22b0:	93 e0       	ldi	r25, 0x03	; 3
    22b2:	0e 94 08 27 	call	0x4e10	; 0x4e10 <_ZN14TFT_22_ILI922513drawRectangleEjjjjj>
  //Scale
  tft.drawLine(30,140,30,155,primary_color);
    22b6:	0b e9       	ldi	r16, 0x9B	; 155
    22b8:	10 e0       	ldi	r17, 0x00	; 0
    22ba:	2e e1       	ldi	r18, 0x1E	; 30
    22bc:	30 e0       	ldi	r19, 0x00	; 0
    22be:	4c e8       	ldi	r20, 0x8C	; 140
    22c0:	50 e0       	ldi	r21, 0x00	; 0
    22c2:	6e e1       	ldi	r22, 0x1E	; 30
    22c4:	70 e0       	ldi	r23, 0x00	; 0
    22c6:	88 e2       	ldi	r24, 0x28	; 40
    22c8:	93 e0       	ldi	r25, 0x03	; 3
    22ca:	0e 94 57 26 	call	0x4cae	; 0x4cae <_ZN14TFT_22_ILI92258drawLineEjjjjj>
  tft.drawText(27,158,"0",primary_color);
    22ce:	6b e3       	ldi	r22, 0x3B	; 59
    22d0:	71 e0       	ldi	r23, 0x01	; 1
    22d2:	ce 01       	movw	r24, r28
    22d4:	01 96       	adiw	r24, 0x01	; 1
    22d6:	0e 94 74 1b 	call	0x36e8	; 0x36e8 <_ZN6StringC1EPKc>
    22da:	0f ef       	ldi	r16, 0xFF	; 255
    22dc:	1f ef       	ldi	r17, 0xFF	; 255
    22de:	9e 01       	movw	r18, r28
    22e0:	2f 5f       	subi	r18, 0xFF	; 255
    22e2:	3f 4f       	sbci	r19, 0xFF	; 255
    22e4:	4e e9       	ldi	r20, 0x9E	; 158
    22e6:	50 e0       	ldi	r21, 0x00	; 0
    22e8:	6b e1       	ldi	r22, 0x1B	; 27
    22ea:	70 e0       	ldi	r23, 0x00	; 0
    22ec:	88 e2       	ldi	r24, 0x28	; 40
    22ee:	93 e0       	ldi	r25, 0x03	; 3
    22f0:	0e 94 52 28 	call	0x50a4	; 0x50a4 <_ZN14TFT_22_ILI92258drawTextEjj6Stringj>
    22f4:	ce 01       	movw	r24, r28
    22f6:	01 96       	adiw	r24, 0x01	; 1
    22f8:	0e 94 03 1b 	call	0x3606	; 0x3606 <_ZN6StringD1Ev>
  tft.drawLine(50,140,50,150,primary_color);
    22fc:	06 e9       	ldi	r16, 0x96	; 150
    22fe:	10 e0       	ldi	r17, 0x00	; 0
    2300:	22 e3       	ldi	r18, 0x32	; 50
    2302:	30 e0       	ldi	r19, 0x00	; 0
    2304:	4c e8       	ldi	r20, 0x8C	; 140
    2306:	50 e0       	ldi	r21, 0x00	; 0
    2308:	62 e3       	ldi	r22, 0x32	; 50
    230a:	70 e0       	ldi	r23, 0x00	; 0
    230c:	88 e2       	ldi	r24, 0x28	; 40
    230e:	93 e0       	ldi	r25, 0x03	; 3
    2310:	0e 94 57 26 	call	0x4cae	; 0x4cae <_ZN14TFT_22_ILI92258drawLineEjjjjj>
  tft.drawLine(70,140,70,150,primary_color);
    2314:	26 e4       	ldi	r18, 0x46	; 70
    2316:	30 e0       	ldi	r19, 0x00	; 0
    2318:	4c e8       	ldi	r20, 0x8C	; 140
    231a:	50 e0       	ldi	r21, 0x00	; 0
    231c:	66 e4       	ldi	r22, 0x46	; 70
    231e:	70 e0       	ldi	r23, 0x00	; 0
    2320:	88 e2       	ldi	r24, 0x28	; 40
    2322:	93 e0       	ldi	r25, 0x03	; 3
    2324:	0e 94 57 26 	call	0x4cae	; 0x4cae <_ZN14TFT_22_ILI92258drawLineEjjjjj>
  tft.drawLine(90,140,90,150,primary_color);
    2328:	2a e5       	ldi	r18, 0x5A	; 90
    232a:	30 e0       	ldi	r19, 0x00	; 0
    232c:	4c e8       	ldi	r20, 0x8C	; 140
    232e:	50 e0       	ldi	r21, 0x00	; 0
    2330:	6a e5       	ldi	r22, 0x5A	; 90
    2332:	70 e0       	ldi	r23, 0x00	; 0
    2334:	88 e2       	ldi	r24, 0x28	; 40
    2336:	93 e0       	ldi	r25, 0x03	; 3
    2338:	0e 94 57 26 	call	0x4cae	; 0x4cae <_ZN14TFT_22_ILI92258drawLineEjjjjj>
  
  tft.drawLine(110,140,110,155,primary_color);
    233c:	0b e9       	ldi	r16, 0x9B	; 155
    233e:	10 e0       	ldi	r17, 0x00	; 0
    2340:	2e e6       	ldi	r18, 0x6E	; 110
    2342:	30 e0       	ldi	r19, 0x00	; 0
    2344:	4c e8       	ldi	r20, 0x8C	; 140
    2346:	50 e0       	ldi	r21, 0x00	; 0
    2348:	6e e6       	ldi	r22, 0x6E	; 110
    234a:	70 e0       	ldi	r23, 0x00	; 0
    234c:	88 e2       	ldi	r24, 0x28	; 40
    234e:	93 e0       	ldi	r25, 0x03	; 3
    2350:	0e 94 57 26 	call	0x4cae	; 0x4cae <_ZN14TFT_22_ILI92258drawLineEjjjjj>
   tft.drawText(97,158,"0.05",primary_color);
    2354:	6e e2       	ldi	r22, 0x2E	; 46
    2356:	71 e0       	ldi	r23, 0x01	; 1
    2358:	ce 01       	movw	r24, r28
    235a:	01 96       	adiw	r24, 0x01	; 1
    235c:	0e 94 74 1b 	call	0x36e8	; 0x36e8 <_ZN6StringC1EPKc>
    2360:	0f ef       	ldi	r16, 0xFF	; 255
    2362:	1f ef       	ldi	r17, 0xFF	; 255
    2364:	9e 01       	movw	r18, r28
    2366:	2f 5f       	subi	r18, 0xFF	; 255
    2368:	3f 4f       	sbci	r19, 0xFF	; 255
    236a:	4e e9       	ldi	r20, 0x9E	; 158
    236c:	50 e0       	ldi	r21, 0x00	; 0
    236e:	61 e6       	ldi	r22, 0x61	; 97
    2370:	70 e0       	ldi	r23, 0x00	; 0
    2372:	88 e2       	ldi	r24, 0x28	; 40
    2374:	93 e0       	ldi	r25, 0x03	; 3
    2376:	0e 94 52 28 	call	0x50a4	; 0x50a4 <_ZN14TFT_22_ILI92258drawTextEjj6Stringj>
    237a:	ce 01       	movw	r24, r28
    237c:	01 96       	adiw	r24, 0x01	; 1
    237e:	0e 94 03 1b 	call	0x3606	; 0x3606 <_ZN6StringD1Ev>
  tft.drawLine(130,140,130,150,primary_color);
    2382:	06 e9       	ldi	r16, 0x96	; 150
    2384:	10 e0       	ldi	r17, 0x00	; 0
    2386:	22 e8       	ldi	r18, 0x82	; 130
    2388:	30 e0       	ldi	r19, 0x00	; 0
    238a:	4c e8       	ldi	r20, 0x8C	; 140
    238c:	50 e0       	ldi	r21, 0x00	; 0
    238e:	62 e8       	ldi	r22, 0x82	; 130
    2390:	70 e0       	ldi	r23, 0x00	; 0
    2392:	88 e2       	ldi	r24, 0x28	; 40
    2394:	93 e0       	ldi	r25, 0x03	; 3
    2396:	0e 94 57 26 	call	0x4cae	; 0x4cae <_ZN14TFT_22_ILI92258drawLineEjjjjj>
  tft.drawLine(150,140,150,150,primary_color);
    239a:	26 e9       	ldi	r18, 0x96	; 150
    239c:	30 e0       	ldi	r19, 0x00	; 0
    239e:	4c e8       	ldi	r20, 0x8C	; 140
    23a0:	50 e0       	ldi	r21, 0x00	; 0
    23a2:	66 e9       	ldi	r22, 0x96	; 150
    23a4:	70 e0       	ldi	r23, 0x00	; 0
    23a6:	88 e2       	ldi	r24, 0x28	; 40
    23a8:	93 e0       	ldi	r25, 0x03	; 3
    23aa:	0e 94 57 26 	call	0x4cae	; 0x4cae <_ZN14TFT_22_ILI92258drawLineEjjjjj>
  tft.drawLine(170,140,170,150,primary_color);
    23ae:	2a ea       	ldi	r18, 0xAA	; 170
    23b0:	30 e0       	ldi	r19, 0x00	; 0
    23b2:	4c e8       	ldi	r20, 0x8C	; 140
    23b4:	50 e0       	ldi	r21, 0x00	; 0
    23b6:	6a ea       	ldi	r22, 0xAA	; 170
    23b8:	70 e0       	ldi	r23, 0x00	; 0
    23ba:	88 e2       	ldi	r24, 0x28	; 40
    23bc:	93 e0       	ldi	r25, 0x03	; 3
    23be:	0e 94 57 26 	call	0x4cae	; 0x4cae <_ZN14TFT_22_ILI92258drawLineEjjjjj>
  tft.drawLine(190,140,190,155,primary_color);
    23c2:	0b e9       	ldi	r16, 0x9B	; 155
    23c4:	10 e0       	ldi	r17, 0x00	; 0
    23c6:	2e eb       	ldi	r18, 0xBE	; 190
    23c8:	30 e0       	ldi	r19, 0x00	; 0
    23ca:	4c e8       	ldi	r20, 0x8C	; 140
    23cc:	50 e0       	ldi	r21, 0x00	; 0
    23ce:	6e eb       	ldi	r22, 0xBE	; 190
    23d0:	70 e0       	ldi	r23, 0x00	; 0
    23d2:	88 e2       	ldi	r24, 0x28	; 40
    23d4:	93 e0       	ldi	r25, 0x03	; 3
    23d6:	0e 94 57 26 	call	0x4cae	; 0x4cae <_ZN14TFT_22_ILI92258drawLineEjjjjj>
  tft.drawText(180,156,"0.1",primary_color);
    23da:	63 e3       	ldi	r22, 0x33	; 51
    23dc:	71 e0       	ldi	r23, 0x01	; 1
    23de:	ce 01       	movw	r24, r28
    23e0:	01 96       	adiw	r24, 0x01	; 1
    23e2:	0e 94 74 1b 	call	0x36e8	; 0x36e8 <_ZN6StringC1EPKc>
    23e6:	0f ef       	ldi	r16, 0xFF	; 255
    23e8:	1f ef       	ldi	r17, 0xFF	; 255
    23ea:	9e 01       	movw	r18, r28
    23ec:	2f 5f       	subi	r18, 0xFF	; 255
    23ee:	3f 4f       	sbci	r19, 0xFF	; 255
    23f0:	4c e9       	ldi	r20, 0x9C	; 156
    23f2:	50 e0       	ldi	r21, 0x00	; 0
    23f4:	64 eb       	ldi	r22, 0xB4	; 180
    23f6:	70 e0       	ldi	r23, 0x00	; 0
    23f8:	88 e2       	ldi	r24, 0x28	; 40
    23fa:	93 e0       	ldi	r25, 0x03	; 3
    23fc:	0e 94 52 28 	call	0x50a4	; 0x50a4 <_ZN14TFT_22_ILI92258drawTextEjj6Stringj>
    2400:	ce 01       	movw	r24, r28
    2402:	01 96       	adiw	r24, 0x01	; 1
    2404:	0e 94 03 1b 	call	0x3606	; 0x3606 <_ZN6StringD1Ev>
  
  
  tft.setGFXFont(&FreeSerif18pt7b);
    2408:	6d ea       	ldi	r22, 0xAD	; 173
    240a:	7b e0       	ldi	r23, 0x0B	; 11
    240c:	88 e2       	ldi	r24, 0x28	; 40
    240e:	93 e0       	ldi	r25, 0x03	; 3
    2410:	0e 94 35 2a 	call	0x546a	; 0x546a <_ZN14TFT_22_ILI922510setGFXFontEPK7GFXfont>
  
  s2="0.000";
    2414:	67 e3       	ldi	r22, 0x37	; 55
    2416:	71 e0       	ldi	r23, 0x01	; 1
    2418:	ce 01       	movw	r24, r28
    241a:	07 96       	adiw	r24, 0x07	; 7
    241c:	0e 94 f2 1b 	call	0x37e4	; 0x37e4 <_ZN6StringaSEPKc>
  tft.drawGFXText(30,70, s2,primary_color); //Initially  show pressure zero
    2420:	be 01       	movw	r22, r28
    2422:	69 5f       	subi	r22, 0xF9	; 249
    2424:	7f 4f       	sbci	r23, 0xFF	; 255
    2426:	ce 01       	movw	r24, r28
    2428:	01 96       	adiw	r24, 0x01	; 1
    242a:	0e 94 dd 1b 	call	0x37ba	; 0x37ba <_ZN6StringC1ERKS_>
    242e:	9e 01       	movw	r18, r28
    2430:	2f 5f       	subi	r18, 0xFF	; 255
    2432:	3f 4f       	sbci	r19, 0xFF	; 255
    2434:	46 e4       	ldi	r20, 0x46	; 70
    2436:	50 e0       	ldi	r21, 0x00	; 0
    2438:	6e e1       	ldi	r22, 0x1E	; 30
    243a:	70 e0       	ldi	r23, 0x00	; 0
    243c:	88 e2       	ldi	r24, 0x28	; 40
    243e:	93 e0       	ldi	r25, 0x03	; 3
    2440:	0e 94 d9 2a 	call	0x55b2	; 0x55b2 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj>
    2444:	ce 01       	movw	r24, r28
    2446:	01 96       	adiw	r24, 0x01	; 1
    2448:	0e 94 03 1b 	call	0x3606	; 0x3606 <_ZN6StringD1Ev>
  tft.setGFXFont(&FreeSerif12pt7b);
    244c:	6e ed       	ldi	r22, 0xDE	; 222
    244e:	71 e0       	ldi	r23, 0x01	; 1
    2450:	88 e2       	ldi	r24, 0x28	; 40
    2452:	93 e0       	ldi	r25, 0x03	; 3
    2454:	0e 94 35 2a 	call	0x546a	; 0x546a <_ZN14TFT_22_ILI922510setGFXFontEPK7GFXfont>
  s2="MPa";
    2458:	6d e3       	ldi	r22, 0x3D	; 61
    245a:	71 e0       	ldi	r23, 0x01	; 1
    245c:	ce 01       	movw	r24, r28
    245e:	07 96       	adiw	r24, 0x07	; 7
    2460:	0e 94 f2 1b 	call	0x37e4	; 0x37e4 <_ZN6StringaSEPKc>
  tft.drawGFXText(130,65, s2,primary_color); //Draw MPa text on screen
    2464:	be 01       	movw	r22, r28
    2466:	69 5f       	subi	r22, 0xF9	; 249
    2468:	7f 4f       	sbci	r23, 0xFF	; 255
    246a:	ce 01       	movw	r24, r28
    246c:	01 96       	adiw	r24, 0x01	; 1
    246e:	0e 94 dd 1b 	call	0x37ba	; 0x37ba <_ZN6StringC1ERKS_>
    2472:	9e 01       	movw	r18, r28
    2474:	2f 5f       	subi	r18, 0xFF	; 255
    2476:	3f 4f       	sbci	r19, 0xFF	; 255
    2478:	41 e4       	ldi	r20, 0x41	; 65
    247a:	50 e0       	ldi	r21, 0x00	; 0
    247c:	62 e8       	ldi	r22, 0x82	; 130
    247e:	70 e0       	ldi	r23, 0x00	; 0
    2480:	88 e2       	ldi	r24, 0x28	; 40
    2482:	93 e0       	ldi	r25, 0x03	; 3
    2484:	0e 94 d9 2a 	call	0x55b2	; 0x55b2 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj>
    2488:	ce 01       	movw	r24, r28
    248a:	01 96       	adiw	r24, 0x01	; 1
    248c:	0e 94 03 1b 	call	0x3606	; 0x3606 <_ZN6StringD1Ev>
  tft.setGFXFont(&FreeSerif18pt7b); 
    2490:	6d ea       	ldi	r22, 0xAD	; 173
    2492:	7b e0       	ldi	r23, 0x0B	; 11
    2494:	88 e2       	ldi	r24, 0x28	; 40
    2496:	93 e0       	ldi	r25, 0x03	; 3
    2498:	0e 94 35 2a 	call	0x546a	; 0x546a <_ZN14TFT_22_ILI922510setGFXFontEPK7GFXfont>
  tft.drawBitmap(170, 10, batt3, 30, 20, primary_color); //Battery icon
    249c:	cc 24       	eor	r12, r12
    249e:	ca 94       	dec	r12
    24a0:	dc 2c       	mov	r13, r12
    24a2:	24 e1       	ldi	r18, 0x14	; 20
    24a4:	e2 2e       	mov	r14, r18
    24a6:	f1 2c       	mov	r15, r1
    24a8:	0e e1       	ldi	r16, 0x1E	; 30
    24aa:	10 e0       	ldi	r17, 0x00	; 0
    24ac:	2e e8       	ldi	r18, 0x8E	; 142
    24ae:	31 e0       	ldi	r19, 0x01	; 1
    24b0:	4a e0       	ldi	r20, 0x0A	; 10
    24b2:	50 e0       	ldi	r21, 0x00	; 0
    24b4:	6a ea       	ldi	r22, 0xAA	; 170
    24b6:	70 e0       	ldi	r23, 0x00	; 0
    24b8:	88 e2       	ldi	r24, 0x28	; 40
    24ba:	93 e0       	ldi	r25, 0x03	; 3
    24bc:	0e 94 17 2a 	call	0x542e	; 0x542e <_ZN14TFT_22_ILI922510drawBitmapEiiPKhiij>
 
  while(!Serial){}
  // starting communication with the 
  // static pressure transducer
  if (dPress.begin() < 0) {
    24c0:	8e e3       	ldi	r24, 0x3E	; 62
    24c2:	92 e0       	ldi	r25, 0x02	; 2
    24c4:	0e 94 f0 1e 	call	0x3de0	; 0x3de0 <_ZN7AMS58125beginEv>
    24c8:	97 ff       	sbrs	r25, 7
    24ca:	07 c0       	rjmp	.+14     	; 0x24da <setup+0x40e>
    Serial.println("Error communicating with sensor, check wiring and I2C address");
    24cc:	61 e4       	ldi	r22, 0x41	; 65
    24ce:	71 e0       	ldi	r23, 0x01	; 1
    24d0:	82 e8       	ldi	r24, 0x82	; 130
    24d2:	93 e0       	ldi	r25, 0x03	; 3
    24d4:	0e 94 90 18 	call	0x3120	; 0x3120 <_ZN5Print7printlnEPKc>
    24d8:	ff cf       	rjmp	.-2      	; 0x24d8 <setup+0x40c>
  Serial.begin(9600);
  tft.begin();  //Tft initialize 
  tft.setOrientation(3);  //Set tft Orientation
  tft.setBacklight(HIGH); //Set back light high
  tft.setFont(Terminal6x8);
  String s2;
    24da:	ce 01       	movw	r24, r28
    24dc:	07 96       	adiw	r24, 0x07	; 7
    24de:	0e 94 03 1b 	call	0x3606	; 0x3606 <_ZN6StringD1Ev>
  // static pressure transducer
  if (dPress.begin() < 0) {
    Serial.println("Error communicating with sensor, check wiring and I2C address");
    while(1){}
  }
}
    24e2:	2c 96       	adiw	r28, 0x0c	; 12
    24e4:	0f b6       	in	r0, 0x3f	; 63
    24e6:	f8 94       	cli
    24e8:	de bf       	out	0x3e, r29	; 62
    24ea:	0f be       	out	0x3f, r0	; 63
    24ec:	cd bf       	out	0x3d, r28	; 61
    24ee:	df 91       	pop	r29
    24f0:	cf 91       	pop	r28
    24f2:	1f 91       	pop	r17
    24f4:	0f 91       	pop	r16
    24f6:	ff 90       	pop	r15
    24f8:	ef 90       	pop	r14
    24fa:	df 90       	pop	r13
    24fc:	cf 90       	pop	r12
    24fe:	08 95       	ret

00002500 <_Z9fill_areaij>:
  Previous_Area = Current_Area;
}
}

void fill_area(int area,uint16_t colour)
{
    2500:	ef 92       	push	r14
    2502:	ff 92       	push	r15
    2504:	0f 93       	push	r16
    2506:	1f 93       	push	r17
    2508:	7b 01       	movw	r14, r22
  
  int length = area/rectangle_width;
  tft.fillRectangle(35, 105, 35+length, 135, colour);
    250a:	6e e1       	ldi	r22, 0x1E	; 30
    250c:	70 e0       	ldi	r23, 0x00	; 0
    250e:	0e 94 00 32 	call	0x6400	; 0x6400 <__divmodhi4>
    2512:	9b 01       	movw	r18, r22
    2514:	2d 5d       	subi	r18, 0xDD	; 221
    2516:	3f 4f       	sbci	r19, 0xFF	; 255
    2518:	07 e8       	ldi	r16, 0x87	; 135
    251a:	10 e0       	ldi	r17, 0x00	; 0
    251c:	49 e6       	ldi	r20, 0x69	; 105
    251e:	50 e0       	ldi	r21, 0x00	; 0
    2520:	63 e2       	ldi	r22, 0x23	; 35
    2522:	70 e0       	ldi	r23, 0x00	; 0
    2524:	88 e2       	ldi	r24, 0x28	; 40
    2526:	93 e0       	ldi	r25, 0x03	; 3
    2528:	0e 94 54 23 	call	0x46a8	; 0x46a8 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj>
  
}
    252c:	1f 91       	pop	r17
    252e:	0f 91       	pop	r16
    2530:	ff 90       	pop	r15
    2532:	ef 90       	pop	r14
    2534:	08 95       	ret

00002536 <loop>:
    while(1){}
  }
}


void loop() {
    2536:	4f 92       	push	r4
    2538:	5f 92       	push	r5
    253a:	6f 92       	push	r6
    253c:	7f 92       	push	r7
    253e:	af 92       	push	r10
    2540:	bf 92       	push	r11
    2542:	cf 92       	push	r12
    2544:	df 92       	push	r13
    2546:	ef 92       	push	r14
    2548:	ff 92       	push	r15
    254a:	0f 93       	push	r16
    254c:	1f 93       	push	r17
    254e:	cf 93       	push	r28
    2550:	df 93       	push	r29
    2552:	00 d0       	rcall	.+0      	; 0x2554 <loop+0x1e>
    2554:	00 d0       	rcall	.+0      	; 0x2556 <loop+0x20>
    2556:	00 d0       	rcall	.+0      	; 0x2558 <loop+0x22>
    2558:	cd b7       	in	r28, 0x3d	; 61
    255a:	de b7       	in	r29, 0x3e	; 62
    255c:	08 ec       	ldi	r16, 0xC8	; 200
    255e:	10 e0       	ldi	r17, 0x00	; 0
  
 
  float final_pressure = 0;
    2560:	41 2c       	mov	r4, r1
    2562:	51 2c       	mov	r5, r1
    2564:	32 01       	movw	r6, r4
  int i = 200;
  
 //Taking 2oo pressure value samples 
  while(i)
  {  dPress.readSensor();
    2566:	8e e3       	ldi	r24, 0x3E	; 62
    2568:	92 e0       	ldi	r25, 0x02	; 2
    256a:	0e 94 35 1f 	call	0x3e6a	; 0x3e6a <_ZN7AMS581210readSensorEv>
	  pressure = dPress.getPressure_Pa(); //Pressure in pascal
    256e:	8e e3       	ldi	r24, 0x3E	; 62
    2570:	92 e0       	ldi	r25, 0x02	; 2
    2572:	0e 94 00 1e 	call	0x3c00	; 0x3c00 <_ZN7AMS581214getPressure_PaEv>
    2576:	6b 01       	movw	r12, r22
    2578:	7c 01       	movw	r14, r24
	  if(pressure >= 1700000)
    257a:	20 e0       	ldi	r18, 0x00	; 0
    257c:	35 e8       	ldi	r19, 0x85	; 133
    257e:	4f ec       	ldi	r20, 0xCF	; 207
    2580:	59 e4       	ldi	r21, 0x49	; 73
    2582:	0e 94 38 16 	call	0x2c70	; 0x2c70 <__gesf2>
    2586:	87 ff       	sbrs	r24, 7
    2588:	09 c0       	rjmp	.+18     	; 0x259c <loop+0x66>
  int i = 200;
  
 //Taking 2oo pressure value samples 
  while(i)
  {  dPress.readSensor();
	  pressure = dPress.getPressure_Pa(); //Pressure in pascal
    258a:	c0 92 7e 03 	sts	0x037E, r12	; 0x80037e <pressure>
    258e:	d0 92 7f 03 	sts	0x037F, r13	; 0x80037f <pressure+0x1>
    2592:	e0 92 80 03 	sts	0x0380, r14	; 0x800380 <pressure+0x2>
    2596:	f0 92 81 03 	sts	0x0381, r15	; 0x800381 <pressure+0x3>
    259a:	08 c0       	rjmp	.+16     	; 0x25ac <loop+0x76>
	  if(pressure >= 1700000)
	  {
		  pressure=0;
    259c:	10 92 7e 03 	sts	0x037E, r1	; 0x80037e <pressure>
    25a0:	10 92 7f 03 	sts	0x037F, r1	; 0x80037f <pressure+0x1>
    25a4:	10 92 80 03 	sts	0x0380, r1	; 0x800380 <pressure+0x2>
    25a8:	10 92 81 03 	sts	0x0381, r1	; 0x800381 <pressure+0x3>
	  }
	  
	  float kPa = (pressure/1000); //pressure in Kilo  pascal
    final_pressure = final_pressure+kPa;  
    25ac:	20 e0       	ldi	r18, 0x00	; 0
    25ae:	30 e0       	ldi	r19, 0x00	; 0
    25b0:	4a e7       	ldi	r20, 0x7A	; 122
    25b2:	54 e4       	ldi	r21, 0x44	; 68
    25b4:	60 91 7e 03 	lds	r22, 0x037E	; 0x80037e <pressure>
    25b8:	70 91 7f 03 	lds	r23, 0x037F	; 0x80037f <pressure+0x1>
    25bc:	80 91 80 03 	lds	r24, 0x0380	; 0x800380 <pressure+0x2>
    25c0:	90 91 81 03 	lds	r25, 0x0381	; 0x800381 <pressure+0x3>
    25c4:	0e 94 02 15 	call	0x2a04	; 0x2a04 <__divsf3>
    25c8:	9b 01       	movw	r18, r22
    25ca:	ac 01       	movw	r20, r24
    25cc:	c3 01       	movw	r24, r6
    25ce:	b2 01       	movw	r22, r4
    25d0:	0e 94 96 14 	call	0x292c	; 0x292c <__addsf3>
    25d4:	2b 01       	movw	r4, r22
    25d6:	3c 01       	movw	r6, r24
    i--;
    delay(1);
    25d8:	61 e0       	ldi	r22, 0x01	; 1
    25da:	70 e0       	ldi	r23, 0x00	; 0
    25dc:	80 e0       	ldi	r24, 0x00	; 0
    25de:	90 e0       	ldi	r25, 0x00	; 0
    25e0:	0e 94 4a 1a 	call	0x3494	; 0x3494 <delay>
    25e4:	01 50       	subi	r16, 0x01	; 1
    25e6:	11 09       	sbc	r17, r1
 
  float final_pressure = 0;
  int i = 200;
  
 //Taking 2oo pressure value samples 
  while(i)
    25e8:	09 f0       	breq	.+2      	; 0x25ec <loop+0xb6>
    25ea:	bd cf       	rjmp	.-134    	; 0x2566 <loop+0x30>
	  float kPa = (pressure/1000); //pressure in Kilo  pascal
    final_pressure = final_pressure+kPa;  
    i--;
    delay(1);
  }
  final_pressure = final_pressure/200;
    25ec:	20 e0       	ldi	r18, 0x00	; 0
    25ee:	30 e0       	ldi	r19, 0x00	; 0
    25f0:	48 e4       	ldi	r20, 0x48	; 72
    25f2:	53 e4       	ldi	r21, 0x43	; 67
    25f4:	c3 01       	movw	r24, r6
    25f6:	b2 01       	movw	r22, r4
    25f8:	0e 94 02 15 	call	0x2a04	; 0x2a04 <__divsf3>
    25fc:	2b 01       	movw	r4, r22
    25fe:	3c 01       	movw	r6, r24

  
  Serial.print("Pressure =\t");
    2600:	6f e7       	ldi	r22, 0x7F	; 127
    2602:	71 e0       	ldi	r23, 0x01	; 1
    2604:	82 e8       	ldi	r24, 0x82	; 130
    2606:	93 e0       	ldi	r25, 0x03	; 3
    2608:	0e 94 83 18 	call	0x3106	; 0x3106 <_ZN5Print5printEPKc>
  Serial.print(final_pressure,4);
    260c:	24 e0       	ldi	r18, 0x04	; 4
    260e:	30 e0       	ldi	r19, 0x00	; 0
    2610:	b3 01       	movw	r22, r6
    2612:	a2 01       	movw	r20, r4
    2614:	82 e8       	ldi	r24, 0x82	; 130
    2616:	93 e0       	ldi	r25, 0x03	; 3
    2618:	0e 94 d9 19 	call	0x33b2	; 0x33b2 <_ZN5Print5printEdi>
  Serial.print("kPa");
    261c:	6b e8       	ldi	r22, 0x8B	; 139
    261e:	71 e0       	ldi	r23, 0x01	; 1
    2620:	82 e8       	ldi	r24, 0x82	; 130
    2622:	93 e0       	ldi	r25, 0x03	; 3
    2624:	0e 94 83 18 	call	0x3106	; 0x3106 <_ZN5Print5printEPKc>
  //Serial.print(Angle);
  Serial.print("\n");
    2628:	62 ea       	ldi	r22, 0xA2	; 162
    262a:	71 e0       	ldi	r23, 0x01	; 1
    262c:	82 e8       	ldi	r24, 0x82	; 130
    262e:	93 e0       	ldi	r25, 0x03	; 3
    2630:	0e 94 83 18 	call	0x3106	; 0x3106 <_ZN5Print5printEPKc>

  Current_Area = map(final_pressure,0,100,0,4500);
    2634:	c3 01       	movw	r24, r6
    2636:	b2 01       	movw	r22, r4
    2638:	0e 94 74 15 	call	0x2ae8	; 0x2ae8 <__fixsfsi>
    263c:	1f 92       	push	r1
    263e:	1f 92       	push	r1
    2640:	21 e1       	ldi	r18, 0x11	; 17
    2642:	2f 93       	push	r18
    2644:	24 e9       	ldi	r18, 0x94	; 148
    2646:	2f 93       	push	r18
    2648:	a1 2c       	mov	r10, r1
    264a:	b1 2c       	mov	r11, r1
    264c:	65 01       	movw	r12, r10
    264e:	14 e6       	ldi	r17, 0x64	; 100
    2650:	e1 2e       	mov	r14, r17
    2652:	f1 2c       	mov	r15, r1
    2654:	00 e0       	ldi	r16, 0x00	; 0
    2656:	10 e0       	ldi	r17, 0x00	; 0
    2658:	20 e0       	ldi	r18, 0x00	; 0
    265a:	30 e0       	ldi	r19, 0x00	; 0
    265c:	a9 01       	movw	r20, r18
    265e:	0e 94 c1 1a 	call	0x3582	; 0x3582 <_Z3maplllll>
    2662:	70 93 73 03 	sts	0x0373, r23	; 0x800373 <Current_Area+0x1>
    2666:	60 93 72 03 	sts	0x0372, r22	; 0x800372 <Current_Area>
  
  Current_Pressure = final_pressure; 
    266a:	40 92 76 03 	sts	0x0376, r4	; 0x800376 <Current_Pressure>
    266e:	50 92 77 03 	sts	0x0377, r5	; 0x800377 <Current_Pressure+0x1>
    2672:	60 92 78 03 	sts	0x0378, r6	; 0x800378 <Current_Pressure+0x2>
    2676:	70 92 79 03 	sts	0x0379, r7	; 0x800379 <Current_Pressure+0x3>
  stringTwo =  String(Current_Pressure/1000, 3); 
    267a:	20 e0       	ldi	r18, 0x00	; 0
    267c:	30 e0       	ldi	r19, 0x00	; 0
    267e:	4a e7       	ldi	r20, 0x7A	; 122
    2680:	54 e4       	ldi	r21, 0x44	; 68
    2682:	c3 01       	movw	r24, r6
    2684:	b2 01       	movw	r22, r4
    2686:	0e 94 02 15 	call	0x2a04	; 0x2a04 <__divsf3>
    268a:	ab 01       	movw	r20, r22
    268c:	bc 01       	movw	r22, r24
    268e:	23 e0       	ldi	r18, 0x03	; 3
    2690:	ce 01       	movw	r24, r28
    2692:	01 96       	adiw	r24, 0x01	; 1
    2694:	0e 94 09 1c 	call	0x3812	; 0x3812 <_ZN6StringC1Efh>
    2698:	be 01       	movw	r22, r28
    269a:	6f 5f       	subi	r22, 0xFF	; 255
    269c:	7f 4f       	sbci	r23, 0xFF	; 255
    269e:	8c e6       	ldi	r24, 0x6C	; 108
    26a0:	93 e0       	ldi	r25, 0x03	; 3
    26a2:	0e 94 e6 1b 	call	0x37cc	; 0x37cc <_ZN6StringaSEOS_>
    26a6:	ce 01       	movw	r24, r28
    26a8:	01 96       	adiw	r24, 0x01	; 1
    26aa:	0e 94 03 1b 	call	0x3606	; 0x3606 <_ZN6StringD1Ev>
  
  if((Current_Pressure-Previous_Pressure > 1)||(Previous_Pressure-Current_Pressure > 1))
    26ae:	40 90 76 03 	lds	r4, 0x0376	; 0x800376 <Current_Pressure>
    26b2:	50 90 77 03 	lds	r5, 0x0377	; 0x800377 <Current_Pressure+0x1>
    26b6:	60 90 78 03 	lds	r6, 0x0378	; 0x800378 <Current_Pressure+0x2>
    26ba:	70 90 79 03 	lds	r7, 0x0379	; 0x800379 <Current_Pressure+0x3>
    26be:	c0 90 7a 03 	lds	r12, 0x037A	; 0x80037a <Previous_Pressure>
    26c2:	d0 90 7b 03 	lds	r13, 0x037B	; 0x80037b <Previous_Pressure+0x1>
    26c6:	e0 90 7c 03 	lds	r14, 0x037C	; 0x80037c <Previous_Pressure+0x2>
    26ca:	f0 90 7d 03 	lds	r15, 0x037D	; 0x80037d <Previous_Pressure+0x3>
    26ce:	a7 01       	movw	r20, r14
    26d0:	96 01       	movw	r18, r12
    26d2:	c3 01       	movw	r24, r6
    26d4:	b2 01       	movw	r22, r4
    26d6:	0e 94 95 14 	call	0x292a	; 0x292a <__subsf3>
    26da:	0f 90       	pop	r0
    26dc:	0f 90       	pop	r0
    26de:	0f 90       	pop	r0
    26e0:	0f 90       	pop	r0
    26e2:	20 e0       	ldi	r18, 0x00	; 0
    26e4:	30 e0       	ldi	r19, 0x00	; 0
    26e6:	40 e8       	ldi	r20, 0x80	; 128
    26e8:	5f e3       	ldi	r21, 0x3F	; 63
    26ea:	0e 94 38 16 	call	0x2c70	; 0x2c70 <__gesf2>
    26ee:	18 16       	cp	r1, r24
    26f0:	74 f0       	brlt	.+28     	; 0x270e <loop+0x1d8>
    26f2:	a3 01       	movw	r20, r6
    26f4:	92 01       	movw	r18, r4
    26f6:	c7 01       	movw	r24, r14
    26f8:	b6 01       	movw	r22, r12
    26fa:	0e 94 95 14 	call	0x292a	; 0x292a <__subsf3>
    26fe:	20 e0       	ldi	r18, 0x00	; 0
    2700:	30 e0       	ldi	r19, 0x00	; 0
    2702:	40 e8       	ldi	r20, 0x80	; 128
    2704:	5f e3       	ldi	r21, 0x3F	; 63
    2706:	0e 94 38 16 	call	0x2c70	; 0x2c70 <__gesf2>
    270a:	18 16       	cp	r1, r24
    270c:	2c f5       	brge	.+74     	; 0x2758 <loop+0x222>
  {
  tft.fillRectangle(30, 40, 120, 80, COLOR_BLACK); //Removing previous pressure valve from screen
    270e:	e1 2c       	mov	r14, r1
    2710:	f1 2c       	mov	r15, r1
    2712:	00 e5       	ldi	r16, 0x50	; 80
    2714:	10 e0       	ldi	r17, 0x00	; 0
    2716:	28 e7       	ldi	r18, 0x78	; 120
    2718:	30 e0       	ldi	r19, 0x00	; 0
    271a:	48 e2       	ldi	r20, 0x28	; 40
    271c:	50 e0       	ldi	r21, 0x00	; 0
    271e:	6e e1       	ldi	r22, 0x1E	; 30
    2720:	70 e0       	ldi	r23, 0x00	; 0
    2722:	88 e2       	ldi	r24, 0x28	; 40
    2724:	93 e0       	ldi	r25, 0x03	; 3
    2726:	0e 94 54 23 	call	0x46a8	; 0x46a8 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj>
  
  tft.drawGFXText(30,70, stringTwo,primary_color);  //Writing new value from screen
    272a:	6c e6       	ldi	r22, 0x6C	; 108
    272c:	73 e0       	ldi	r23, 0x03	; 3
    272e:	ce 01       	movw	r24, r28
    2730:	01 96       	adiw	r24, 0x01	; 1
    2732:	0e 94 dd 1b 	call	0x37ba	; 0x37ba <_ZN6StringC1ERKS_>
    2736:	0f ef       	ldi	r16, 0xFF	; 255
    2738:	1f ef       	ldi	r17, 0xFF	; 255
    273a:	9e 01       	movw	r18, r28
    273c:	2f 5f       	subi	r18, 0xFF	; 255
    273e:	3f 4f       	sbci	r19, 0xFF	; 255
    2740:	46 e4       	ldi	r20, 0x46	; 70
    2742:	50 e0       	ldi	r21, 0x00	; 0
    2744:	6e e1       	ldi	r22, 0x1E	; 30
    2746:	70 e0       	ldi	r23, 0x00	; 0
    2748:	88 e2       	ldi	r24, 0x28	; 40
    274a:	93 e0       	ldi	r25, 0x03	; 3
    274c:	0e 94 d9 2a 	call	0x55b2	; 0x55b2 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj>
    2750:	ce 01       	movw	r24, r28
    2752:	01 96       	adiw	r24, 0x01	; 1
    2754:	0e 94 03 1b 	call	0x3606	; 0x3606 <_ZN6StringD1Ev>
  }
  if((Current_Pressure-Previous_Pressure > 1))   //When Pressure is increasing.
    2758:	c0 90 76 03 	lds	r12, 0x0376	; 0x800376 <Current_Pressure>
    275c:	d0 90 77 03 	lds	r13, 0x0377	; 0x800377 <Current_Pressure+0x1>
    2760:	e0 90 78 03 	lds	r14, 0x0378	; 0x800378 <Current_Pressure+0x2>
    2764:	f0 90 79 03 	lds	r15, 0x0379	; 0x800379 <Current_Pressure+0x3>
    2768:	40 90 7a 03 	lds	r4, 0x037A	; 0x80037a <Previous_Pressure>
    276c:	50 90 7b 03 	lds	r5, 0x037B	; 0x80037b <Previous_Pressure+0x1>
    2770:	60 90 7c 03 	lds	r6, 0x037C	; 0x80037c <Previous_Pressure+0x2>
    2774:	70 90 7d 03 	lds	r7, 0x037D	; 0x80037d <Previous_Pressure+0x3>
    2778:	a3 01       	movw	r20, r6
    277a:	92 01       	movw	r18, r4
    277c:	c7 01       	movw	r24, r14
    277e:	b6 01       	movw	r22, r12
    2780:	0e 94 95 14 	call	0x292a	; 0x292a <__subsf3>
    2784:	20 e0       	ldi	r18, 0x00	; 0
    2786:	30 e0       	ldi	r19, 0x00	; 0
    2788:	40 e8       	ldi	r20, 0x80	; 128
    278a:	5f e3       	ldi	r21, 0x3F	; 63
    278c:	0e 94 38 16 	call	0x2c70	; 0x2c70 <__gesf2>
    2790:	18 16       	cp	r1, r24
    2792:	b4 f4       	brge	.+44     	; 0x27c0 <loop+0x28a>
 {
  
  if(Current_Area >= 0 && Current_Area < 900)
    2794:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <Current_Area>
    2798:	90 91 73 03 	lds	r25, 0x0373	; 0x800373 <Current_Area+0x1>
    279c:	84 38       	cpi	r24, 0x84	; 132
    279e:	23 e0       	ldi	r18, 0x03	; 3
    27a0:	92 07       	cpc	r25, r18
    27a2:	08 f4       	brcc	.+2      	; 0x27a6 <loop+0x270>
    27a4:	65 c0       	rjmp	.+202    	; 0x2870 <loop+0x33a>
  {fill_area(Current_Area,COLOR_GOLD);
  }
  else if(Current_Area >=900 && Current_Area <3600)
    27a6:	9c 01       	movw	r18, r24
    27a8:	24 58       	subi	r18, 0x84	; 132
    27aa:	33 40       	sbci	r19, 0x03	; 3
    27ac:	2c 38       	cpi	r18, 0x8C	; 140
    27ae:	3a 40       	sbci	r19, 0x0A	; 10
    27b0:	08 f4       	brcc	.+2      	; 0x27b4 <loop+0x27e>
    27b2:	67 c0       	rjmp	.+206    	; 0x2882 <loop+0x34c>
  {
    fill_area(Current_Area,COLOR_GREEN);
  }
  else if(Current_Area >= 3600 )
    27b4:	80 31       	cpi	r24, 0x10	; 16
    27b6:	2e e0       	ldi	r18, 0x0E	; 14
    27b8:	92 07       	cpc	r25, r18
    27ba:	0c f4       	brge	.+2      	; 0x27be <loop+0x288>
    27bc:	69 c0       	rjmp	.+210    	; 0x2890 <loop+0x35a>
    27be:	64 c0       	rjmp	.+200    	; 0x2888 <loop+0x352>
  }
  Previous_Pressure = Current_Pressure;
  Previous_Area = Current_Area;
}

else if(Previous_Pressure-Current_Pressure > 1)  //Pressure is decreasing.
    27c0:	a7 01       	movw	r20, r14
    27c2:	96 01       	movw	r18, r12
    27c4:	c3 01       	movw	r24, r6
    27c6:	b2 01       	movw	r22, r4
    27c8:	0e 94 95 14 	call	0x292a	; 0x292a <__subsf3>
    27cc:	20 e0       	ldi	r18, 0x00	; 0
    27ce:	30 e0       	ldi	r19, 0x00	; 0
    27d0:	40 e8       	ldi	r20, 0x80	; 128
    27d2:	5f e3       	ldi	r21, 0x3F	; 63
    27d4:	0e 94 38 16 	call	0x2c70	; 0x2c70 <__gesf2>
    27d8:	18 16       	cp	r1, r24
    27da:	0c f0       	brlt	.+2      	; 0x27de <loop+0x2a8>
    27dc:	71 c0       	rjmp	.+226    	; 0x28c0 <loop+0x38a>
{
 float Previous_length = Previous_Area/rectangle_width;
 float Current_length =  Current_Area/rectangle_width;
 tft.fillRectangle(35+Current_length, 105, 35+Previous_length, 135,COLOR_BLACK);
    27de:	80 91 74 03 	lds	r24, 0x0374	; 0x800374 <Previous_Area>
    27e2:	90 91 75 03 	lds	r25, 0x0375	; 0x800375 <Previous_Area+0x1>
    27e6:	0e e1       	ldi	r16, 0x1E	; 30
    27e8:	10 e0       	ldi	r17, 0x00	; 0
    27ea:	b8 01       	movw	r22, r16
    27ec:	0e 94 00 32 	call	0x6400	; 0x6400 <__divmodhi4>
    27f0:	07 2e       	mov	r0, r23
    27f2:	00 0c       	add	r0, r0
    27f4:	88 0b       	sbc	r24, r24
    27f6:	99 0b       	sbc	r25, r25
    27f8:	0e 94 ac 15 	call	0x2b58	; 0x2b58 <__floatsisf>
    27fc:	20 e0       	ldi	r18, 0x00	; 0
    27fe:	30 e0       	ldi	r19, 0x00	; 0
    2800:	4c e0       	ldi	r20, 0x0C	; 12
    2802:	52 e4       	ldi	r21, 0x42	; 66
    2804:	0e 94 96 14 	call	0x292c	; 0x292c <__addsf3>
    2808:	0e 94 7b 15 	call	0x2af6	; 0x2af6 <__fixunssfsi>
    280c:	2b 01       	movw	r4, r22
    280e:	3c 01       	movw	r6, r24
    2810:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <Current_Area>
    2814:	90 91 73 03 	lds	r25, 0x0373	; 0x800373 <Current_Area+0x1>
    2818:	b8 01       	movw	r22, r16
    281a:	0e 94 00 32 	call	0x6400	; 0x6400 <__divmodhi4>
    281e:	07 2e       	mov	r0, r23
    2820:	00 0c       	add	r0, r0
    2822:	88 0b       	sbc	r24, r24
    2824:	99 0b       	sbc	r25, r25
    2826:	0e 94 ac 15 	call	0x2b58	; 0x2b58 <__floatsisf>
    282a:	20 e0       	ldi	r18, 0x00	; 0
    282c:	30 e0       	ldi	r19, 0x00	; 0
    282e:	4c e0       	ldi	r20, 0x0C	; 12
    2830:	52 e4       	ldi	r21, 0x42	; 66
    2832:	0e 94 96 14 	call	0x292c	; 0x292c <__addsf3>
    2836:	0e 94 7b 15 	call	0x2af6	; 0x2af6 <__fixunssfsi>
    283a:	e1 2c       	mov	r14, r1
    283c:	f1 2c       	mov	r15, r1
    283e:	07 e8       	ldi	r16, 0x87	; 135
    2840:	10 e0       	ldi	r17, 0x00	; 0
    2842:	92 01       	movw	r18, r4
    2844:	49 e6       	ldi	r20, 0x69	; 105
    2846:	50 e0       	ldi	r21, 0x00	; 0
    2848:	88 e2       	ldi	r24, 0x28	; 40
    284a:	93 e0       	ldi	r25, 0x03	; 3
    284c:	0e 94 54 23 	call	0x46a8	; 0x46a8 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj>
  if (Current_Area<50)
    2850:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <Current_Area>
    2854:	90 91 73 03 	lds	r25, 0x0373	; 0x800373 <Current_Area+0x1>
    2858:	82 33       	cpi	r24, 0x32	; 50
    285a:	91 05       	cpc	r25, r1
    285c:	1c f4       	brge	.+6      	; 0x2864 <loop+0x32e>
  {
	fill_area(Current_Area,COLOR_BLACK); 
    285e:	60 e0       	ldi	r22, 0x00	; 0
    2860:	70 e0       	ldi	r23, 0x00	; 0
    2862:	14 c0       	rjmp	.+40     	; 0x288c <loop+0x356>
  }
  else if(Current_Area >= 50 && Current_Area < 900)
    2864:	9c 01       	movw	r18, r24
    2866:	22 53       	subi	r18, 0x32	; 50
    2868:	31 09       	sbc	r19, r1
    286a:	22 35       	cpi	r18, 0x52	; 82
    286c:	33 40       	sbci	r19, 0x03	; 3
    286e:	18 f4       	brcc	.+6      	; 0x2876 <loop+0x340>
  {
    fill_area(Current_Area,COLOR_GOLD);
    2870:	60 ea       	ldi	r22, 0xA0	; 160
    2872:	7e ef       	ldi	r23, 0xFE	; 254
    2874:	0b c0       	rjmp	.+22     	; 0x288c <loop+0x356>
  }
  else if(Current_Area >=900 && Current_Area <3600)
    2876:	9c 01       	movw	r18, r24
    2878:	24 58       	subi	r18, 0x84	; 132
    287a:	33 40       	sbci	r19, 0x03	; 3
    287c:	2c 38       	cpi	r18, 0x8C	; 140
    287e:	3a 40       	sbci	r19, 0x0A	; 10
    2880:	18 f4       	brcc	.+6      	; 0x2888 <loop+0x352>
  {
    fill_area(Current_Area,COLOR_GREEN);
    2882:	60 ee       	ldi	r22, 0xE0	; 224
    2884:	77 e0       	ldi	r23, 0x07	; 7
    2886:	02 c0       	rjmp	.+4      	; 0x288c <loop+0x356>
  }
  else if(Current_Area >= 3600 )
  {
   fill_area(Current_Area,COLOR_RED); 
    2888:	60 e0       	ldi	r22, 0x00	; 0
    288a:	78 ef       	ldi	r23, 0xF8	; 248
    288c:	0e 94 80 12 	call	0x2500	; 0x2500 <_Z9fill_areaij>
  }
  Previous_Pressure = Current_Pressure;
    2890:	80 91 76 03 	lds	r24, 0x0376	; 0x800376 <Current_Pressure>
    2894:	90 91 77 03 	lds	r25, 0x0377	; 0x800377 <Current_Pressure+0x1>
    2898:	a0 91 78 03 	lds	r26, 0x0378	; 0x800378 <Current_Pressure+0x2>
    289c:	b0 91 79 03 	lds	r27, 0x0379	; 0x800379 <Current_Pressure+0x3>
    28a0:	80 93 7a 03 	sts	0x037A, r24	; 0x80037a <Previous_Pressure>
    28a4:	90 93 7b 03 	sts	0x037B, r25	; 0x80037b <Previous_Pressure+0x1>
    28a8:	a0 93 7c 03 	sts	0x037C, r26	; 0x80037c <Previous_Pressure+0x2>
    28ac:	b0 93 7d 03 	sts	0x037D, r27	; 0x80037d <Previous_Pressure+0x3>
  Previous_Area = Current_Area;
    28b0:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <Current_Area>
    28b4:	90 91 73 03 	lds	r25, 0x0373	; 0x800373 <Current_Area+0x1>
    28b8:	90 93 75 03 	sts	0x0375, r25	; 0x800375 <Previous_Area+0x1>
    28bc:	80 93 74 03 	sts	0x0374, r24	; 0x800374 <Previous_Area>
}
}
    28c0:	26 96       	adiw	r28, 0x06	; 6
    28c2:	0f b6       	in	r0, 0x3f	; 63
    28c4:	f8 94       	cli
    28c6:	de bf       	out	0x3e, r29	; 62
    28c8:	0f be       	out	0x3f, r0	; 63
    28ca:	cd bf       	out	0x3d, r28	; 61
    28cc:	df 91       	pop	r29
    28ce:	cf 91       	pop	r28
    28d0:	1f 91       	pop	r17
    28d2:	0f 91       	pop	r16
    28d4:	ff 90       	pop	r15
    28d6:	ef 90       	pop	r14
    28d8:	df 90       	pop	r13
    28da:	cf 90       	pop	r12
    28dc:	bf 90       	pop	r11
    28de:	af 90       	pop	r10
    28e0:	7f 90       	pop	r7
    28e2:	6f 90       	pop	r6
    28e4:	5f 90       	pop	r5
    28e6:	4f 90       	pop	r4
    28e8:	08 95       	ret

000028ea <_GLOBAL__sub_I_pressure>:
{
  
  int length = area/rectangle_width;
  tft.fillRectangle(35, 105, 35+length, 135, colour);
  
}
    28ea:	ef 92       	push	r14
    28ec:	0f 93       	push	r16
float Current_Pressure = 0;
int Previous_Area = 0;
int Current_Area = 0;
int w = 10;
int h = 15;
String stringTwo;
    28ee:	6a e8       	ldi	r22, 0x8A	; 138
    28f0:	71 e0       	ldi	r23, 0x01	; 1
    28f2:	8c e6       	ldi	r24, 0x6C	; 108
    28f4:	93 e0       	ldi	r25, 0x03	; 3
    28f6:	0e 94 74 1b 	call	0x36e8	; 0x36e8 <_ZN6StringC1EPKc>
/******************************************/


/***************************************************************************************/
TFT_22_ILI9225 tft = TFT_22_ILI9225(TFT_RST, TFT_RS, TFT_CS, TFT_LED, TFT_BRIGHTNESS);
    28fa:	ee 24       	eor	r14, r14
    28fc:	ea 94       	dec	r14
    28fe:	03 e0       	ldi	r16, 0x03	; 3
    2900:	2a e0       	ldi	r18, 0x0A	; 10
    2902:	49 e0       	ldi	r20, 0x09	; 9
    2904:	68 e0       	ldi	r22, 0x08	; 8
    2906:	88 e2       	ldi	r24, 0x28	; 40
    2908:	93 e0       	ldi	r25, 0x03	; 3
    290a:	0e 94 d9 1f 	call	0x3fb2	; 0x3fb2 <_ZN14TFT_22_ILI9225C1Eaaaah>
AMS5812 dPress(Wire,0x10,AMS5812::AMS5812_1000_D);
    290e:	2f e0       	ldi	r18, 0x0F	; 15
    2910:	40 e1       	ldi	r20, 0x10	; 16
    2912:	68 e2       	ldi	r22, 0x28	; 40
    2914:	74 e0       	ldi	r23, 0x04	; 4
    2916:	8e e3       	ldi	r24, 0x3E	; 62
    2918:	92 e0       	ldi	r25, 0x02	; 2
{
  
  int length = area/rectangle_width;
  tft.fillRectangle(35, 105, 35+length, 135, colour);
  
}
    291a:	0f 91       	pop	r16
    291c:	ef 90       	pop	r14
/******************************************/


/***************************************************************************************/
TFT_22_ILI9225 tft = TFT_22_ILI9225(TFT_RST, TFT_RS, TFT_CS, TFT_LED, TFT_BRIGHTNESS);
AMS5812 dPress(Wire,0x10,AMS5812::AMS5812_1000_D);
    291e:	0c 94 4c 1c 	jmp	0x3898	; 0x3898 <_ZN7AMS5812C1ER7TwoWirehNS_10TransducerE>

00002922 <_GLOBAL__sub_D_pressure>:
float Current_Pressure = 0;
int Previous_Area = 0;
int Current_Area = 0;
int w = 10;
int h = 15;
String stringTwo;
    2922:	8c e6       	ldi	r24, 0x6C	; 108
    2924:	93 e0       	ldi	r25, 0x03	; 3
    2926:	0c 94 03 1b 	jmp	0x3606	; 0x3606 <_ZN6StringD1Ev>

0000292a <__subsf3>:
    292a:	50 58       	subi	r21, 0x80	; 128

0000292c <__addsf3>:
    292c:	bb 27       	eor	r27, r27
    292e:	aa 27       	eor	r26, r26
    2930:	0e 94 ad 14 	call	0x295a	; 0x295a <__addsf3x>
    2934:	0c 94 fe 15 	jmp	0x2bfc	; 0x2bfc <__fp_round>
    2938:	0e 94 f0 15 	call	0x2be0	; 0x2be0 <__fp_pscA>
    293c:	38 f0       	brcs	.+14     	; 0x294c <__addsf3+0x20>
    293e:	0e 94 f7 15 	call	0x2bee	; 0x2bee <__fp_pscB>
    2942:	20 f0       	brcs	.+8      	; 0x294c <__addsf3+0x20>
    2944:	39 f4       	brne	.+14     	; 0x2954 <__addsf3+0x28>
    2946:	9f 3f       	cpi	r25, 0xFF	; 255
    2948:	19 f4       	brne	.+6      	; 0x2950 <__addsf3+0x24>
    294a:	26 f4       	brtc	.+8      	; 0x2954 <__addsf3+0x28>
    294c:	0c 94 ed 15 	jmp	0x2bda	; 0x2bda <__fp_nan>
    2950:	0e f4       	brtc	.+2      	; 0x2954 <__addsf3+0x28>
    2952:	e0 95       	com	r30
    2954:	e7 fb       	bst	r30, 7
    2956:	0c 94 e7 15 	jmp	0x2bce	; 0x2bce <__fp_inf>

0000295a <__addsf3x>:
    295a:	e9 2f       	mov	r30, r25
    295c:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__fp_split3>
    2960:	58 f3       	brcs	.-42     	; 0x2938 <__addsf3+0xc>
    2962:	ba 17       	cp	r27, r26
    2964:	62 07       	cpc	r22, r18
    2966:	73 07       	cpc	r23, r19
    2968:	84 07       	cpc	r24, r20
    296a:	95 07       	cpc	r25, r21
    296c:	20 f0       	brcs	.+8      	; 0x2976 <__addsf3x+0x1c>
    296e:	79 f4       	brne	.+30     	; 0x298e <__addsf3x+0x34>
    2970:	a6 f5       	brtc	.+104    	; 0x29da <__addsf3x+0x80>
    2972:	0c 94 31 16 	jmp	0x2c62	; 0x2c62 <__fp_zero>
    2976:	0e f4       	brtc	.+2      	; 0x297a <__addsf3x+0x20>
    2978:	e0 95       	com	r30
    297a:	0b 2e       	mov	r0, r27
    297c:	ba 2f       	mov	r27, r26
    297e:	a0 2d       	mov	r26, r0
    2980:	0b 01       	movw	r0, r22
    2982:	b9 01       	movw	r22, r18
    2984:	90 01       	movw	r18, r0
    2986:	0c 01       	movw	r0, r24
    2988:	ca 01       	movw	r24, r20
    298a:	a0 01       	movw	r20, r0
    298c:	11 24       	eor	r1, r1
    298e:	ff 27       	eor	r31, r31
    2990:	59 1b       	sub	r21, r25
    2992:	99 f0       	breq	.+38     	; 0x29ba <__addsf3x+0x60>
    2994:	59 3f       	cpi	r21, 0xF9	; 249
    2996:	50 f4       	brcc	.+20     	; 0x29ac <__addsf3x+0x52>
    2998:	50 3e       	cpi	r21, 0xE0	; 224
    299a:	68 f1       	brcs	.+90     	; 0x29f6 <__addsf3x+0x9c>
    299c:	1a 16       	cp	r1, r26
    299e:	f0 40       	sbci	r31, 0x00	; 0
    29a0:	a2 2f       	mov	r26, r18
    29a2:	23 2f       	mov	r18, r19
    29a4:	34 2f       	mov	r19, r20
    29a6:	44 27       	eor	r20, r20
    29a8:	58 5f       	subi	r21, 0xF8	; 248
    29aa:	f3 cf       	rjmp	.-26     	; 0x2992 <__addsf3x+0x38>
    29ac:	46 95       	lsr	r20
    29ae:	37 95       	ror	r19
    29b0:	27 95       	ror	r18
    29b2:	a7 95       	ror	r26
    29b4:	f0 40       	sbci	r31, 0x00	; 0
    29b6:	53 95       	inc	r21
    29b8:	c9 f7       	brne	.-14     	; 0x29ac <__addsf3x+0x52>
    29ba:	7e f4       	brtc	.+30     	; 0x29da <__addsf3x+0x80>
    29bc:	1f 16       	cp	r1, r31
    29be:	ba 0b       	sbc	r27, r26
    29c0:	62 0b       	sbc	r22, r18
    29c2:	73 0b       	sbc	r23, r19
    29c4:	84 0b       	sbc	r24, r20
    29c6:	ba f0       	brmi	.+46     	; 0x29f6 <__addsf3x+0x9c>
    29c8:	91 50       	subi	r25, 0x01	; 1
    29ca:	a1 f0       	breq	.+40     	; 0x29f4 <__addsf3x+0x9a>
    29cc:	ff 0f       	add	r31, r31
    29ce:	bb 1f       	adc	r27, r27
    29d0:	66 1f       	adc	r22, r22
    29d2:	77 1f       	adc	r23, r23
    29d4:	88 1f       	adc	r24, r24
    29d6:	c2 f7       	brpl	.-16     	; 0x29c8 <__addsf3x+0x6e>
    29d8:	0e c0       	rjmp	.+28     	; 0x29f6 <__addsf3x+0x9c>
    29da:	ba 0f       	add	r27, r26
    29dc:	62 1f       	adc	r22, r18
    29de:	73 1f       	adc	r23, r19
    29e0:	84 1f       	adc	r24, r20
    29e2:	48 f4       	brcc	.+18     	; 0x29f6 <__addsf3x+0x9c>
    29e4:	87 95       	ror	r24
    29e6:	77 95       	ror	r23
    29e8:	67 95       	ror	r22
    29ea:	b7 95       	ror	r27
    29ec:	f7 95       	ror	r31
    29ee:	9e 3f       	cpi	r25, 0xFE	; 254
    29f0:	08 f0       	brcs	.+2      	; 0x29f4 <__addsf3x+0x9a>
    29f2:	b0 cf       	rjmp	.-160    	; 0x2954 <__addsf3+0x28>
    29f4:	93 95       	inc	r25
    29f6:	88 0f       	add	r24, r24
    29f8:	08 f0       	brcs	.+2      	; 0x29fc <__addsf3x+0xa2>
    29fa:	99 27       	eor	r25, r25
    29fc:	ee 0f       	add	r30, r30
    29fe:	97 95       	ror	r25
    2a00:	87 95       	ror	r24
    2a02:	08 95       	ret

00002a04 <__divsf3>:
    2a04:	0e 94 16 15 	call	0x2a2c	; 0x2a2c <__divsf3x>
    2a08:	0c 94 fe 15 	jmp	0x2bfc	; 0x2bfc <__fp_round>
    2a0c:	0e 94 f7 15 	call	0x2bee	; 0x2bee <__fp_pscB>
    2a10:	58 f0       	brcs	.+22     	; 0x2a28 <__divsf3+0x24>
    2a12:	0e 94 f0 15 	call	0x2be0	; 0x2be0 <__fp_pscA>
    2a16:	40 f0       	brcs	.+16     	; 0x2a28 <__divsf3+0x24>
    2a18:	29 f4       	brne	.+10     	; 0x2a24 <__divsf3+0x20>
    2a1a:	5f 3f       	cpi	r21, 0xFF	; 255
    2a1c:	29 f0       	breq	.+10     	; 0x2a28 <__divsf3+0x24>
    2a1e:	0c 94 e7 15 	jmp	0x2bce	; 0x2bce <__fp_inf>
    2a22:	51 11       	cpse	r21, r1
    2a24:	0c 94 32 16 	jmp	0x2c64	; 0x2c64 <__fp_szero>
    2a28:	0c 94 ed 15 	jmp	0x2bda	; 0x2bda <__fp_nan>

00002a2c <__divsf3x>:
    2a2c:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__fp_split3>
    2a30:	68 f3       	brcs	.-38     	; 0x2a0c <__divsf3+0x8>

00002a32 <__divsf3_pse>:
    2a32:	99 23       	and	r25, r25
    2a34:	b1 f3       	breq	.-20     	; 0x2a22 <__divsf3+0x1e>
    2a36:	55 23       	and	r21, r21
    2a38:	91 f3       	breq	.-28     	; 0x2a1e <__divsf3+0x1a>
    2a3a:	95 1b       	sub	r25, r21
    2a3c:	55 0b       	sbc	r21, r21
    2a3e:	bb 27       	eor	r27, r27
    2a40:	aa 27       	eor	r26, r26
    2a42:	62 17       	cp	r22, r18
    2a44:	73 07       	cpc	r23, r19
    2a46:	84 07       	cpc	r24, r20
    2a48:	38 f0       	brcs	.+14     	; 0x2a58 <__divsf3_pse+0x26>
    2a4a:	9f 5f       	subi	r25, 0xFF	; 255
    2a4c:	5f 4f       	sbci	r21, 0xFF	; 255
    2a4e:	22 0f       	add	r18, r18
    2a50:	33 1f       	adc	r19, r19
    2a52:	44 1f       	adc	r20, r20
    2a54:	aa 1f       	adc	r26, r26
    2a56:	a9 f3       	breq	.-22     	; 0x2a42 <__divsf3_pse+0x10>
    2a58:	35 d0       	rcall	.+106    	; 0x2ac4 <__divsf3_pse+0x92>
    2a5a:	0e 2e       	mov	r0, r30
    2a5c:	3a f0       	brmi	.+14     	; 0x2a6c <__divsf3_pse+0x3a>
    2a5e:	e0 e8       	ldi	r30, 0x80	; 128
    2a60:	32 d0       	rcall	.+100    	; 0x2ac6 <__divsf3_pse+0x94>
    2a62:	91 50       	subi	r25, 0x01	; 1
    2a64:	50 40       	sbci	r21, 0x00	; 0
    2a66:	e6 95       	lsr	r30
    2a68:	00 1c       	adc	r0, r0
    2a6a:	ca f7       	brpl	.-14     	; 0x2a5e <__divsf3_pse+0x2c>
    2a6c:	2b d0       	rcall	.+86     	; 0x2ac4 <__divsf3_pse+0x92>
    2a6e:	fe 2f       	mov	r31, r30
    2a70:	29 d0       	rcall	.+82     	; 0x2ac4 <__divsf3_pse+0x92>
    2a72:	66 0f       	add	r22, r22
    2a74:	77 1f       	adc	r23, r23
    2a76:	88 1f       	adc	r24, r24
    2a78:	bb 1f       	adc	r27, r27
    2a7a:	26 17       	cp	r18, r22
    2a7c:	37 07       	cpc	r19, r23
    2a7e:	48 07       	cpc	r20, r24
    2a80:	ab 07       	cpc	r26, r27
    2a82:	b0 e8       	ldi	r27, 0x80	; 128
    2a84:	09 f0       	breq	.+2      	; 0x2a88 <__divsf3_pse+0x56>
    2a86:	bb 0b       	sbc	r27, r27
    2a88:	80 2d       	mov	r24, r0
    2a8a:	bf 01       	movw	r22, r30
    2a8c:	ff 27       	eor	r31, r31
    2a8e:	93 58       	subi	r25, 0x83	; 131
    2a90:	5f 4f       	sbci	r21, 0xFF	; 255
    2a92:	3a f0       	brmi	.+14     	; 0x2aa2 <__divsf3_pse+0x70>
    2a94:	9e 3f       	cpi	r25, 0xFE	; 254
    2a96:	51 05       	cpc	r21, r1
    2a98:	78 f0       	brcs	.+30     	; 0x2ab8 <__divsf3_pse+0x86>
    2a9a:	0c 94 e7 15 	jmp	0x2bce	; 0x2bce <__fp_inf>
    2a9e:	0c 94 32 16 	jmp	0x2c64	; 0x2c64 <__fp_szero>
    2aa2:	5f 3f       	cpi	r21, 0xFF	; 255
    2aa4:	e4 f3       	brlt	.-8      	; 0x2a9e <__divsf3_pse+0x6c>
    2aa6:	98 3e       	cpi	r25, 0xE8	; 232
    2aa8:	d4 f3       	brlt	.-12     	; 0x2a9e <__divsf3_pse+0x6c>
    2aaa:	86 95       	lsr	r24
    2aac:	77 95       	ror	r23
    2aae:	67 95       	ror	r22
    2ab0:	b7 95       	ror	r27
    2ab2:	f7 95       	ror	r31
    2ab4:	9f 5f       	subi	r25, 0xFF	; 255
    2ab6:	c9 f7       	brne	.-14     	; 0x2aaa <__divsf3_pse+0x78>
    2ab8:	88 0f       	add	r24, r24
    2aba:	91 1d       	adc	r25, r1
    2abc:	96 95       	lsr	r25
    2abe:	87 95       	ror	r24
    2ac0:	97 f9       	bld	r25, 7
    2ac2:	08 95       	ret
    2ac4:	e1 e0       	ldi	r30, 0x01	; 1
    2ac6:	66 0f       	add	r22, r22
    2ac8:	77 1f       	adc	r23, r23
    2aca:	88 1f       	adc	r24, r24
    2acc:	bb 1f       	adc	r27, r27
    2ace:	62 17       	cp	r22, r18
    2ad0:	73 07       	cpc	r23, r19
    2ad2:	84 07       	cpc	r24, r20
    2ad4:	ba 07       	cpc	r27, r26
    2ad6:	20 f0       	brcs	.+8      	; 0x2ae0 <__divsf3_pse+0xae>
    2ad8:	62 1b       	sub	r22, r18
    2ada:	73 0b       	sbc	r23, r19
    2adc:	84 0b       	sbc	r24, r20
    2ade:	ba 0b       	sbc	r27, r26
    2ae0:	ee 1f       	adc	r30, r30
    2ae2:	88 f7       	brcc	.-30     	; 0x2ac6 <__divsf3_pse+0x94>
    2ae4:	e0 95       	com	r30
    2ae6:	08 95       	ret

00002ae8 <__fixsfsi>:
    2ae8:	0e 94 7b 15 	call	0x2af6	; 0x2af6 <__fixunssfsi>
    2aec:	68 94       	set
    2aee:	b1 11       	cpse	r27, r1
    2af0:	0c 94 32 16 	jmp	0x2c64	; 0x2c64 <__fp_szero>
    2af4:	08 95       	ret

00002af6 <__fixunssfsi>:
    2af6:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <__fp_splitA>
    2afa:	88 f0       	brcs	.+34     	; 0x2b1e <__fixunssfsi+0x28>
    2afc:	9f 57       	subi	r25, 0x7F	; 127
    2afe:	98 f0       	brcs	.+38     	; 0x2b26 <__fixunssfsi+0x30>
    2b00:	b9 2f       	mov	r27, r25
    2b02:	99 27       	eor	r25, r25
    2b04:	b7 51       	subi	r27, 0x17	; 23
    2b06:	b0 f0       	brcs	.+44     	; 0x2b34 <__fixunssfsi+0x3e>
    2b08:	e1 f0       	breq	.+56     	; 0x2b42 <__fixunssfsi+0x4c>
    2b0a:	66 0f       	add	r22, r22
    2b0c:	77 1f       	adc	r23, r23
    2b0e:	88 1f       	adc	r24, r24
    2b10:	99 1f       	adc	r25, r25
    2b12:	1a f0       	brmi	.+6      	; 0x2b1a <__fixunssfsi+0x24>
    2b14:	ba 95       	dec	r27
    2b16:	c9 f7       	brne	.-14     	; 0x2b0a <__fixunssfsi+0x14>
    2b18:	14 c0       	rjmp	.+40     	; 0x2b42 <__fixunssfsi+0x4c>
    2b1a:	b1 30       	cpi	r27, 0x01	; 1
    2b1c:	91 f0       	breq	.+36     	; 0x2b42 <__fixunssfsi+0x4c>
    2b1e:	0e 94 31 16 	call	0x2c62	; 0x2c62 <__fp_zero>
    2b22:	b1 e0       	ldi	r27, 0x01	; 1
    2b24:	08 95       	ret
    2b26:	0c 94 31 16 	jmp	0x2c62	; 0x2c62 <__fp_zero>
    2b2a:	67 2f       	mov	r22, r23
    2b2c:	78 2f       	mov	r23, r24
    2b2e:	88 27       	eor	r24, r24
    2b30:	b8 5f       	subi	r27, 0xF8	; 248
    2b32:	39 f0       	breq	.+14     	; 0x2b42 <__fixunssfsi+0x4c>
    2b34:	b9 3f       	cpi	r27, 0xF9	; 249
    2b36:	cc f3       	brlt	.-14     	; 0x2b2a <__fixunssfsi+0x34>
    2b38:	86 95       	lsr	r24
    2b3a:	77 95       	ror	r23
    2b3c:	67 95       	ror	r22
    2b3e:	b3 95       	inc	r27
    2b40:	d9 f7       	brne	.-10     	; 0x2b38 <__fixunssfsi+0x42>
    2b42:	3e f4       	brtc	.+14     	; 0x2b52 <__fixunssfsi+0x5c>
    2b44:	90 95       	com	r25
    2b46:	80 95       	com	r24
    2b48:	70 95       	com	r23
    2b4a:	61 95       	neg	r22
    2b4c:	7f 4f       	sbci	r23, 0xFF	; 255
    2b4e:	8f 4f       	sbci	r24, 0xFF	; 255
    2b50:	9f 4f       	sbci	r25, 0xFF	; 255
    2b52:	08 95       	ret

00002b54 <__floatunsisf>:
    2b54:	e8 94       	clt
    2b56:	09 c0       	rjmp	.+18     	; 0x2b6a <__floatsisf+0x12>

00002b58 <__floatsisf>:
    2b58:	97 fb       	bst	r25, 7
    2b5a:	3e f4       	brtc	.+14     	; 0x2b6a <__floatsisf+0x12>
    2b5c:	90 95       	com	r25
    2b5e:	80 95       	com	r24
    2b60:	70 95       	com	r23
    2b62:	61 95       	neg	r22
    2b64:	7f 4f       	sbci	r23, 0xFF	; 255
    2b66:	8f 4f       	sbci	r24, 0xFF	; 255
    2b68:	9f 4f       	sbci	r25, 0xFF	; 255
    2b6a:	99 23       	and	r25, r25
    2b6c:	a9 f0       	breq	.+42     	; 0x2b98 <__floatsisf+0x40>
    2b6e:	f9 2f       	mov	r31, r25
    2b70:	96 e9       	ldi	r25, 0x96	; 150
    2b72:	bb 27       	eor	r27, r27
    2b74:	93 95       	inc	r25
    2b76:	f6 95       	lsr	r31
    2b78:	87 95       	ror	r24
    2b7a:	77 95       	ror	r23
    2b7c:	67 95       	ror	r22
    2b7e:	b7 95       	ror	r27
    2b80:	f1 11       	cpse	r31, r1
    2b82:	f8 cf       	rjmp	.-16     	; 0x2b74 <__floatsisf+0x1c>
    2b84:	fa f4       	brpl	.+62     	; 0x2bc4 <__floatsisf+0x6c>
    2b86:	bb 0f       	add	r27, r27
    2b88:	11 f4       	brne	.+4      	; 0x2b8e <__floatsisf+0x36>
    2b8a:	60 ff       	sbrs	r22, 0
    2b8c:	1b c0       	rjmp	.+54     	; 0x2bc4 <__floatsisf+0x6c>
    2b8e:	6f 5f       	subi	r22, 0xFF	; 255
    2b90:	7f 4f       	sbci	r23, 0xFF	; 255
    2b92:	8f 4f       	sbci	r24, 0xFF	; 255
    2b94:	9f 4f       	sbci	r25, 0xFF	; 255
    2b96:	16 c0       	rjmp	.+44     	; 0x2bc4 <__floatsisf+0x6c>
    2b98:	88 23       	and	r24, r24
    2b9a:	11 f0       	breq	.+4      	; 0x2ba0 <__floatsisf+0x48>
    2b9c:	96 e9       	ldi	r25, 0x96	; 150
    2b9e:	11 c0       	rjmp	.+34     	; 0x2bc2 <__floatsisf+0x6a>
    2ba0:	77 23       	and	r23, r23
    2ba2:	21 f0       	breq	.+8      	; 0x2bac <__floatsisf+0x54>
    2ba4:	9e e8       	ldi	r25, 0x8E	; 142
    2ba6:	87 2f       	mov	r24, r23
    2ba8:	76 2f       	mov	r23, r22
    2baa:	05 c0       	rjmp	.+10     	; 0x2bb6 <__floatsisf+0x5e>
    2bac:	66 23       	and	r22, r22
    2bae:	71 f0       	breq	.+28     	; 0x2bcc <__floatsisf+0x74>
    2bb0:	96 e8       	ldi	r25, 0x86	; 134
    2bb2:	86 2f       	mov	r24, r22
    2bb4:	70 e0       	ldi	r23, 0x00	; 0
    2bb6:	60 e0       	ldi	r22, 0x00	; 0
    2bb8:	2a f0       	brmi	.+10     	; 0x2bc4 <__floatsisf+0x6c>
    2bba:	9a 95       	dec	r25
    2bbc:	66 0f       	add	r22, r22
    2bbe:	77 1f       	adc	r23, r23
    2bc0:	88 1f       	adc	r24, r24
    2bc2:	da f7       	brpl	.-10     	; 0x2bba <__floatsisf+0x62>
    2bc4:	88 0f       	add	r24, r24
    2bc6:	96 95       	lsr	r25
    2bc8:	87 95       	ror	r24
    2bca:	97 f9       	bld	r25, 7
    2bcc:	08 95       	ret

00002bce <__fp_inf>:
    2bce:	97 f9       	bld	r25, 7
    2bd0:	9f 67       	ori	r25, 0x7F	; 127
    2bd2:	80 e8       	ldi	r24, 0x80	; 128
    2bd4:	70 e0       	ldi	r23, 0x00	; 0
    2bd6:	60 e0       	ldi	r22, 0x00	; 0
    2bd8:	08 95       	ret

00002bda <__fp_nan>:
    2bda:	9f ef       	ldi	r25, 0xFF	; 255
    2bdc:	80 ec       	ldi	r24, 0xC0	; 192
    2bde:	08 95       	ret

00002be0 <__fp_pscA>:
    2be0:	00 24       	eor	r0, r0
    2be2:	0a 94       	dec	r0
    2be4:	16 16       	cp	r1, r22
    2be6:	17 06       	cpc	r1, r23
    2be8:	18 06       	cpc	r1, r24
    2bea:	09 06       	cpc	r0, r25
    2bec:	08 95       	ret

00002bee <__fp_pscB>:
    2bee:	00 24       	eor	r0, r0
    2bf0:	0a 94       	dec	r0
    2bf2:	12 16       	cp	r1, r18
    2bf4:	13 06       	cpc	r1, r19
    2bf6:	14 06       	cpc	r1, r20
    2bf8:	05 06       	cpc	r0, r21
    2bfa:	08 95       	ret

00002bfc <__fp_round>:
    2bfc:	09 2e       	mov	r0, r25
    2bfe:	03 94       	inc	r0
    2c00:	00 0c       	add	r0, r0
    2c02:	11 f4       	brne	.+4      	; 0x2c08 <__fp_round+0xc>
    2c04:	88 23       	and	r24, r24
    2c06:	52 f0       	brmi	.+20     	; 0x2c1c <__fp_round+0x20>
    2c08:	bb 0f       	add	r27, r27
    2c0a:	40 f4       	brcc	.+16     	; 0x2c1c <__fp_round+0x20>
    2c0c:	bf 2b       	or	r27, r31
    2c0e:	11 f4       	brne	.+4      	; 0x2c14 <__fp_round+0x18>
    2c10:	60 ff       	sbrs	r22, 0
    2c12:	04 c0       	rjmp	.+8      	; 0x2c1c <__fp_round+0x20>
    2c14:	6f 5f       	subi	r22, 0xFF	; 255
    2c16:	7f 4f       	sbci	r23, 0xFF	; 255
    2c18:	8f 4f       	sbci	r24, 0xFF	; 255
    2c1a:	9f 4f       	sbci	r25, 0xFF	; 255
    2c1c:	08 95       	ret

00002c1e <__fp_split3>:
    2c1e:	57 fd       	sbrc	r21, 7
    2c20:	90 58       	subi	r25, 0x80	; 128
    2c22:	44 0f       	add	r20, r20
    2c24:	55 1f       	adc	r21, r21
    2c26:	59 f0       	breq	.+22     	; 0x2c3e <__fp_splitA+0x10>
    2c28:	5f 3f       	cpi	r21, 0xFF	; 255
    2c2a:	71 f0       	breq	.+28     	; 0x2c48 <__fp_splitA+0x1a>
    2c2c:	47 95       	ror	r20

00002c2e <__fp_splitA>:
    2c2e:	88 0f       	add	r24, r24
    2c30:	97 fb       	bst	r25, 7
    2c32:	99 1f       	adc	r25, r25
    2c34:	61 f0       	breq	.+24     	; 0x2c4e <__fp_splitA+0x20>
    2c36:	9f 3f       	cpi	r25, 0xFF	; 255
    2c38:	79 f0       	breq	.+30     	; 0x2c58 <__fp_splitA+0x2a>
    2c3a:	87 95       	ror	r24
    2c3c:	08 95       	ret
    2c3e:	12 16       	cp	r1, r18
    2c40:	13 06       	cpc	r1, r19
    2c42:	14 06       	cpc	r1, r20
    2c44:	55 1f       	adc	r21, r21
    2c46:	f2 cf       	rjmp	.-28     	; 0x2c2c <__fp_split3+0xe>
    2c48:	46 95       	lsr	r20
    2c4a:	f1 df       	rcall	.-30     	; 0x2c2e <__fp_splitA>
    2c4c:	08 c0       	rjmp	.+16     	; 0x2c5e <__fp_splitA+0x30>
    2c4e:	16 16       	cp	r1, r22
    2c50:	17 06       	cpc	r1, r23
    2c52:	18 06       	cpc	r1, r24
    2c54:	99 1f       	adc	r25, r25
    2c56:	f1 cf       	rjmp	.-30     	; 0x2c3a <__fp_splitA+0xc>
    2c58:	86 95       	lsr	r24
    2c5a:	71 05       	cpc	r23, r1
    2c5c:	61 05       	cpc	r22, r1
    2c5e:	08 94       	sec
    2c60:	08 95       	ret

00002c62 <__fp_zero>:
    2c62:	e8 94       	clt

00002c64 <__fp_szero>:
    2c64:	bb 27       	eor	r27, r27
    2c66:	66 27       	eor	r22, r22
    2c68:	77 27       	eor	r23, r23
    2c6a:	cb 01       	movw	r24, r22
    2c6c:	97 f9       	bld	r25, 7
    2c6e:	08 95       	ret

00002c70 <__gesf2>:
    2c70:	0e 94 3d 16 	call	0x2c7a	; 0x2c7a <__fp_cmp>
    2c74:	08 f4       	brcc	.+2      	; 0x2c78 <__gesf2+0x8>
    2c76:	8f ef       	ldi	r24, 0xFF	; 255
    2c78:	08 95       	ret

00002c7a <__fp_cmp>:
    2c7a:	99 0f       	add	r25, r25
    2c7c:	00 08       	sbc	r0, r0
    2c7e:	55 0f       	add	r21, r21
    2c80:	aa 0b       	sbc	r26, r26
    2c82:	e0 e8       	ldi	r30, 0x80	; 128
    2c84:	fe ef       	ldi	r31, 0xFE	; 254
    2c86:	16 16       	cp	r1, r22
    2c88:	17 06       	cpc	r1, r23
    2c8a:	e8 07       	cpc	r30, r24
    2c8c:	f9 07       	cpc	r31, r25
    2c8e:	c0 f0       	brcs	.+48     	; 0x2cc0 <__fp_cmp+0x46>
    2c90:	12 16       	cp	r1, r18
    2c92:	13 06       	cpc	r1, r19
    2c94:	e4 07       	cpc	r30, r20
    2c96:	f5 07       	cpc	r31, r21
    2c98:	98 f0       	brcs	.+38     	; 0x2cc0 <__fp_cmp+0x46>
    2c9a:	62 1b       	sub	r22, r18
    2c9c:	73 0b       	sbc	r23, r19
    2c9e:	84 0b       	sbc	r24, r20
    2ca0:	95 0b       	sbc	r25, r21
    2ca2:	39 f4       	brne	.+14     	; 0x2cb2 <__fp_cmp+0x38>
    2ca4:	0a 26       	eor	r0, r26
    2ca6:	61 f0       	breq	.+24     	; 0x2cc0 <__fp_cmp+0x46>
    2ca8:	23 2b       	or	r18, r19
    2caa:	24 2b       	or	r18, r20
    2cac:	25 2b       	or	r18, r21
    2cae:	21 f4       	brne	.+8      	; 0x2cb8 <__fp_cmp+0x3e>
    2cb0:	08 95       	ret
    2cb2:	0a 26       	eor	r0, r26
    2cb4:	09 f4       	brne	.+2      	; 0x2cb8 <__fp_cmp+0x3e>
    2cb6:	a1 40       	sbci	r26, 0x01	; 1
    2cb8:	a6 95       	lsr	r26
    2cba:	8f ef       	ldi	r24, 0xFF	; 255
    2cbc:	81 1d       	adc	r24, r1
    2cbe:	81 1d       	adc	r24, r1
    2cc0:	08 95       	ret

00002cc2 <_ZN14HardwareSerial9availableEv>:
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    2cc2:	fc 01       	movw	r30, r24
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    2cc4:	91 8d       	ldd	r25, Z+25	; 0x19
    2cc6:	22 8d       	ldd	r18, Z+26	; 0x1a
    2cc8:	89 2f       	mov	r24, r25
    2cca:	90 e0       	ldi	r25, 0x00	; 0
    2ccc:	80 5c       	subi	r24, 0xC0	; 192
    2cce:	9f 4f       	sbci	r25, 0xFF	; 255
    2cd0:	82 1b       	sub	r24, r18
    2cd2:	91 09       	sbc	r25, r1
}
    2cd4:	8f 73       	andi	r24, 0x3F	; 63
    2cd6:	99 27       	eor	r25, r25
    2cd8:	08 95       	ret

00002cda <_ZN14HardwareSerial4peekEv>:

int HardwareSerial::peek(void)
{
    2cda:	fc 01       	movw	r30, r24
  if (_rx_buffer_head == _rx_buffer_tail) {
    2cdc:	91 8d       	ldd	r25, Z+25	; 0x19
    2cde:	82 8d       	ldd	r24, Z+26	; 0x1a
    2ce0:	98 17       	cp	r25, r24
    2ce2:	31 f0       	breq	.+12     	; 0x2cf0 <_ZN14HardwareSerial4peekEv+0x16>
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    2ce4:	82 8d       	ldd	r24, Z+26	; 0x1a
    2ce6:	e8 0f       	add	r30, r24
    2ce8:	f1 1d       	adc	r31, r1
    2cea:	85 8d       	ldd	r24, Z+29	; 0x1d
    2cec:	90 e0       	ldi	r25, 0x00	; 0
    2cee:	08 95       	ret
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    2cf0:	8f ef       	ldi	r24, 0xFF	; 255
    2cf2:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    2cf4:	08 95       	ret

00002cf6 <_ZN14HardwareSerial4readEv>:

int HardwareSerial::read(void)
{
    2cf6:	fc 01       	movw	r30, r24
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    2cf8:	91 8d       	ldd	r25, Z+25	; 0x19
    2cfa:	82 8d       	ldd	r24, Z+26	; 0x1a
    2cfc:	98 17       	cp	r25, r24
    2cfe:	61 f0       	breq	.+24     	; 0x2d18 <_ZN14HardwareSerial4readEv+0x22>
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    2d00:	82 8d       	ldd	r24, Z+26	; 0x1a
    2d02:	df 01       	movw	r26, r30
    2d04:	a8 0f       	add	r26, r24
    2d06:	b1 1d       	adc	r27, r1
    2d08:	5d 96       	adiw	r26, 0x1d	; 29
    2d0a:	8c 91       	ld	r24, X
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    2d0c:	92 8d       	ldd	r25, Z+26	; 0x1a
    2d0e:	9f 5f       	subi	r25, 0xFF	; 255
    2d10:	9f 73       	andi	r25, 0x3F	; 63
    2d12:	92 8f       	std	Z+26, r25	; 0x1a
    return c;
    2d14:	90 e0       	ldi	r25, 0x00	; 0
    2d16:	08 95       	ret

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    2d18:	8f ef       	ldi	r24, 0xFF	; 255
    2d1a:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    2d1c:	08 95       	ret

00002d1e <_ZN14HardwareSerial17availableForWriteEv>:
{
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC {
    head = _tx_buffer_head;
    2d1e:	fc 01       	movw	r30, r24
    2d20:	53 8d       	ldd	r21, Z+27	; 0x1b
    tail = _tx_buffer_tail;
    2d22:	44 8d       	ldd	r20, Z+28	; 0x1c
    2d24:	25 2f       	mov	r18, r21
    2d26:	30 e0       	ldi	r19, 0x00	; 0
    2d28:	84 2f       	mov	r24, r20
    2d2a:	90 e0       	ldi	r25, 0x00	; 0
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
    2d2c:	82 1b       	sub	r24, r18
    2d2e:	93 0b       	sbc	r25, r19
    2d30:	54 17       	cp	r21, r20
    2d32:	10 f0       	brcs	.+4      	; 0x2d38 <_ZN14HardwareSerial17availableForWriteEv+0x1a>
    2d34:	cf 96       	adiw	r24, 0x3f	; 63
    2d36:	08 95       	ret
  return tail - head - 1;
    2d38:	01 97       	sbiw	r24, 0x01	; 1
}
    2d3a:	08 95       	ret

00002d3c <_Z14serialEventRunv>:
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    2d3c:	8d ef       	ldi	r24, 0xFD	; 253
    2d3e:	97 e1       	ldi	r25, 0x17	; 23
    2d40:	89 2b       	or	r24, r25
    2d42:	49 f0       	breq	.+18     	; 0x2d56 <_Z14serialEventRunv+0x1a>
    2d44:	80 e0       	ldi	r24, 0x00	; 0
    2d46:	90 e0       	ldi	r25, 0x00	; 0
    2d48:	89 2b       	or	r24, r25
    2d4a:	29 f0       	breq	.+10     	; 0x2d56 <_Z14serialEventRunv+0x1a>
    2d4c:	0e 94 fd 17 	call	0x2ffa	; 0x2ffa <_Z17Serial0_availablev>
    2d50:	81 11       	cpse	r24, r1
    2d52:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    2d56:	08 95       	ret

00002d58 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    2d58:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    2d5a:	84 8d       	ldd	r24, Z+28	; 0x1c
    2d5c:	df 01       	movw	r26, r30
    2d5e:	a8 0f       	add	r26, r24
    2d60:	b1 1d       	adc	r27, r1
    2d62:	a3 5a       	subi	r26, 0xA3	; 163
    2d64:	bf 4f       	sbci	r27, 0xFF	; 255
    2d66:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    2d68:	84 8d       	ldd	r24, Z+28	; 0x1c
    2d6a:	90 e0       	ldi	r25, 0x00	; 0
    2d6c:	01 96       	adiw	r24, 0x01	; 1
    2d6e:	8f 73       	andi	r24, 0x3F	; 63
    2d70:	99 27       	eor	r25, r25
    2d72:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
    2d74:	a6 89       	ldd	r26, Z+22	; 0x16
    2d76:	b7 89       	ldd	r27, Z+23	; 0x17
    2d78:	2c 93       	st	X, r18
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

#ifdef MPCM0
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    2d7a:	a0 89       	ldd	r26, Z+16	; 0x10
    2d7c:	b1 89       	ldd	r27, Z+17	; 0x11
    2d7e:	8c 91       	ld	r24, X
    2d80:	83 70       	andi	r24, 0x03	; 3
    2d82:	80 64       	ori	r24, 0x40	; 64
    2d84:	8c 93       	st	X, r24
#else
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif

  if (_tx_buffer_head == _tx_buffer_tail) {
    2d86:	93 8d       	ldd	r25, Z+27	; 0x1b
    2d88:	84 8d       	ldd	r24, Z+28	; 0x1c
    2d8a:	98 13       	cpse	r25, r24
    2d8c:	06 c0       	rjmp	.+12     	; 0x2d9a <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x42>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
    2d8e:	02 88       	ldd	r0, Z+18	; 0x12
    2d90:	f3 89       	ldd	r31, Z+19	; 0x13
    2d92:	e0 2d       	mov	r30, r0
    2d94:	80 81       	ld	r24, Z
    2d96:	8f 7d       	andi	r24, 0xDF	; 223
    2d98:	80 83       	st	Z, r24
    2d9a:	08 95       	ret

00002d9c <_ZN14HardwareSerial5writeEh>:
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
    2d9c:	ef 92       	push	r14
    2d9e:	ff 92       	push	r15
    2da0:	0f 93       	push	r16
    2da2:	1f 93       	push	r17
    2da4:	cf 93       	push	r28
    2da6:	df 93       	push	r29
    2da8:	ec 01       	movw	r28, r24
  _written = true;
    2daa:	81 e0       	ldi	r24, 0x01	; 1
    2dac:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    2dae:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2db0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2db2:	98 13       	cpse	r25, r24
    2db4:	05 c0       	rjmp	.+10     	; 0x2dc0 <_ZN14HardwareSerial5writeEh+0x24>
    2db6:	e8 89       	ldd	r30, Y+16	; 0x10
    2db8:	f9 89       	ldd	r31, Y+17	; 0x11
    2dba:	80 81       	ld	r24, Z
    2dbc:	85 fd       	sbrc	r24, 5
    2dbe:	26 c0       	rjmp	.+76     	; 0x2e0c <_ZN14HardwareSerial5writeEh+0x70>
    2dc0:	f6 2e       	mov	r15, r22
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    2dc2:	0b 8d       	ldd	r16, Y+27	; 0x1b
    2dc4:	10 e0       	ldi	r17, 0x00	; 0
    2dc6:	0f 5f       	subi	r16, 0xFF	; 255
    2dc8:	1f 4f       	sbci	r17, 0xFF	; 255
    2dca:	0f 73       	andi	r16, 0x3F	; 63
    2dcc:	11 27       	eor	r17, r17
    2dce:	e0 2e       	mov	r14, r16
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    2dd0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2dd2:	e8 12       	cpse	r14, r24
    2dd4:	0c c0       	rjmp	.+24     	; 0x2dee <_ZN14HardwareSerial5writeEh+0x52>
    if (bit_is_clear(SREG, SREG_I)) {
    2dd6:	0f b6       	in	r0, 0x3f	; 63
    2dd8:	07 fc       	sbrc	r0, 7
    2dda:	fa cf       	rjmp	.-12     	; 0x2dd0 <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    2ddc:	e8 89       	ldd	r30, Y+16	; 0x10
    2dde:	f9 89       	ldd	r31, Y+17	; 0x11
    2de0:	80 81       	ld	r24, Z
    2de2:	85 ff       	sbrs	r24, 5
    2de4:	f5 cf       	rjmp	.-22     	; 0x2dd0 <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
    2de6:	ce 01       	movw	r24, r28
    2de8:	0e 94 ac 16 	call	0x2d58	; 0x2d58 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    2dec:	f1 cf       	rjmp	.-30     	; 0x2dd0 <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    2dee:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2df0:	fe 01       	movw	r30, r28
    2df2:	e8 0f       	add	r30, r24
    2df4:	f1 1d       	adc	r31, r1
    2df6:	e3 5a       	subi	r30, 0xA3	; 163
    2df8:	ff 4f       	sbci	r31, 0xFF	; 255
    2dfa:	f0 82       	st	Z, r15

  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    2dfc:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    2dfe:	f8 94       	cli
    _tx_buffer_head = i;
    2e00:	0b 8f       	std	Y+27, r16	; 0x1b
    sbi(*_ucsrb, UDRIE0);
    2e02:	ea 89       	ldd	r30, Y+18	; 0x12
    2e04:	fb 89       	ldd	r31, Y+19	; 0x13
    2e06:	80 81       	ld	r24, Z
    2e08:	80 62       	ori	r24, 0x20	; 32
    2e0a:	0a c0       	rjmp	.+20     	; 0x2e20 <_ZN14HardwareSerial5writeEh+0x84>
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    2e0c:	9f b7       	in	r25, 0x3f	; 63
    2e0e:	f8 94       	cli
      *_udr = c;
    2e10:	ee 89       	ldd	r30, Y+22	; 0x16
    2e12:	ff 89       	ldd	r31, Y+23	; 0x17
    2e14:	60 83       	st	Z, r22
#ifdef MPCM0
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    2e16:	e8 89       	ldd	r30, Y+16	; 0x10
    2e18:	f9 89       	ldd	r31, Y+17	; 0x11
    2e1a:	80 81       	ld	r24, Z
    2e1c:	83 70       	andi	r24, 0x03	; 3
    2e1e:	80 64       	ori	r24, 0x40	; 64
    2e20:	80 83       	st	Z, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    2e22:	9f bf       	out	0x3f, r25	; 63
    _tx_buffer_head = i;
    sbi(*_ucsrb, UDRIE0);
  }
  
  return 1;
}
    2e24:	81 e0       	ldi	r24, 0x01	; 1
    2e26:	90 e0       	ldi	r25, 0x00	; 0
    2e28:	df 91       	pop	r29
    2e2a:	cf 91       	pop	r28
    2e2c:	1f 91       	pop	r17
    2e2e:	0f 91       	pop	r16
    2e30:	ff 90       	pop	r15
    2e32:	ef 90       	pop	r14
    2e34:	08 95       	ret

00002e36 <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    2e36:	cf 93       	push	r28
    2e38:	df 93       	push	r29
    2e3a:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    2e3c:	88 8d       	ldd	r24, Y+24	; 0x18
    2e3e:	88 23       	and	r24, r24
    2e40:	c9 f0       	breq	.+50     	; 0x2e74 <_ZN14HardwareSerial5flushEv+0x3e>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    2e42:	ea 89       	ldd	r30, Y+18	; 0x12
    2e44:	fb 89       	ldd	r31, Y+19	; 0x13
    2e46:	80 81       	ld	r24, Z
    2e48:	85 fd       	sbrc	r24, 5
    2e4a:	05 c0       	rjmp	.+10     	; 0x2e56 <_ZN14HardwareSerial5flushEv+0x20>
    2e4c:	a8 89       	ldd	r26, Y+16	; 0x10
    2e4e:	b9 89       	ldd	r27, Y+17	; 0x11
    2e50:	8c 91       	ld	r24, X
    2e52:	86 fd       	sbrc	r24, 6
    2e54:	0f c0       	rjmp	.+30     	; 0x2e74 <_ZN14HardwareSerial5flushEv+0x3e>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    2e56:	0f b6       	in	r0, 0x3f	; 63
    2e58:	07 fc       	sbrc	r0, 7
    2e5a:	f5 cf       	rjmp	.-22     	; 0x2e46 <_ZN14HardwareSerial5flushEv+0x10>
    2e5c:	80 81       	ld	r24, Z
    2e5e:	85 ff       	sbrs	r24, 5
    2e60:	f2 cf       	rjmp	.-28     	; 0x2e46 <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
    2e62:	a8 89       	ldd	r26, Y+16	; 0x10
    2e64:	b9 89       	ldd	r27, Y+17	; 0x11
    2e66:	8c 91       	ld	r24, X
    2e68:	85 ff       	sbrs	r24, 5
    2e6a:	ed cf       	rjmp	.-38     	; 0x2e46 <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
    2e6c:	ce 01       	movw	r24, r28
    2e6e:	0e 94 ac 16 	call	0x2d58	; 0x2d58 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    2e72:	e7 cf       	rjmp	.-50     	; 0x2e42 <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    2e74:	df 91       	pop	r29
    2e76:	cf 91       	pop	r28
    2e78:	08 95       	ret

00002e7a <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
    2e7a:	cf 92       	push	r12
    2e7c:	df 92       	push	r13
    2e7e:	ef 92       	push	r14
    2e80:	ff 92       	push	r15
    2e82:	1f 93       	push	r17
    2e84:	cf 93       	push	r28
    2e86:	df 93       	push	r29
    2e88:	ec 01       	movw	r28, r24
    2e8a:	6a 01       	movw	r12, r20
    2e8c:	7b 01       	movw	r14, r22
    2e8e:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    2e90:	e8 89       	ldd	r30, Y+16	; 0x10
    2e92:	f9 89       	ldd	r31, Y+17	; 0x11
    2e94:	82 e0       	ldi	r24, 0x02	; 2
    2e96:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    2e98:	41 15       	cp	r20, r1
    2e9a:	51 4e       	sbci	r21, 0xE1	; 225
    2e9c:	61 05       	cpc	r22, r1
    2e9e:	71 05       	cpc	r23, r1
    2ea0:	b1 f0       	breq	.+44     	; 0x2ece <_ZN14HardwareSerial5beginEmh+0x54>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
    2ea2:	60 e0       	ldi	r22, 0x00	; 0
    2ea4:	79 e0       	ldi	r23, 0x09	; 9
    2ea6:	8d e3       	ldi	r24, 0x3D	; 61
    2ea8:	90 e0       	ldi	r25, 0x00	; 0
    2eaa:	a7 01       	movw	r20, r14
    2eac:	96 01       	movw	r18, r12
    2eae:	0e 94 14 32 	call	0x6428	; 0x6428 <__udivmodsi4>
    2eb2:	da 01       	movw	r26, r20
    2eb4:	c9 01       	movw	r24, r18
    2eb6:	01 97       	sbiw	r24, 0x01	; 1
    2eb8:	a1 09       	sbc	r26, r1
    2eba:	b1 09       	sbc	r27, r1
    2ebc:	b6 95       	lsr	r27
    2ebe:	a7 95       	ror	r26
    2ec0:	97 95       	ror	r25
    2ec2:	87 95       	ror	r24
    2ec4:	9c 01       	movw	r18, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    2ec6:	21 15       	cp	r18, r1
    2ec8:	80 e1       	ldi	r24, 0x10	; 16
    2eca:	38 07       	cpc	r19, r24
    2ecc:	a8 f0       	brcs	.+42     	; 0x2ef8 <_ZN14HardwareSerial5beginEmh+0x7e>
  {
    *_ucsra = 0;
    2ece:	e8 89       	ldd	r30, Y+16	; 0x10
    2ed0:	f9 89       	ldd	r31, Y+17	; 0x11
    2ed2:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
    2ed4:	60 e8       	ldi	r22, 0x80	; 128
    2ed6:	74 e8       	ldi	r23, 0x84	; 132
    2ed8:	8e e1       	ldi	r24, 0x1E	; 30
    2eda:	90 e0       	ldi	r25, 0x00	; 0
    2edc:	a7 01       	movw	r20, r14
    2ede:	96 01       	movw	r18, r12
    2ee0:	0e 94 14 32 	call	0x6428	; 0x6428 <__udivmodsi4>
    2ee4:	da 01       	movw	r26, r20
    2ee6:	c9 01       	movw	r24, r18
    2ee8:	01 97       	sbiw	r24, 0x01	; 1
    2eea:	a1 09       	sbc	r26, r1
    2eec:	b1 09       	sbc	r27, r1
    2eee:	b6 95       	lsr	r27
    2ef0:	a7 95       	ror	r26
    2ef2:	97 95       	ror	r25
    2ef4:	87 95       	ror	r24
    2ef6:	9c 01       	movw	r18, r24
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    2ef8:	ec 85       	ldd	r30, Y+12	; 0x0c
    2efa:	fd 85       	ldd	r31, Y+13	; 0x0d
    2efc:	30 83       	st	Z, r19
  *_ubrrl = baud_setting;
    2efe:	ee 85       	ldd	r30, Y+14	; 0x0e
    2f00:	ff 85       	ldd	r31, Y+15	; 0x0f
    2f02:	20 83       	st	Z, r18

  _written = false;
    2f04:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    2f06:	ec 89       	ldd	r30, Y+20	; 0x14
    2f08:	fd 89       	ldd	r31, Y+21	; 0x15
    2f0a:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
    2f0c:	ea 89       	ldd	r30, Y+18	; 0x12
    2f0e:	fb 89       	ldd	r31, Y+19	; 0x13
    2f10:	80 81       	ld	r24, Z
    2f12:	80 61       	ori	r24, 0x10	; 16
    2f14:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
    2f16:	ea 89       	ldd	r30, Y+18	; 0x12
    2f18:	fb 89       	ldd	r31, Y+19	; 0x13
    2f1a:	80 81       	ld	r24, Z
    2f1c:	88 60       	ori	r24, 0x08	; 8
    2f1e:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
    2f20:	ea 89       	ldd	r30, Y+18	; 0x12
    2f22:	fb 89       	ldd	r31, Y+19	; 0x13
    2f24:	80 81       	ld	r24, Z
    2f26:	80 68       	ori	r24, 0x80	; 128
    2f28:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
    2f2a:	ea 89       	ldd	r30, Y+18	; 0x12
    2f2c:	fb 89       	ldd	r31, Y+19	; 0x13
    2f2e:	80 81       	ld	r24, Z
    2f30:	8f 7d       	andi	r24, 0xDF	; 223
    2f32:	80 83       	st	Z, r24
}
    2f34:	df 91       	pop	r29
    2f36:	cf 91       	pop	r28
    2f38:	1f 91       	pop	r17
    2f3a:	ff 90       	pop	r15
    2f3c:	ef 90       	pop	r14
    2f3e:	df 90       	pop	r13
    2f40:	cf 90       	pop	r12
    2f42:	08 95       	ret

00002f44 <_ZN5Print17availableForWriteEv>:
    size_t println(unsigned long, int = DEC);
    size_t println(double, int = 2);
    size_t println(const Printable&);
    size_t println(void);

    virtual void flush() { /* Empty implementation for backward compatibility */ }
    2f44:	80 e0       	ldi	r24, 0x00	; 0
    2f46:	90 e0       	ldi	r25, 0x00	; 0
    2f48:	08 95       	ret

00002f4a <__vector_18>:
#elif defined(USART_RXC_vect)
  ISR(USART_RXC_vect) // ATmega8
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    2f4a:	1f 92       	push	r1
    2f4c:	0f 92       	push	r0
    2f4e:	0f b6       	in	r0, 0x3f	; 63
    2f50:	0f 92       	push	r0
    2f52:	11 24       	eor	r1, r1
    2f54:	2f 93       	push	r18
    2f56:	8f 93       	push	r24
    2f58:	9f 93       	push	r25
    2f5a:	ef 93       	push	r30
    2f5c:	ff 93       	push	r31

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    2f5e:	e0 91 92 03 	lds	r30, 0x0392	; 0x800392 <Serial+0x10>
    2f62:	f0 91 93 03 	lds	r31, 0x0393	; 0x800393 <Serial+0x11>
    2f66:	80 81       	ld	r24, Z
    2f68:	e0 91 98 03 	lds	r30, 0x0398	; 0x800398 <Serial+0x16>
    2f6c:	f0 91 99 03 	lds	r31, 0x0399	; 0x800399 <Serial+0x17>
    2f70:	82 fd       	sbrc	r24, 2
    2f72:	12 c0       	rjmp	.+36     	; 0x2f98 <__vector_18+0x4e>
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    2f74:	90 81       	ld	r25, Z
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    2f76:	80 91 9b 03 	lds	r24, 0x039B	; 0x80039b <Serial+0x19>
    2f7a:	8f 5f       	subi	r24, 0xFF	; 255
    2f7c:	8f 73       	andi	r24, 0x3F	; 63

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    2f7e:	20 91 9c 03 	lds	r18, 0x039C	; 0x80039c <Serial+0x1a>
    2f82:	82 17       	cp	r24, r18
    2f84:	51 f0       	breq	.+20     	; 0x2f9a <__vector_18+0x50>
      _rx_buffer[_rx_buffer_head] = c;
    2f86:	e0 91 9b 03 	lds	r30, 0x039B	; 0x80039b <Serial+0x19>
    2f8a:	f0 e0       	ldi	r31, 0x00	; 0
    2f8c:	ee 57       	subi	r30, 0x7E	; 126
    2f8e:	fc 4f       	sbci	r31, 0xFC	; 252
    2f90:	95 8f       	std	Z+29, r25	; 0x1d
      _rx_buffer_head = i;
    2f92:	80 93 9b 03 	sts	0x039B, r24	; 0x80039b <Serial+0x19>
    2f96:	01 c0       	rjmp	.+2      	; 0x2f9a <__vector_18+0x50>
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    2f98:	80 81       	ld	r24, Z
    Serial._rx_complete_irq();
  }
    2f9a:	ff 91       	pop	r31
    2f9c:	ef 91       	pop	r30
    2f9e:	9f 91       	pop	r25
    2fa0:	8f 91       	pop	r24
    2fa2:	2f 91       	pop	r18
    2fa4:	0f 90       	pop	r0
    2fa6:	0f be       	out	0x3f, r0	; 63
    2fa8:	0f 90       	pop	r0
    2faa:	1f 90       	pop	r1
    2fac:	18 95       	reti

00002fae <__vector_19>:
#elif defined(USART_UDRE_vect)
ISR(USART_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    2fae:	1f 92       	push	r1
    2fb0:	0f 92       	push	r0
    2fb2:	0f b6       	in	r0, 0x3f	; 63
    2fb4:	0f 92       	push	r0
    2fb6:	11 24       	eor	r1, r1
    2fb8:	2f 93       	push	r18
    2fba:	3f 93       	push	r19
    2fbc:	4f 93       	push	r20
    2fbe:	5f 93       	push	r21
    2fc0:	6f 93       	push	r22
    2fc2:	7f 93       	push	r23
    2fc4:	8f 93       	push	r24
    2fc6:	9f 93       	push	r25
    2fc8:	af 93       	push	r26
    2fca:	bf 93       	push	r27
    2fcc:	ef 93       	push	r30
    2fce:	ff 93       	push	r31
  Serial._tx_udr_empty_irq();
    2fd0:	82 e8       	ldi	r24, 0x82	; 130
    2fd2:	93 e0       	ldi	r25, 0x03	; 3
    2fd4:	0e 94 ac 16 	call	0x2d58	; 0x2d58 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
}
    2fd8:	ff 91       	pop	r31
    2fda:	ef 91       	pop	r30
    2fdc:	bf 91       	pop	r27
    2fde:	af 91       	pop	r26
    2fe0:	9f 91       	pop	r25
    2fe2:	8f 91       	pop	r24
    2fe4:	7f 91       	pop	r23
    2fe6:	6f 91       	pop	r22
    2fe8:	5f 91       	pop	r21
    2fea:	4f 91       	pop	r20
    2fec:	3f 91       	pop	r19
    2fee:	2f 91       	pop	r18
    2ff0:	0f 90       	pop	r0
    2ff2:	0f be       	out	0x3f, r0	; 63
    2ff4:	0f 90       	pop	r0
    2ff6:	1f 90       	pop	r1
    2ff8:	18 95       	reti

00002ffa <_Z17Serial0_availablev>:
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
    2ffa:	82 e8       	ldi	r24, 0x82	; 130
    2ffc:	93 e0       	ldi	r25, 0x03	; 3
    2ffe:	0e 94 61 16 	call	0x2cc2	; 0x2cc2 <_ZN14HardwareSerial9availableEv>
    3002:	21 e0       	ldi	r18, 0x01	; 1
    3004:	89 2b       	or	r24, r25
    3006:	09 f4       	brne	.+2      	; 0x300a <_Z17Serial0_availablev+0x10>
    3008:	20 e0       	ldi	r18, 0x00	; 0
}
    300a:	82 2f       	mov	r24, r18
    300c:	08 95       	ret

0000300e <_GLOBAL__sub_I___vector_18>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    300e:	e2 e8       	ldi	r30, 0x82	; 130
    3010:	f3 e0       	ldi	r31, 0x03	; 3
    3012:	13 82       	std	Z+3, r1	; 0x03
    3014:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    3016:	88 ee       	ldi	r24, 0xE8	; 232
    3018:	93 e0       	ldi	r25, 0x03	; 3
    301a:	a0 e0       	ldi	r26, 0x00	; 0
    301c:	b0 e0       	ldi	r27, 0x00	; 0
    301e:	84 83       	std	Z+4, r24	; 0x04
    3020:	95 83       	std	Z+5, r25	; 0x05
    3022:	a6 83       	std	Z+6, r26	; 0x06
    3024:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    3026:	83 e9       	ldi	r24, 0x93	; 147
    3028:	91 e0       	ldi	r25, 0x01	; 1
    302a:	91 83       	std	Z+1, r25	; 0x01
    302c:	80 83       	st	Z, r24
    302e:	85 ec       	ldi	r24, 0xC5	; 197
    3030:	90 e0       	ldi	r25, 0x00	; 0
    3032:	95 87       	std	Z+13, r25	; 0x0d
    3034:	84 87       	std	Z+12, r24	; 0x0c
    3036:	84 ec       	ldi	r24, 0xC4	; 196
    3038:	90 e0       	ldi	r25, 0x00	; 0
    303a:	97 87       	std	Z+15, r25	; 0x0f
    303c:	86 87       	std	Z+14, r24	; 0x0e
    303e:	80 ec       	ldi	r24, 0xC0	; 192
    3040:	90 e0       	ldi	r25, 0x00	; 0
    3042:	91 8b       	std	Z+17, r25	; 0x11
    3044:	80 8b       	std	Z+16, r24	; 0x10
    3046:	81 ec       	ldi	r24, 0xC1	; 193
    3048:	90 e0       	ldi	r25, 0x00	; 0
    304a:	93 8b       	std	Z+19, r25	; 0x13
    304c:	82 8b       	std	Z+18, r24	; 0x12
    304e:	82 ec       	ldi	r24, 0xC2	; 194
    3050:	90 e0       	ldi	r25, 0x00	; 0
    3052:	95 8b       	std	Z+21, r25	; 0x15
    3054:	84 8b       	std	Z+20, r24	; 0x14
    3056:	86 ec       	ldi	r24, 0xC6	; 198
    3058:	90 e0       	ldi	r25, 0x00	; 0
    305a:	97 8b       	std	Z+23, r25	; 0x17
    305c:	86 8b       	std	Z+22, r24	; 0x16
    305e:	11 8e       	std	Z+25, r1	; 0x19
    3060:	12 8e       	std	Z+26, r1	; 0x1a
    3062:	13 8e       	std	Z+27, r1	; 0x1b
    3064:	14 8e       	std	Z+28, r1	; 0x1c
    3066:	08 95       	ret

00003068 <initVariant>:
    3068:	08 95       	ret

0000306a <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
    306a:	0e 94 86 1a 	call	0x350c	; 0x350c <init>

	initVariant();
    306e:	0e 94 34 18 	call	0x3068	; 0x3068 <initVariant>

#if defined(USBCON)
	USBDevice.attach();
#endif
	
	setup();
    3072:	0e 94 66 10 	call	0x20cc	; 0x20cc <setup>
    
	for (;;) {
		loop();
		if (serialEventRun) serialEventRun();
    3076:	ce e9       	ldi	r28, 0x9E	; 158
    3078:	d6 e1       	ldi	r29, 0x16	; 22
#endif
	
	setup();
    
	for (;;) {
		loop();
    307a:	0e 94 9b 12 	call	0x2536	; 0x2536 <loop>
		if (serialEventRun) serialEventRun();
    307e:	20 97       	sbiw	r28, 0x00	; 0
    3080:	e1 f3       	breq	.-8      	; 0x307a <main+0x10>
    3082:	0e 94 9e 16 	call	0x2d3c	; 0x2d3c <_Z14serialEventRunv>
    3086:	f9 cf       	rjmp	.-14     	; 0x307a <main+0x10>

00003088 <_ZN5Print5writeEPKhj>:
size_t Print::println(long num, int base)
{
  size_t n = print(num, base);
  n += println();
  return n;
}
    3088:	cf 92       	push	r12
    308a:	df 92       	push	r13
    308c:	ef 92       	push	r14
    308e:	ff 92       	push	r15
    3090:	0f 93       	push	r16
    3092:	1f 93       	push	r17
    3094:	cf 93       	push	r28
    3096:	df 93       	push	r29
    3098:	6c 01       	movw	r12, r24
    309a:	7a 01       	movw	r14, r20
    309c:	8b 01       	movw	r16, r22
    309e:	c0 e0       	ldi	r28, 0x00	; 0
    30a0:	d0 e0       	ldi	r29, 0x00	; 0
    30a2:	ce 15       	cp	r28, r14
    30a4:	df 05       	cpc	r29, r15
    30a6:	81 f0       	breq	.+32     	; 0x30c8 <_ZN5Print5writeEPKhj+0x40>
    30a8:	d8 01       	movw	r26, r16
    30aa:	6d 91       	ld	r22, X+
    30ac:	8d 01       	movw	r16, r26
    30ae:	d6 01       	movw	r26, r12
    30b0:	ed 91       	ld	r30, X+
    30b2:	fc 91       	ld	r31, X
    30b4:	01 90       	ld	r0, Z+
    30b6:	f0 81       	ld	r31, Z
    30b8:	e0 2d       	mov	r30, r0
    30ba:	c6 01       	movw	r24, r12
    30bc:	09 95       	icall
    30be:	89 2b       	or	r24, r25
    30c0:	11 f0       	breq	.+4      	; 0x30c6 <_ZN5Print5writeEPKhj+0x3e>
    30c2:	21 96       	adiw	r28, 0x01	; 1
    30c4:	ee cf       	rjmp	.-36     	; 0x30a2 <_ZN5Print5writeEPKhj+0x1a>
    30c6:	7e 01       	movw	r14, r28
    30c8:	c7 01       	movw	r24, r14
    30ca:	df 91       	pop	r29
    30cc:	cf 91       	pop	r28
    30ce:	1f 91       	pop	r17
    30d0:	0f 91       	pop	r16
    30d2:	ff 90       	pop	r15
    30d4:	ef 90       	pop	r14
    30d6:	df 90       	pop	r13
    30d8:	cf 90       	pop	r12
    30da:	08 95       	ret

000030dc <_ZN5Print5writeEPKc>:
    30dc:	61 15       	cp	r22, r1
    30de:	71 05       	cpc	r23, r1
    30e0:	79 f0       	breq	.+30     	; 0x3100 <_ZN5Print5writeEPKc+0x24>
    30e2:	fb 01       	movw	r30, r22
    30e4:	01 90       	ld	r0, Z+
    30e6:	00 20       	and	r0, r0
    30e8:	e9 f7       	brne	.-6      	; 0x30e4 <_ZN5Print5writeEPKc+0x8>
    30ea:	31 97       	sbiw	r30, 0x01	; 1
    30ec:	af 01       	movw	r20, r30
    30ee:	46 1b       	sub	r20, r22
    30f0:	57 0b       	sbc	r21, r23
    30f2:	dc 01       	movw	r26, r24
    30f4:	ed 91       	ld	r30, X+
    30f6:	fc 91       	ld	r31, X
    30f8:	02 80       	ldd	r0, Z+2	; 0x02
    30fa:	f3 81       	ldd	r31, Z+3	; 0x03
    30fc:	e0 2d       	mov	r30, r0
    30fe:	09 94       	ijmp
    3100:	80 e0       	ldi	r24, 0x00	; 0
    3102:	90 e0       	ldi	r25, 0x00	; 0
    3104:	08 95       	ret

00003106 <_ZN5Print5printEPKc>:
    3106:	0c 94 6e 18 	jmp	0x30dc	; 0x30dc <_ZN5Print5writeEPKc>

0000310a <_ZN5Print5printEc>:
    310a:	dc 01       	movw	r26, r24
    310c:	ed 91       	ld	r30, X+
    310e:	fc 91       	ld	r31, X
    3110:	01 90       	ld	r0, Z+
    3112:	f0 81       	ld	r31, Z
    3114:	e0 2d       	mov	r30, r0
    3116:	09 94       	ijmp

00003118 <_ZN5Print7printlnEv>:
    3118:	61 ea       	ldi	r22, 0xA1	; 161
    311a:	71 e0       	ldi	r23, 0x01	; 1
    311c:	0c 94 6e 18 	jmp	0x30dc	; 0x30dc <_ZN5Print5writeEPKc>

00003120 <_ZN5Print7printlnEPKc>:
    3120:	0f 93       	push	r16
    3122:	1f 93       	push	r17
    3124:	cf 93       	push	r28
    3126:	df 93       	push	r29
    3128:	ec 01       	movw	r28, r24
    312a:	0e 94 6e 18 	call	0x30dc	; 0x30dc <_ZN5Print5writeEPKc>
    312e:	8c 01       	movw	r16, r24
    3130:	ce 01       	movw	r24, r28
    3132:	0e 94 8c 18 	call	0x3118	; 0x3118 <_ZN5Print7printlnEv>
    3136:	80 0f       	add	r24, r16
    3138:	91 1f       	adc	r25, r17
    313a:	df 91       	pop	r29
    313c:	cf 91       	pop	r28
    313e:	1f 91       	pop	r17
    3140:	0f 91       	pop	r16
    3142:	08 95       	ret

00003144 <_ZN5Print11printNumberEmh>:
    3144:	8f 92       	push	r8
    3146:	9f 92       	push	r9
    3148:	af 92       	push	r10
    314a:	bf 92       	push	r11
    314c:	ef 92       	push	r14
    314e:	ff 92       	push	r15
    3150:	0f 93       	push	r16
    3152:	1f 93       	push	r17
    3154:	cf 93       	push	r28
    3156:	df 93       	push	r29
    3158:	cd b7       	in	r28, 0x3d	; 61
    315a:	de b7       	in	r29, 0x3e	; 62
    315c:	a1 97       	sbiw	r28, 0x21	; 33
    315e:	0f b6       	in	r0, 0x3f	; 63
    3160:	f8 94       	cli
    3162:	de bf       	out	0x3e, r29	; 62
    3164:	0f be       	out	0x3f, r0	; 63
    3166:	cd bf       	out	0x3d, r28	; 61
    3168:	7c 01       	movw	r14, r24
    316a:	fa 01       	movw	r30, r20
    316c:	cb 01       	movw	r24, r22
    316e:	19 a2       	std	Y+33, r1	; 0x21
    3170:	22 30       	cpi	r18, 0x02	; 2
    3172:	08 f4       	brcc	.+2      	; 0x3176 <_ZN5Print11printNumberEmh+0x32>
    3174:	2a e0       	ldi	r18, 0x0A	; 10
    3176:	8e 01       	movw	r16, r28
    3178:	0f 5d       	subi	r16, 0xDF	; 223
    317a:	1f 4f       	sbci	r17, 0xFF	; 255
    317c:	82 2e       	mov	r8, r18
    317e:	91 2c       	mov	r9, r1
    3180:	a1 2c       	mov	r10, r1
    3182:	b1 2c       	mov	r11, r1
    3184:	bf 01       	movw	r22, r30
    3186:	a5 01       	movw	r20, r10
    3188:	94 01       	movw	r18, r8
    318a:	0e 94 14 32 	call	0x6428	; 0x6428 <__udivmodsi4>
    318e:	f9 01       	movw	r30, r18
    3190:	ca 01       	movw	r24, r20
    3192:	01 50       	subi	r16, 0x01	; 1
    3194:	11 09       	sbc	r17, r1
    3196:	6a 30       	cpi	r22, 0x0A	; 10
    3198:	10 f4       	brcc	.+4      	; 0x319e <_ZN5Print11printNumberEmh+0x5a>
    319a:	60 5d       	subi	r22, 0xD0	; 208
    319c:	01 c0       	rjmp	.+2      	; 0x31a0 <_ZN5Print11printNumberEmh+0x5c>
    319e:	69 5c       	subi	r22, 0xC9	; 201
    31a0:	d8 01       	movw	r26, r16
    31a2:	6c 93       	st	X, r22
    31a4:	23 2b       	or	r18, r19
    31a6:	24 2b       	or	r18, r20
    31a8:	25 2b       	or	r18, r21
    31aa:	61 f7       	brne	.-40     	; 0x3184 <_ZN5Print11printNumberEmh+0x40>
    31ac:	b8 01       	movw	r22, r16
    31ae:	c7 01       	movw	r24, r14
    31b0:	0e 94 6e 18 	call	0x30dc	; 0x30dc <_ZN5Print5writeEPKc>
    31b4:	a1 96       	adiw	r28, 0x21	; 33
    31b6:	0f b6       	in	r0, 0x3f	; 63
    31b8:	f8 94       	cli
    31ba:	de bf       	out	0x3e, r29	; 62
    31bc:	0f be       	out	0x3f, r0	; 63
    31be:	cd bf       	out	0x3d, r28	; 61
    31c0:	df 91       	pop	r29
    31c2:	cf 91       	pop	r28
    31c4:	1f 91       	pop	r17
    31c6:	0f 91       	pop	r16
    31c8:	ff 90       	pop	r15
    31ca:	ef 90       	pop	r14
    31cc:	bf 90       	pop	r11
    31ce:	af 90       	pop	r10
    31d0:	9f 90       	pop	r9
    31d2:	8f 90       	pop	r8
    31d4:	08 95       	ret

000031d6 <_ZN5Print5printEmi>:
    31d6:	21 15       	cp	r18, r1
    31d8:	31 05       	cpc	r19, r1
    31da:	41 f4       	brne	.+16     	; 0x31ec <_ZN5Print5printEmi+0x16>
    31dc:	dc 01       	movw	r26, r24
    31de:	ed 91       	ld	r30, X+
    31e0:	fc 91       	ld	r31, X
    31e2:	01 90       	ld	r0, Z+
    31e4:	f0 81       	ld	r31, Z
    31e6:	e0 2d       	mov	r30, r0
    31e8:	64 2f       	mov	r22, r20
    31ea:	09 94       	ijmp
    31ec:	0c 94 a2 18 	jmp	0x3144	; 0x3144 <_ZN5Print11printNumberEmh>

000031f0 <_ZN5Print5printEji>:
    31f0:	9a 01       	movw	r18, r20
    31f2:	ab 01       	movw	r20, r22
    31f4:	60 e0       	ldi	r22, 0x00	; 0
    31f6:	70 e0       	ldi	r23, 0x00	; 0
    31f8:	0c 94 eb 18 	jmp	0x31d6	; 0x31d6 <_ZN5Print5printEmi>

000031fc <_ZN5Print10printFloatEdh>:

  return write(str);
}

size_t Print::printFloat(double number, uint8_t digits) 
{ 
    31fc:	7f 92       	push	r7
    31fe:	8f 92       	push	r8
    3200:	9f 92       	push	r9
    3202:	af 92       	push	r10
    3204:	bf 92       	push	r11
    3206:	cf 92       	push	r12
    3208:	df 92       	push	r13
    320a:	ef 92       	push	r14
    320c:	ff 92       	push	r15
    320e:	0f 93       	push	r16
    3210:	1f 93       	push	r17
    3212:	cf 93       	push	r28
    3214:	df 93       	push	r29
    3216:	8c 01       	movw	r16, r24
    3218:	6a 01       	movw	r12, r20
    321a:	7b 01       	movw	r14, r22
    321c:	72 2e       	mov	r7, r18
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
    321e:	9a 01       	movw	r18, r20
    3220:	ab 01       	movw	r20, r22
    3222:	c7 01       	movw	r24, r14
    3224:	b6 01       	movw	r22, r12
    3226:	0e 94 eb 31 	call	0x63d6	; 0x63d6 <__unordsf2>
    322a:	88 23       	and	r24, r24
    322c:	19 f0       	breq	.+6      	; 0x3234 <_ZN5Print10printFloatEdh+0x38>
  return write(s.c_str(), s.length());
}

size_t Print::print(const char str[])
{
  return write(str);
    322e:	64 ea       	ldi	r22, 0xA4	; 164
    3230:	71 e0       	ldi	r23, 0x01	; 1
    3232:	27 c0       	rjmp	.+78     	; 0x3282 <_ZN5Print10printFloatEdh+0x86>
size_t Print::printFloat(double number, uint8_t digits) 
{ 
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
  if (isinf(number)) return print("inf");
    3234:	46 01       	movw	r8, r12
    3236:	57 01       	movw	r10, r14
    3238:	e8 94       	clt
    323a:	b7 f8       	bld	r11, 7
    323c:	2f ef       	ldi	r18, 0xFF	; 255
    323e:	3f ef       	ldi	r19, 0xFF	; 255
    3240:	4f e7       	ldi	r20, 0x7F	; 127
    3242:	5f e7       	ldi	r21, 0x7F	; 127
    3244:	c5 01       	movw	r24, r10
    3246:	b4 01       	movw	r22, r8
    3248:	0e 94 eb 31 	call	0x63d6	; 0x63d6 <__unordsf2>
    324c:	81 11       	cpse	r24, r1
    324e:	0d c0       	rjmp	.+26     	; 0x326a <_ZN5Print10printFloatEdh+0x6e>
    3250:	2f ef       	ldi	r18, 0xFF	; 255
    3252:	3f ef       	ldi	r19, 0xFF	; 255
    3254:	4f e7       	ldi	r20, 0x7F	; 127
    3256:	5f e7       	ldi	r21, 0x7F	; 127
    3258:	c5 01       	movw	r24, r10
    325a:	b4 01       	movw	r22, r8
    325c:	0e 94 79 31 	call	0x62f2	; 0x62f2 <__cmpsf2>
    3260:	18 16       	cp	r1, r24
    3262:	1c f4       	brge	.+6      	; 0x326a <_ZN5Print10printFloatEdh+0x6e>
  return write(s.c_str(), s.length());
}

size_t Print::print(const char str[])
{
  return write(str);
    3264:	68 ea       	ldi	r22, 0xA8	; 168
    3266:	71 e0       	ldi	r23, 0x01	; 1
    3268:	0c c0       	rjmp	.+24     	; 0x3282 <_ZN5Print10printFloatEdh+0x86>
{ 
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
  if (isinf(number)) return print("inf");
  if (number > 4294967040.0) return print ("ovf");  // constant determined empirically
    326a:	2f ef       	ldi	r18, 0xFF	; 255
    326c:	3f ef       	ldi	r19, 0xFF	; 255
    326e:	4f e7       	ldi	r20, 0x7F	; 127
    3270:	5f e4       	ldi	r21, 0x4F	; 79
    3272:	c7 01       	movw	r24, r14
    3274:	b6 01       	movw	r22, r12
    3276:	0e 94 38 16 	call	0x2c70	; 0x2c70 <__gesf2>
    327a:	18 16       	cp	r1, r24
    327c:	94 f4       	brge	.+36     	; 0x32a2 <_ZN5Print10printFloatEdh+0xa6>
  return write(s.c_str(), s.length());
}

size_t Print::print(const char str[])
{
  return write(str);
    327e:	6c ea       	ldi	r22, 0xAC	; 172
    3280:	71 e0       	ldi	r23, 0x01	; 1
    3282:	c8 01       	movw	r24, r16
    n += print(toPrint);
    remainder -= toPrint; 
  } 
  
  return n;
}
    3284:	df 91       	pop	r29
    3286:	cf 91       	pop	r28
    3288:	1f 91       	pop	r17
    328a:	0f 91       	pop	r16
    328c:	ff 90       	pop	r15
    328e:	ef 90       	pop	r14
    3290:	df 90       	pop	r13
    3292:	cf 90       	pop	r12
    3294:	bf 90       	pop	r11
    3296:	af 90       	pop	r10
    3298:	9f 90       	pop	r9
    329a:	8f 90       	pop	r8
    329c:	7f 90       	pop	r7
  return write(s.c_str(), s.length());
}

size_t Print::print(const char str[])
{
  return write(str);
    329e:	0c 94 6e 18 	jmp	0x30dc	; 0x30dc <_ZN5Print5writeEPKc>
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
  if (isinf(number)) return print("inf");
  if (number > 4294967040.0) return print ("ovf");  // constant determined empirically
  if (number <-4294967040.0) return print ("ovf");  // constant determined empirically
    32a2:	2f ef       	ldi	r18, 0xFF	; 255
    32a4:	3f ef       	ldi	r19, 0xFF	; 255
    32a6:	4f e7       	ldi	r20, 0x7F	; 127
    32a8:	5f ec       	ldi	r21, 0xCF	; 207
    32aa:	c7 01       	movw	r24, r14
    32ac:	b6 01       	movw	r22, r12
    32ae:	0e 94 79 31 	call	0x62f2	; 0x62f2 <__cmpsf2>
    32b2:	87 fd       	sbrc	r24, 7
    32b4:	e4 cf       	rjmp	.-56     	; 0x327e <_ZN5Print10printFloatEdh+0x82>
  
  // Handle negative numbers
  if (number < 0.0)
    32b6:	20 e0       	ldi	r18, 0x00	; 0
    32b8:	30 e0       	ldi	r19, 0x00	; 0
    32ba:	a9 01       	movw	r20, r18
    32bc:	c7 01       	movw	r24, r14
    32be:	b6 01       	movw	r22, r12
    32c0:	0e 94 79 31 	call	0x62f2	; 0x62f2 <__cmpsf2>
    32c4:	87 ff       	sbrs	r24, 7
    32c6:	0a c0       	rjmp	.+20     	; 0x32dc <_ZN5Print10printFloatEdh+0xe0>
  {
     n += print('-');
    32c8:	6d e2       	ldi	r22, 0x2D	; 45
    32ca:	c8 01       	movw	r24, r16
    32cc:	0e 94 85 18 	call	0x310a	; 0x310a <_ZN5Print5printEc>
    32d0:	ec 01       	movw	r28, r24
     number = -number;
    32d2:	f7 fa       	bst	r15, 7
    32d4:	f0 94       	com	r15
    32d6:	f7 f8       	bld	r15, 7
    32d8:	f0 94       	com	r15
    32da:	02 c0       	rjmp	.+4      	; 0x32e0 <_ZN5Print10printFloatEdh+0xe4>
  return write(str);
}

size_t Print::printFloat(double number, uint8_t digits) 
{ 
  size_t n = 0;
    32dc:	c0 e0       	ldi	r28, 0x00	; 0
    32de:	d0 e0       	ldi	r29, 0x00	; 0
     number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
  for (uint8_t i=0; i<digits; ++i)
    32e0:	b1 2c       	mov	r11, r1
     n += print('-');
     number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
    32e2:	60 e0       	ldi	r22, 0x00	; 0
    32e4:	70 e0       	ldi	r23, 0x00	; 0
    32e6:	80 e0       	ldi	r24, 0x00	; 0
    32e8:	9f e3       	ldi	r25, 0x3F	; 63
  for (uint8_t i=0; i<digits; ++i)
    32ea:	7b 14       	cp	r7, r11
    32ec:	41 f0       	breq	.+16     	; 0x32fe <_ZN5Print10printFloatEdh+0x102>
    rounding /= 10.0;
    32ee:	20 e0       	ldi	r18, 0x00	; 0
    32f0:	30 e0       	ldi	r19, 0x00	; 0
    32f2:	40 e2       	ldi	r20, 0x20	; 32
    32f4:	51 e4       	ldi	r21, 0x41	; 65
    32f6:	0e 94 02 15 	call	0x2a04	; 0x2a04 <__divsf3>
     number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
  for (uint8_t i=0; i<digits; ++i)
    32fa:	b3 94       	inc	r11
    32fc:	f6 cf       	rjmp	.-20     	; 0x32ea <_ZN5Print10printFloatEdh+0xee>
    rounding /= 10.0;
  
  number += rounding;
    32fe:	a7 01       	movw	r20, r14
    3300:	96 01       	movw	r18, r12
    3302:	0e 94 96 14 	call	0x292c	; 0x292c <__addsf3>
    3306:	6b 01       	movw	r12, r22
    3308:	7c 01       	movw	r14, r24

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
    330a:	0e 94 7b 15 	call	0x2af6	; 0x2af6 <__fixunssfsi>
    330e:	4b 01       	movw	r8, r22
    3310:	5c 01       	movw	r10, r24
}

size_t Print::print(unsigned long n, int base)
{
  if (base == 0) return write(n);
  else return printNumber(n, base);
    3312:	2a e0       	ldi	r18, 0x0A	; 10
    3314:	ab 01       	movw	r20, r22
    3316:	bc 01       	movw	r22, r24
    3318:	c8 01       	movw	r24, r16
    331a:	0e 94 a2 18 	call	0x3144	; 0x3144 <_ZN5Print11printNumberEmh>
  number += rounding;

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
  double remainder = number - (double)int_part;
  n += print(int_part);
    331e:	c8 0f       	add	r28, r24
    3320:	d9 1f       	adc	r29, r25

  // Print the decimal point, but only if there are digits beyond
  if (digits > 0) {
    3322:	77 20       	and	r7, r7
    3324:	b9 f1       	breq	.+110    	; 0x3394 <_ZN5Print10printFloatEdh+0x198>
  
  number += rounding;

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
  double remainder = number - (double)int_part;
    3326:	c5 01       	movw	r24, r10
    3328:	b4 01       	movw	r22, r8
    332a:	0e 94 aa 15 	call	0x2b54	; 0x2b54 <__floatunsisf>
    332e:	9b 01       	movw	r18, r22
    3330:	ac 01       	movw	r20, r24
    3332:	c7 01       	movw	r24, r14
    3334:	b6 01       	movw	r22, r12
    3336:	0e 94 95 14 	call	0x292a	; 0x292a <__subsf3>
    333a:	6b 01       	movw	r12, r22
    333c:	7c 01       	movw	r14, r24
  n += print(int_part);

  // Print the decimal point, but only if there are digits beyond
  if (digits > 0) {
    n += print('.'); 
    333e:	6e e2       	ldi	r22, 0x2E	; 46
    3340:	c8 01       	movw	r24, r16
    3342:	0e 94 85 18 	call	0x310a	; 0x310a <_ZN5Print5printEc>
    3346:	c8 0f       	add	r28, r24
    3348:	d9 1f       	adc	r29, r25
  }

  // Extract digits from the remainder one at a time
  while (digits-- > 0)
  {
    remainder *= 10.0;
    334a:	20 e0       	ldi	r18, 0x00	; 0
    334c:	30 e0       	ldi	r19, 0x00	; 0
    334e:	40 e2       	ldi	r20, 0x20	; 32
    3350:	51 e4       	ldi	r21, 0x41	; 65
    3352:	c7 01       	movw	r24, r14
    3354:	b6 01       	movw	r22, r12
    3356:	0e 94 7e 31 	call	0x62fc	; 0x62fc <__mulsf3>
    335a:	4b 01       	movw	r8, r22
    335c:	5c 01       	movw	r10, r24
    unsigned int toPrint = (unsigned int)(remainder);
    335e:	0e 94 7b 15 	call	0x2af6	; 0x2af6 <__fixunssfsi>
    3362:	6b 01       	movw	r12, r22
    3364:	7c 01       	movw	r14, r24
    n += print(toPrint);
    3366:	4a e0       	ldi	r20, 0x0A	; 10
    3368:	50 e0       	ldi	r21, 0x00	; 0
    336a:	c8 01       	movw	r24, r16
    336c:	0e 94 f8 18 	call	0x31f0	; 0x31f0 <_ZN5Print5printEji>
    3370:	c8 0f       	add	r28, r24
    3372:	d9 1f       	adc	r29, r25
    remainder -= toPrint; 
    3374:	b6 01       	movw	r22, r12
    3376:	80 e0       	ldi	r24, 0x00	; 0
    3378:	90 e0       	ldi	r25, 0x00	; 0
    337a:	0e 94 aa 15 	call	0x2b54	; 0x2b54 <__floatunsisf>
    337e:	9b 01       	movw	r18, r22
    3380:	ac 01       	movw	r20, r24
    3382:	c5 01       	movw	r24, r10
    3384:	b4 01       	movw	r22, r8
    3386:	0e 94 95 14 	call	0x292a	; 0x292a <__subsf3>
    338a:	6b 01       	movw	r12, r22
    338c:	7c 01       	movw	r14, r24
    338e:	7a 94       	dec	r7
  if (digits > 0) {
    n += print('.'); 
  }

  // Extract digits from the remainder one at a time
  while (digits-- > 0)
    3390:	71 10       	cpse	r7, r1
    3392:	db cf       	rjmp	.-74     	; 0x334a <_ZN5Print10printFloatEdh+0x14e>
  number += rounding;

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
  double remainder = number - (double)int_part;
  n += print(int_part);
    3394:	ce 01       	movw	r24, r28
    n += print(toPrint);
    remainder -= toPrint; 
  } 
  
  return n;
}
    3396:	df 91       	pop	r29
    3398:	cf 91       	pop	r28
    339a:	1f 91       	pop	r17
    339c:	0f 91       	pop	r16
    339e:	ff 90       	pop	r15
    33a0:	ef 90       	pop	r14
    33a2:	df 90       	pop	r13
    33a4:	cf 90       	pop	r12
    33a6:	bf 90       	pop	r11
    33a8:	af 90       	pop	r10
    33aa:	9f 90       	pop	r9
    33ac:	8f 90       	pop	r8
    33ae:	7f 90       	pop	r7
    33b0:	08 95       	ret

000033b2 <_ZN5Print5printEdi>:
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
    33b2:	0c 94 fe 18 	jmp	0x31fc	; 0x31fc <_ZN5Print10printFloatEdh>

000033b6 <__vector_16>:
	

#endif

	// busy wait
	__asm__ __volatile__ (
    33b6:	1f 92       	push	r1
    33b8:	0f 92       	push	r0
    33ba:	0f b6       	in	r0, 0x3f	; 63
    33bc:	0f 92       	push	r0
    33be:	11 24       	eor	r1, r1
    33c0:	2f 93       	push	r18
    33c2:	3f 93       	push	r19
    33c4:	8f 93       	push	r24
    33c6:	9f 93       	push	r25
    33c8:	af 93       	push	r26
    33ca:	bf 93       	push	r27
    33cc:	80 91 20 04 	lds	r24, 0x0420	; 0x800420 <timer0_millis>
    33d0:	90 91 21 04 	lds	r25, 0x0421	; 0x800421 <timer0_millis+0x1>
    33d4:	a0 91 22 04 	lds	r26, 0x0422	; 0x800422 <timer0_millis+0x2>
    33d8:	b0 91 23 04 	lds	r27, 0x0423	; 0x800423 <timer0_millis+0x3>
    33dc:	30 91 1f 04 	lds	r19, 0x041F	; 0x80041f <timer0_fract>
    33e0:	23 e0       	ldi	r18, 0x03	; 3
    33e2:	23 0f       	add	r18, r19
    33e4:	2d 37       	cpi	r18, 0x7D	; 125
    33e6:	20 f4       	brcc	.+8      	; 0x33f0 <__vector_16+0x3a>
    33e8:	01 96       	adiw	r24, 0x01	; 1
    33ea:	a1 1d       	adc	r26, r1
    33ec:	b1 1d       	adc	r27, r1
    33ee:	05 c0       	rjmp	.+10     	; 0x33fa <__vector_16+0x44>
    33f0:	26 e8       	ldi	r18, 0x86	; 134
    33f2:	23 0f       	add	r18, r19
    33f4:	02 96       	adiw	r24, 0x02	; 2
    33f6:	a1 1d       	adc	r26, r1
    33f8:	b1 1d       	adc	r27, r1
    33fa:	20 93 1f 04 	sts	0x041F, r18	; 0x80041f <timer0_fract>
    33fe:	80 93 20 04 	sts	0x0420, r24	; 0x800420 <timer0_millis>
    3402:	90 93 21 04 	sts	0x0421, r25	; 0x800421 <timer0_millis+0x1>
    3406:	a0 93 22 04 	sts	0x0422, r26	; 0x800422 <timer0_millis+0x2>
    340a:	b0 93 23 04 	sts	0x0423, r27	; 0x800423 <timer0_millis+0x3>
    340e:	80 91 24 04 	lds	r24, 0x0424	; 0x800424 <timer0_overflow_count>
    3412:	90 91 25 04 	lds	r25, 0x0425	; 0x800425 <timer0_overflow_count+0x1>
    3416:	a0 91 26 04 	lds	r26, 0x0426	; 0x800426 <timer0_overflow_count+0x2>
    341a:	b0 91 27 04 	lds	r27, 0x0427	; 0x800427 <timer0_overflow_count+0x3>
    341e:	01 96       	adiw	r24, 0x01	; 1
    3420:	a1 1d       	adc	r26, r1
    3422:	b1 1d       	adc	r27, r1
    3424:	80 93 24 04 	sts	0x0424, r24	; 0x800424 <timer0_overflow_count>
    3428:	90 93 25 04 	sts	0x0425, r25	; 0x800425 <timer0_overflow_count+0x1>
    342c:	a0 93 26 04 	sts	0x0426, r26	; 0x800426 <timer0_overflow_count+0x2>
    3430:	b0 93 27 04 	sts	0x0427, r27	; 0x800427 <timer0_overflow_count+0x3>
    3434:	bf 91       	pop	r27
    3436:	af 91       	pop	r26
    3438:	9f 91       	pop	r25
    343a:	8f 91       	pop	r24
    343c:	3f 91       	pop	r19
    343e:	2f 91       	pop	r18
    3440:	0f 90       	pop	r0
    3442:	0f be       	out	0x3f, r0	; 63
    3444:	0f 90       	pop	r0
    3446:	1f 90       	pop	r1
    3448:	18 95       	reti

0000344a <micros>:
    344a:	3f b7       	in	r19, 0x3f	; 63
    344c:	f8 94       	cli
    344e:	80 91 24 04 	lds	r24, 0x0424	; 0x800424 <timer0_overflow_count>
    3452:	90 91 25 04 	lds	r25, 0x0425	; 0x800425 <timer0_overflow_count+0x1>
    3456:	a0 91 26 04 	lds	r26, 0x0426	; 0x800426 <timer0_overflow_count+0x2>
    345a:	b0 91 27 04 	lds	r27, 0x0427	; 0x800427 <timer0_overflow_count+0x3>
    345e:	26 b5       	in	r18, 0x26	; 38
    3460:	a8 9b       	sbis	0x15, 0	; 21
    3462:	05 c0       	rjmp	.+10     	; 0x346e <micros+0x24>
    3464:	2f 3f       	cpi	r18, 0xFF	; 255
    3466:	19 f0       	breq	.+6      	; 0x346e <micros+0x24>
    3468:	01 96       	adiw	r24, 0x01	; 1
    346a:	a1 1d       	adc	r26, r1
    346c:	b1 1d       	adc	r27, r1
    346e:	3f bf       	out	0x3f, r19	; 63
    3470:	ba 2f       	mov	r27, r26
    3472:	a9 2f       	mov	r26, r25
    3474:	98 2f       	mov	r25, r24
    3476:	88 27       	eor	r24, r24
    3478:	82 0f       	add	r24, r18
    347a:	91 1d       	adc	r25, r1
    347c:	a1 1d       	adc	r26, r1
    347e:	b1 1d       	adc	r27, r1
    3480:	bc 01       	movw	r22, r24
    3482:	cd 01       	movw	r24, r26
    3484:	42 e0       	ldi	r20, 0x02	; 2
    3486:	66 0f       	add	r22, r22
    3488:	77 1f       	adc	r23, r23
    348a:	88 1f       	adc	r24, r24
    348c:	99 1f       	adc	r25, r25
    348e:	4a 95       	dec	r20
    3490:	d1 f7       	brne	.-12     	; 0x3486 <micros+0x3c>
    3492:	08 95       	ret

00003494 <delay>:
    3494:	8f 92       	push	r8
    3496:	9f 92       	push	r9
    3498:	af 92       	push	r10
    349a:	bf 92       	push	r11
    349c:	cf 92       	push	r12
    349e:	df 92       	push	r13
    34a0:	ef 92       	push	r14
    34a2:	ff 92       	push	r15
    34a4:	6b 01       	movw	r12, r22
    34a6:	7c 01       	movw	r14, r24
    34a8:	0e 94 25 1a 	call	0x344a	; 0x344a <micros>
    34ac:	4b 01       	movw	r8, r22
    34ae:	5c 01       	movw	r10, r24
    34b0:	c1 14       	cp	r12, r1
    34b2:	d1 04       	cpc	r13, r1
    34b4:	e1 04       	cpc	r14, r1
    34b6:	f1 04       	cpc	r15, r1
    34b8:	01 f1       	breq	.+64     	; 0x34fa <delay+0x66>
    34ba:	0e 94 84 2c 	call	0x5908	; 0x5908 <yield>
    34be:	0e 94 25 1a 	call	0x344a	; 0x344a <micros>
    34c2:	dc 01       	movw	r26, r24
    34c4:	cb 01       	movw	r24, r22
    34c6:	88 19       	sub	r24, r8
    34c8:	99 09       	sbc	r25, r9
    34ca:	aa 09       	sbc	r26, r10
    34cc:	bb 09       	sbc	r27, r11
    34ce:	88 3e       	cpi	r24, 0xE8	; 232
    34d0:	93 40       	sbci	r25, 0x03	; 3
    34d2:	a1 05       	cpc	r26, r1
    34d4:	b1 05       	cpc	r27, r1
    34d6:	60 f3       	brcs	.-40     	; 0x34b0 <delay+0x1c>
    34d8:	21 e0       	ldi	r18, 0x01	; 1
    34da:	c2 1a       	sub	r12, r18
    34dc:	d1 08       	sbc	r13, r1
    34de:	e1 08       	sbc	r14, r1
    34e0:	f1 08       	sbc	r15, r1
    34e2:	88 ee       	ldi	r24, 0xE8	; 232
    34e4:	88 0e       	add	r8, r24
    34e6:	83 e0       	ldi	r24, 0x03	; 3
    34e8:	98 1e       	adc	r9, r24
    34ea:	a1 1c       	adc	r10, r1
    34ec:	b1 1c       	adc	r11, r1
    34ee:	c1 14       	cp	r12, r1
    34f0:	d1 04       	cpc	r13, r1
    34f2:	e1 04       	cpc	r14, r1
    34f4:	f1 04       	cpc	r15, r1
    34f6:	19 f7       	brne	.-58     	; 0x34be <delay+0x2a>
    34f8:	db cf       	rjmp	.-74     	; 0x34b0 <delay+0x1c>
    34fa:	ff 90       	pop	r15
    34fc:	ef 90       	pop	r14
    34fe:	df 90       	pop	r13
    3500:	cf 90       	pop	r12
    3502:	bf 90       	pop	r11
    3504:	af 90       	pop	r10
    3506:	9f 90       	pop	r9
    3508:	8f 90       	pop	r8
    350a:	08 95       	ret

0000350c <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    350c:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    350e:	84 b5       	in	r24, 0x24	; 36
    3510:	82 60       	ori	r24, 0x02	; 2
    3512:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    3514:	84 b5       	in	r24, 0x24	; 36
    3516:	81 60       	ori	r24, 0x01	; 1
    3518:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    351a:	85 b5       	in	r24, 0x25	; 37
    351c:	82 60       	ori	r24, 0x02	; 2
    351e:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    3520:	85 b5       	in	r24, 0x25	; 37
    3522:	81 60       	ori	r24, 0x01	; 1
    3524:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    3526:	ee e6       	ldi	r30, 0x6E	; 110
    3528:	f0 e0       	ldi	r31, 0x00	; 0
    352a:	80 81       	ld	r24, Z
    352c:	81 60       	ori	r24, 0x01	; 1
    352e:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    3530:	e1 e8       	ldi	r30, 0x81	; 129
    3532:	f0 e0       	ldi	r31, 0x00	; 0
    3534:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    3536:	80 81       	ld	r24, Z
    3538:	82 60       	ori	r24, 0x02	; 2
    353a:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
    353c:	80 81       	ld	r24, Z
    353e:	81 60       	ori	r24, 0x01	; 1
    3540:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    3542:	e0 e8       	ldi	r30, 0x80	; 128
    3544:	f0 e0       	ldi	r31, 0x00	; 0
    3546:	80 81       	ld	r24, Z
    3548:	81 60       	ori	r24, 0x01	; 1
    354a:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
    354c:	e1 eb       	ldi	r30, 0xB1	; 177
    354e:	f0 e0       	ldi	r31, 0x00	; 0
    3550:	80 81       	ld	r24, Z
    3552:	84 60       	ori	r24, 0x04	; 4
    3554:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
    3556:	e0 eb       	ldi	r30, 0xB0	; 176
    3558:	f0 e0       	ldi	r31, 0x00	; 0
    355a:	80 81       	ld	r24, Z
    355c:	81 60       	ori	r24, 0x01	; 1
    355e:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
    3560:	ea e7       	ldi	r30, 0x7A	; 122
    3562:	f0 e0       	ldi	r31, 0x00	; 0
    3564:	80 81       	ld	r24, Z
    3566:	84 60       	ori	r24, 0x04	; 4
    3568:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
    356a:	80 81       	ld	r24, Z
    356c:	82 60       	ori	r24, 0x02	; 2
    356e:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
    3570:	80 81       	ld	r24, Z
    3572:	81 60       	ori	r24, 0x01	; 1
    3574:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    3576:	80 81       	ld	r24, Z
    3578:	80 68       	ori	r24, 0x80	; 128
    357a:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
    357c:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    3580:	08 95       	ret

00003582 <_Z3maplllll>:
  long diff = howbig - howsmall;
  return random(diff) + howsmall;
}

long map(long x, long in_min, long in_max, long out_min, long out_max)
{
    3582:	4f 92       	push	r4
    3584:	5f 92       	push	r5
    3586:	6f 92       	push	r6
    3588:	7f 92       	push	r7
    358a:	af 92       	push	r10
    358c:	bf 92       	push	r11
    358e:	cf 92       	push	r12
    3590:	df 92       	push	r13
    3592:	ef 92       	push	r14
    3594:	ff 92       	push	r15
    3596:	0f 93       	push	r16
    3598:	1f 93       	push	r17
    359a:	cf 93       	push	r28
    359c:	df 93       	push	r29
    359e:	cd b7       	in	r28, 0x3d	; 61
    35a0:	de b7       	in	r29, 0x3e	; 62
    35a2:	29 01       	movw	r4, r18
    35a4:	3a 01       	movw	r6, r20
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
    35a6:	9b 01       	movw	r18, r22
    35a8:	ac 01       	movw	r20, r24
    35aa:	24 19       	sub	r18, r4
    35ac:	35 09       	sbc	r19, r5
    35ae:	46 09       	sbc	r20, r6
    35b0:	57 09       	sbc	r21, r7
    35b2:	89 89       	ldd	r24, Y+17	; 0x11
    35b4:	9a 89       	ldd	r25, Y+18	; 0x12
    35b6:	ab 89       	ldd	r26, Y+19	; 0x13
    35b8:	bc 89       	ldd	r27, Y+20	; 0x14
    35ba:	bc 01       	movw	r22, r24
    35bc:	cd 01       	movw	r24, r26
    35be:	6a 19       	sub	r22, r10
    35c0:	7b 09       	sbc	r23, r11
    35c2:	8c 09       	sbc	r24, r12
    35c4:	9d 09       	sbc	r25, r13
    35c6:	0e 94 f0 31 	call	0x63e0	; 0x63e0 <__mulsi3>
    35ca:	a8 01       	movw	r20, r16
    35cc:	97 01       	movw	r18, r14
    35ce:	24 19       	sub	r18, r4
    35d0:	35 09       	sbc	r19, r5
    35d2:	46 09       	sbc	r20, r6
    35d4:	57 09       	sbc	r21, r7
    35d6:	0e 94 36 32 	call	0x646c	; 0x646c <__divmodsi4>
    35da:	ca 01       	movw	r24, r20
    35dc:	b9 01       	movw	r22, r18
    35de:	6a 0d       	add	r22, r10
    35e0:	7b 1d       	adc	r23, r11
    35e2:	8c 1d       	adc	r24, r12
    35e4:	9d 1d       	adc	r25, r13
}
    35e6:	df 91       	pop	r29
    35e8:	cf 91       	pop	r28
    35ea:	1f 91       	pop	r17
    35ec:	0f 91       	pop	r16
    35ee:	ff 90       	pop	r15
    35f0:	ef 90       	pop	r14
    35f2:	df 90       	pop	r13
    35f4:	cf 90       	pop	r12
    35f6:	bf 90       	pop	r11
    35f8:	af 90       	pop	r10
    35fa:	7f 90       	pop	r7
    35fc:	6f 90       	pop	r6
    35fe:	5f 90       	pop	r5
    3600:	4f 90       	pop	r4
    3602:	08 95       	ret

00003604 <_ZNK6String14StringIfHelperEv>:
	if (index >= len || !buffer) {
		dummy_writable_char = 0;
		return dummy_writable_char;
	}
	return buffer[index];
}
    3604:	08 95       	ret

00003606 <_ZN6StringD1Ev>:
    3606:	fc 01       	movw	r30, r24
    3608:	80 81       	ld	r24, Z
    360a:	91 81       	ldd	r25, Z+1	; 0x01
    360c:	00 97       	sbiw	r24, 0x00	; 0
    360e:	11 f0       	breq	.+4      	; 0x3614 <_ZN6StringD1Ev+0xe>
    3610:	0c 94 41 33 	jmp	0x6682	; 0x6682 <free>
    3614:	08 95       	ret

00003616 <_ZN6String10invalidateEv>:
    3616:	cf 93       	push	r28
    3618:	df 93       	push	r29
    361a:	ec 01       	movw	r28, r24
    361c:	88 81       	ld	r24, Y
    361e:	99 81       	ldd	r25, Y+1	; 0x01
    3620:	00 97       	sbiw	r24, 0x00	; 0
    3622:	11 f0       	breq	.+4      	; 0x3628 <_ZN6String10invalidateEv+0x12>
    3624:	0e 94 41 33 	call	0x6682	; 0x6682 <free>
    3628:	19 82       	std	Y+1, r1	; 0x01
    362a:	18 82       	st	Y, r1
    362c:	1d 82       	std	Y+5, r1	; 0x05
    362e:	1c 82       	std	Y+4, r1	; 0x04
    3630:	1b 82       	std	Y+3, r1	; 0x03
    3632:	1a 82       	std	Y+2, r1	; 0x02
    3634:	df 91       	pop	r29
    3636:	cf 91       	pop	r28
    3638:	08 95       	ret

0000363a <_ZN6String12changeBufferEj>:
    363a:	0f 93       	push	r16
    363c:	1f 93       	push	r17
    363e:	cf 93       	push	r28
    3640:	df 93       	push	r29
    3642:	ec 01       	movw	r28, r24
    3644:	8b 01       	movw	r16, r22
    3646:	6f 5f       	subi	r22, 0xFF	; 255
    3648:	7f 4f       	sbci	r23, 0xFF	; 255
    364a:	88 81       	ld	r24, Y
    364c:	99 81       	ldd	r25, Y+1	; 0x01
    364e:	0e 94 ca 33 	call	0x6794	; 0x6794 <realloc>
    3652:	00 97       	sbiw	r24, 0x00	; 0
    3654:	31 f0       	breq	.+12     	; 0x3662 <_ZN6String12changeBufferEj+0x28>
    3656:	99 83       	std	Y+1, r25	; 0x01
    3658:	88 83       	st	Y, r24
    365a:	1b 83       	std	Y+3, r17	; 0x03
    365c:	0a 83       	std	Y+2, r16	; 0x02
    365e:	81 e0       	ldi	r24, 0x01	; 1
    3660:	01 c0       	rjmp	.+2      	; 0x3664 <_ZN6String12changeBufferEj+0x2a>
    3662:	80 e0       	ldi	r24, 0x00	; 0
    3664:	df 91       	pop	r29
    3666:	cf 91       	pop	r28
    3668:	1f 91       	pop	r17
    366a:	0f 91       	pop	r16
    366c:	08 95       	ret

0000366e <_ZN6String7reserveEj>:
    366e:	cf 93       	push	r28
    3670:	df 93       	push	r29
    3672:	ec 01       	movw	r28, r24
    3674:	88 81       	ld	r24, Y
    3676:	99 81       	ldd	r25, Y+1	; 0x01
    3678:	89 2b       	or	r24, r25
    367a:	29 f0       	breq	.+10     	; 0x3686 <_ZN6String7reserveEj+0x18>
    367c:	8a 81       	ldd	r24, Y+2	; 0x02
    367e:	9b 81       	ldd	r25, Y+3	; 0x03
    3680:	86 17       	cp	r24, r22
    3682:	97 07       	cpc	r25, r23
    3684:	60 f4       	brcc	.+24     	; 0x369e <_ZN6String7reserveEj+0x30>
    3686:	ce 01       	movw	r24, r28
    3688:	0e 94 1d 1b 	call	0x363a	; 0x363a <_ZN6String12changeBufferEj>
    368c:	88 23       	and	r24, r24
    368e:	41 f0       	breq	.+16     	; 0x36a0 <_ZN6String7reserveEj+0x32>
    3690:	8c 81       	ldd	r24, Y+4	; 0x04
    3692:	9d 81       	ldd	r25, Y+5	; 0x05
    3694:	89 2b       	or	r24, r25
    3696:	19 f4       	brne	.+6      	; 0x369e <_ZN6String7reserveEj+0x30>
    3698:	e8 81       	ld	r30, Y
    369a:	f9 81       	ldd	r31, Y+1	; 0x01
    369c:	10 82       	st	Z, r1
    369e:	81 e0       	ldi	r24, 0x01	; 1
    36a0:	df 91       	pop	r29
    36a2:	cf 91       	pop	r28
    36a4:	08 95       	ret

000036a6 <_ZN6String4copyEPKcj>:
    36a6:	ef 92       	push	r14
    36a8:	ff 92       	push	r15
    36aa:	0f 93       	push	r16
    36ac:	1f 93       	push	r17
    36ae:	cf 93       	push	r28
    36b0:	df 93       	push	r29
    36b2:	ec 01       	movw	r28, r24
    36b4:	7b 01       	movw	r14, r22
    36b6:	8a 01       	movw	r16, r20
    36b8:	ba 01       	movw	r22, r20
    36ba:	0e 94 37 1b 	call	0x366e	; 0x366e <_ZN6String7reserveEj>
    36be:	81 11       	cpse	r24, r1
    36c0:	04 c0       	rjmp	.+8      	; 0x36ca <_ZN6String4copyEPKcj+0x24>
    36c2:	ce 01       	movw	r24, r28
    36c4:	0e 94 0b 1b 	call	0x3616	; 0x3616 <_ZN6String10invalidateEv>
    36c8:	07 c0       	rjmp	.+14     	; 0x36d8 <_ZN6String4copyEPKcj+0x32>
    36ca:	1d 83       	std	Y+5, r17	; 0x05
    36cc:	0c 83       	std	Y+4, r16	; 0x04
    36ce:	b7 01       	movw	r22, r14
    36d0:	88 81       	ld	r24, Y
    36d2:	99 81       	ldd	r25, Y+1	; 0x01
    36d4:	0e 94 99 34 	call	0x6932	; 0x6932 <strcpy>
    36d8:	ce 01       	movw	r24, r28
    36da:	df 91       	pop	r29
    36dc:	cf 91       	pop	r28
    36de:	1f 91       	pop	r17
    36e0:	0f 91       	pop	r16
    36e2:	ff 90       	pop	r15
    36e4:	ef 90       	pop	r14
    36e6:	08 95       	ret

000036e8 <_ZN6StringC1EPKc>:
    36e8:	fc 01       	movw	r30, r24
    36ea:	11 82       	std	Z+1, r1	; 0x01
    36ec:	10 82       	st	Z, r1
    36ee:	13 82       	std	Z+3, r1	; 0x03
    36f0:	12 82       	std	Z+2, r1	; 0x02
    36f2:	15 82       	std	Z+5, r1	; 0x05
    36f4:	14 82       	std	Z+4, r1	; 0x04
    36f6:	61 15       	cp	r22, r1
    36f8:	71 05       	cpc	r23, r1
    36fa:	51 f0       	breq	.+20     	; 0x3710 <_ZN6StringC1EPKc+0x28>
    36fc:	fb 01       	movw	r30, r22
    36fe:	01 90       	ld	r0, Z+
    3700:	00 20       	and	r0, r0
    3702:	e9 f7       	brne	.-6      	; 0x36fe <_ZN6StringC1EPKc+0x16>
    3704:	31 97       	sbiw	r30, 0x01	; 1
    3706:	af 01       	movw	r20, r30
    3708:	46 1b       	sub	r20, r22
    370a:	57 0b       	sbc	r21, r23
    370c:	0c 94 53 1b 	jmp	0x36a6	; 0x36a6 <_ZN6String4copyEPKcj>
    3710:	08 95       	ret

00003712 <_ZN6String4moveERS_>:
    3712:	0f 93       	push	r16
    3714:	1f 93       	push	r17
    3716:	cf 93       	push	r28
    3718:	df 93       	push	r29
    371a:	8c 01       	movw	r16, r24
    371c:	eb 01       	movw	r28, r22
    371e:	fc 01       	movw	r30, r24
    3720:	80 81       	ld	r24, Z
    3722:	91 81       	ldd	r25, Z+1	; 0x01
    3724:	00 97       	sbiw	r24, 0x00	; 0
    3726:	d1 f0       	breq	.+52     	; 0x375c <_ZN6String4moveERS_+0x4a>
    3728:	68 81       	ld	r22, Y
    372a:	79 81       	ldd	r23, Y+1	; 0x01
    372c:	61 15       	cp	r22, r1
    372e:	71 05       	cpc	r23, r1
    3730:	99 f0       	breq	.+38     	; 0x3758 <_ZN6String4moveERS_+0x46>
    3732:	22 e0       	ldi	r18, 0x02	; 2
    3734:	3b e1       	ldi	r19, 0x1B	; 27
    3736:	23 2b       	or	r18, r19
    3738:	79 f0       	breq	.+30     	; 0x3758 <_ZN6String4moveERS_+0x46>
    373a:	42 81       	ldd	r20, Z+2	; 0x02
    373c:	53 81       	ldd	r21, Z+3	; 0x03
    373e:	2c 81       	ldd	r18, Y+4	; 0x04
    3740:	3d 81       	ldd	r19, Y+5	; 0x05
    3742:	42 17       	cp	r20, r18
    3744:	53 07       	cpc	r21, r19
    3746:	40 f0       	brcs	.+16     	; 0x3758 <_ZN6String4moveERS_+0x46>
    3748:	0e 94 99 34 	call	0x6932	; 0x6932 <strcpy>
    374c:	8c 81       	ldd	r24, Y+4	; 0x04
    374e:	9d 81       	ldd	r25, Y+5	; 0x05
    3750:	f8 01       	movw	r30, r16
    3752:	95 83       	std	Z+5, r25	; 0x05
    3754:	84 83       	std	Z+4, r24	; 0x04
    3756:	13 c0       	rjmp	.+38     	; 0x377e <_ZN6String4moveERS_+0x6c>
    3758:	0e 94 41 33 	call	0x6682	; 0x6682 <free>
    375c:	88 81       	ld	r24, Y
    375e:	99 81       	ldd	r25, Y+1	; 0x01
    3760:	f8 01       	movw	r30, r16
    3762:	91 83       	std	Z+1, r25	; 0x01
    3764:	80 83       	st	Z, r24
    3766:	8a 81       	ldd	r24, Y+2	; 0x02
    3768:	9b 81       	ldd	r25, Y+3	; 0x03
    376a:	93 83       	std	Z+3, r25	; 0x03
    376c:	82 83       	std	Z+2, r24	; 0x02
    376e:	8c 81       	ldd	r24, Y+4	; 0x04
    3770:	9d 81       	ldd	r25, Y+5	; 0x05
    3772:	95 83       	std	Z+5, r25	; 0x05
    3774:	84 83       	std	Z+4, r24	; 0x04
    3776:	19 82       	std	Y+1, r1	; 0x01
    3778:	18 82       	st	Y, r1
    377a:	1b 82       	std	Y+3, r1	; 0x03
    377c:	1a 82       	std	Y+2, r1	; 0x02
    377e:	1d 82       	std	Y+5, r1	; 0x05
    3780:	1c 82       	std	Y+4, r1	; 0x04
    3782:	df 91       	pop	r29
    3784:	cf 91       	pop	r28
    3786:	1f 91       	pop	r17
    3788:	0f 91       	pop	r16
    378a:	08 95       	ret

0000378c <_ZN6StringaSERKS_>:
    378c:	cf 93       	push	r28
    378e:	df 93       	push	r29
    3790:	ec 01       	movw	r28, r24
    3792:	fb 01       	movw	r30, r22
    3794:	86 17       	cp	r24, r22
    3796:	97 07       	cpc	r25, r23
    3798:	61 f0       	breq	.+24     	; 0x37b2 <_ZN6StringaSERKS_+0x26>
    379a:	60 81       	ld	r22, Z
    379c:	71 81       	ldd	r23, Z+1	; 0x01
    379e:	61 15       	cp	r22, r1
    37a0:	71 05       	cpc	r23, r1
    37a2:	29 f0       	breq	.+10     	; 0x37ae <_ZN6StringaSERKS_+0x22>
    37a4:	44 81       	ldd	r20, Z+4	; 0x04
    37a6:	55 81       	ldd	r21, Z+5	; 0x05
    37a8:	0e 94 53 1b 	call	0x36a6	; 0x36a6 <_ZN6String4copyEPKcj>
    37ac:	02 c0       	rjmp	.+4      	; 0x37b2 <_ZN6StringaSERKS_+0x26>
    37ae:	0e 94 0b 1b 	call	0x3616	; 0x3616 <_ZN6String10invalidateEv>
    37b2:	ce 01       	movw	r24, r28
    37b4:	df 91       	pop	r29
    37b6:	cf 91       	pop	r28
    37b8:	08 95       	ret

000037ba <_ZN6StringC1ERKS_>:
    37ba:	fc 01       	movw	r30, r24
    37bc:	11 82       	std	Z+1, r1	; 0x01
    37be:	10 82       	st	Z, r1
    37c0:	13 82       	std	Z+3, r1	; 0x03
    37c2:	12 82       	std	Z+2, r1	; 0x02
    37c4:	15 82       	std	Z+5, r1	; 0x05
    37c6:	14 82       	std	Z+4, r1	; 0x04
    37c8:	0c 94 c6 1b 	jmp	0x378c	; 0x378c <_ZN6StringaSERKS_>

000037cc <_ZN6StringaSEOS_>:
    37cc:	cf 93       	push	r28
    37ce:	df 93       	push	r29
    37d0:	ec 01       	movw	r28, r24
    37d2:	86 17       	cp	r24, r22
    37d4:	97 07       	cpc	r25, r23
    37d6:	11 f0       	breq	.+4      	; 0x37dc <_ZN6StringaSEOS_+0x10>
    37d8:	0e 94 89 1b 	call	0x3712	; 0x3712 <_ZN6String4moveERS_>
    37dc:	ce 01       	movw	r24, r28
    37de:	df 91       	pop	r29
    37e0:	cf 91       	pop	r28
    37e2:	08 95       	ret

000037e4 <_ZN6StringaSEPKc>:
    37e4:	cf 93       	push	r28
    37e6:	df 93       	push	r29
    37e8:	ec 01       	movw	r28, r24
    37ea:	61 15       	cp	r22, r1
    37ec:	71 05       	cpc	r23, r1
    37ee:	59 f0       	breq	.+22     	; 0x3806 <_ZN6StringaSEPKc+0x22>
    37f0:	fb 01       	movw	r30, r22
    37f2:	01 90       	ld	r0, Z+
    37f4:	00 20       	and	r0, r0
    37f6:	e9 f7       	brne	.-6      	; 0x37f2 <_ZN6StringaSEPKc+0xe>
    37f8:	31 97       	sbiw	r30, 0x01	; 1
    37fa:	af 01       	movw	r20, r30
    37fc:	46 1b       	sub	r20, r22
    37fe:	57 0b       	sbc	r21, r23
    3800:	0e 94 53 1b 	call	0x36a6	; 0x36a6 <_ZN6String4copyEPKcj>
    3804:	02 c0       	rjmp	.+4      	; 0x380a <_ZN6StringaSEPKc+0x26>
    3806:	0e 94 0b 1b 	call	0x3616	; 0x3616 <_ZN6String10invalidateEv>
    380a:	ce 01       	movw	r24, r28
    380c:	df 91       	pop	r29
    380e:	cf 91       	pop	r28
    3810:	08 95       	ret

00003812 <_ZN6StringC1Efh>:
    3812:	ef 92       	push	r14
    3814:	ff 92       	push	r15
    3816:	0f 93       	push	r16
    3818:	1f 93       	push	r17
    381a:	cf 93       	push	r28
    381c:	df 93       	push	r29
    381e:	cd b7       	in	r28, 0x3d	; 61
    3820:	de b7       	in	r29, 0x3e	; 62
    3822:	a1 97       	sbiw	r28, 0x21	; 33
    3824:	0f b6       	in	r0, 0x3f	; 63
    3826:	f8 94       	cli
    3828:	de bf       	out	0x3e, r29	; 62
    382a:	0f be       	out	0x3f, r0	; 63
    382c:	cd bf       	out	0x3d, r28	; 61
    382e:	7c 01       	movw	r14, r24
    3830:	cb 01       	movw	r24, r22
    3832:	ba 01       	movw	r22, r20
    3834:	f7 01       	movw	r30, r14
    3836:	11 82       	std	Z+1, r1	; 0x01
    3838:	10 82       	st	Z, r1
    383a:	13 82       	std	Z+3, r1	; 0x03
    383c:	12 82       	std	Z+2, r1	; 0x02
    383e:	15 82       	std	Z+5, r1	; 0x05
    3840:	14 82       	std	Z+4, r1	; 0x04
    3842:	42 e0       	ldi	r20, 0x02	; 2
    3844:	42 0f       	add	r20, r18
    3846:	8e 01       	movw	r16, r28
    3848:	0f 5f       	subi	r16, 0xFF	; 255
    384a:	1f 4f       	sbci	r17, 0xFF	; 255
    384c:	0e 94 89 32 	call	0x6512	; 0x6512 <dtostrf>
    3850:	bc 01       	movw	r22, r24
    3852:	c7 01       	movw	r24, r14
    3854:	0e 94 f2 1b 	call	0x37e4	; 0x37e4 <_ZN6StringaSEPKc>
    3858:	a1 96       	adiw	r28, 0x21	; 33
    385a:	0f b6       	in	r0, 0x3f	; 63
    385c:	f8 94       	cli
    385e:	de bf       	out	0x3e, r29	; 62
    3860:	0f be       	out	0x3f, r0	; 63
    3862:	cd bf       	out	0x3d, r28	; 61
    3864:	df 91       	pop	r29
    3866:	cf 91       	pop	r28
    3868:	1f 91       	pop	r17
    386a:	0f 91       	pop	r16
    386c:	ff 90       	pop	r15
    386e:	ef 90       	pop	r14
    3870:	08 95       	ret

00003872 <_ZNK6StringixEj>:

char String::operator[]( unsigned int index ) const
{
	if (index >= len || !buffer) return 0;
    3872:	fc 01       	movw	r30, r24
    3874:	24 81       	ldd	r18, Z+4	; 0x04
    3876:	35 81       	ldd	r19, Z+5	; 0x05
    3878:	62 17       	cp	r22, r18
    387a:	73 07       	cpc	r23, r19
    387c:	48 f4       	brcc	.+18     	; 0x3890 <_ZNK6StringixEj+0x1e>
    387e:	80 81       	ld	r24, Z
    3880:	91 81       	ldd	r25, Z+1	; 0x01
    3882:	00 97       	sbiw	r24, 0x00	; 0
    3884:	29 f0       	breq	.+10     	; 0x3890 <_ZNK6StringixEj+0x1e>
	return buffer[index];
    3886:	fc 01       	movw	r30, r24
    3888:	e6 0f       	add	r30, r22
    388a:	f7 1f       	adc	r31, r23
    388c:	80 81       	ld	r24, Z
    388e:	08 95       	ret
	return buffer[index];
}

char String::operator[]( unsigned int index ) const
{
	if (index >= len || !buffer) return 0;
    3890:	80 e0       	ldi	r24, 0x00	; 0
	return buffer[index];
}
    3892:	08 95       	ret

00003894 <_ZNK6String6charAtEj>:
/*  Character Access                         */
/*********************************************/

char String::charAt(unsigned int loc) const
{
	return operator[](loc);
    3894:	0c 94 39 1c 	jmp	0x3872	; 0x3872 <_ZNK6StringixEj>

00003898 <_ZN7AMS5812C1ER7TwoWirehNS_10TransducerE>:
}

/* returns the temperature value, C */
float AMS5812::getTemperature_C(){
  return _data.Temp_C;
}
    3898:	4f 92       	push	r4
    389a:	5f 92       	push	r5
    389c:	6f 92       	push	r6
    389e:	7f 92       	push	r7
    38a0:	8f 92       	push	r8
    38a2:	9f 92       	push	r9
    38a4:	af 92       	push	r10
    38a6:	bf 92       	push	r11
    38a8:	cf 92       	push	r12
    38aa:	df 92       	push	r13
    38ac:	ef 92       	push	r14
    38ae:	ff 92       	push	r15
    38b0:	0f 93       	push	r16
    38b2:	1f 93       	push	r17
    38b4:	cf 93       	push	r28
    38b6:	df 93       	push	r29
    38b8:	fc 01       	movw	r30, r24
    38ba:	5b 01       	movw	r10, r22
    38bc:	94 2e       	mov	r9, r20
    38be:	82 2e       	mov	r8, r18
    38c0:	8a e0       	ldi	r24, 0x0A	; 10
    38c2:	90 e0       	ldi	r25, 0x00	; 0
    38c4:	93 8b       	std	Z+19, r25	; 0x13
    38c6:	82 8b       	std	Z+18, r24	; 0x12
    38c8:	80 e8       	ldi	r24, 0x80	; 128
    38ca:	9a e1       	ldi	r25, 0x1A	; 26
    38cc:	a6 e0       	ldi	r26, 0x06	; 6
    38ce:	b0 e0       	ldi	r27, 0x00	; 0
    38d0:	82 a3       	std	Z+34, r24	; 0x22
    38d2:	93 a3       	std	Z+35, r25	; 0x23
    38d4:	a4 a3       	std	Z+36, r26	; 0x24
    38d6:	b5 a3       	std	Z+37, r27	; 0x25
    38d8:	80 e1       	ldi	r24, 0x10	; 16
    38da:	96 e7       	ldi	r25, 0x76	; 118
    38dc:	a7 ed       	ldi	r26, 0xD7	; 215
    38de:	b5 e4       	ldi	r27, 0x45	; 69
    38e0:	86 a3       	std	Z+38, r24	; 0x26
    38e2:	97 a3       	std	Z+39, r25	; 0x27
    38e4:	a0 a7       	std	Z+40, r26	; 0x28
    38e6:	b1 a7       	std	Z+41, r27	; 0x29
    38e8:	2d ec       	ldi	r18, 0xCD	; 205
    38ea:	3c e0       	ldi	r19, 0x0C	; 12
    38ec:	33 a7       	std	Z+43, r19	; 0x2b
    38ee:	22 a7       	std	Z+42, r18	; 0x2a
    38f0:	83 e3       	ldi	r24, 0x33	; 51
    38f2:	93 e7       	ldi	r25, 0x73	; 115
    38f4:	95 a7       	std	Z+45, r25	; 0x2d
    38f6:	84 a7       	std	Z+44, r24	; 0x2c
    38f8:	37 a7       	std	Z+47, r19	; 0x2f
    38fa:	26 a7       	std	Z+46, r18	; 0x2e
    38fc:	91 ab       	std	Z+49, r25	; 0x31
    38fe:	80 ab       	std	Z+48, r24	; 0x30
    3900:	80 e0       	ldi	r24, 0x00	; 0
    3902:	90 e0       	ldi	r25, 0x00	; 0
    3904:	a8 ec       	ldi	r26, 0xC8	; 200
    3906:	b1 ec       	ldi	r27, 0xC1	; 193
    3908:	82 ab       	std	Z+50, r24	; 0x32
    390a:	93 ab       	std	Z+51, r25	; 0x33
    390c:	a4 ab       	std	Z+52, r26	; 0x34
    390e:	b5 ab       	std	Z+53, r27	; 0x35
    3910:	80 e0       	ldi	r24, 0x00	; 0
    3912:	90 e0       	ldi	r25, 0x00	; 0
    3914:	aa ea       	ldi	r26, 0xAA	; 170
    3916:	b2 e4       	ldi	r27, 0x42	; 66
    3918:	86 ab       	std	Z+54, r24	; 0x36
    391a:	97 ab       	std	Z+55, r25	; 0x37
    391c:	a0 af       	std	Z+56, r26	; 0x38
    391e:	b1 af       	std	Z+57, r27	; 0x39
    3920:	12 ae       	std	Z+58, r1	; 0x3a
    3922:	13 ae       	std	Z+59, r1	; 0x3b
    3924:	14 ae       	std	Z+60, r1	; 0x3c
    3926:	15 ae       	std	Z+61, r1	; 0x3d
    3928:	df 01       	movw	r26, r30
    392a:	de 96       	adiw	r26, 0x3e	; 62
    392c:	4a e9       	ldi	r20, 0x9A	; 154
    392e:	59 e9       	ldi	r21, 0x99	; 153
    3930:	69 e9       	ldi	r22, 0x99	; 153
    3932:	7d e3       	ldi	r23, 0x3D	; 61
    3934:	4d 93       	st	X+, r20
    3936:	5d 93       	st	X+, r21
    3938:	6d 93       	st	X+, r22
    393a:	7c 93       	st	X, r23
    393c:	13 97       	sbiw	r26, 0x03	; 3
    393e:	14 96       	adiw	r26, 0x04	; 4
    3940:	1d 92       	st	X+, r1
    3942:	1d 92       	st	X+, r1
    3944:	1d 92       	st	X+, r1
    3946:	1c 92       	st	X, r1
    3948:	13 97       	sbiw	r26, 0x03	; 3
    394a:	ef 01       	movw	r28, r30
    394c:	ca 5b       	subi	r28, 0xBA	; 186
    394e:	df 4f       	sbci	r29, 0xFF	; 255
    3950:	8a e9       	ldi	r24, 0x9A	; 154
    3952:	99 e9       	ldi	r25, 0x99	; 153
    3954:	a9 e1       	ldi	r26, 0x19	; 25
    3956:	be e3       	ldi	r27, 0x3E	; 62
    3958:	88 83       	st	Y, r24
    395a:	99 83       	std	Y+1, r25	; 0x01
    395c:	aa 83       	std	Y+2, r26	; 0x02
    395e:	bb 83       	std	Y+3, r27	; 0x03
    3960:	24 96       	adiw	r28, 0x04	; 4
    3962:	0a e9       	ldi	r16, 0x9A	; 154
    3964:	19 e9       	ldi	r17, 0x99	; 153
    3966:	29 e9       	ldi	r18, 0x99	; 153
    3968:	3d eb       	ldi	r19, 0xBD	; 189
    396a:	08 83       	st	Y, r16
    396c:	19 83       	std	Y+1, r17	; 0x01
    396e:	2a 83       	std	Y+2, r18	; 0x02
    3970:	3b 83       	std	Y+3, r19	; 0x03
    3972:	24 96       	adiw	r28, 0x04	; 4
    3974:	48 83       	st	Y, r20
    3976:	59 83       	std	Y+1, r21	; 0x01
    3978:	6a 83       	std	Y+2, r22	; 0x02
    397a:	7b 83       	std	Y+3, r23	; 0x03
    397c:	24 96       	adiw	r28, 0x04	; 4
    397e:	4a e9       	ldi	r20, 0x9A	; 154
    3980:	59 e9       	ldi	r21, 0x99	; 153
    3982:	69 e1       	ldi	r22, 0x19	; 25
    3984:	7e eb       	ldi	r23, 0xBE	; 190
    3986:	48 83       	st	Y, r20
    3988:	59 83       	std	Y+1, r21	; 0x01
    398a:	6a 83       	std	Y+2, r22	; 0x02
    398c:	7b 83       	std	Y+3, r23	; 0x03
    398e:	24 96       	adiw	r28, 0x04	; 4
    3990:	88 83       	st	Y, r24
    3992:	99 83       	std	Y+1, r25	; 0x01
    3994:	aa 83       	std	Y+2, r26	; 0x02
    3996:	bb 83       	std	Y+3, r27	; 0x03
    3998:	df 01       	movw	r26, r30
    399a:	a6 5a       	subi	r26, 0xA6	; 166
    399c:	bf 4f       	sbci	r27, 0xFF	; 255
    399e:	1d 92       	st	X+, r1
    39a0:	1d 92       	st	X+, r1
    39a2:	1d 92       	st	X+, r1
    39a4:	1c 92       	st	X, r1
    39a6:	13 97       	sbiw	r26, 0x03	; 3
    39a8:	14 96       	adiw	r26, 0x04	; 4
    39aa:	0a e9       	ldi	r16, 0x9A	; 154
    39ac:	19 e9       	ldi	r17, 0x99	; 153
    39ae:	29 e9       	ldi	r18, 0x99	; 153
    39b0:	3e e3       	ldi	r19, 0x3E	; 62
    39b2:	0d 93       	st	X+, r16
    39b4:	1d 93       	st	X+, r17
    39b6:	2d 93       	st	X+, r18
    39b8:	3c 93       	st	X, r19
    39ba:	13 97       	sbiw	r26, 0x03	; 3
    39bc:	14 96       	adiw	r26, 0x04	; 4
    39be:	1d 92       	st	X+, r1
    39c0:	1d 92       	st	X+, r1
    39c2:	1d 92       	st	X+, r1
    39c4:	1c 92       	st	X, r1
    39c6:	13 97       	sbiw	r26, 0x03	; 3
    39c8:	14 96       	adiw	r26, 0x04	; 4
    39ca:	4d ec       	ldi	r20, 0xCD	; 205
    39cc:	5c ec       	ldi	r21, 0xCC	; 204
    39ce:	6c e4       	ldi	r22, 0x4C	; 76
    39d0:	7f e3       	ldi	r23, 0x3F	; 63
    39d2:	4d 93       	st	X+, r20
    39d4:	5d 93       	st	X+, r21
    39d6:	6d 93       	st	X+, r22
    39d8:	7c 93       	st	X, r23
    39da:	13 97       	sbiw	r26, 0x03	; 3
    39dc:	14 96       	adiw	r26, 0x04	; 4
    39de:	1d 92       	st	X+, r1
    39e0:	1d 92       	st	X+, r1
    39e2:	1d 92       	st	X+, r1
    39e4:	1c 92       	st	X, r1
    39e6:	13 97       	sbiw	r26, 0x03	; 3
    39e8:	68 96       	adiw	r28, 0x18	; 24
    39ea:	80 e0       	ldi	r24, 0x00	; 0
    39ec:	90 e0       	ldi	r25, 0x00	; 0
    39ee:	a0 ec       	ldi	r26, 0xC0	; 192
    39f0:	bf e3       	ldi	r27, 0x3F	; 63
    39f2:	88 83       	st	Y, r24
    39f4:	99 83       	std	Y+1, r25	; 0x01
    39f6:	aa 83       	std	Y+2, r26	; 0x02
    39f8:	bb 83       	std	Y+3, r27	; 0x03
    39fa:	24 96       	adiw	r28, 0x04	; 4
    39fc:	0f 2e       	mov	r0, r31
    39fe:	fa e9       	ldi	r31, 0x9A	; 154
    3a00:	cf 2e       	mov	r12, r31
    3a02:	f9 e9       	ldi	r31, 0x99	; 153
    3a04:	df 2e       	mov	r13, r31
    3a06:	ed 2c       	mov	r14, r13
    3a08:	fe eb       	ldi	r31, 0xBE	; 190
    3a0a:	ff 2e       	mov	r15, r31
    3a0c:	f0 2d       	mov	r31, r0
    3a0e:	c8 82       	st	Y, r12
    3a10:	d9 82       	std	Y+1, r13	; 0x01
    3a12:	ea 82       	std	Y+2, r14	; 0x02
    3a14:	fb 82       	std	Y+3, r15	; 0x03
    3a16:	24 96       	adiw	r28, 0x04	; 4
    3a18:	08 83       	st	Y, r16
    3a1a:	19 83       	std	Y+1, r17	; 0x01
    3a1c:	2a 83       	std	Y+2, r18	; 0x02
    3a1e:	3b 83       	std	Y+3, r19	; 0x03
    3a20:	24 96       	adiw	r28, 0x04	; 4
    3a22:	0d ec       	ldi	r16, 0xCD	; 205
    3a24:	1c ec       	ldi	r17, 0xCC	; 204
    3a26:	2c e4       	ldi	r18, 0x4C	; 76
    3a28:	3f eb       	ldi	r19, 0xBF	; 191
    3a2a:	08 83       	st	Y, r16
    3a2c:	19 83       	std	Y+1, r17	; 0x01
    3a2e:	2a 83       	std	Y+2, r18	; 0x02
    3a30:	3b 83       	std	Y+3, r19	; 0x03
    3a32:	24 96       	adiw	r28, 0x04	; 4
    3a34:	48 83       	st	Y, r20
    3a36:	59 83       	std	Y+1, r21	; 0x01
    3a38:	6a 83       	std	Y+2, r22	; 0x02
    3a3a:	7b 83       	std	Y+3, r23	; 0x03
    3a3c:	24 96       	adiw	r28, 0x04	; 4
    3a3e:	40 e0       	ldi	r20, 0x00	; 0
    3a40:	50 e0       	ldi	r21, 0x00	; 0
    3a42:	60 ec       	ldi	r22, 0xC0	; 192
    3a44:	7f eb       	ldi	r23, 0xBF	; 191
    3a46:	48 83       	st	Y, r20
    3a48:	59 83       	std	Y+1, r21	; 0x01
    3a4a:	6a 83       	std	Y+2, r22	; 0x02
    3a4c:	7b 83       	std	Y+3, r23	; 0x03
    3a4e:	24 96       	adiw	r28, 0x04	; 4
    3a50:	88 83       	st	Y, r24
    3a52:	99 83       	std	Y+1, r25	; 0x01
    3a54:	aa 83       	std	Y+2, r26	; 0x02
    3a56:	bb 83       	std	Y+3, r27	; 0x03
    3a58:	df 01       	movw	r26, r30
    3a5a:	a6 57       	subi	r26, 0x76	; 118
    3a5c:	bf 4f       	sbci	r27, 0xFF	; 255
    3a5e:	1d 92       	st	X+, r1
    3a60:	1d 92       	st	X+, r1
    3a62:	1d 92       	st	X+, r1
    3a64:	1c 92       	st	X, r1
    3a66:	13 97       	sbiw	r26, 0x03	; 3
    3a68:	14 96       	adiw	r26, 0x04	; 4
    3a6a:	00 e0       	ldi	r16, 0x00	; 0
    3a6c:	10 e0       	ldi	r17, 0x00	; 0
    3a6e:	20 e4       	ldi	r18, 0x40	; 64
    3a70:	30 e4       	ldi	r19, 0x40	; 64
    3a72:	0d 93       	st	X+, r16
    3a74:	1d 93       	st	X+, r17
    3a76:	2d 93       	st	X+, r18
    3a78:	3c 93       	st	X, r19
    3a7a:	13 97       	sbiw	r26, 0x03	; 3
    3a7c:	14 96       	adiw	r26, 0x04	; 4
    3a7e:	1d 92       	st	X+, r1
    3a80:	1d 92       	st	X+, r1
    3a82:	1d 92       	st	X+, r1
    3a84:	1c 92       	st	X, r1
    3a86:	13 97       	sbiw	r26, 0x03	; 3
    3a88:	14 96       	adiw	r26, 0x04	; 4
    3a8a:	40 e0       	ldi	r20, 0x00	; 0
    3a8c:	50 e0       	ldi	r21, 0x00	; 0
    3a8e:	60 ea       	ldi	r22, 0xA0	; 160
    3a90:	70 e4       	ldi	r23, 0x40	; 64
    3a92:	4d 93       	st	X+, r20
    3a94:	5d 93       	st	X+, r21
    3a96:	6d 93       	st	X+, r22
    3a98:	7c 93       	st	X, r23
    3a9a:	13 97       	sbiw	r26, 0x03	; 3
    3a9c:	14 96       	adiw	r26, 0x04	; 4
    3a9e:	1d 92       	st	X+, r1
    3aa0:	1d 92       	st	X+, r1
    3aa2:	1d 92       	st	X+, r1
    3aa4:	1c 92       	st	X, r1
    3aa6:	13 97       	sbiw	r26, 0x03	; 3
    3aa8:	68 96       	adiw	r28, 0x18	; 24
    3aaa:	80 e0       	ldi	r24, 0x00	; 0
    3aac:	90 e0       	ldi	r25, 0x00	; 0
    3aae:	a0 e7       	ldi	r26, 0x70	; 112
    3ab0:	b1 e4       	ldi	r27, 0x41	; 65
    3ab2:	88 83       	st	Y, r24
    3ab4:	99 83       	std	Y+1, r25	; 0x01
    3ab6:	aa 83       	std	Y+2, r26	; 0x02
    3ab8:	bb 83       	std	Y+3, r27	; 0x03
    3aba:	24 96       	adiw	r28, 0x04	; 4
    3abc:	18 82       	st	Y, r1
    3abe:	19 82       	std	Y+1, r1	; 0x01
    3ac0:	1a 82       	std	Y+2, r1	; 0x02
    3ac2:	1b 82       	std	Y+3, r1	; 0x03
    3ac4:	24 96       	adiw	r28, 0x04	; 4
    3ac6:	0f 2e       	mov	r0, r31
    3ac8:	c1 2c       	mov	r12, r1
    3aca:	d1 2c       	mov	r13, r1
    3acc:	f0 ef       	ldi	r31, 0xF0	; 240
    3ace:	ef 2e       	mov	r14, r31
    3ad0:	f1 e4       	ldi	r31, 0x41	; 65
    3ad2:	ff 2e       	mov	r15, r31
    3ad4:	f0 2d       	mov	r31, r0
    3ad6:	c8 82       	st	Y, r12
    3ad8:	d9 82       	std	Y+1, r13	; 0x01
    3ada:	ea 82       	std	Y+2, r14	; 0x02
    3adc:	fb 82       	std	Y+3, r15	; 0x03
    3ade:	24 96       	adiw	r28, 0x04	; 4
    3ae0:	18 82       	st	Y, r1
    3ae2:	19 82       	std	Y+1, r1	; 0x01
    3ae4:	1a 82       	std	Y+2, r1	; 0x02
    3ae6:	1b 82       	std	Y+3, r1	; 0x03
    3ae8:	24 96       	adiw	r28, 0x04	; 4
    3aea:	0f 2e       	mov	r0, r31
    3aec:	41 2c       	mov	r4, r1
    3aee:	51 2c       	mov	r5, r1
    3af0:	f0 e7       	ldi	r31, 0x70	; 112
    3af2:	6f 2e       	mov	r6, r31
    3af4:	f2 e4       	ldi	r31, 0x42	; 66
    3af6:	7f 2e       	mov	r7, r31
    3af8:	f0 2d       	mov	r31, r0
    3afa:	48 82       	st	Y, r4
    3afc:	59 82       	std	Y+1, r5	; 0x01
    3afe:	6a 82       	std	Y+2, r6	; 0x02
    3b00:	7b 82       	std	Y+3, r7	; 0x03
    3b02:	24 96       	adiw	r28, 0x04	; 4
    3b04:	18 82       	st	Y, r1
    3b06:	19 82       	std	Y+1, r1	; 0x01
    3b08:	1a 82       	std	Y+2, r1	; 0x02
    3b0a:	1b 82       	std	Y+3, r1	; 0x03
    3b0c:	24 96       	adiw	r28, 0x04	; 4
    3b0e:	0f 2e       	mov	r0, r31
    3b10:	41 2c       	mov	r4, r1
    3b12:	51 2c       	mov	r5, r1
    3b14:	f8 ec       	ldi	r31, 0xC8	; 200
    3b16:	6f 2e       	mov	r6, r31
    3b18:	f2 e4       	ldi	r31, 0x42	; 66
    3b1a:	7f 2e       	mov	r7, r31
    3b1c:	f0 2d       	mov	r31, r0
    3b1e:	48 82       	st	Y, r4
    3b20:	59 82       	std	Y+1, r5	; 0x01
    3b22:	6a 82       	std	Y+2, r6	; 0x02
    3b24:	7b 82       	std	Y+3, r7	; 0x03
    3b26:	24 96       	adiw	r28, 0x04	; 4
    3b28:	0f 2e       	mov	r0, r31
    3b2a:	41 2c       	mov	r4, r1
    3b2c:	51 2c       	mov	r5, r1
    3b2e:	f0 e4       	ldi	r31, 0x40	; 64
    3b30:	6f 2e       	mov	r6, r31
    3b32:	f0 ec       	ldi	r31, 0xC0	; 192
    3b34:	7f 2e       	mov	r7, r31
    3b36:	f0 2d       	mov	r31, r0
    3b38:	48 82       	st	Y, r4
    3b3a:	59 82       	std	Y+1, r5	; 0x01
    3b3c:	6a 82       	std	Y+2, r6	; 0x02
    3b3e:	7b 82       	std	Y+3, r7	; 0x03
    3b40:	24 96       	adiw	r28, 0x04	; 4
    3b42:	08 83       	st	Y, r16
    3b44:	19 83       	std	Y+1, r17	; 0x01
    3b46:	2a 83       	std	Y+2, r18	; 0x02
    3b48:	3b 83       	std	Y+3, r19	; 0x03
    3b4a:	24 96       	adiw	r28, 0x04	; 4
    3b4c:	00 e0       	ldi	r16, 0x00	; 0
    3b4e:	10 e0       	ldi	r17, 0x00	; 0
    3b50:	20 ea       	ldi	r18, 0xA0	; 160
    3b52:	30 ec       	ldi	r19, 0xC0	; 192
    3b54:	08 83       	st	Y, r16
    3b56:	19 83       	std	Y+1, r17	; 0x01
    3b58:	2a 83       	std	Y+2, r18	; 0x02
    3b5a:	3b 83       	std	Y+3, r19	; 0x03
    3b5c:	24 96       	adiw	r28, 0x04	; 4
    3b5e:	48 83       	st	Y, r20
    3b60:	59 83       	std	Y+1, r21	; 0x01
    3b62:	6a 83       	std	Y+2, r22	; 0x02
    3b64:	7b 83       	std	Y+3, r23	; 0x03
    3b66:	24 96       	adiw	r28, 0x04	; 4
    3b68:	40 e0       	ldi	r20, 0x00	; 0
    3b6a:	50 e0       	ldi	r21, 0x00	; 0
    3b6c:	60 e7       	ldi	r22, 0x70	; 112
    3b6e:	71 ec       	ldi	r23, 0xC1	; 193
    3b70:	48 83       	st	Y, r20
    3b72:	59 83       	std	Y+1, r21	; 0x01
    3b74:	6a 83       	std	Y+2, r22	; 0x02
    3b76:	7b 83       	std	Y+3, r23	; 0x03
    3b78:	24 96       	adiw	r28, 0x04	; 4
    3b7a:	88 83       	st	Y, r24
    3b7c:	99 83       	std	Y+1, r25	; 0x01
    3b7e:	aa 83       	std	Y+2, r26	; 0x02
    3b80:	bb 83       	std	Y+3, r27	; 0x03
    3b82:	24 96       	adiw	r28, 0x04	; 4
    3b84:	40 e0       	ldi	r20, 0x00	; 0
    3b86:	50 e0       	ldi	r21, 0x00	; 0
    3b88:	60 e3       	ldi	r22, 0x30	; 48
    3b8a:	71 e4       	ldi	r23, 0x41	; 65
    3b8c:	48 83       	st	Y, r20
    3b8e:	59 83       	std	Y+1, r21	; 0x01
    3b90:	6a 83       	std	Y+2, r22	; 0x02
    3b92:	7b 83       	std	Y+3, r23	; 0x03
    3b94:	24 96       	adiw	r28, 0x04	; 4
    3b96:	40 e0       	ldi	r20, 0x00	; 0
    3b98:	50 e0       	ldi	r21, 0x00	; 0
    3b9a:	6c e8       	ldi	r22, 0x8C	; 140
    3b9c:	71 e4       	ldi	r23, 0x41	; 65
    3b9e:	48 83       	st	Y, r20
    3ba0:	59 83       	std	Y+1, r21	; 0x01
    3ba2:	6a 83       	std	Y+2, r22	; 0x02
    3ba4:	7b 83       	std	Y+3, r23	; 0x03
    3ba6:	24 96       	adiw	r28, 0x04	; 4
    3ba8:	18 82       	st	Y, r1
    3baa:	19 82       	std	Y+1, r1	; 0x01
    3bac:	1a 82       	std	Y+2, r1	; 0x02
    3bae:	1b 82       	std	Y+3, r1	; 0x03
    3bb0:	24 96       	adiw	r28, 0x04	; 4
    3bb2:	88 83       	st	Y, r24
    3bb4:	99 83       	std	Y+1, r25	; 0x01
    3bb6:	aa 83       	std	Y+2, r26	; 0x02
    3bb8:	bb 83       	std	Y+3, r27	; 0x03
    3bba:	df 01       	movw	r26, r30
    3bbc:	ae 51       	subi	r26, 0x1E	; 30
    3bbe:	bf 4f       	sbci	r27, 0xFF	; 255
    3bc0:	1d 92       	st	X+, r1
    3bc2:	1d 92       	st	X+, r1
    3bc4:	1d 92       	st	X+, r1
    3bc6:	1c 92       	st	X, r1
    3bc8:	13 97       	sbiw	r26, 0x03	; 3
    3bca:	14 96       	adiw	r26, 0x04	; 4
    3bcc:	cd 92       	st	X+, r12
    3bce:	dd 92       	st	X+, r13
    3bd0:	ed 92       	st	X+, r14
    3bd2:	fc 92       	st	X, r15
    3bd4:	13 97       	sbiw	r26, 0x03	; 3
    3bd6:	b1 86       	std	Z+9, r11	; 0x09
    3bd8:	a0 86       	std	Z+8, r10	; 0x08
    3bda:	92 86       	std	Z+10, r9	; 0x0a
    3bdc:	83 86       	std	Z+11, r8	; 0x0b
    3bde:	df 91       	pop	r29
    3be0:	cf 91       	pop	r28
    3be2:	1f 91       	pop	r17
    3be4:	0f 91       	pop	r16
    3be6:	ff 90       	pop	r15
    3be8:	ef 90       	pop	r14
    3bea:	df 90       	pop	r13
    3bec:	cf 90       	pop	r12
    3bee:	bf 90       	pop	r11
    3bf0:	af 90       	pop	r10
    3bf2:	9f 90       	pop	r9
    3bf4:	8f 90       	pop	r8
    3bf6:	7f 90       	pop	r7
    3bf8:	6f 90       	pop	r6
    3bfa:	5f 90       	pop	r5
    3bfc:	4f 90       	pop	r4
    3bfe:	08 95       	ret

00003c00 <_ZN7AMS581214getPressure_PaEv>:
    3c00:	fc 01       	movw	r30, r24
    3c02:	60 81       	ld	r22, Z
    3c04:	71 81       	ldd	r23, Z+1	; 0x01
    3c06:	82 81       	ldd	r24, Z+2	; 0x02
    3c08:	93 81       	ldd	r25, Z+3	; 0x03
    3c0a:	08 95       	ret

00003c0c <_ZN7AMS581213getTransducerEv>:

/* sets the pressure and temperature range based on the chip */
void AMS5812::getTransducer(){
    3c0c:	dc 01       	movw	r26, r24
  // setting the min and max pressures based on which transducer it is
  switch(_type) {
    3c0e:	1b 96       	adiw	r26, 0x0b	; 11
    3c10:	ec 91       	ld	r30, X
    3c12:	1b 97       	sbiw	r26, 0x0b	; 11
    3c14:	4e 2f       	mov	r20, r30
    3c16:	50 e0       	ldi	r21, 0x00	; 0
    3c18:	46 31       	cpi	r20, 0x16	; 22
    3c1a:	51 05       	cpc	r21, r1
    3c1c:	08 f0       	brcs	.+2      	; 0x3c20 <_ZN7AMS581213getTransducerEv+0x14>
    3c1e:	7c c0       	rjmp	.+248    	; 0x3d18 <_ZN7AMS581213getTransducerEv+0x10c>
    3c20:	fa 01       	movw	r30, r20
    3c22:	ec 5c       	subi	r30, 0xCC	; 204
    3c24:	ff 4f       	sbci	r31, 0xFF	; 255
    3c26:	0c 94 55 32 	jmp	0x64aa	; 0x64aa <__tablejump2__>
    case AMS5812_0000_D:
      _pMin = AMS5812_0000_D_P_MIN;
    3c2a:	da 96       	adiw	r26, 0x3a	; 58
    3c2c:	4d 91       	ld	r20, X+
    3c2e:	5d 91       	ld	r21, X+
    3c30:	6d 91       	ld	r22, X+
    3c32:	7c 91       	ld	r23, X
    3c34:	dd 97       	sbiw	r26, 0x3d	; 61
    3c36:	5a 96       	adiw	r26, 0x1a	; 26
    3c38:	4d 93       	st	X+, r20
    3c3a:	5d 93       	st	X+, r21
    3c3c:	6d 93       	st	X+, r22
    3c3e:	7c 93       	st	X, r23
    3c40:	5d 97       	sbiw	r26, 0x1d	; 29
      _pMax = AMS5812_0000_D_P_MAX;
    3c42:	fc 01       	movw	r30, r24
    3c44:	fe 96       	adiw	r30, 0x3e	; 62
    3c46:	5e c0       	rjmp	.+188    	; 0x3d04 <_ZN7AMS581213getTransducerEv+0xf8>
      break;
    case AMS5812_0001_D:  
      _pMin = AMS5812_0001_D_P_MIN;
    3c48:	fc 01       	movw	r30, r24
    3c4a:	ee 5b       	subi	r30, 0xBE	; 190
    3c4c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c4e:	4f c0       	rjmp	.+158    	; 0x3cee <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0001_D_P_MAX;
      break;
    case AMS5812_0000_D_B:
      _pMin = AMS5812_0000_D_B_P_MIN;
    3c50:	fc 01       	movw	r30, r24
    3c52:	e6 5b       	subi	r30, 0xB6	; 182
    3c54:	ff 4f       	sbci	r31, 0xFF	; 255
    3c56:	4b c0       	rjmp	.+150    	; 0x3cee <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0000_D_B_P_MAX;
      break;
    case AMS5812_0001_D_B:
      _pMin = AMS5812_0001_D_B_P_MIN;
    3c58:	fc 01       	movw	r30, r24
    3c5a:	ee 5a       	subi	r30, 0xAE	; 174
    3c5c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c5e:	47 c0       	rjmp	.+142    	; 0x3cee <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0001_D_B_P_MAX;
      break;
    case AMS5812_0003_D:
      _pMin = AMS5812_0003_D_P_MIN;
    3c60:	fc 01       	movw	r30, r24
    3c62:	e6 5a       	subi	r30, 0xA6	; 166
    3c64:	ff 4f       	sbci	r31, 0xFF	; 255
    3c66:	43 c0       	rjmp	.+134    	; 0x3cee <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0003_D_P_MAX;
      break;
    case AMS5812_0008_D:
      _pMin = AMS5812_0008_D_P_MIN;
    3c68:	fc 01       	movw	r30, r24
    3c6a:	ee 59       	subi	r30, 0x9E	; 158
    3c6c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c6e:	3f c0       	rjmp	.+126    	; 0x3cee <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0008_D_P_MAX;
      break;
    case AMS5812_0015_D:
      _pMin = AMS5812_0015_D_P_MIN;
    3c70:	fc 01       	movw	r30, r24
    3c72:	e6 59       	subi	r30, 0x96	; 150
    3c74:	ff 4f       	sbci	r31, 0xFF	; 255
    3c76:	3b c0       	rjmp	.+118    	; 0x3cee <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0015_D_P_MAX;
      break;
    case AMS5812_0003_D_B:
      _pMin = AMS5812_0003_D_B_P_MIN;
    3c78:	fc 01       	movw	r30, r24
    3c7a:	ee 58       	subi	r30, 0x8E	; 142
    3c7c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c7e:	37 c0       	rjmp	.+110    	; 0x3cee <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0003_D_B_P_MAX;
      break;
    case AMS5812_0008_D_B:
      _pMin = AMS5812_0008_D_B_P_MIN;
    3c80:	fc 01       	movw	r30, r24
    3c82:	e6 58       	subi	r30, 0x86	; 134
    3c84:	ff 4f       	sbci	r31, 0xFF	; 255
    3c86:	33 c0       	rjmp	.+102    	; 0x3cee <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0008_D_B_P_MAX;
      break;
    case AMS5812_0015_D_B:
      _pMin = AMS5812_0015_D_B_P_MIN;
    3c88:	fc 01       	movw	r30, r24
    3c8a:	ee 57       	subi	r30, 0x7E	; 126
    3c8c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c8e:	2f c0       	rjmp	.+94     	; 0x3cee <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0015_D_B_P_MAX;
      break;
    case AMS5812_0030_D:
      _pMin = AMS5812_0030_D_P_MIN;
    3c90:	fc 01       	movw	r30, r24
    3c92:	e6 57       	subi	r30, 0x76	; 118
    3c94:	ff 4f       	sbci	r31, 0xFF	; 255
    3c96:	2b c0       	rjmp	.+86     	; 0x3cee <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0030_D_P_MAX;
      break;
    case AMS5812_0050_D:
      _pMin = AMS5812_0050_D_P_MIN;
    3c98:	fc 01       	movw	r30, r24
    3c9a:	ee 56       	subi	r30, 0x6E	; 110
    3c9c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c9e:	27 c0       	rjmp	.+78     	; 0x3cee <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0050_D_P_MAX;
      break;
    case AMS5812_0150_D:
      _pMin = AMS5812_0150_D_P_MIN;
    3ca0:	fc 01       	movw	r30, r24
    3ca2:	e6 56       	subi	r30, 0x66	; 102
    3ca4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ca6:	23 c0       	rjmp	.+70     	; 0x3cee <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0150_D_P_MAX;
      break;
    case AMS5812_0300_D:
      _pMin = AMS5812_0300_D_P_MIN;
    3ca8:	fc 01       	movw	r30, r24
    3caa:	ee 55       	subi	r30, 0x5E	; 94
    3cac:	ff 4f       	sbci	r31, 0xFF	; 255
    3cae:	1f c0       	rjmp	.+62     	; 0x3cee <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0300_D_P_MAX;
      break;
    case AMS5812_0600_D:
      _pMin = AMS5812_0600_D_P_MIN;
    3cb0:	fc 01       	movw	r30, r24
    3cb2:	e6 55       	subi	r30, 0x56	; 86
    3cb4:	ff 4f       	sbci	r31, 0xFF	; 255
    3cb6:	1b c0       	rjmp	.+54     	; 0x3cee <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0600_D_P_MAX;
      break;
    case AMS5812_1000_D:
      _pMin = AMS5812_1000_D_P_MIN;
    3cb8:	fc 01       	movw	r30, r24
    3cba:	ee 54       	subi	r30, 0x4E	; 78
    3cbc:	ff 4f       	sbci	r31, 0xFF	; 255
    3cbe:	17 c0       	rjmp	.+46     	; 0x3cee <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_1000_D_P_MAX;
      break;
    case AMS5812_0030_D_B:
      _pMin = AMS5812_0030_D_B_P_MIN;
    3cc0:	fc 01       	movw	r30, r24
    3cc2:	e6 54       	subi	r30, 0x46	; 70
    3cc4:	ff 4f       	sbci	r31, 0xFF	; 255
    3cc6:	13 c0       	rjmp	.+38     	; 0x3cee <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0030_D_B_P_MAX;
      break;
    case AMS5812_0050_D_B:
      _pMin = AMS5812_0050_D_B_P_MIN;
    3cc8:	fc 01       	movw	r30, r24
    3cca:	ee 53       	subi	r30, 0x3E	; 62
    3ccc:	ff 4f       	sbci	r31, 0xFF	; 255
    3cce:	0f c0       	rjmp	.+30     	; 0x3cee <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0050_D_B_P_MAX;
      break;
    case AMS5812_0150_D_B:
      _pMin = AMS5812_0150_D_B_P_MIN;
    3cd0:	fc 01       	movw	r30, r24
    3cd2:	e6 53       	subi	r30, 0x36	; 54
    3cd4:	ff 4f       	sbci	r31, 0xFF	; 255
    3cd6:	0b c0       	rjmp	.+22     	; 0x3cee <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0150_D_B_P_MAX;
      break;
    case AMS5812_0150_B:
      _pMin = AMS5812_0150_B_P_MIN;
    3cd8:	fc 01       	movw	r30, r24
    3cda:	ee 52       	subi	r30, 0x2E	; 46
    3cdc:	ff 4f       	sbci	r31, 0xFF	; 255
    3cde:	07 c0       	rjmp	.+14     	; 0x3cee <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0150_B_P_MAX;
      break;
    case AMS5812_0150_A:
      _pMin = AMS5812_0150_A_P_MIN;
    3ce0:	fc 01       	movw	r30, r24
    3ce2:	e6 52       	subi	r30, 0x26	; 38
    3ce4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ce6:	03 c0       	rjmp	.+6      	; 0x3cee <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0150_A_P_MAX;
      break;
    case AMS5812_0300_A:
      _pMin = AMS5812_0300_A_P_MIN;
    3ce8:	fc 01       	movw	r30, r24
    3cea:	ee 51       	subi	r30, 0x1E	; 30
    3cec:	ff 4f       	sbci	r31, 0xFF	; 255
    3cee:	40 81       	ld	r20, Z
    3cf0:	51 81       	ldd	r21, Z+1	; 0x01
    3cf2:	62 81       	ldd	r22, Z+2	; 0x02
    3cf4:	73 81       	ldd	r23, Z+3	; 0x03
    3cf6:	5a 96       	adiw	r26, 0x1a	; 26
    3cf8:	4d 93       	st	X+, r20
    3cfa:	5d 93       	st	X+, r21
    3cfc:	6d 93       	st	X+, r22
    3cfe:	7c 93       	st	X, r23
    3d00:	5d 97       	sbiw	r26, 0x1d	; 29
      _pMax = AMS5812_0300_A_P_MAX;
    3d02:	34 96       	adiw	r30, 0x04	; 4
    3d04:	40 81       	ld	r20, Z
    3d06:	51 81       	ldd	r21, Z+1	; 0x01
    3d08:	62 81       	ldd	r22, Z+2	; 0x02
    3d0a:	73 81       	ldd	r23, Z+3	; 0x03
    3d0c:	5e 96       	adiw	r26, 0x1e	; 30
    3d0e:	4d 93       	st	X+, r20
    3d10:	5d 93       	st	X+, r21
    3d12:	6d 93       	st	X+, r22
    3d14:	7c 93       	st	X, r23
    3d16:	91 97       	sbiw	r26, 0x21	; 33
    3d18:	08 95       	ret

00003d1a <_ZN7AMS58129readBytesEPjS0_>:
      break;
  }
}

/* reads pressure and temperature and returns values in counts */
int AMS5812::readBytes(uint16_t* pressureCounts, uint16_t* temperatureCounts){
    3d1a:	ef 92       	push	r14
    3d1c:	ff 92       	push	r15
    3d1e:	0f 93       	push	r16
    3d20:	1f 93       	push	r17
    3d22:	cf 93       	push	r28
    3d24:	df 93       	push	r29
    3d26:	ec 01       	movw	r28, r24
    3d28:	7b 01       	movw	r14, r22
    3d2a:	8a 01       	movw	r16, r20
  // read from sensor
  _numBytes = _bus->requestFrom(_address,sizeof(_buffer));
    3d2c:	44 e0       	ldi	r20, 0x04	; 4
    3d2e:	6a 85       	ldd	r22, Y+10	; 0x0a
    3d30:	88 85       	ldd	r24, Y+8	; 0x08
    3d32:	99 85       	ldd	r25, Y+9	; 0x09
    3d34:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <_ZN7TwoWire11requestFromEhh>
    3d38:	90 e0       	ldi	r25, 0x00	; 0
    3d3a:	99 8b       	std	Y+17, r25	; 0x11
    3d3c:	88 8b       	std	Y+16, r24	; 0x10
  // put the data in buffer
  if (_numBytes == sizeof(_buffer)) {
    3d3e:	04 97       	sbiw	r24, 0x04	; 4
    3d40:	09 f0       	breq	.+2      	; 0x3d44 <_ZN7AMS58129readBytesEPjS0_+0x2a>
    3d42:	41 c0       	rjmp	.+130    	; 0x3dc6 <_ZN7AMS58129readBytesEPjS0_+0xac>
    _buffer[0] = _bus->read(); 
    3d44:	88 85       	ldd	r24, Y+8	; 0x08
    3d46:	99 85       	ldd	r25, Y+9	; 0x09
    3d48:	dc 01       	movw	r26, r24
    3d4a:	ed 91       	ld	r30, X+
    3d4c:	fc 91       	ld	r31, X
    3d4e:	02 84       	ldd	r0, Z+10	; 0x0a
    3d50:	f3 85       	ldd	r31, Z+11	; 0x0b
    3d52:	e0 2d       	mov	r30, r0
    3d54:	09 95       	icall
    3d56:	8c 87       	std	Y+12, r24	; 0x0c
    _buffer[1] = _bus->read();
    3d58:	88 85       	ldd	r24, Y+8	; 0x08
    3d5a:	99 85       	ldd	r25, Y+9	; 0x09
    3d5c:	dc 01       	movw	r26, r24
    3d5e:	ed 91       	ld	r30, X+
    3d60:	fc 91       	ld	r31, X
    3d62:	02 84       	ldd	r0, Z+10	; 0x0a
    3d64:	f3 85       	ldd	r31, Z+11	; 0x0b
    3d66:	e0 2d       	mov	r30, r0
    3d68:	09 95       	icall
    3d6a:	8d 87       	std	Y+13, r24	; 0x0d
    _buffer[2] = _bus->read();
    3d6c:	88 85       	ldd	r24, Y+8	; 0x08
    3d6e:	99 85       	ldd	r25, Y+9	; 0x09
    3d70:	dc 01       	movw	r26, r24
    3d72:	ed 91       	ld	r30, X+
    3d74:	fc 91       	ld	r31, X
    3d76:	02 84       	ldd	r0, Z+10	; 0x0a
    3d78:	f3 85       	ldd	r31, Z+11	; 0x0b
    3d7a:	e0 2d       	mov	r30, r0
    3d7c:	09 95       	icall
    3d7e:	8e 87       	std	Y+14, r24	; 0x0e
    _buffer[3] = _bus->read();
    3d80:	88 85       	ldd	r24, Y+8	; 0x08
    3d82:	99 85       	ldd	r25, Y+9	; 0x09
    3d84:	dc 01       	movw	r26, r24
    3d86:	ed 91       	ld	r30, X+
    3d88:	fc 91       	ld	r31, X
    3d8a:	02 84       	ldd	r0, Z+10	; 0x0a
    3d8c:	f3 85       	ldd	r31, Z+11	; 0x0b
    3d8e:	e0 2d       	mov	r30, r0
    3d90:	09 95       	icall
    3d92:	8f 87       	std	Y+15, r24	; 0x0f
    // assemble into a uint16_t
    *pressureCounts = (((uint16_t) (_buffer[0]&0x7F)) <<8) + (((uint16_t) _buffer[1]));
    3d94:	8c 85       	ldd	r24, Y+12	; 0x0c
    3d96:	8f 77       	andi	r24, 0x7F	; 127
    3d98:	90 e0       	ldi	r25, 0x00	; 0
    3d9a:	98 2f       	mov	r25, r24
    3d9c:	88 27       	eor	r24, r24
    3d9e:	2d 85       	ldd	r18, Y+13	; 0x0d
    3da0:	82 0f       	add	r24, r18
    3da2:	91 1d       	adc	r25, r1
    3da4:	f7 01       	movw	r30, r14
    3da6:	91 83       	std	Z+1, r25	; 0x01
    3da8:	80 83       	st	Z, r24
    *temperatureCounts = (((uint16_t) (_buffer[2]&0x7F)) <<8) + (((uint16_t) _buffer[3]));
    3daa:	8e 85       	ldd	r24, Y+14	; 0x0e
    3dac:	8f 77       	andi	r24, 0x7F	; 127
    3dae:	90 e0       	ldi	r25, 0x00	; 0
    3db0:	98 2f       	mov	r25, r24
    3db2:	88 27       	eor	r24, r24
    3db4:	2f 85       	ldd	r18, Y+15	; 0x0f
    3db6:	82 0f       	add	r24, r18
    3db8:	91 1d       	adc	r25, r1
    3dba:	d8 01       	movw	r26, r16
    3dbc:	8d 93       	st	X+, r24
    3dbe:	9c 93       	st	X, r25
    _status = 1;
    3dc0:	81 e0       	ldi	r24, 0x01	; 1
    3dc2:	90 e0       	ldi	r25, 0x00	; 0
    3dc4:	02 c0       	rjmp	.+4      	; 0x3dca <_ZN7AMS58129readBytesEPjS0_+0xb0>
  } else {
    _status = -1;
    3dc6:	8f ef       	ldi	r24, 0xFF	; 255
    3dc8:	9f ef       	ldi	r25, 0xFF	; 255
    3dca:	9d 8b       	std	Y+21, r25	; 0x15
    3dcc:	8c 8b       	std	Y+20, r24	; 0x14
  }
  return _status;
}
    3dce:	8c 89       	ldd	r24, Y+20	; 0x14
    3dd0:	9d 89       	ldd	r25, Y+21	; 0x15
    3dd2:	df 91       	pop	r29
    3dd4:	cf 91       	pop	r28
    3dd6:	1f 91       	pop	r17
    3dd8:	0f 91       	pop	r16
    3dda:	ff 90       	pop	r15
    3ddc:	ef 90       	pop	r14
    3dde:	08 95       	ret

00003de0 <_ZN7AMS58125beginEv>:
  // transducer type
  _type = type; 
}

/* starts the I2C communication and sets the pressure and temperature ranges using getTransducer */
int AMS5812::begin(){
    3de0:	cf 92       	push	r12
    3de2:	df 92       	push	r13
    3de4:	ef 92       	push	r14
    3de6:	ff 92       	push	r15
    3de8:	0f 93       	push	r16
    3dea:	1f 93       	push	r17
    3dec:	cf 93       	push	r28
    3dee:	df 93       	push	r29
    3df0:	ec 01       	movw	r28, r24
  // starting the I2C bus
  _bus->begin();
    3df2:	88 85       	ldd	r24, Y+8	; 0x08
    3df4:	99 85       	ldd	r25, Y+9	; 0x09
    3df6:	0e 94 e6 2b 	call	0x57cc	; 0x57cc <_ZN7TwoWire5beginEv>
  // setting the I2C clock
  _bus->setClock(_i2cRate);
    3dfa:	4a a1       	ldd	r20, Y+34	; 0x22
    3dfc:	5b a1       	ldd	r21, Y+35	; 0x23
    3dfe:	6c a1       	ldd	r22, Y+36	; 0x24
    3e00:	7d a1       	ldd	r23, Y+37	; 0x25
    3e02:	88 85       	ldd	r24, Y+8	; 0x08
    3e04:	99 85       	ldd	r25, Y+9	; 0x09
    3e06:	0e 94 f8 2b 	call	0x57f0	; 0x57f0 <_ZN7TwoWire8setClockEm>
  // setting the min and max pressure based on the chip
  getTransducer();
    3e0a:	ce 01       	movw	r24, r28
    3e0c:	0e 94 06 1e 	call	0x3c0c	; 0x3c0c <_ZN7AMS581213getTransducerEv>
  // checking to see if we can talk with the sensor
  for (size_t i=0; i < _maxAttempts; i++) {
    3e10:	00 e0       	ldi	r16, 0x00	; 0
    3e12:	10 e0       	ldi	r17, 0x00	; 0
    _status = readBytes(&_pressureCounts,&_temperatureCounts);
    3e14:	7e 01       	movw	r14, r28
    3e16:	88 e1       	ldi	r24, 0x18	; 24
    3e18:	e8 0e       	add	r14, r24
    3e1a:	f1 1c       	adc	r15, r1
    3e1c:	6e 01       	movw	r12, r28
    3e1e:	86 e1       	ldi	r24, 0x16	; 22
    3e20:	c8 0e       	add	r12, r24
    3e22:	d1 1c       	adc	r13, r1
  // setting the I2C clock
  _bus->setClock(_i2cRate);
  // setting the min and max pressure based on the chip
  getTransducer();
  // checking to see if we can talk with the sensor
  for (size_t i=0; i < _maxAttempts; i++) {
    3e24:	8a 89       	ldd	r24, Y+18	; 0x12
    3e26:	9b 89       	ldd	r25, Y+19	; 0x13
    3e28:	08 17       	cp	r16, r24
    3e2a:	19 07       	cpc	r17, r25
    3e2c:	98 f4       	brcc	.+38     	; 0x3e54 <_ZN7AMS58125beginEv+0x74>
    _status = readBytes(&_pressureCounts,&_temperatureCounts);
    3e2e:	a7 01       	movw	r20, r14
    3e30:	b6 01       	movw	r22, r12
    3e32:	ce 01       	movw	r24, r28
    3e34:	0e 94 8d 1e 	call	0x3d1a	; 0x3d1a <_ZN7AMS58129readBytesEPjS0_>
    3e38:	9d 8b       	std	Y+21, r25	; 0x15
    3e3a:	8c 8b       	std	Y+20, r24	; 0x14
    if (_status > 0) {break;}
    3e3c:	18 16       	cp	r1, r24
    3e3e:	19 06       	cpc	r1, r25
    3e40:	4c f0       	brlt	.+18     	; 0x3e54 <_ZN7AMS58125beginEv+0x74>
    delay(10);
    3e42:	6a e0       	ldi	r22, 0x0A	; 10
    3e44:	70 e0       	ldi	r23, 0x00	; 0
    3e46:	80 e0       	ldi	r24, 0x00	; 0
    3e48:	90 e0       	ldi	r25, 0x00	; 0
    3e4a:	0e 94 4a 1a 	call	0x3494	; 0x3494 <delay>
  // setting the I2C clock
  _bus->setClock(_i2cRate);
  // setting the min and max pressure based on the chip
  getTransducer();
  // checking to see if we can talk with the sensor
  for (size_t i=0; i < _maxAttempts; i++) {
    3e4e:	0f 5f       	subi	r16, 0xFF	; 255
    3e50:	1f 4f       	sbci	r17, 0xFF	; 255
    3e52:	e8 cf       	rjmp	.-48     	; 0x3e24 <_ZN7AMS58125beginEv+0x44>
    _status = readBytes(&_pressureCounts,&_temperatureCounts);
    if (_status > 0) {break;}
    delay(10);
  }
  return _status;
}
    3e54:	8c 89       	ldd	r24, Y+20	; 0x14
    3e56:	9d 89       	ldd	r25, Y+21	; 0x15
    3e58:	df 91       	pop	r29
    3e5a:	cf 91       	pop	r28
    3e5c:	1f 91       	pop	r17
    3e5e:	0f 91       	pop	r16
    3e60:	ff 90       	pop	r15
    3e62:	ef 90       	pop	r14
    3e64:	df 90       	pop	r13
    3e66:	cf 90       	pop	r12
    3e68:	08 95       	ret

00003e6a <_ZN7AMS581210readSensorEv>:

/* reads data from the sensor */
int AMS5812::readSensor(){
    3e6a:	4f 92       	push	r4
    3e6c:	5f 92       	push	r5
    3e6e:	6f 92       	push	r6
    3e70:	7f 92       	push	r7
    3e72:	8f 92       	push	r8
    3e74:	9f 92       	push	r9
    3e76:	af 92       	push	r10
    3e78:	bf 92       	push	r11
    3e7a:	cf 92       	push	r12
    3e7c:	df 92       	push	r13
    3e7e:	ef 92       	push	r14
    3e80:	ff 92       	push	r15
    3e82:	0f 93       	push	r16
    3e84:	1f 93       	push	r17
    3e86:	cf 93       	push	r28
    3e88:	df 93       	push	r29
    3e8a:	ec 01       	movw	r28, r24
  // get pressure and temperature off transducer
  _status = readBytes(&_pressureCounts, &_temperatureCounts);
    3e8c:	ac 01       	movw	r20, r24
    3e8e:	48 5e       	subi	r20, 0xE8	; 232
    3e90:	5f 4f       	sbci	r21, 0xFF	; 255
    3e92:	bc 01       	movw	r22, r24
    3e94:	6a 5e       	subi	r22, 0xEA	; 234
    3e96:	7f 4f       	sbci	r23, 0xFF	; 255
    3e98:	0e 94 8d 1e 	call	0x3d1a	; 0x3d1a <_ZN7AMS58129readBytesEPjS0_>
    3e9c:	8c 01       	movw	r16, r24
    3e9e:	9d 8b       	std	Y+21, r25	; 0x15
    3ea0:	8c 8b       	std	Y+20, r24	; 0x14
  // convert counts to pressure, PA
  _data.Pressure_Pa = ((_pressureCounts - _digOutPmin)/((_digOutPmax - _digOutPmin)/(_pMax - _pMin)) + _pMin) * _psi2pa;
    3ea2:	6a a4       	ldd	r6, Y+42	; 0x2a
    3ea4:	7b a4       	ldd	r7, Y+43	; 0x2b
    3ea6:	ca 8c       	ldd	r12, Y+26	; 0x1a
    3ea8:	db 8c       	ldd	r13, Y+27	; 0x1b
    3eaa:	ec 8c       	ldd	r14, Y+28	; 0x1c
    3eac:	fd 8c       	ldd	r15, Y+29	; 0x1d
    3eae:	6e 89       	ldd	r22, Y+22	; 0x16
    3eb0:	7f 89       	ldd	r23, Y+23	; 0x17
    3eb2:	66 19       	sub	r22, r6
    3eb4:	77 09       	sbc	r23, r7
    3eb6:	80 e0       	ldi	r24, 0x00	; 0
    3eb8:	90 e0       	ldi	r25, 0x00	; 0
    3eba:	0e 94 aa 15 	call	0x2b54	; 0x2b54 <__floatunsisf>
    3ebe:	4b 01       	movw	r8, r22
    3ec0:	5c 01       	movw	r10, r24
    3ec2:	6c a5       	ldd	r22, Y+44	; 0x2c
    3ec4:	7d a5       	ldd	r23, Y+45	; 0x2d
    3ec6:	66 19       	sub	r22, r6
    3ec8:	77 09       	sbc	r23, r7
    3eca:	07 2e       	mov	r0, r23
    3ecc:	00 0c       	add	r0, r0
    3ece:	88 0b       	sbc	r24, r24
    3ed0:	99 0b       	sbc	r25, r25
    3ed2:	0e 94 ac 15 	call	0x2b58	; 0x2b58 <__floatsisf>
    3ed6:	2b 01       	movw	r4, r22
    3ed8:	3c 01       	movw	r6, r24
    3eda:	a7 01       	movw	r20, r14
    3edc:	96 01       	movw	r18, r12
    3ede:	6e 8d       	ldd	r22, Y+30	; 0x1e
    3ee0:	7f 8d       	ldd	r23, Y+31	; 0x1f
    3ee2:	88 a1       	ldd	r24, Y+32	; 0x20
    3ee4:	99 a1       	ldd	r25, Y+33	; 0x21
    3ee6:	0e 94 95 14 	call	0x292a	; 0x292a <__subsf3>
    3eea:	9b 01       	movw	r18, r22
    3eec:	ac 01       	movw	r20, r24
    3eee:	c3 01       	movw	r24, r6
    3ef0:	b2 01       	movw	r22, r4
    3ef2:	0e 94 02 15 	call	0x2a04	; 0x2a04 <__divsf3>
    3ef6:	9b 01       	movw	r18, r22
    3ef8:	ac 01       	movw	r20, r24
    3efa:	c5 01       	movw	r24, r10
    3efc:	b4 01       	movw	r22, r8
    3efe:	0e 94 02 15 	call	0x2a04	; 0x2a04 <__divsf3>
    3f02:	a7 01       	movw	r20, r14
    3f04:	96 01       	movw	r18, r12
    3f06:	0e 94 96 14 	call	0x292c	; 0x292c <__addsf3>
    3f0a:	2e a1       	ldd	r18, Y+38	; 0x26
    3f0c:	3f a1       	ldd	r19, Y+39	; 0x27
    3f0e:	48 a5       	ldd	r20, Y+40	; 0x28
    3f10:	59 a5       	ldd	r21, Y+41	; 0x29
    3f12:	0e 94 7e 31 	call	0x62fc	; 0x62fc <__mulsf3>
    3f16:	68 83       	st	Y, r22
    3f18:	79 83       	std	Y+1, r23	; 0x01
    3f1a:	8a 83       	std	Y+2, r24	; 0x02
    3f1c:	9b 83       	std	Y+3, r25	; 0x03
  // convert counts to temperature, C
  _data.Temp_C = ((_temperatureCounts - _digOutTmin)/((_digOutTmax - _digOutTmin)/(_tMax - _tMin)) + _tMin);
    3f1e:	6e a4       	ldd	r6, Y+46	; 0x2e
    3f20:	7f a4       	ldd	r7, Y+47	; 0x2f
    3f22:	ca a8       	ldd	r12, Y+50	; 0x32
    3f24:	db a8       	ldd	r13, Y+51	; 0x33
    3f26:	ec a8       	ldd	r14, Y+52	; 0x34
    3f28:	fd a8       	ldd	r15, Y+53	; 0x35
    3f2a:	68 8d       	ldd	r22, Y+24	; 0x18
    3f2c:	79 8d       	ldd	r23, Y+25	; 0x19
    3f2e:	66 19       	sub	r22, r6
    3f30:	77 09       	sbc	r23, r7
    3f32:	80 e0       	ldi	r24, 0x00	; 0
    3f34:	90 e0       	ldi	r25, 0x00	; 0
    3f36:	0e 94 aa 15 	call	0x2b54	; 0x2b54 <__floatunsisf>
    3f3a:	4b 01       	movw	r8, r22
    3f3c:	5c 01       	movw	r10, r24
    3f3e:	68 a9       	ldd	r22, Y+48	; 0x30
    3f40:	79 a9       	ldd	r23, Y+49	; 0x31
    3f42:	66 19       	sub	r22, r6
    3f44:	77 09       	sbc	r23, r7
    3f46:	07 2e       	mov	r0, r23
    3f48:	00 0c       	add	r0, r0
    3f4a:	88 0b       	sbc	r24, r24
    3f4c:	99 0b       	sbc	r25, r25
    3f4e:	0e 94 ac 15 	call	0x2b58	; 0x2b58 <__floatsisf>
    3f52:	2b 01       	movw	r4, r22
    3f54:	3c 01       	movw	r6, r24
    3f56:	a7 01       	movw	r20, r14
    3f58:	96 01       	movw	r18, r12
    3f5a:	6e a9       	ldd	r22, Y+54	; 0x36
    3f5c:	7f a9       	ldd	r23, Y+55	; 0x37
    3f5e:	88 ad       	ldd	r24, Y+56	; 0x38
    3f60:	99 ad       	ldd	r25, Y+57	; 0x39
    3f62:	0e 94 95 14 	call	0x292a	; 0x292a <__subsf3>
    3f66:	9b 01       	movw	r18, r22
    3f68:	ac 01       	movw	r20, r24
    3f6a:	c3 01       	movw	r24, r6
    3f6c:	b2 01       	movw	r22, r4
    3f6e:	0e 94 02 15 	call	0x2a04	; 0x2a04 <__divsf3>
    3f72:	9b 01       	movw	r18, r22
    3f74:	ac 01       	movw	r20, r24
    3f76:	c5 01       	movw	r24, r10
    3f78:	b4 01       	movw	r22, r8
    3f7a:	0e 94 02 15 	call	0x2a04	; 0x2a04 <__divsf3>
    3f7e:	a7 01       	movw	r20, r14
    3f80:	96 01       	movw	r18, r12
    3f82:	0e 94 96 14 	call	0x292c	; 0x292c <__addsf3>
    3f86:	6c 83       	std	Y+4, r22	; 0x04
    3f88:	7d 83       	std	Y+5, r23	; 0x05
    3f8a:	8e 83       	std	Y+6, r24	; 0x06
    3f8c:	9f 83       	std	Y+7, r25	; 0x07
  return _status;
}
    3f8e:	c8 01       	movw	r24, r16
    3f90:	df 91       	pop	r29
    3f92:	cf 91       	pop	r28
    3f94:	1f 91       	pop	r17
    3f96:	0f 91       	pop	r16
    3f98:	ff 90       	pop	r15
    3f9a:	ef 90       	pop	r14
    3f9c:	df 90       	pop	r13
    3f9e:	cf 90       	pop	r12
    3fa0:	bf 90       	pop	r11
    3fa2:	af 90       	pop	r10
    3fa4:	9f 90       	pop	r9
    3fa6:	8f 90       	pop	r8
    3fa8:	7f 90       	pop	r7
    3faa:	6f 90       	pop	r6
    3fac:	5f 90       	pop	r5
    3fae:	4f 90       	pop	r4
    3fb0:	08 95       	ret

00003fb2 <_ZN14TFT_22_ILI9225C1Eaaaah>:
#endif
    for (uint16_t i = 0; i < h * w; ++i) {
        _spiWrite16(bitmap[i]);
    }
    SPI_CS_HIGH();
    endWrite();
    3fb2:	ef 92       	push	r14
    3fb4:	0f 93       	push	r16
    3fb6:	cf 93       	push	r28
    3fb8:	df 93       	push	r29
    3fba:	ec 01       	movw	r28, r24
    3fbc:	88 e1       	ldi	r24, 0x18	; 24
    3fbe:	e6 e0       	ldi	r30, 0x06	; 6
    3fc0:	f1 e0       	ldi	r31, 0x01	; 1
    3fc2:	de 01       	movw	r26, r28
    3fc4:	5c 96       	adiw	r26, 0x1c	; 28
    3fc6:	01 90       	ld	r0, Z+
    3fc8:	0d 92       	st	X+, r0
    3fca:	8a 95       	dec	r24
    3fcc:	e1 f7       	brne	.-8      	; 0x3fc6 <_ZN14TFT_22_ILI9225C1Eaaaah+0x14>
    3fce:	6e 83       	std	Y+6, r22	; 0x06
    3fd0:	4f 83       	std	Y+7, r20	; 0x07
    3fd2:	28 87       	std	Y+8, r18	; 0x08
    3fd4:	8f ef       	ldi	r24, 0xFF	; 255
    3fd6:	8a 87       	std	Y+10, r24	; 0x0a
    3fd8:	89 87       	std	Y+9, r24	; 0x09
    3fda:	0b 87       	std	Y+11, r16	; 0x0b
    3fdc:	eb 8e       	std	Y+27, r14	; 0x1b
    3fde:	81 e0       	ldi	r24, 0x01	; 1
    3fe0:	8c ab       	std	Y+52, r24	; 0x34
    3fe2:	fe 01       	movw	r30, r28
    3fe4:	fe 96       	adiw	r30, 0x3e	; 62
    3fe6:	10 82       	st	Z, r1
    3fe8:	11 82       	std	Z+1, r1	; 0x01
    3fea:	12 82       	std	Z+2, r1	; 0x02
    3fec:	13 82       	std	Z+3, r1	; 0x03
    3fee:	ce 5b       	subi	r28, 0xBE	; 190
    3ff0:	df 4f       	sbci	r29, 0xFF	; 255
    3ff2:	19 82       	std	Y+1, r1	; 0x01
    3ff4:	18 82       	st	Y, r1
    3ff6:	df 91       	pop	r29
    3ff8:	cf 91       	pop	r28
    3ffa:	0f 91       	pop	r16
    3ffc:	ef 90       	pop	r14
    3ffe:	08 95       	ret

00004000 <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_>:
    4000:	cf 93       	push	r28
    4002:	df 93       	push	r29
    4004:	ec 01       	movw	r28, r24
    4006:	db 01       	movw	r26, r22
    4008:	fa 01       	movw	r30, r20
    400a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    400c:	82 30       	cpi	r24, 0x02	; 2
    400e:	a9 f0       	breq	.+42     	; 0x403a <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_+0x3a>
    4010:	83 30       	cpi	r24, 0x03	; 3
    4012:	29 f1       	breq	.+74     	; 0x405e <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_+0x5e>
    4014:	81 30       	cpi	r24, 0x01	; 1
    4016:	a1 f5       	brne	.+104    	; 0x4080 <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_+0x80>
    4018:	8a 81       	ldd	r24, Y+2	; 0x02
    401a:	9b 81       	ldd	r25, Y+3	; 0x03
    401c:	01 97       	sbiw	r24, 0x01	; 1
    401e:	20 81       	ld	r18, Z
    4020:	31 81       	ldd	r19, Z+1	; 0x01
    4022:	82 1b       	sub	r24, r18
    4024:	93 0b       	sbc	r25, r19
    4026:	91 83       	std	Z+1, r25	; 0x01
    4028:	80 83       	st	Z, r24
    402a:	2d 91       	ld	r18, X+
    402c:	3c 91       	ld	r19, X
    402e:	11 97       	sbiw	r26, 0x01	; 1
    4030:	8d 93       	st	X+, r24
    4032:	9c 93       	st	X, r25
    4034:	31 83       	std	Z+1, r19	; 0x01
    4036:	20 83       	st	Z, r18
    4038:	23 c0       	rjmp	.+70     	; 0x4080 <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_+0x80>
    403a:	88 81       	ld	r24, Y
    403c:	99 81       	ldd	r25, Y+1	; 0x01
    403e:	01 97       	sbiw	r24, 0x01	; 1
    4040:	2d 91       	ld	r18, X+
    4042:	3c 91       	ld	r19, X
    4044:	11 97       	sbiw	r26, 0x01	; 1
    4046:	82 1b       	sub	r24, r18
    4048:	93 0b       	sbc	r25, r19
    404a:	8d 93       	st	X+, r24
    404c:	9c 93       	st	X, r25
    404e:	8a 81       	ldd	r24, Y+2	; 0x02
    4050:	9b 81       	ldd	r25, Y+3	; 0x03
    4052:	01 97       	sbiw	r24, 0x01	; 1
    4054:	20 81       	ld	r18, Z
    4056:	31 81       	ldd	r19, Z+1	; 0x01
    4058:	82 1b       	sub	r24, r18
    405a:	93 0b       	sbc	r25, r19
    405c:	0f c0       	rjmp	.+30     	; 0x407c <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_+0x7c>
    405e:	88 81       	ld	r24, Y
    4060:	99 81       	ldd	r25, Y+1	; 0x01
    4062:	01 97       	sbiw	r24, 0x01	; 1
    4064:	2d 91       	ld	r18, X+
    4066:	3c 91       	ld	r19, X
    4068:	11 97       	sbiw	r26, 0x01	; 1
    406a:	82 1b       	sub	r24, r18
    406c:	93 0b       	sbc	r25, r19
    406e:	11 96       	adiw	r26, 0x01	; 1
    4070:	9c 93       	st	X, r25
    4072:	8e 93       	st	-X, r24
    4074:	20 81       	ld	r18, Z
    4076:	31 81       	ldd	r19, Z+1	; 0x01
    4078:	2d 93       	st	X+, r18
    407a:	3c 93       	st	X, r19
    407c:	91 83       	std	Z+1, r25	; 0x01
    407e:	80 83       	st	Z, r24
    4080:	df 91       	pop	r29
    4082:	cf 91       	pop	r28
    4084:	08 95       	ret

00004086 <_ZN14TFT_22_ILI922512setBacklightEb>:
    4086:	fc 01       	movw	r30, r24
    4088:	65 ab       	std	Z+53, r22	; 0x35
    408a:	83 85       	ldd	r24, Z+11	; 0x0b
    408c:	88 23       	and	r24, r24
    408e:	49 f0       	breq	.+18     	; 0x40a2 <_ZN14TFT_22_ILI922512setBacklightEb+0x1c>
    4090:	66 23       	and	r22, r22
    4092:	19 f0       	breq	.+6      	; 0x409a <_ZN14TFT_22_ILI922512setBacklightEb+0x14>
    4094:	63 8d       	ldd	r22, Z+27	; 0x1b
    4096:	70 e0       	ldi	r23, 0x00	; 0
    4098:	02 c0       	rjmp	.+4      	; 0x409e <_ZN14TFT_22_ILI922512setBacklightEb+0x18>
    409a:	60 e0       	ldi	r22, 0x00	; 0
    409c:	70 e0       	ldi	r23, 0x00	; 0
    409e:	0c 94 85 2c 	jmp	0x590a	; 0x590a <analogWrite>
    40a2:	08 95       	ret

000040a4 <_ZN14TFT_22_ILI922514setOrientationEh>:
    40a4:	fc 01       	movw	r30, r24
    40a6:	63 70       	andi	r22, 0x03	; 3
    40a8:	62 8f       	std	Z+26, r22	; 0x1a
    40aa:	62 30       	cpi	r22, 0x02	; 2
    40ac:	21 f0       	breq	.+8      	; 0x40b6 <_ZN14TFT_22_ILI922514setOrientationEh+0x12>
    40ae:	63 30       	cpi	r22, 0x03	; 3
    40b0:	49 f0       	breq	.+18     	; 0x40c4 <_ZN14TFT_22_ILI922514setOrientationEh+0x20>
    40b2:	61 30       	cpi	r22, 0x01	; 1
    40b4:	39 f0       	breq	.+14     	; 0x40c4 <_ZN14TFT_22_ILI922514setOrientationEh+0x20>
    40b6:	80 eb       	ldi	r24, 0xB0	; 176
    40b8:	90 e0       	ldi	r25, 0x00	; 0
    40ba:	91 83       	std	Z+1, r25	; 0x01
    40bc:	80 83       	st	Z, r24
    40be:	8c ed       	ldi	r24, 0xDC	; 220
    40c0:	90 e0       	ldi	r25, 0x00	; 0
    40c2:	06 c0       	rjmp	.+12     	; 0x40d0 <_ZN14TFT_22_ILI922514setOrientationEh+0x2c>
    40c4:	8c ed       	ldi	r24, 0xDC	; 220
    40c6:	90 e0       	ldi	r25, 0x00	; 0
    40c8:	91 83       	std	Z+1, r25	; 0x01
    40ca:	80 83       	st	Z, r24
    40cc:	80 eb       	ldi	r24, 0xB0	; 176
    40ce:	90 e0       	ldi	r25, 0x00	; 0
    40d0:	93 83       	std	Z+3, r25	; 0x03
    40d2:	82 83       	std	Z+2, r24	; 0x02
    40d4:	08 95       	ret

000040d6 <_ZN14TFT_22_ILI92254maxXEv>:
    40d6:	fc 01       	movw	r30, r24
    40d8:	80 81       	ld	r24, Z
    40da:	91 81       	ldd	r25, Z+1	; 0x01
    40dc:	08 95       	ret

000040de <_ZN14TFT_22_ILI92254maxYEv>:
    40de:	fc 01       	movw	r30, r24
    40e0:	82 81       	ldd	r24, Z+2	; 0x02
    40e2:	93 81       	ldd	r25, Z+3	; 0x03
    40e4:	08 95       	ret

000040e6 <_ZN14TFT_22_ILI922515_writeCommand16Ej>:
    40e6:	cf 93       	push	r28
    40e8:	df 93       	push	r29
    40ea:	fc 01       	movw	r30, r24
    40ec:	a0 89       	ldd	r26, Z+16	; 0x10
    40ee:	b1 89       	ldd	r27, Z+17	; 0x11
    40f0:	9c 91       	ld	r25, X
    40f2:	81 8d       	ldd	r24, Z+25	; 0x19
    40f4:	80 95       	com	r24
    40f6:	89 23       	and	r24, r25
    40f8:	8c 93       	st	X, r24
    40fa:	a4 89       	ldd	r26, Z+20	; 0x14
    40fc:	b5 89       	ldd	r27, Z+21	; 0x15
    40fe:	9c 91       	ld	r25, X
    4100:	80 8d       	ldd	r24, Z+24	; 0x18
    4102:	80 95       	com	r24
    4104:	89 23       	and	r24, r25
    4106:	8c 93       	st	X, r24
    4108:	82 85       	ldd	r24, Z+10	; 0x0a
    410a:	87 ff       	sbrs	r24, 7
    410c:	11 c0       	rjmp	.+34     	; 0x4130 <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x4a>
    410e:	7e bd       	out	0x2e, r23	; 46
    4110:	0d b4       	in	r0, 0x2d	; 45
    4112:	07 fe       	sbrs	r0, 7
    4114:	fd cf       	rjmp	.-6      	; 0x4110 <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x2a>
    4116:	6e bd       	out	0x2e, r22	; 46
    4118:	0d b4       	in	r0, 0x2d	; 45
    411a:	07 fe       	sbrs	r0, 7
    411c:	fd cf       	rjmp	.-6      	; 0x4118 <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x32>
    411e:	a4 89       	ldd	r26, Z+20	; 0x14
    4120:	b5 89       	ldd	r27, Z+21	; 0x15
    4122:	9c 91       	ld	r25, X
    4124:	80 8d       	ldd	r24, Z+24	; 0x18
    4126:	89 2b       	or	r24, r25
    4128:	8c 93       	st	X, r24
    412a:	df 91       	pop	r29
    412c:	cf 91       	pop	r28
    412e:	08 95       	ret
    4130:	20 e1       	ldi	r18, 0x10	; 16
    4132:	30 e0       	ldi	r19, 0x00	; 0
    4134:	40 e0       	ldi	r20, 0x00	; 0
    4136:	50 e8       	ldi	r21, 0x80	; 128
    4138:	a4 85       	ldd	r26, Z+12	; 0x0c
    413a:	b5 85       	ldd	r27, Z+13	; 0x0d
    413c:	86 89       	ldd	r24, Z+22	; 0x16
    413e:	eb 01       	movw	r28, r22
    4140:	c4 23       	and	r28, r20
    4142:	d5 23       	and	r29, r21
    4144:	9c 91       	ld	r25, X
    4146:	cd 2b       	or	r28, r29
    4148:	11 f0       	breq	.+4      	; 0x414e <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x68>
    414a:	89 2b       	or	r24, r25
    414c:	02 c0       	rjmp	.+4      	; 0x4152 <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x6c>
    414e:	80 95       	com	r24
    4150:	89 23       	and	r24, r25
    4152:	8c 93       	st	X, r24
    4154:	a6 85       	ldd	r26, Z+14	; 0x0e
    4156:	b7 85       	ldd	r27, Z+15	; 0x0f
    4158:	9c 91       	ld	r25, X
    415a:	87 89       	ldd	r24, Z+23	; 0x17
    415c:	89 2b       	or	r24, r25
    415e:	8c 93       	st	X, r24
    4160:	a6 85       	ldd	r26, Z+14	; 0x0e
    4162:	b7 85       	ldd	r27, Z+15	; 0x0f
    4164:	9c 91       	ld	r25, X
    4166:	87 89       	ldd	r24, Z+23	; 0x17
    4168:	80 95       	com	r24
    416a:	89 23       	and	r24, r25
    416c:	8c 93       	st	X, r24
    416e:	56 95       	lsr	r21
    4170:	47 95       	ror	r20
    4172:	21 50       	subi	r18, 0x01	; 1
    4174:	31 09       	sbc	r19, r1
    4176:	01 f7       	brne	.-64     	; 0x4138 <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x52>
    4178:	d2 cf       	rjmp	.-92     	; 0x411e <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x38>

0000417a <_ZN14TFT_22_ILI922512_writeData16Ej>:
    417a:	cf 93       	push	r28
    417c:	df 93       	push	r29
    417e:	fc 01       	movw	r30, r24
    4180:	a0 89       	ldd	r26, Z+16	; 0x10
    4182:	b1 89       	ldd	r27, Z+17	; 0x11
    4184:	9c 91       	ld	r25, X
    4186:	81 8d       	ldd	r24, Z+25	; 0x19
    4188:	89 2b       	or	r24, r25
    418a:	8c 93       	st	X, r24
    418c:	a4 89       	ldd	r26, Z+20	; 0x14
    418e:	b5 89       	ldd	r27, Z+21	; 0x15
    4190:	9c 91       	ld	r25, X
    4192:	80 8d       	ldd	r24, Z+24	; 0x18
    4194:	80 95       	com	r24
    4196:	89 23       	and	r24, r25
    4198:	8c 93       	st	X, r24
    419a:	82 85       	ldd	r24, Z+10	; 0x0a
    419c:	87 ff       	sbrs	r24, 7
    419e:	11 c0       	rjmp	.+34     	; 0x41c2 <_ZN14TFT_22_ILI922512_writeData16Ej+0x48>
    41a0:	7e bd       	out	0x2e, r23	; 46
    41a2:	0d b4       	in	r0, 0x2d	; 45
    41a4:	07 fe       	sbrs	r0, 7
    41a6:	fd cf       	rjmp	.-6      	; 0x41a2 <_ZN14TFT_22_ILI922512_writeData16Ej+0x28>
    41a8:	6e bd       	out	0x2e, r22	; 46
    41aa:	0d b4       	in	r0, 0x2d	; 45
    41ac:	07 fe       	sbrs	r0, 7
    41ae:	fd cf       	rjmp	.-6      	; 0x41aa <_ZN14TFT_22_ILI922512_writeData16Ej+0x30>
    41b0:	a4 89       	ldd	r26, Z+20	; 0x14
    41b2:	b5 89       	ldd	r27, Z+21	; 0x15
    41b4:	9c 91       	ld	r25, X
    41b6:	80 8d       	ldd	r24, Z+24	; 0x18
    41b8:	89 2b       	or	r24, r25
    41ba:	8c 93       	st	X, r24
    41bc:	df 91       	pop	r29
    41be:	cf 91       	pop	r28
    41c0:	08 95       	ret
    41c2:	20 e1       	ldi	r18, 0x10	; 16
    41c4:	30 e0       	ldi	r19, 0x00	; 0
    41c6:	40 e0       	ldi	r20, 0x00	; 0
    41c8:	50 e8       	ldi	r21, 0x80	; 128
    41ca:	a4 85       	ldd	r26, Z+12	; 0x0c
    41cc:	b5 85       	ldd	r27, Z+13	; 0x0d
    41ce:	86 89       	ldd	r24, Z+22	; 0x16
    41d0:	eb 01       	movw	r28, r22
    41d2:	c4 23       	and	r28, r20
    41d4:	d5 23       	and	r29, r21
    41d6:	9c 91       	ld	r25, X
    41d8:	cd 2b       	or	r28, r29
    41da:	11 f0       	breq	.+4      	; 0x41e0 <_ZN14TFT_22_ILI922512_writeData16Ej+0x66>
    41dc:	89 2b       	or	r24, r25
    41de:	02 c0       	rjmp	.+4      	; 0x41e4 <_ZN14TFT_22_ILI922512_writeData16Ej+0x6a>
    41e0:	80 95       	com	r24
    41e2:	89 23       	and	r24, r25
    41e4:	8c 93       	st	X, r24
    41e6:	a6 85       	ldd	r26, Z+14	; 0x0e
    41e8:	b7 85       	ldd	r27, Z+15	; 0x0f
    41ea:	9c 91       	ld	r25, X
    41ec:	87 89       	ldd	r24, Z+23	; 0x17
    41ee:	89 2b       	or	r24, r25
    41f0:	8c 93       	st	X, r24
    41f2:	a6 85       	ldd	r26, Z+14	; 0x0e
    41f4:	b7 85       	ldd	r27, Z+15	; 0x0f
    41f6:	9c 91       	ld	r25, X
    41f8:	87 89       	ldd	r24, Z+23	; 0x17
    41fa:	80 95       	com	r24
    41fc:	89 23       	and	r24, r25
    41fe:	8c 93       	st	X, r24
    4200:	56 95       	lsr	r21
    4202:	47 95       	ror	r20
    4204:	21 50       	subi	r18, 0x01	; 1
    4206:	31 09       	sbc	r19, r1
    4208:	01 f7       	brne	.-64     	; 0x41ca <_ZN14TFT_22_ILI922512_writeData16Ej+0x50>
    420a:	d2 cf       	rjmp	.-92     	; 0x41b0 <_ZN14TFT_22_ILI922512_writeData16Ej+0x36>

0000420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>:
    420c:	0f 93       	push	r16
    420e:	1f 93       	push	r17
    4210:	cf 93       	push	r28
    4212:	df 93       	push	r29
    4214:	ec 01       	movw	r28, r24
    4216:	8a 01       	movw	r16, r20
    4218:	0e 94 73 20 	call	0x40e6	; 0x40e6 <_ZN14TFT_22_ILI922515_writeCommand16Ej>
    421c:	b8 01       	movw	r22, r16
    421e:	ce 01       	movw	r24, r28
    4220:	df 91       	pop	r29
    4222:	cf 91       	pop	r28
    4224:	1f 91       	pop	r17
    4226:	0f 91       	pop	r16
    4228:	0c 94 bd 20 	jmp	0x417a	; 0x417a <_ZN14TFT_22_ILI922512_writeData16Ej>

0000422c <_ZN14TFT_22_ILI922512_resetWindowEv>:
    422c:	cf 93       	push	r28
    422e:	df 93       	push	r29
    4230:	ec 01       	movw	r28, r24
    4232:	4f ea       	ldi	r20, 0xAF	; 175
    4234:	50 e0       	ldi	r21, 0x00	; 0
    4236:	66 e3       	ldi	r22, 0x36	; 54
    4238:	70 e0       	ldi	r23, 0x00	; 0
    423a:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    423e:	40 e0       	ldi	r20, 0x00	; 0
    4240:	50 e0       	ldi	r21, 0x00	; 0
    4242:	67 e3       	ldi	r22, 0x37	; 55
    4244:	70 e0       	ldi	r23, 0x00	; 0
    4246:	ce 01       	movw	r24, r28
    4248:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    424c:	4b ed       	ldi	r20, 0xDB	; 219
    424e:	50 e0       	ldi	r21, 0x00	; 0
    4250:	68 e3       	ldi	r22, 0x38	; 56
    4252:	70 e0       	ldi	r23, 0x00	; 0
    4254:	ce 01       	movw	r24, r28
    4256:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    425a:	40 e0       	ldi	r20, 0x00	; 0
    425c:	50 e0       	ldi	r21, 0x00	; 0
    425e:	69 e3       	ldi	r22, 0x39	; 57
    4260:	70 e0       	ldi	r23, 0x00	; 0
    4262:	ce 01       	movw	r24, r28
    4264:	df 91       	pop	r29
    4266:	cf 91       	pop	r28
    4268:	0c 94 06 21 	jmp	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>

0000426c <_ZN14TFT_22_ILI92257setFontEPhb>:
    426c:	dc 01       	movw	r26, r24
    426e:	d7 96       	adiw	r26, 0x37	; 55
    4270:	7c 93       	st	X, r23
    4272:	6e 93       	st	-X, r22
    4274:	d6 97       	sbiw	r26, 0x36	; 54
    4276:	fb 01       	movw	r30, r22
    4278:	84 91       	lpm	r24, Z
    427a:	d8 96       	adiw	r26, 0x38	; 56
    427c:	8c 93       	st	X, r24
    427e:	d8 97       	sbiw	r26, 0x38	; 56
    4280:	31 96       	adiw	r30, 0x01	; 1
    4282:	84 91       	lpm	r24, Z
    4284:	d9 96       	adiw	r26, 0x39	; 57
    4286:	8c 93       	st	X, r24
    4288:	d9 97       	sbiw	r26, 0x39	; 57
    428a:	31 96       	adiw	r30, 0x01	; 1
    428c:	e4 91       	lpm	r30, Z
    428e:	da 96       	adiw	r26, 0x3a	; 58
    4290:	ec 93       	st	X, r30
    4292:	da 97       	sbiw	r26, 0x3a	; 58
    4294:	fb 01       	movw	r30, r22
    4296:	33 96       	adiw	r30, 0x03	; 3
    4298:	64 91       	lpm	r22, Z
    429a:	db 96       	adiw	r26, 0x3b	; 59
    429c:	6c 93       	st	X, r22
    429e:	db 97       	sbiw	r26, 0x3b	; 59
    42a0:	98 2f       	mov	r25, r24
    42a2:	96 95       	lsr	r25
    42a4:	96 95       	lsr	r25
    42a6:	96 95       	lsr	r25
    42a8:	dc 96       	adiw	r26, 0x3c	; 60
    42aa:	9c 93       	st	X, r25
    42ac:	dc 97       	sbiw	r26, 0x3c	; 60
    42ae:	dd 96       	adiw	r26, 0x3d	; 61
    42b0:	4c 93       	st	X, r20
    42b2:	dd 97       	sbiw	r26, 0x3d	; 61
    42b4:	e8 2f       	mov	r30, r24
    42b6:	e7 70       	andi	r30, 0x07	; 7
    42b8:	19 f0       	breq	.+6      	; 0x42c0 <_ZN14TFT_22_ILI92257setFontEPhb+0x54>
    42ba:	9f 5f       	subi	r25, 0xFF	; 255
    42bc:	dc 96       	adiw	r26, 0x3c	; 60
    42be:	9c 93       	st	X, r25
    42c0:	08 95       	ret

000042c2 <_ZN14TFT_22_ILI922510startWriteEv>:
    42c2:	cf 93       	push	r28
    42c4:	df 93       	push	r29
    42c6:	fc 01       	movw	r30, r24
    42c8:	ec 01       	movw	r28, r24
    42ca:	ee 96       	adiw	r28, 0x3e	; 62
    42cc:	88 81       	ld	r24, Y
    42ce:	99 81       	ldd	r25, Y+1	; 0x01
    42d0:	aa 81       	ldd	r26, Y+2	; 0x02
    42d2:	bb 81       	ldd	r27, Y+3	; 0x03
    42d4:	ac 01       	movw	r20, r24
    42d6:	bd 01       	movw	r22, r26
    42d8:	4f 5f       	subi	r20, 0xFF	; 255
    42da:	5f 4f       	sbci	r21, 0xFF	; 255
    42dc:	6f 4f       	sbci	r22, 0xFF	; 255
    42de:	7f 4f       	sbci	r23, 0xFF	; 255
    42e0:	48 83       	st	Y, r20
    42e2:	59 83       	std	Y+1, r21	; 0x01
    42e4:	6a 83       	std	Y+2, r22	; 0x02
    42e6:	7b 83       	std	Y+3, r23	; 0x03
    42e8:	89 2b       	or	r24, r25
    42ea:	8a 2b       	or	r24, r26
    42ec:	8b 2b       	or	r24, r27
    42ee:	29 f5       	brne	.+74     	; 0x433a <_ZN14TFT_22_ILI922510startWriteEv+0x78>
    42f0:	82 85       	ldd	r24, Z+10	; 0x0a
    42f2:	87 ff       	sbrs	r24, 7
    42f4:	1b c0       	rjmp	.+54     	; 0x432c <_ZN14TFT_22_ILI922510startWriteEv+0x6a>
    42f6:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <_ZN8SPIClass13interruptModeE>
    42fa:	88 23       	and	r24, r24
    42fc:	99 f0       	breq	.+38     	; 0x4324 <_ZN14TFT_22_ILI922510startWriteEv+0x62>
    42fe:	2f b7       	in	r18, 0x3f	; 63
    4300:	f8 94       	cli
    4302:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <_ZN8SPIClass13interruptModeE>
    4306:	81 30       	cpi	r24, 0x01	; 1
    4308:	59 f4       	brne	.+22     	; 0x4320 <_ZN14TFT_22_ILI922510startWriteEv+0x5e>
    430a:	8d b3       	in	r24, 0x1d	; 29
    430c:	80 93 7e 04 	sts	0x047E, r24	; 0x80047e <_ZN8SPIClass13interruptSaveE>
    4310:	9d b3       	in	r25, 0x1d	; 29
    4312:	80 91 7f 04 	lds	r24, 0x047F	; 0x80047f <_ZN8SPIClass13interruptMaskE>
    4316:	80 95       	com	r24
    4318:	89 23       	and	r24, r25
    431a:	8d bb       	out	0x1d, r24	; 29
    431c:	2f bf       	out	0x3f, r18	; 63
    431e:	02 c0       	rjmp	.+4      	; 0x4324 <_ZN14TFT_22_ILI922510startWriteEv+0x62>
    4320:	20 93 7e 04 	sts	0x047E, r18	; 0x80047e <_ZN8SPIClass13interruptSaveE>
    4324:	80 e5       	ldi	r24, 0x50	; 80
    4326:	8c bd       	out	0x2c, r24	; 44
    4328:	81 e0       	ldi	r24, 0x01	; 1
    432a:	8d bd       	out	0x2d, r24	; 45
    432c:	a4 89       	ldd	r26, Z+20	; 0x14
    432e:	b5 89       	ldd	r27, Z+21	; 0x15
    4330:	9c 91       	ld	r25, X
    4332:	80 8d       	ldd	r24, Z+24	; 0x18
    4334:	80 95       	com	r24
    4336:	89 23       	and	r24, r25
    4338:	8c 93       	st	X, r24
    433a:	df 91       	pop	r29
    433c:	cf 91       	pop	r28
    433e:	08 95       	ret

00004340 <_ZN14TFT_22_ILI92258endWriteEv>:
    4340:	cf 93       	push	r28
    4342:	df 93       	push	r29
    4344:	fc 01       	movw	r30, r24
    4346:	ec 01       	movw	r28, r24
    4348:	ee 96       	adiw	r28, 0x3e	; 62
    434a:	88 81       	ld	r24, Y
    434c:	99 81       	ldd	r25, Y+1	; 0x01
    434e:	aa 81       	ldd	r26, Y+2	; 0x02
    4350:	bb 81       	ldd	r27, Y+3	; 0x03
    4352:	01 97       	sbiw	r24, 0x01	; 1
    4354:	a1 09       	sbc	r26, r1
    4356:	b1 09       	sbc	r27, r1
    4358:	88 83       	st	Y, r24
    435a:	99 83       	std	Y+1, r25	; 0x01
    435c:	aa 83       	std	Y+2, r26	; 0x02
    435e:	bb 83       	std	Y+3, r27	; 0x03
    4360:	89 2b       	or	r24, r25
    4362:	8a 2b       	or	r24, r26
    4364:	8b 2b       	or	r24, r27
    4366:	c9 f4       	brne	.+50     	; 0x439a <_ZN14TFT_22_ILI92258endWriteEv+0x5a>
    4368:	a4 89       	ldd	r26, Z+20	; 0x14
    436a:	b5 89       	ldd	r27, Z+21	; 0x15
    436c:	9c 91       	ld	r25, X
    436e:	80 8d       	ldd	r24, Z+24	; 0x18
    4370:	89 2b       	or	r24, r25
    4372:	8c 93       	st	X, r24
    4374:	82 85       	ldd	r24, Z+10	; 0x0a
    4376:	87 ff       	sbrs	r24, 7
    4378:	10 c0       	rjmp	.+32     	; 0x439a <_ZN14TFT_22_ILI92258endWriteEv+0x5a>
    437a:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <_ZN8SPIClass13interruptModeE>
    437e:	88 23       	and	r24, r24
    4380:	61 f0       	breq	.+24     	; 0x439a <_ZN14TFT_22_ILI92258endWriteEv+0x5a>
    4382:	9f b7       	in	r25, 0x3f	; 63
    4384:	f8 94       	cli
    4386:	20 91 80 04 	lds	r18, 0x0480	; 0x800480 <_ZN8SPIClass13interruptModeE>
    438a:	80 91 7e 04 	lds	r24, 0x047E	; 0x80047e <_ZN8SPIClass13interruptSaveE>
    438e:	21 30       	cpi	r18, 0x01	; 1
    4390:	19 f4       	brne	.+6      	; 0x4398 <_ZN14TFT_22_ILI92258endWriteEv+0x58>
    4392:	8d bb       	out	0x1d, r24	; 29
    4394:	9f bf       	out	0x3f, r25	; 63
    4396:	01 c0       	rjmp	.+2      	; 0x439a <_ZN14TFT_22_ILI92258endWriteEv+0x5a>
    4398:	8f bf       	out	0x3f, r24	; 63
    439a:	df 91       	pop	r29
    439c:	cf 91       	pop	r28
    439e:	08 95       	ret

000043a0 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t>:
    43a0:	af 92       	push	r10
    43a2:	bf 92       	push	r11
    43a4:	cf 92       	push	r12
    43a6:	df 92       	push	r13
    43a8:	ef 92       	push	r14
    43aa:	0f 93       	push	r16
    43ac:	1f 93       	push	r17
    43ae:	cf 93       	push	r28
    43b0:	df 93       	push	r29
    43b2:	cd b7       	in	r28, 0x3d	; 61
    43b4:	de b7       	in	r29, 0x3e	; 62
    43b6:	c4 54       	subi	r28, 0x44	; 68
    43b8:	d1 09       	sbc	r29, r1
    43ba:	0f b6       	in	r0, 0x3f	; 63
    43bc:	f8 94       	cli
    43be:	de bf       	out	0x3e, r29	; 62
    43c0:	0f be       	out	0x3f, r0	; 63
    43c2:	cd bf       	out	0x3d, r28	; 61
    43c4:	6c 01       	movw	r12, r24
    43c6:	7e af       	std	Y+62, r23	; 0x3e
    43c8:	6d af       	std	Y+61, r22	; 0x3d
    43ca:	21 96       	adiw	r28, 0x01	; 1
    43cc:	5f af       	std	Y+63, r21	; 0x3f
    43ce:	4e af       	std	Y+62, r20	; 0x3e
    43d0:	21 97       	sbiw	r28, 0x01	; 1
    43d2:	23 96       	adiw	r28, 0x03	; 3
    43d4:	3f af       	std	Y+63, r19	; 0x3f
    43d6:	2e af       	std	Y+62, r18	; 0x3e
    43d8:	23 97       	sbiw	r28, 0x03	; 3
    43da:	25 96       	adiw	r28, 0x05	; 5
    43dc:	1f af       	std	Y+63, r17	; 0x3f
    43de:	0e af       	std	Y+62, r16	; 0x3e
    43e0:	25 97       	sbiw	r28, 0x05	; 5
    43e2:	0e 2d       	mov	r16, r14
    43e4:	10 e0       	ldi	r17, 0x00	; 0
    43e6:	1f 92       	push	r1
    43e8:	ef 92       	push	r14
    43ea:	25 96       	adiw	r28, 0x05	; 5
    43ec:	8f ad       	ldd	r24, Y+63	; 0x3f
    43ee:	25 97       	sbiw	r28, 0x05	; 5
    43f0:	8f 93       	push	r24
    43f2:	24 96       	adiw	r28, 0x04	; 4
    43f4:	8f ad       	ldd	r24, Y+63	; 0x3f
    43f6:	24 97       	sbiw	r28, 0x04	; 4
    43f8:	8f 93       	push	r24
    43fa:	23 96       	adiw	r28, 0x03	; 3
    43fc:	8f ad       	ldd	r24, Y+63	; 0x3f
    43fe:	23 97       	sbiw	r28, 0x03	; 3
    4400:	8f 93       	push	r24
    4402:	22 96       	adiw	r28, 0x02	; 2
    4404:	8f ad       	ldd	r24, Y+63	; 0x3f
    4406:	22 97       	sbiw	r28, 0x02	; 2
    4408:	8f 93       	push	r24
    440a:	21 96       	adiw	r28, 0x01	; 1
    440c:	8f ad       	ldd	r24, Y+63	; 0x3f
    440e:	21 97       	sbiw	r28, 0x01	; 1
    4410:	8f 93       	push	r24
    4412:	8f ad       	ldd	r24, Y+63	; 0x3f
    4414:	8f 93       	push	r24
    4416:	8e ad       	ldd	r24, Y+62	; 0x3e
    4418:	8f 93       	push	r24
    441a:	8d ad       	ldd	r24, Y+61	; 0x3d
    441c:	8f 93       	push	r24
    441e:	80 eb       	ldi	r24, 0xB0	; 176
    4420:	91 e0       	ldi	r25, 0x01	; 1
    4422:	9f 93       	push	r25
    4424:	8f 93       	push	r24
    4426:	9e 01       	movw	r18, r28
    4428:	2f 5f       	subi	r18, 0xFF	; 255
    442a:	3f 4f       	sbci	r19, 0xFF	; 255
    442c:	59 01       	movw	r10, r18
    442e:	3f 93       	push	r19
    4430:	2f 93       	push	r18
    4432:	0e 94 a0 34 	call	0x6940	; 0x6940 <sprintf>
    4436:	b5 01       	movw	r22, r10
    4438:	82 e8       	ldi	r24, 0x82	; 130
    443a:	93 e0       	ldi	r25, 0x03	; 3
    443c:	0e 94 90 18 	call	0x3120	; 0x3120 <_ZN5Print7printlnEPKc>
    4440:	f6 01       	movw	r30, r12
    4442:	80 81       	ld	r24, Z
    4444:	91 81       	ldd	r25, Z+1	; 0x01
    4446:	01 97       	sbiw	r24, 0x01	; 1
    4448:	2d ad       	ldd	r18, Y+61	; 0x3d
    444a:	3e ad       	ldd	r19, Y+62	; 0x3e
    444c:	0f b6       	in	r0, 0x3f	; 63
    444e:	f8 94       	cli
    4450:	de bf       	out	0x3e, r29	; 62
    4452:	0f be       	out	0x3f, r0	; 63
    4454:	cd bf       	out	0x3d, r28	; 61
    4456:	82 17       	cp	r24, r18
    4458:	93 07       	cpc	r25, r19
    445a:	08 f4       	brcc	.+2      	; 0x445e <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0xbe>
    445c:	9c 01       	movw	r18, r24
    445e:	3e af       	std	Y+62, r19	; 0x3e
    4460:	2d af       	std	Y+61, r18	; 0x3d
    4462:	23 96       	adiw	r28, 0x03	; 3
    4464:	2e ad       	ldd	r18, Y+62	; 0x3e
    4466:	3f ad       	ldd	r19, Y+63	; 0x3f
    4468:	23 97       	sbiw	r28, 0x03	; 3
    446a:	82 17       	cp	r24, r18
    446c:	93 07       	cpc	r25, r19
    446e:	08 f4       	brcc	.+2      	; 0x4472 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0xd2>
    4470:	9c 01       	movw	r18, r24
    4472:	23 96       	adiw	r28, 0x03	; 3
    4474:	3f af       	std	Y+63, r19	; 0x3f
    4476:	2e af       	std	Y+62, r18	; 0x3e
    4478:	23 97       	sbiw	r28, 0x03	; 3
    447a:	f6 01       	movw	r30, r12
    447c:	82 81       	ldd	r24, Z+2	; 0x02
    447e:	93 81       	ldd	r25, Z+3	; 0x03
    4480:	01 97       	sbiw	r24, 0x01	; 1
    4482:	21 96       	adiw	r28, 0x01	; 1
    4484:	2e ad       	ldd	r18, Y+62	; 0x3e
    4486:	3f ad       	ldd	r19, Y+63	; 0x3f
    4488:	21 97       	sbiw	r28, 0x01	; 1
    448a:	82 17       	cp	r24, r18
    448c:	93 07       	cpc	r25, r19
    448e:	08 f4       	brcc	.+2      	; 0x4492 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0xf2>
    4490:	9c 01       	movw	r18, r24
    4492:	21 96       	adiw	r28, 0x01	; 1
    4494:	3f af       	std	Y+63, r19	; 0x3f
    4496:	2e af       	std	Y+62, r18	; 0x3e
    4498:	21 97       	sbiw	r28, 0x01	; 1
    449a:	25 96       	adiw	r28, 0x05	; 5
    449c:	2e ad       	ldd	r18, Y+62	; 0x3e
    449e:	3f ad       	ldd	r19, Y+63	; 0x3f
    44a0:	25 97       	sbiw	r28, 0x05	; 5
    44a2:	82 17       	cp	r24, r18
    44a4:	93 07       	cpc	r25, r19
    44a6:	08 f4       	brcc	.+2      	; 0x44aa <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x10a>
    44a8:	9c 01       	movw	r18, r24
    44aa:	25 96       	adiw	r28, 0x05	; 5
    44ac:	3f af       	std	Y+63, r19	; 0x3f
    44ae:	2e af       	std	Y+62, r18	; 0x3e
    44b0:	25 97       	sbiw	r28, 0x05	; 5
    44b2:	ae 01       	movw	r20, r28
    44b4:	41 5c       	subi	r20, 0xC1	; 193
    44b6:	5f 4f       	sbci	r21, 0xFF	; 255
    44b8:	be 01       	movw	r22, r28
    44ba:	63 5c       	subi	r22, 0xC3	; 195
    44bc:	7f 4f       	sbci	r23, 0xFF	; 255
    44be:	c6 01       	movw	r24, r12
    44c0:	0e 94 00 20 	call	0x4000	; 0x4000 <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_>
    44c4:	ae 01       	movw	r20, r28
    44c6:	4d 5b       	subi	r20, 0xBD	; 189
    44c8:	5f 4f       	sbci	r21, 0xFF	; 255
    44ca:	be 01       	movw	r22, r28
    44cc:	6f 5b       	subi	r22, 0xBF	; 191
    44ce:	7f 4f       	sbci	r23, 0xFF	; 255
    44d0:	c6 01       	movw	r24, r12
    44d2:	0e 94 00 20 	call	0x4000	; 0x4000 <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_>
    44d6:	23 96       	adiw	r28, 0x03	; 3
    44d8:	2e ad       	ldd	r18, Y+62	; 0x3e
    44da:	3f ad       	ldd	r19, Y+63	; 0x3f
    44dc:	23 97       	sbiw	r28, 0x03	; 3
    44de:	8d ad       	ldd	r24, Y+61	; 0x3d
    44e0:	9e ad       	ldd	r25, Y+62	; 0x3e
    44e2:	28 17       	cp	r18, r24
    44e4:	39 07       	cpc	r19, r25
    44e6:	30 f4       	brcc	.+12     	; 0x44f4 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x154>
    44e8:	3e af       	std	Y+62, r19	; 0x3e
    44ea:	2d af       	std	Y+61, r18	; 0x3d
    44ec:	23 96       	adiw	r28, 0x03	; 3
    44ee:	9f af       	std	Y+63, r25	; 0x3f
    44f0:	8e af       	std	Y+62, r24	; 0x3e
    44f2:	23 97       	sbiw	r28, 0x03	; 3
    44f4:	25 96       	adiw	r28, 0x05	; 5
    44f6:	2e ad       	ldd	r18, Y+62	; 0x3e
    44f8:	3f ad       	ldd	r19, Y+63	; 0x3f
    44fa:	25 97       	sbiw	r28, 0x05	; 5
    44fc:	21 96       	adiw	r28, 0x01	; 1
    44fe:	8e ad       	ldd	r24, Y+62	; 0x3e
    4500:	9f ad       	ldd	r25, Y+63	; 0x3f
    4502:	21 97       	sbiw	r28, 0x01	; 1
    4504:	28 17       	cp	r18, r24
    4506:	39 07       	cpc	r19, r25
    4508:	40 f4       	brcc	.+16     	; 0x451a <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x17a>
    450a:	21 96       	adiw	r28, 0x01	; 1
    450c:	3f af       	std	Y+63, r19	; 0x3f
    450e:	2e af       	std	Y+62, r18	; 0x3e
    4510:	21 97       	sbiw	r28, 0x01	; 1
    4512:	25 96       	adiw	r28, 0x05	; 5
    4514:	9f af       	std	Y+63, r25	; 0x3f
    4516:	8e af       	std	Y+62, r24	; 0x3e
    4518:	25 97       	sbiw	r28, 0x05	; 5
    451a:	c6 01       	movw	r24, r12
    451c:	0e 94 61 21 	call	0x42c2	; 0x42c2 <_ZN14TFT_22_ILI922510startWriteEv>
    4520:	f6 01       	movw	r30, r12
    4522:	82 8d       	ldd	r24, Z+26	; 0x1a
    4524:	88 23       	and	r24, r24
    4526:	51 f0       	breq	.+20     	; 0x453c <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x19c>
    4528:	96 01       	movw	r18, r12
    452a:	48 e0       	ldi	r20, 0x08	; 8
    452c:	84 9f       	mul	r24, r20
    452e:	20 0d       	add	r18, r0
    4530:	31 1d       	adc	r19, r1
    4532:	11 24       	eor	r1, r1
    4534:	f8 01       	movw	r30, r16
    4536:	e2 0f       	add	r30, r18
    4538:	f3 1f       	adc	r31, r19
    453a:	e4 88       	ldd	r14, Z+20	; 0x14
    453c:	0e 2d       	mov	r16, r14
    453e:	10 e0       	ldi	r17, 0x00	; 0
    4540:	a8 01       	movw	r20, r16
    4542:	83 e0       	ldi	r24, 0x03	; 3
    4544:	44 0f       	add	r20, r20
    4546:	55 1f       	adc	r21, r21
    4548:	8a 95       	dec	r24
    454a:	e1 f7       	brne	.-8      	; 0x4544 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x1a4>
    454c:	50 61       	ori	r21, 0x10	; 16
    454e:	63 e0       	ldi	r22, 0x03	; 3
    4550:	70 e0       	ldi	r23, 0x00	; 0
    4552:	c6 01       	movw	r24, r12
    4554:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4558:	23 96       	adiw	r28, 0x03	; 3
    455a:	4e ad       	ldd	r20, Y+62	; 0x3e
    455c:	5f ad       	ldd	r21, Y+63	; 0x3f
    455e:	23 97       	sbiw	r28, 0x03	; 3
    4560:	66 e3       	ldi	r22, 0x36	; 54
    4562:	70 e0       	ldi	r23, 0x00	; 0
    4564:	c6 01       	movw	r24, r12
    4566:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    456a:	4d ad       	ldd	r20, Y+61	; 0x3d
    456c:	5e ad       	ldd	r21, Y+62	; 0x3e
    456e:	67 e3       	ldi	r22, 0x37	; 55
    4570:	70 e0       	ldi	r23, 0x00	; 0
    4572:	c6 01       	movw	r24, r12
    4574:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4578:	25 96       	adiw	r28, 0x05	; 5
    457a:	4e ad       	ldd	r20, Y+62	; 0x3e
    457c:	5f ad       	ldd	r21, Y+63	; 0x3f
    457e:	25 97       	sbiw	r28, 0x05	; 5
    4580:	68 e3       	ldi	r22, 0x38	; 56
    4582:	70 e0       	ldi	r23, 0x00	; 0
    4584:	c6 01       	movw	r24, r12
    4586:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    458a:	21 96       	adiw	r28, 0x01	; 1
    458c:	4e ad       	ldd	r20, Y+62	; 0x3e
    458e:	5f ad       	ldd	r21, Y+63	; 0x3f
    4590:	21 97       	sbiw	r28, 0x01	; 1
    4592:	69 e3       	ldi	r22, 0x39	; 57
    4594:	70 e0       	ldi	r23, 0x00	; 0
    4596:	c6 01       	movw	r24, r12
    4598:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    459c:	1f 92       	push	r1
    459e:	ef 92       	push	r14
    45a0:	25 96       	adiw	r28, 0x05	; 5
    45a2:	8f ad       	ldd	r24, Y+63	; 0x3f
    45a4:	25 97       	sbiw	r28, 0x05	; 5
    45a6:	8f 93       	push	r24
    45a8:	24 96       	adiw	r28, 0x04	; 4
    45aa:	8f ad       	ldd	r24, Y+63	; 0x3f
    45ac:	24 97       	sbiw	r28, 0x04	; 4
    45ae:	8f 93       	push	r24
    45b0:	23 96       	adiw	r28, 0x03	; 3
    45b2:	8f ad       	ldd	r24, Y+63	; 0x3f
    45b4:	23 97       	sbiw	r28, 0x03	; 3
    45b6:	8f 93       	push	r24
    45b8:	22 96       	adiw	r28, 0x02	; 2
    45ba:	8f ad       	ldd	r24, Y+63	; 0x3f
    45bc:	22 97       	sbiw	r28, 0x02	; 2
    45be:	8f 93       	push	r24
    45c0:	21 96       	adiw	r28, 0x01	; 1
    45c2:	8f ad       	ldd	r24, Y+63	; 0x3f
    45c4:	21 97       	sbiw	r28, 0x01	; 1
    45c6:	8f 93       	push	r24
    45c8:	8f ad       	ldd	r24, Y+63	; 0x3f
    45ca:	8f 93       	push	r24
    45cc:	8e ad       	ldd	r24, Y+62	; 0x3e
    45ce:	8f 93       	push	r24
    45d0:	8d ad       	ldd	r24, Y+61	; 0x3d
    45d2:	8f 93       	push	r24
    45d4:	80 ee       	ldi	r24, 0xE0	; 224
    45d6:	91 e0       	ldi	r25, 0x01	; 1
    45d8:	9f 93       	push	r25
    45da:	8f 93       	push	r24
    45dc:	bf 92       	push	r11
    45de:	af 92       	push	r10
    45e0:	0e 94 a0 34 	call	0x6940	; 0x6940 <sprintf>
    45e4:	b5 01       	movw	r22, r10
    45e6:	82 e8       	ldi	r24, 0x82	; 130
    45e8:	93 e0       	ldi	r25, 0x03	; 3
    45ea:	0e 94 90 18 	call	0x3120	; 0x3120 <_ZN5Print7printlnEPKc>
    45ee:	0f b6       	in	r0, 0x3f	; 63
    45f0:	f8 94       	cli
    45f2:	de bf       	out	0x3e, r29	; 62
    45f4:	0f be       	out	0x3f, r0	; 63
    45f6:	cd bf       	out	0x3d, r28	; 61
    45f8:	c8 01       	movw	r24, r16
    45fa:	95 95       	asr	r25
    45fc:	87 95       	ror	r24
    45fe:	81 30       	cpi	r24, 0x01	; 1
    4600:	91 05       	cpc	r25, r1
    4602:	81 f0       	breq	.+32     	; 0x4624 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x284>
    4604:	3c f4       	brge	.+14     	; 0x4614 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x274>
    4606:	89 2b       	or	r24, r25
    4608:	59 f5       	brne	.+86     	; 0x4660 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x2c0>
    460a:	23 96       	adiw	r28, 0x03	; 3
    460c:	4e ad       	ldd	r20, Y+62	; 0x3e
    460e:	5f ad       	ldd	r21, Y+63	; 0x3f
    4610:	23 97       	sbiw	r28, 0x03	; 3
    4612:	0a c0       	rjmp	.+20     	; 0x4628 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x288>
    4614:	82 30       	cpi	r24, 0x02	; 2
    4616:	91 05       	cpc	r25, r1
    4618:	89 f0       	breq	.+34     	; 0x463c <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x29c>
    461a:	03 97       	sbiw	r24, 0x03	; 3
    461c:	09 f5       	brne	.+66     	; 0x4660 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x2c0>
    461e:	4d ad       	ldd	r20, Y+61	; 0x3d
    4620:	5e ad       	ldd	r21, Y+62	; 0x3e
    4622:	10 c0       	rjmp	.+32     	; 0x4644 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x2a4>
    4624:	4d ad       	ldd	r20, Y+61	; 0x3d
    4626:	5e ad       	ldd	r21, Y+62	; 0x3e
    4628:	60 e2       	ldi	r22, 0x20	; 32
    462a:	70 e0       	ldi	r23, 0x00	; 0
    462c:	c6 01       	movw	r24, r12
    462e:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4632:	25 96       	adiw	r28, 0x05	; 5
    4634:	4e ad       	ldd	r20, Y+62	; 0x3e
    4636:	5f ad       	ldd	r21, Y+63	; 0x3f
    4638:	25 97       	sbiw	r28, 0x05	; 5
    463a:	0d c0       	rjmp	.+26     	; 0x4656 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x2b6>
    463c:	23 96       	adiw	r28, 0x03	; 3
    463e:	4e ad       	ldd	r20, Y+62	; 0x3e
    4640:	5f ad       	ldd	r21, Y+63	; 0x3f
    4642:	23 97       	sbiw	r28, 0x03	; 3
    4644:	60 e2       	ldi	r22, 0x20	; 32
    4646:	70 e0       	ldi	r23, 0x00	; 0
    4648:	c6 01       	movw	r24, r12
    464a:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    464e:	21 96       	adiw	r28, 0x01	; 1
    4650:	4e ad       	ldd	r20, Y+62	; 0x3e
    4652:	5f ad       	ldd	r21, Y+63	; 0x3f
    4654:	21 97       	sbiw	r28, 0x01	; 1
    4656:	61 e2       	ldi	r22, 0x21	; 33
    4658:	70 e0       	ldi	r23, 0x00	; 0
    465a:	c6 01       	movw	r24, r12
    465c:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4660:	62 e2       	ldi	r22, 0x22	; 34
    4662:	70 e0       	ldi	r23, 0x00	; 0
    4664:	c6 01       	movw	r24, r12
    4666:	0e 94 73 20 	call	0x40e6	; 0x40e6 <_ZN14TFT_22_ILI922515_writeCommand16Ej>
    466a:	c6 01       	movw	r24, r12
    466c:	0e 94 a0 21 	call	0x4340	; 0x4340 <_ZN14TFT_22_ILI92258endWriteEv>
    4670:	cc 5b       	subi	r28, 0xBC	; 188
    4672:	df 4f       	sbci	r29, 0xFF	; 255
    4674:	0f b6       	in	r0, 0x3f	; 63
    4676:	f8 94       	cli
    4678:	de bf       	out	0x3e, r29	; 62
    467a:	0f be       	out	0x3f, r0	; 63
    467c:	cd bf       	out	0x3d, r28	; 61
    467e:	df 91       	pop	r29
    4680:	cf 91       	pop	r28
    4682:	1f 91       	pop	r17
    4684:	0f 91       	pop	r16
    4686:	ef 90       	pop	r14
    4688:	df 90       	pop	r13
    468a:	cf 90       	pop	r12
    468c:	bf 90       	pop	r11
    468e:	af 90       	pop	r10
    4690:	08 95       	ret

00004692 <_ZN14TFT_22_ILI922510_setWindowEjjjj>:
    4692:	ef 92       	push	r14
    4694:	0f 93       	push	r16
    4696:	1f 93       	push	r17
    4698:	e7 e0       	ldi	r30, 0x07	; 7
    469a:	ee 2e       	mov	r14, r30
    469c:	0e 94 d0 21 	call	0x43a0	; 0x43a0 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t>
    46a0:	1f 91       	pop	r17
    46a2:	0f 91       	pop	r16
    46a4:	ef 90       	pop	r14
    46a6:	08 95       	ret

000046a8 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj>:
    46a8:	6f 92       	push	r6
    46aa:	7f 92       	push	r7
    46ac:	8f 92       	push	r8
    46ae:	9f 92       	push	r9
    46b0:	af 92       	push	r10
    46b2:	bf 92       	push	r11
    46b4:	cf 92       	push	r12
    46b6:	df 92       	push	r13
    46b8:	ef 92       	push	r14
    46ba:	ff 92       	push	r15
    46bc:	0f 93       	push	r16
    46be:	1f 93       	push	r17
    46c0:	cf 93       	push	r28
    46c2:	df 93       	push	r29
    46c4:	5c 01       	movw	r10, r24
    46c6:	4b 01       	movw	r8, r22
    46c8:	3a 01       	movw	r6, r20
    46ca:	e9 01       	movw	r28, r18
    46cc:	68 01       	movw	r12, r16
    46ce:	0e 94 49 23 	call	0x4692	; 0x4692 <_ZN14TFT_22_ILI922510_setWindowEjjjj>
    46d2:	c5 01       	movw	r24, r10
    46d4:	0e 94 61 21 	call	0x42c2	; 0x42c2 <_ZN14TFT_22_ILI922510startWriteEv>
    46d8:	8f ef       	ldi	r24, 0xFF	; 255
    46da:	c8 1a       	sub	r12, r24
    46dc:	d8 0a       	sbc	r13, r24
    46de:	c6 18       	sub	r12, r6
    46e0:	d7 08       	sbc	r13, r7
    46e2:	21 96       	adiw	r28, 0x01	; 1
    46e4:	c8 19       	sub	r28, r8
    46e6:	d9 09       	sbc	r29, r9
    46e8:	cc 9e       	mul	r12, r28
    46ea:	40 01       	movw	r8, r0
    46ec:	cd 9e       	mul	r12, r29
    46ee:	90 0c       	add	r9, r0
    46f0:	dc 9e       	mul	r13, r28
    46f2:	90 0c       	add	r9, r0
    46f4:	11 24       	eor	r1, r1
    46f6:	81 14       	cp	r8, r1
    46f8:	91 04       	cpc	r9, r1
    46fa:	41 f0       	breq	.+16     	; 0x470c <_ZN14TFT_22_ILI922513fillRectangleEjjjjj+0x64>
    46fc:	b7 01       	movw	r22, r14
    46fe:	c5 01       	movw	r24, r10
    4700:	0e 94 bd 20 	call	0x417a	; 0x417a <_ZN14TFT_22_ILI922512_writeData16Ej>
    4704:	81 e0       	ldi	r24, 0x01	; 1
    4706:	88 1a       	sub	r8, r24
    4708:	91 08       	sbc	r9, r1
    470a:	f5 cf       	rjmp	.-22     	; 0x46f6 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj+0x4e>
    470c:	c5 01       	movw	r24, r10
    470e:	0e 94 a0 21 	call	0x4340	; 0x4340 <_ZN14TFT_22_ILI92258endWriteEv>
    4712:	c5 01       	movw	r24, r10
    4714:	df 91       	pop	r29
    4716:	cf 91       	pop	r28
    4718:	1f 91       	pop	r17
    471a:	0f 91       	pop	r16
    471c:	ff 90       	pop	r15
    471e:	ef 90       	pop	r14
    4720:	df 90       	pop	r13
    4722:	cf 90       	pop	r12
    4724:	bf 90       	pop	r11
    4726:	af 90       	pop	r10
    4728:	9f 90       	pop	r9
    472a:	8f 90       	pop	r8
    472c:	7f 90       	pop	r7
    472e:	6f 90       	pop	r6
    4730:	0c 94 16 21 	jmp	0x422c	; 0x422c <_ZN14TFT_22_ILI922512_resetWindowEv>

00004734 <_ZN14TFT_22_ILI92255clearEv>:
    4734:	df 92       	push	r13
    4736:	ef 92       	push	r14
    4738:	ff 92       	push	r15
    473a:	0f 93       	push	r16
    473c:	1f 93       	push	r17
    473e:	cf 93       	push	r28
    4740:	df 93       	push	r29
    4742:	ec 01       	movw	r28, r24
    4744:	da 8c       	ldd	r13, Y+26	; 0x1a
    4746:	60 e0       	ldi	r22, 0x00	; 0
    4748:	0e 94 52 20 	call	0x40a4	; 0x40a4 <_ZN14TFT_22_ILI922514setOrientationEh>
    474c:	0a 81       	ldd	r16, Y+2	; 0x02
    474e:	1b 81       	ldd	r17, Y+3	; 0x03
    4750:	01 50       	subi	r16, 0x01	; 1
    4752:	11 09       	sbc	r17, r1
    4754:	28 81       	ld	r18, Y
    4756:	39 81       	ldd	r19, Y+1	; 0x01
    4758:	21 50       	subi	r18, 0x01	; 1
    475a:	31 09       	sbc	r19, r1
    475c:	e1 2c       	mov	r14, r1
    475e:	f1 2c       	mov	r15, r1
    4760:	40 e0       	ldi	r20, 0x00	; 0
    4762:	50 e0       	ldi	r21, 0x00	; 0
    4764:	60 e0       	ldi	r22, 0x00	; 0
    4766:	70 e0       	ldi	r23, 0x00	; 0
    4768:	ce 01       	movw	r24, r28
    476a:	0e 94 54 23 	call	0x46a8	; 0x46a8 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj>
    476e:	6d 2d       	mov	r22, r13
    4770:	ce 01       	movw	r24, r28
    4772:	0e 94 52 20 	call	0x40a4	; 0x40a4 <_ZN14TFT_22_ILI922514setOrientationEh>
    4776:	6a e0       	ldi	r22, 0x0A	; 10
    4778:	70 e0       	ldi	r23, 0x00	; 0
    477a:	80 e0       	ldi	r24, 0x00	; 0
    477c:	90 e0       	ldi	r25, 0x00	; 0
    477e:	df 91       	pop	r29
    4780:	cf 91       	pop	r28
    4782:	1f 91       	pop	r17
    4784:	0f 91       	pop	r16
    4786:	ff 90       	pop	r15
    4788:	ef 90       	pop	r14
    478a:	df 90       	pop	r13
    478c:	0c 94 4a 1a 	jmp	0x3494	; 0x3494 <delay>

00004790 <_ZN14TFT_22_ILI92255beginEv>:
    4790:	cf 93       	push	r28
    4792:	df 93       	push	r29
    4794:	ec 01       	movw	r28, r24
    4796:	8e 81       	ldd	r24, Y+6	; 0x06
    4798:	18 16       	cp	r1, r24
    479a:	3c f4       	brge	.+14     	; 0x47aa <_ZN14TFT_22_ILI92255beginEv+0x1a>
    479c:	61 e0       	ldi	r22, 0x01	; 1
    479e:	0e 94 0d 2d 	call	0x5a1a	; 0x5a1a <pinMode>
    47a2:	60 e0       	ldi	r22, 0x00	; 0
    47a4:	8e 81       	ldd	r24, Y+6	; 0x06
    47a6:	0e 94 49 2d 	call	0x5a92	; 0x5a92 <digitalWrite>
    47aa:	8b 85       	ldd	r24, Y+11	; 0x0b
    47ac:	18 16       	cp	r1, r24
    47ae:	3c f4       	brge	.+14     	; 0x47be <_ZN14TFT_22_ILI92255beginEv+0x2e>
    47b0:	61 e0       	ldi	r22, 0x01	; 1
    47b2:	0e 94 0d 2d 	call	0x5a1a	; 0x5a1a <pinMode>
    47b6:	60 e0       	ldi	r22, 0x00	; 0
    47b8:	ce 01       	movw	r24, r28
    47ba:	0e 94 43 20 	call	0x4086	; 0x4086 <_ZN14TFT_22_ILI922512setBacklightEb>
    47be:	61 e0       	ldi	r22, 0x01	; 1
    47c0:	8f 81       	ldd	r24, Y+7	; 0x07
    47c2:	0e 94 0d 2d 	call	0x5a1a	; 0x5a1a <pinMode>
    47c6:	60 e0       	ldi	r22, 0x00	; 0
    47c8:	8f 81       	ldd	r24, Y+7	; 0x07
    47ca:	0e 94 49 2d 	call	0x5a92	; 0x5a92 <digitalWrite>
    47ce:	61 e0       	ldi	r22, 0x01	; 1
    47d0:	88 85       	ldd	r24, Y+8	; 0x08
    47d2:	0e 94 0d 2d 	call	0x5a1a	; 0x5a1a <pinMode>
    47d6:	61 e0       	ldi	r22, 0x01	; 1
    47d8:	88 85       	ldd	r24, Y+8	; 0x08
    47da:	0e 94 49 2d 	call	0x5a92	; 0x5a92 <digitalWrite>
    47de:	88 85       	ldd	r24, Y+8	; 0x08
    47e0:	08 2e       	mov	r0, r24
    47e2:	00 0c       	add	r0, r0
    47e4:	99 0b       	sbc	r25, r25
    47e6:	fc 01       	movw	r30, r24
    47e8:	e9 5b       	subi	r30, 0xB9	; 185
    47ea:	ff 4d       	sbci	r31, 0xDF	; 223
    47ec:	e4 91       	lpm	r30, Z
    47ee:	f0 e0       	ldi	r31, 0x00	; 0
    47f0:	ee 0f       	add	r30, r30
    47f2:	ff 1f       	adc	r31, r31
    47f4:	e5 5a       	subi	r30, 0xA5	; 165
    47f6:	ff 4d       	sbci	r31, 0xDF	; 223
    47f8:	25 91       	lpm	r18, Z+
    47fa:	34 91       	lpm	r19, Z
    47fc:	3d 8b       	std	Y+21, r19	; 0x15
    47fe:	2c 8b       	std	Y+20, r18	; 0x14
    4800:	fc 01       	movw	r30, r24
    4802:	ed 5c       	subi	r30, 0xCD	; 205
    4804:	ff 4d       	sbci	r31, 0xDF	; 223
    4806:	e4 91       	lpm	r30, Z
    4808:	e8 8f       	std	Y+24, r30	; 0x18
    480a:	8f 81       	ldd	r24, Y+7	; 0x07
    480c:	08 2e       	mov	r0, r24
    480e:	00 0c       	add	r0, r0
    4810:	99 0b       	sbc	r25, r25
    4812:	fc 01       	movw	r30, r24
    4814:	e9 5b       	subi	r30, 0xB9	; 185
    4816:	ff 4d       	sbci	r31, 0xDF	; 223
    4818:	e4 91       	lpm	r30, Z
    481a:	f0 e0       	ldi	r31, 0x00	; 0
    481c:	ee 0f       	add	r30, r30
    481e:	ff 1f       	adc	r31, r31
    4820:	e5 5a       	subi	r30, 0xA5	; 165
    4822:	ff 4d       	sbci	r31, 0xDF	; 223
    4824:	25 91       	lpm	r18, Z+
    4826:	34 91       	lpm	r19, Z
    4828:	39 8b       	std	Y+17, r19	; 0x11
    482a:	28 8b       	std	Y+16, r18	; 0x10
    482c:	fc 01       	movw	r30, r24
    482e:	ed 5c       	subi	r30, 0xCD	; 205
    4830:	ff 4d       	sbci	r31, 0xDF	; 223
    4832:	e4 91       	lpm	r30, Z
    4834:	e9 8f       	std	Y+25, r30	; 0x19
    4836:	8a 85       	ldd	r24, Y+10	; 0x0a
    4838:	87 fd       	sbrc	r24, 7
    483a:	49 c0       	rjmp	.+146    	; 0x48ce <_ZN14TFT_22_ILI92255beginEv+0x13e>
    483c:	61 e0       	ldi	r22, 0x01	; 1
    483e:	89 85       	ldd	r24, Y+9	; 0x09
    4840:	0e 94 0d 2d 	call	0x5a1a	; 0x5a1a <pinMode>
    4844:	60 e0       	ldi	r22, 0x00	; 0
    4846:	89 85       	ldd	r24, Y+9	; 0x09
    4848:	0e 94 49 2d 	call	0x5a92	; 0x5a92 <digitalWrite>
    484c:	61 e0       	ldi	r22, 0x01	; 1
    484e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4850:	0e 94 0d 2d 	call	0x5a1a	; 0x5a1a <pinMode>
    4854:	61 e0       	ldi	r22, 0x01	; 1
    4856:	8a 85       	ldd	r24, Y+10	; 0x0a
    4858:	0e 94 49 2d 	call	0x5a92	; 0x5a92 <digitalWrite>
    485c:	8a 85       	ldd	r24, Y+10	; 0x0a
    485e:	08 2e       	mov	r0, r24
    4860:	00 0c       	add	r0, r0
    4862:	99 0b       	sbc	r25, r25
    4864:	fc 01       	movw	r30, r24
    4866:	e9 5b       	subi	r30, 0xB9	; 185
    4868:	ff 4d       	sbci	r31, 0xDF	; 223
    486a:	e4 91       	lpm	r30, Z
    486c:	f0 e0       	ldi	r31, 0x00	; 0
    486e:	ee 0f       	add	r30, r30
    4870:	ff 1f       	adc	r31, r31
    4872:	e5 5a       	subi	r30, 0xA5	; 165
    4874:	ff 4d       	sbci	r31, 0xDF	; 223
    4876:	a5 91       	lpm	r26, Z+
    4878:	b4 91       	lpm	r27, Z
    487a:	bf 87       	std	Y+15, r27	; 0x0f
    487c:	ae 87       	std	Y+14, r26	; 0x0e
    487e:	fc 01       	movw	r30, r24
    4880:	ed 5c       	subi	r30, 0xCD	; 205
    4882:	ff 4d       	sbci	r31, 0xDF	; 223
    4884:	84 91       	lpm	r24, Z
    4886:	8f 8b       	std	Y+23, r24	; 0x17
    4888:	29 85       	ldd	r18, Y+9	; 0x09
    488a:	02 2e       	mov	r0, r18
    488c:	00 0c       	add	r0, r0
    488e:	33 0b       	sbc	r19, r19
    4890:	f9 01       	movw	r30, r18
    4892:	e9 5b       	subi	r30, 0xB9	; 185
    4894:	ff 4d       	sbci	r31, 0xDF	; 223
    4896:	e4 91       	lpm	r30, Z
    4898:	f0 e0       	ldi	r31, 0x00	; 0
    489a:	ee 0f       	add	r30, r30
    489c:	ff 1f       	adc	r31, r31
    489e:	e5 5a       	subi	r30, 0xA5	; 165
    48a0:	ff 4d       	sbci	r31, 0xDF	; 223
    48a2:	45 91       	lpm	r20, Z+
    48a4:	54 91       	lpm	r21, Z
    48a6:	5d 87       	std	Y+13, r21	; 0x0d
    48a8:	4c 87       	std	Y+12, r20	; 0x0c
    48aa:	f9 01       	movw	r30, r18
    48ac:	ed 5c       	subi	r30, 0xCD	; 205
    48ae:	ff 4d       	sbci	r31, 0xDF	; 223
    48b0:	e4 91       	lpm	r30, Z
    48b2:	ee 8b       	std	Y+22, r30	; 0x16
    48b4:	9c 91       	ld	r25, X
    48b6:	e8 2f       	mov	r30, r24
    48b8:	e0 95       	com	r30
    48ba:	e9 23       	and	r30, r25
    48bc:	ec 93       	st	X, r30
    48be:	ec 85       	ldd	r30, Y+12	; 0x0c
    48c0:	fd 85       	ldd	r31, Y+13	; 0x0d
    48c2:	90 81       	ld	r25, Z
    48c4:	8e 89       	ldd	r24, Y+22	; 0x16
    48c6:	80 95       	com	r24
    48c8:	89 23       	and	r24, r25
    48ca:	80 83       	st	Z, r24
    48cc:	06 c0       	rjmp	.+12     	; 0x48da <_ZN14TFT_22_ILI92255beginEv+0x14a>
    48ce:	1f 86       	std	Y+15, r1	; 0x0f
    48d0:	1e 86       	std	Y+14, r1	; 0x0e
    48d2:	1f 8a       	std	Y+23, r1	; 0x17
    48d4:	1d 86       	std	Y+13, r1	; 0x0d
    48d6:	1c 86       	std	Y+12, r1	; 0x0c
    48d8:	1e 8a       	std	Y+22, r1	; 0x16
    48da:	8a 85       	ldd	r24, Y+10	; 0x0a
    48dc:	87 fd       	sbrc	r24, 7
    48de:	0e 94 78 2d 	call	0x5af0	; 0x5af0 <_ZN8SPIClass5beginEv>
    48e2:	8e 81       	ldd	r24, Y+6	; 0x06
    48e4:	18 16       	cp	r1, r24
    48e6:	ec f4       	brge	.+58     	; 0x4922 <_ZN14TFT_22_ILI92255beginEv+0x192>
    48e8:	61 e0       	ldi	r22, 0x01	; 1
    48ea:	0e 94 49 2d 	call	0x5a92	; 0x5a92 <digitalWrite>
    48ee:	61 e0       	ldi	r22, 0x01	; 1
    48f0:	70 e0       	ldi	r23, 0x00	; 0
    48f2:	80 e0       	ldi	r24, 0x00	; 0
    48f4:	90 e0       	ldi	r25, 0x00	; 0
    48f6:	0e 94 4a 1a 	call	0x3494	; 0x3494 <delay>
    48fa:	60 e0       	ldi	r22, 0x00	; 0
    48fc:	8e 81       	ldd	r24, Y+6	; 0x06
    48fe:	0e 94 49 2d 	call	0x5a92	; 0x5a92 <digitalWrite>
    4902:	6a e0       	ldi	r22, 0x0A	; 10
    4904:	70 e0       	ldi	r23, 0x00	; 0
    4906:	80 e0       	ldi	r24, 0x00	; 0
    4908:	90 e0       	ldi	r25, 0x00	; 0
    490a:	0e 94 4a 1a 	call	0x3494	; 0x3494 <delay>
    490e:	61 e0       	ldi	r22, 0x01	; 1
    4910:	8e 81       	ldd	r24, Y+6	; 0x06
    4912:	0e 94 49 2d 	call	0x5a92	; 0x5a92 <digitalWrite>
    4916:	62 e3       	ldi	r22, 0x32	; 50
    4918:	70 e0       	ldi	r23, 0x00	; 0
    491a:	80 e0       	ldi	r24, 0x00	; 0
    491c:	90 e0       	ldi	r25, 0x00	; 0
    491e:	0e 94 4a 1a 	call	0x3494	; 0x3494 <delay>
    4922:	ce 01       	movw	r24, r28
    4924:	0e 94 61 21 	call	0x42c2	; 0x42c2 <_ZN14TFT_22_ILI922510startWriteEv>
    4928:	40 e0       	ldi	r20, 0x00	; 0
    492a:	50 e0       	ldi	r21, 0x00	; 0
    492c:	60 e1       	ldi	r22, 0x10	; 16
    492e:	70 e0       	ldi	r23, 0x00	; 0
    4930:	ce 01       	movw	r24, r28
    4932:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4936:	40 e0       	ldi	r20, 0x00	; 0
    4938:	50 e0       	ldi	r21, 0x00	; 0
    493a:	61 e1       	ldi	r22, 0x11	; 17
    493c:	70 e0       	ldi	r23, 0x00	; 0
    493e:	ce 01       	movw	r24, r28
    4940:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4944:	40 e0       	ldi	r20, 0x00	; 0
    4946:	50 e0       	ldi	r21, 0x00	; 0
    4948:	62 e1       	ldi	r22, 0x12	; 18
    494a:	70 e0       	ldi	r23, 0x00	; 0
    494c:	ce 01       	movw	r24, r28
    494e:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4952:	40 e0       	ldi	r20, 0x00	; 0
    4954:	50 e0       	ldi	r21, 0x00	; 0
    4956:	63 e1       	ldi	r22, 0x13	; 19
    4958:	70 e0       	ldi	r23, 0x00	; 0
    495a:	ce 01       	movw	r24, r28
    495c:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4960:	40 e0       	ldi	r20, 0x00	; 0
    4962:	50 e0       	ldi	r21, 0x00	; 0
    4964:	64 e1       	ldi	r22, 0x14	; 20
    4966:	70 e0       	ldi	r23, 0x00	; 0
    4968:	ce 01       	movw	r24, r28
    496a:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    496e:	ce 01       	movw	r24, r28
    4970:	0e 94 a0 21 	call	0x4340	; 0x4340 <_ZN14TFT_22_ILI92258endWriteEv>
    4974:	68 e2       	ldi	r22, 0x28	; 40
    4976:	70 e0       	ldi	r23, 0x00	; 0
    4978:	80 e0       	ldi	r24, 0x00	; 0
    497a:	90 e0       	ldi	r25, 0x00	; 0
    497c:	0e 94 4a 1a 	call	0x3494	; 0x3494 <delay>
    4980:	ce 01       	movw	r24, r28
    4982:	0e 94 61 21 	call	0x42c2	; 0x42c2 <_ZN14TFT_22_ILI922510startWriteEv>
    4986:	48 e1       	ldi	r20, 0x18	; 24
    4988:	50 e0       	ldi	r21, 0x00	; 0
    498a:	61 e1       	ldi	r22, 0x11	; 17
    498c:	70 e0       	ldi	r23, 0x00	; 0
    498e:	ce 01       	movw	r24, r28
    4990:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4994:	41 e2       	ldi	r20, 0x21	; 33
    4996:	51 e6       	ldi	r21, 0x61	; 97
    4998:	62 e1       	ldi	r22, 0x12	; 18
    499a:	70 e0       	ldi	r23, 0x00	; 0
    499c:	ce 01       	movw	r24, r28
    499e:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    49a2:	4f e6       	ldi	r20, 0x6F	; 111
    49a4:	50 e0       	ldi	r21, 0x00	; 0
    49a6:	63 e1       	ldi	r22, 0x13	; 19
    49a8:	70 e0       	ldi	r23, 0x00	; 0
    49aa:	ce 01       	movw	r24, r28
    49ac:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    49b0:	4f e5       	ldi	r20, 0x5F	; 95
    49b2:	59 e4       	ldi	r21, 0x49	; 73
    49b4:	64 e1       	ldi	r22, 0x14	; 20
    49b6:	70 e0       	ldi	r23, 0x00	; 0
    49b8:	ce 01       	movw	r24, r28
    49ba:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    49be:	40 e0       	ldi	r20, 0x00	; 0
    49c0:	58 e0       	ldi	r21, 0x08	; 8
    49c2:	60 e1       	ldi	r22, 0x10	; 16
    49c4:	70 e0       	ldi	r23, 0x00	; 0
    49c6:	ce 01       	movw	r24, r28
    49c8:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    49cc:	ce 01       	movw	r24, r28
    49ce:	0e 94 a0 21 	call	0x4340	; 0x4340 <_ZN14TFT_22_ILI92258endWriteEv>
    49d2:	6a e0       	ldi	r22, 0x0A	; 10
    49d4:	70 e0       	ldi	r23, 0x00	; 0
    49d6:	80 e0       	ldi	r24, 0x00	; 0
    49d8:	90 e0       	ldi	r25, 0x00	; 0
    49da:	0e 94 4a 1a 	call	0x3494	; 0x3494 <delay>
    49de:	ce 01       	movw	r24, r28
    49e0:	0e 94 61 21 	call	0x42c2	; 0x42c2 <_ZN14TFT_22_ILI922510startWriteEv>
    49e4:	4b e3       	ldi	r20, 0x3B	; 59
    49e6:	50 e1       	ldi	r21, 0x10	; 16
    49e8:	61 e1       	ldi	r22, 0x11	; 17
    49ea:	70 e0       	ldi	r23, 0x00	; 0
    49ec:	ce 01       	movw	r24, r28
    49ee:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    49f2:	ce 01       	movw	r24, r28
    49f4:	0e 94 a0 21 	call	0x4340	; 0x4340 <_ZN14TFT_22_ILI92258endWriteEv>
    49f8:	62 e3       	ldi	r22, 0x32	; 50
    49fa:	70 e0       	ldi	r23, 0x00	; 0
    49fc:	80 e0       	ldi	r24, 0x00	; 0
    49fe:	90 e0       	ldi	r25, 0x00	; 0
    4a00:	0e 94 4a 1a 	call	0x3494	; 0x3494 <delay>
    4a04:	ce 01       	movw	r24, r28
    4a06:	0e 94 61 21 	call	0x42c2	; 0x42c2 <_ZN14TFT_22_ILI922510startWriteEv>
    4a0a:	4c e1       	ldi	r20, 0x1C	; 28
    4a0c:	51 e0       	ldi	r21, 0x01	; 1
    4a0e:	61 e0       	ldi	r22, 0x01	; 1
    4a10:	70 e0       	ldi	r23, 0x00	; 0
    4a12:	ce 01       	movw	r24, r28
    4a14:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4a18:	40 e0       	ldi	r20, 0x00	; 0
    4a1a:	51 e0       	ldi	r21, 0x01	; 1
    4a1c:	62 e0       	ldi	r22, 0x02	; 2
    4a1e:	70 e0       	ldi	r23, 0x00	; 0
    4a20:	ce 01       	movw	r24, r28
    4a22:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4a26:	48 e3       	ldi	r20, 0x38	; 56
    4a28:	50 e1       	ldi	r21, 0x10	; 16
    4a2a:	63 e0       	ldi	r22, 0x03	; 3
    4a2c:	70 e0       	ldi	r23, 0x00	; 0
    4a2e:	ce 01       	movw	r24, r28
    4a30:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4a34:	40 e0       	ldi	r20, 0x00	; 0
    4a36:	50 e0       	ldi	r21, 0x00	; 0
    4a38:	67 e0       	ldi	r22, 0x07	; 7
    4a3a:	70 e0       	ldi	r23, 0x00	; 0
    4a3c:	ce 01       	movw	r24, r28
    4a3e:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4a42:	48 e0       	ldi	r20, 0x08	; 8
    4a44:	58 e0       	ldi	r21, 0x08	; 8
    4a46:	68 e0       	ldi	r22, 0x08	; 8
    4a48:	70 e0       	ldi	r23, 0x00	; 0
    4a4a:	ce 01       	movw	r24, r28
    4a4c:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4a50:	40 e0       	ldi	r20, 0x00	; 0
    4a52:	51 e1       	ldi	r21, 0x11	; 17
    4a54:	6b e0       	ldi	r22, 0x0B	; 11
    4a56:	70 e0       	ldi	r23, 0x00	; 0
    4a58:	ce 01       	movw	r24, r28
    4a5a:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4a5e:	40 e0       	ldi	r20, 0x00	; 0
    4a60:	50 e0       	ldi	r21, 0x00	; 0
    4a62:	6c e0       	ldi	r22, 0x0C	; 12
    4a64:	70 e0       	ldi	r23, 0x00	; 0
    4a66:	ce 01       	movw	r24, r28
    4a68:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4a6c:	41 e0       	ldi	r20, 0x01	; 1
    4a6e:	5d e0       	ldi	r21, 0x0D	; 13
    4a70:	6f e0       	ldi	r22, 0x0F	; 15
    4a72:	70 e0       	ldi	r23, 0x00	; 0
    4a74:	ce 01       	movw	r24, r28
    4a76:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4a7a:	40 e2       	ldi	r20, 0x20	; 32
    4a7c:	50 e0       	ldi	r21, 0x00	; 0
    4a7e:	65 e1       	ldi	r22, 0x15	; 21
    4a80:	70 e0       	ldi	r23, 0x00	; 0
    4a82:	ce 01       	movw	r24, r28
    4a84:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4a88:	40 e0       	ldi	r20, 0x00	; 0
    4a8a:	50 e0       	ldi	r21, 0x00	; 0
    4a8c:	60 e2       	ldi	r22, 0x20	; 32
    4a8e:	70 e0       	ldi	r23, 0x00	; 0
    4a90:	ce 01       	movw	r24, r28
    4a92:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4a96:	40 e0       	ldi	r20, 0x00	; 0
    4a98:	50 e0       	ldi	r21, 0x00	; 0
    4a9a:	61 e2       	ldi	r22, 0x21	; 33
    4a9c:	70 e0       	ldi	r23, 0x00	; 0
    4a9e:	ce 01       	movw	r24, r28
    4aa0:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4aa4:	40 e0       	ldi	r20, 0x00	; 0
    4aa6:	50 e0       	ldi	r21, 0x00	; 0
    4aa8:	60 e3       	ldi	r22, 0x30	; 48
    4aaa:	70 e0       	ldi	r23, 0x00	; 0
    4aac:	ce 01       	movw	r24, r28
    4aae:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4ab2:	4b ed       	ldi	r20, 0xDB	; 219
    4ab4:	50 e0       	ldi	r21, 0x00	; 0
    4ab6:	61 e3       	ldi	r22, 0x31	; 49
    4ab8:	70 e0       	ldi	r23, 0x00	; 0
    4aba:	ce 01       	movw	r24, r28
    4abc:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4ac0:	40 e0       	ldi	r20, 0x00	; 0
    4ac2:	50 e0       	ldi	r21, 0x00	; 0
    4ac4:	62 e3       	ldi	r22, 0x32	; 50
    4ac6:	70 e0       	ldi	r23, 0x00	; 0
    4ac8:	ce 01       	movw	r24, r28
    4aca:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4ace:	40 e0       	ldi	r20, 0x00	; 0
    4ad0:	50 e0       	ldi	r21, 0x00	; 0
    4ad2:	63 e3       	ldi	r22, 0x33	; 51
    4ad4:	70 e0       	ldi	r23, 0x00	; 0
    4ad6:	ce 01       	movw	r24, r28
    4ad8:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4adc:	4b ed       	ldi	r20, 0xDB	; 219
    4ade:	50 e0       	ldi	r21, 0x00	; 0
    4ae0:	64 e3       	ldi	r22, 0x34	; 52
    4ae2:	70 e0       	ldi	r23, 0x00	; 0
    4ae4:	ce 01       	movw	r24, r28
    4ae6:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4aea:	40 e0       	ldi	r20, 0x00	; 0
    4aec:	50 e0       	ldi	r21, 0x00	; 0
    4aee:	65 e3       	ldi	r22, 0x35	; 53
    4af0:	70 e0       	ldi	r23, 0x00	; 0
    4af2:	ce 01       	movw	r24, r28
    4af4:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4af8:	4f ea       	ldi	r20, 0xAF	; 175
    4afa:	50 e0       	ldi	r21, 0x00	; 0
    4afc:	66 e3       	ldi	r22, 0x36	; 54
    4afe:	70 e0       	ldi	r23, 0x00	; 0
    4b00:	ce 01       	movw	r24, r28
    4b02:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b06:	40 e0       	ldi	r20, 0x00	; 0
    4b08:	50 e0       	ldi	r21, 0x00	; 0
    4b0a:	67 e3       	ldi	r22, 0x37	; 55
    4b0c:	70 e0       	ldi	r23, 0x00	; 0
    4b0e:	ce 01       	movw	r24, r28
    4b10:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b14:	4b ed       	ldi	r20, 0xDB	; 219
    4b16:	50 e0       	ldi	r21, 0x00	; 0
    4b18:	68 e3       	ldi	r22, 0x38	; 56
    4b1a:	70 e0       	ldi	r23, 0x00	; 0
    4b1c:	ce 01       	movw	r24, r28
    4b1e:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b22:	40 e0       	ldi	r20, 0x00	; 0
    4b24:	50 e0       	ldi	r21, 0x00	; 0
    4b26:	69 e3       	ldi	r22, 0x39	; 57
    4b28:	70 e0       	ldi	r23, 0x00	; 0
    4b2a:	ce 01       	movw	r24, r28
    4b2c:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b30:	40 e0       	ldi	r20, 0x00	; 0
    4b32:	50 e0       	ldi	r21, 0x00	; 0
    4b34:	60 e5       	ldi	r22, 0x50	; 80
    4b36:	70 e0       	ldi	r23, 0x00	; 0
    4b38:	ce 01       	movw	r24, r28
    4b3a:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b3e:	48 e0       	ldi	r20, 0x08	; 8
    4b40:	58 e0       	ldi	r21, 0x08	; 8
    4b42:	61 e5       	ldi	r22, 0x51	; 81
    4b44:	70 e0       	ldi	r23, 0x00	; 0
    4b46:	ce 01       	movw	r24, r28
    4b48:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b4c:	4a e0       	ldi	r20, 0x0A	; 10
    4b4e:	58 e0       	ldi	r21, 0x08	; 8
    4b50:	62 e5       	ldi	r22, 0x52	; 82
    4b52:	70 e0       	ldi	r23, 0x00	; 0
    4b54:	ce 01       	movw	r24, r28
    4b56:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b5a:	4a e0       	ldi	r20, 0x0A	; 10
    4b5c:	50 e0       	ldi	r21, 0x00	; 0
    4b5e:	63 e5       	ldi	r22, 0x53	; 83
    4b60:	70 e0       	ldi	r23, 0x00	; 0
    4b62:	ce 01       	movw	r24, r28
    4b64:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b68:	48 e0       	ldi	r20, 0x08	; 8
    4b6a:	5a e0       	ldi	r21, 0x0A	; 10
    4b6c:	64 e5       	ldi	r22, 0x54	; 84
    4b6e:	70 e0       	ldi	r23, 0x00	; 0
    4b70:	ce 01       	movw	r24, r28
    4b72:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b76:	48 e0       	ldi	r20, 0x08	; 8
    4b78:	58 e0       	ldi	r21, 0x08	; 8
    4b7a:	65 e5       	ldi	r22, 0x55	; 85
    4b7c:	70 e0       	ldi	r23, 0x00	; 0
    4b7e:	ce 01       	movw	r24, r28
    4b80:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b84:	40 e0       	ldi	r20, 0x00	; 0
    4b86:	50 e0       	ldi	r21, 0x00	; 0
    4b88:	66 e5       	ldi	r22, 0x56	; 86
    4b8a:	70 e0       	ldi	r23, 0x00	; 0
    4b8c:	ce 01       	movw	r24, r28
    4b8e:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b92:	40 e0       	ldi	r20, 0x00	; 0
    4b94:	5a e0       	ldi	r21, 0x0A	; 10
    4b96:	67 e5       	ldi	r22, 0x57	; 87
    4b98:	70 e0       	ldi	r23, 0x00	; 0
    4b9a:	ce 01       	movw	r24, r28
    4b9c:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4ba0:	40 e1       	ldi	r20, 0x10	; 16
    4ba2:	57 e0       	ldi	r21, 0x07	; 7
    4ba4:	68 e5       	ldi	r22, 0x58	; 88
    4ba6:	70 e0       	ldi	r23, 0x00	; 0
    4ba8:	ce 01       	movw	r24, r28
    4baa:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4bae:	40 e1       	ldi	r20, 0x10	; 16
    4bb0:	57 e0       	ldi	r21, 0x07	; 7
    4bb2:	69 e5       	ldi	r22, 0x59	; 89
    4bb4:	70 e0       	ldi	r23, 0x00	; 0
    4bb6:	ce 01       	movw	r24, r28
    4bb8:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4bbc:	42 e1       	ldi	r20, 0x12	; 18
    4bbe:	50 e0       	ldi	r21, 0x00	; 0
    4bc0:	67 e0       	ldi	r22, 0x07	; 7
    4bc2:	70 e0       	ldi	r23, 0x00	; 0
    4bc4:	ce 01       	movw	r24, r28
    4bc6:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4bca:	ce 01       	movw	r24, r28
    4bcc:	0e 94 a0 21 	call	0x4340	; 0x4340 <_ZN14TFT_22_ILI92258endWriteEv>
    4bd0:	62 e3       	ldi	r22, 0x32	; 50
    4bd2:	70 e0       	ldi	r23, 0x00	; 0
    4bd4:	80 e0       	ldi	r24, 0x00	; 0
    4bd6:	90 e0       	ldi	r25, 0x00	; 0
    4bd8:	0e 94 4a 1a 	call	0x3494	; 0x3494 <delay>
    4bdc:	ce 01       	movw	r24, r28
    4bde:	0e 94 61 21 	call	0x42c2	; 0x42c2 <_ZN14TFT_22_ILI922510startWriteEv>
    4be2:	47 e1       	ldi	r20, 0x17	; 23
    4be4:	50 e1       	ldi	r21, 0x10	; 16
    4be6:	67 e0       	ldi	r22, 0x07	; 7
    4be8:	70 e0       	ldi	r23, 0x00	; 0
    4bea:	ce 01       	movw	r24, r28
    4bec:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4bf0:	ce 01       	movw	r24, r28
    4bf2:	0e 94 a0 21 	call	0x4340	; 0x4340 <_ZN14TFT_22_ILI92258endWriteEv>
    4bf6:	61 e0       	ldi	r22, 0x01	; 1
    4bf8:	ce 01       	movw	r24, r28
    4bfa:	0e 94 43 20 	call	0x4086	; 0x4086 <_ZN14TFT_22_ILI922512setBacklightEb>
    4bfe:	60 e0       	ldi	r22, 0x00	; 0
    4c00:	ce 01       	movw	r24, r28
    4c02:	0e 94 52 20 	call	0x40a4	; 0x40a4 <_ZN14TFT_22_ILI922514setOrientationEh>
    4c06:	1d 82       	std	Y+5, r1	; 0x05
    4c08:	1c 82       	std	Y+4, r1	; 0x04
    4c0a:	ce 01       	movw	r24, r28
    4c0c:	df 91       	pop	r29
    4c0e:	cf 91       	pop	r28
    4c10:	0c 94 9a 23 	jmp	0x4734	; 0x4734 <_ZN14TFT_22_ILI92255clearEv>

00004c14 <_ZN14TFT_22_ILI92259drawPixelEjjj>:
    4c14:	ef 92       	push	r14
    4c16:	ff 92       	push	r15
    4c18:	0f 93       	push	r16
    4c1a:	1f 93       	push	r17
    4c1c:	cf 93       	push	r28
    4c1e:	df 93       	push	r29
    4c20:	00 d0       	rcall	.+0      	; 0x4c22 <_ZN14TFT_22_ILI92259drawPixelEjjj+0xe>
    4c22:	00 d0       	rcall	.+0      	; 0x4c24 <_ZN14TFT_22_ILI92259drawPixelEjjj+0x10>
    4c24:	cd b7       	in	r28, 0x3d	; 61
    4c26:	de b7       	in	r29, 0x3e	; 62
    4c28:	7a 83       	std	Y+2, r23	; 0x02
    4c2a:	69 83       	std	Y+1, r22	; 0x01
    4c2c:	5c 83       	std	Y+4, r21	; 0x04
    4c2e:	4b 83       	std	Y+3, r20	; 0x03
    4c30:	dc 01       	movw	r26, r24
    4c32:	4d 91       	ld	r20, X+
    4c34:	5c 91       	ld	r21, X
    4c36:	11 97       	sbiw	r26, 0x01	; 1
    4c38:	64 17       	cp	r22, r20
    4c3a:	75 07       	cpc	r23, r21
    4c3c:	68 f5       	brcc	.+90     	; 0x4c98 <_ZN14TFT_22_ILI92259drawPixelEjjj+0x84>
    4c3e:	12 96       	adiw	r26, 0x02	; 2
    4c40:	6d 91       	ld	r22, X+
    4c42:	7c 91       	ld	r23, X
    4c44:	13 97       	sbiw	r26, 0x03	; 3
    4c46:	4b 81       	ldd	r20, Y+3	; 0x03
    4c48:	5c 81       	ldd	r21, Y+4	; 0x04
    4c4a:	46 17       	cp	r20, r22
    4c4c:	57 07       	cpc	r21, r23
    4c4e:	20 f5       	brcc	.+72     	; 0x4c98 <_ZN14TFT_22_ILI92259drawPixelEjjj+0x84>
    4c50:	79 01       	movw	r14, r18
    4c52:	8c 01       	movw	r16, r24
    4c54:	ae 01       	movw	r20, r28
    4c56:	4d 5f       	subi	r20, 0xFD	; 253
    4c58:	5f 4f       	sbci	r21, 0xFF	; 255
    4c5a:	be 01       	movw	r22, r28
    4c5c:	6f 5f       	subi	r22, 0xFF	; 255
    4c5e:	7f 4f       	sbci	r23, 0xFF	; 255
    4c60:	0e 94 00 20 	call	0x4000	; 0x4000 <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_>
    4c64:	c8 01       	movw	r24, r16
    4c66:	0e 94 61 21 	call	0x42c2	; 0x42c2 <_ZN14TFT_22_ILI922510startWriteEv>
    4c6a:	49 81       	ldd	r20, Y+1	; 0x01
    4c6c:	5a 81       	ldd	r21, Y+2	; 0x02
    4c6e:	60 e2       	ldi	r22, 0x20	; 32
    4c70:	70 e0       	ldi	r23, 0x00	; 0
    4c72:	c8 01       	movw	r24, r16
    4c74:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4c78:	4b 81       	ldd	r20, Y+3	; 0x03
    4c7a:	5c 81       	ldd	r21, Y+4	; 0x04
    4c7c:	61 e2       	ldi	r22, 0x21	; 33
    4c7e:	70 e0       	ldi	r23, 0x00	; 0
    4c80:	c8 01       	movw	r24, r16
    4c82:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4c86:	a7 01       	movw	r20, r14
    4c88:	62 e2       	ldi	r22, 0x22	; 34
    4c8a:	70 e0       	ldi	r23, 0x00	; 0
    4c8c:	c8 01       	movw	r24, r16
    4c8e:	0e 94 06 21 	call	0x420c	; 0x420c <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4c92:	c8 01       	movw	r24, r16
    4c94:	0e 94 a0 21 	call	0x4340	; 0x4340 <_ZN14TFT_22_ILI92258endWriteEv>
    4c98:	0f 90       	pop	r0
    4c9a:	0f 90       	pop	r0
    4c9c:	0f 90       	pop	r0
    4c9e:	0f 90       	pop	r0
    4ca0:	df 91       	pop	r29
    4ca2:	cf 91       	pop	r28
    4ca4:	1f 91       	pop	r17
    4ca6:	0f 91       	pop	r16
    4ca8:	ff 90       	pop	r15
    4caa:	ef 90       	pop	r14
    4cac:	08 95       	ret

00004cae <_ZN14TFT_22_ILI92258drawLineEjjjjj>:
    4cae:	2f 92       	push	r2
    4cb0:	3f 92       	push	r3
    4cb2:	4f 92       	push	r4
    4cb4:	5f 92       	push	r5
    4cb6:	6f 92       	push	r6
    4cb8:	7f 92       	push	r7
    4cba:	8f 92       	push	r8
    4cbc:	9f 92       	push	r9
    4cbe:	af 92       	push	r10
    4cc0:	bf 92       	push	r11
    4cc2:	cf 92       	push	r12
    4cc4:	df 92       	push	r13
    4cc6:	ef 92       	push	r14
    4cc8:	ff 92       	push	r15
    4cca:	0f 93       	push	r16
    4ccc:	1f 93       	push	r17
    4cce:	cf 93       	push	r28
    4cd0:	df 93       	push	r29
    4cd2:	00 d0       	rcall	.+0      	; 0x4cd4 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x26>
    4cd4:	00 d0       	rcall	.+0      	; 0x4cd6 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x28>
    4cd6:	00 d0       	rcall	.+0      	; 0x4cd8 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x2a>
    4cd8:	cd b7       	in	r28, 0x3d	; 61
    4cda:	de b7       	in	r29, 0x3e	; 62
    4cdc:	4c 01       	movw	r8, r24
    4cde:	7e 83       	std	Y+6, r23	; 0x06
    4ce0:	6d 83       	std	Y+5, r22	; 0x05
    4ce2:	6a 01       	movw	r12, r20
    4ce4:	59 01       	movw	r10, r18
    4ce6:	fc 82       	std	Y+4, r15	; 0x04
    4ce8:	eb 82       	std	Y+3, r14	; 0x03
    4cea:	38 01       	movw	r6, r16
    4cec:	64 1a       	sub	r6, r20
    4cee:	75 0a       	sbc	r7, r21
    4cf0:	77 fe       	sbrs	r7, 7
    4cf2:	03 c0       	rjmp	.+6      	; 0x4cfa <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x4c>
    4cf4:	71 94       	neg	r7
    4cf6:	61 94       	neg	r6
    4cf8:	71 08       	sbc	r7, r1
    4cfa:	75 01       	movw	r14, r10
    4cfc:	2d 81       	ldd	r18, Y+5	; 0x05
    4cfe:	3e 81       	ldd	r19, Y+6	; 0x06
    4d00:	e2 1a       	sub	r14, r18
    4d02:	f3 0a       	sbc	r15, r19
    4d04:	f7 fe       	sbrs	r15, 7
    4d06:	03 c0       	rjmp	.+6      	; 0x4d0e <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x60>
    4d08:	f1 94       	neg	r15
    4d0a:	e1 94       	neg	r14
    4d0c:	f1 08       	sbc	r15, r1
    4d0e:	e6 14       	cp	r14, r6
    4d10:	f7 04       	cpc	r15, r7
    4d12:	5c f4       	brge	.+22     	; 0x4d2a <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x7c>
    4d14:	9a 2d       	mov	r25, r10
    4d16:	8b 2d       	mov	r24, r11
    4d18:	58 01       	movw	r10, r16
    4d1a:	09 2f       	mov	r16, r25
    4d1c:	18 2f       	mov	r17, r24
    4d1e:	9d 81       	ldd	r25, Y+5	; 0x05
    4d20:	8e 81       	ldd	r24, Y+6	; 0x06
    4d22:	de 82       	std	Y+6, r13	; 0x06
    4d24:	cd 82       	std	Y+5, r12	; 0x05
    4d26:	c9 2e       	mov	r12, r25
    4d28:	d8 2e       	mov	r13, r24
    4d2a:	8d 81       	ldd	r24, Y+5	; 0x05
    4d2c:	9e 81       	ldd	r25, Y+6	; 0x06
    4d2e:	a8 16       	cp	r10, r24
    4d30:	b9 06       	cpc	r11, r25
    4d32:	58 f4       	brcc	.+22     	; 0x4d4a <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x9c>
    4d34:	9c 2d       	mov	r25, r12
    4d36:	8d 2d       	mov	r24, r13
    4d38:	68 01       	movw	r12, r16
    4d3a:	09 2f       	mov	r16, r25
    4d3c:	18 2f       	mov	r17, r24
    4d3e:	9d 81       	ldd	r25, Y+5	; 0x05
    4d40:	8e 81       	ldd	r24, Y+6	; 0x06
    4d42:	be 82       	std	Y+6, r11	; 0x06
    4d44:	ad 82       	std	Y+5, r10	; 0x05
    4d46:	a9 2e       	mov	r10, r25
    4d48:	b8 2e       	mov	r11, r24
    4d4a:	95 01       	movw	r18, r10
    4d4c:	8d 81       	ldd	r24, Y+5	; 0x05
    4d4e:	9e 81       	ldd	r25, Y+6	; 0x06
    4d50:	28 1b       	sub	r18, r24
    4d52:	39 0b       	sbc	r19, r25
    4d54:	3a 83       	std	Y+2, r19	; 0x02
    4d56:	29 83       	std	Y+1, r18	; 0x01
    4d58:	18 01       	movw	r2, r16
    4d5a:	2c 18       	sub	r2, r12
    4d5c:	3d 08       	sbc	r3, r13
    4d5e:	37 fe       	sbrs	r3, 7
    4d60:	03 c0       	rjmp	.+6      	; 0x4d68 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0xba>
    4d62:	31 94       	neg	r3
    4d64:	21 94       	neg	r2
    4d66:	31 08       	sbc	r3, r1
    4d68:	49 80       	ldd	r4, Y+1	; 0x01
    4d6a:	5a 80       	ldd	r5, Y+2	; 0x02
    4d6c:	57 fe       	sbrs	r5, 7
    4d6e:	03 c0       	rjmp	.+6      	; 0x4d76 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0xc8>
    4d70:	9f ef       	ldi	r25, 0xFF	; 255
    4d72:	49 1a       	sub	r4, r25
    4d74:	59 0a       	sbc	r5, r25
    4d76:	55 94       	asr	r5
    4d78:	47 94       	ror	r4
    4d7a:	c0 16       	cp	r12, r16
    4d7c:	d1 06       	cpc	r13, r17
    4d7e:	18 f0       	brcs	.+6      	; 0x4d86 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0xd8>
    4d80:	0f ef       	ldi	r16, 0xFF	; 255
    4d82:	1f ef       	ldi	r17, 0xFF	; 255
    4d84:	02 c0       	rjmp	.+4      	; 0x4d8a <_ZN14TFT_22_ILI92258drawLineEjjjjj+0xdc>
    4d86:	01 e0       	ldi	r16, 0x01	; 1
    4d88:	10 e0       	ldi	r17, 0x00	; 0
    4d8a:	c4 01       	movw	r24, r8
    4d8c:	0e 94 61 21 	call	0x42c2	; 0x42c2 <_ZN14TFT_22_ILI922510startWriteEv>
    4d90:	2d 81       	ldd	r18, Y+5	; 0x05
    4d92:	3e 81       	ldd	r19, Y+6	; 0x06
    4d94:	a2 16       	cp	r10, r18
    4d96:	b3 06       	cpc	r11, r19
    4d98:	00 f1       	brcs	.+64     	; 0x4dda <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x12c>
    4d9a:	2b 81       	ldd	r18, Y+3	; 0x03
    4d9c:	3c 81       	ldd	r19, Y+4	; 0x04
    4d9e:	e6 14       	cp	r14, r6
    4da0:	f7 04       	cpc	r15, r7
    4da2:	24 f4       	brge	.+8      	; 0x4dac <_ZN14TFT_22_ILI92258drawLineEjjjjj+0xfe>
    4da4:	4d 81       	ldd	r20, Y+5	; 0x05
    4da6:	5e 81       	ldd	r21, Y+6	; 0x06
    4da8:	b6 01       	movw	r22, r12
    4daa:	03 c0       	rjmp	.+6      	; 0x4db2 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x104>
    4dac:	a6 01       	movw	r20, r12
    4dae:	6d 81       	ldd	r22, Y+5	; 0x05
    4db0:	7e 81       	ldd	r23, Y+6	; 0x06
    4db2:	c4 01       	movw	r24, r8
    4db4:	0e 94 0a 26 	call	0x4c14	; 0x4c14 <_ZN14TFT_22_ILI92259drawPixelEjjj>
    4db8:	42 18       	sub	r4, r2
    4dba:	53 08       	sbc	r5, r3
    4dbc:	57 fe       	sbrs	r5, 7
    4dbe:	06 c0       	rjmp	.+12     	; 0x4dcc <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x11e>
    4dc0:	c0 0e       	add	r12, r16
    4dc2:	d1 1e       	adc	r13, r17
    4dc4:	89 81       	ldd	r24, Y+1	; 0x01
    4dc6:	9a 81       	ldd	r25, Y+2	; 0x02
    4dc8:	48 0e       	add	r4, r24
    4dca:	59 1e       	adc	r5, r25
    4dcc:	2d 81       	ldd	r18, Y+5	; 0x05
    4dce:	3e 81       	ldd	r19, Y+6	; 0x06
    4dd0:	2f 5f       	subi	r18, 0xFF	; 255
    4dd2:	3f 4f       	sbci	r19, 0xFF	; 255
    4dd4:	3e 83       	std	Y+6, r19	; 0x06
    4dd6:	2d 83       	std	Y+5, r18	; 0x05
    4dd8:	db cf       	rjmp	.-74     	; 0x4d90 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0xe2>
    4dda:	c4 01       	movw	r24, r8
    4ddc:	26 96       	adiw	r28, 0x06	; 6
    4dde:	0f b6       	in	r0, 0x3f	; 63
    4de0:	f8 94       	cli
    4de2:	de bf       	out	0x3e, r29	; 62
    4de4:	0f be       	out	0x3f, r0	; 63
    4de6:	cd bf       	out	0x3d, r28	; 61
    4de8:	df 91       	pop	r29
    4dea:	cf 91       	pop	r28
    4dec:	1f 91       	pop	r17
    4dee:	0f 91       	pop	r16
    4df0:	ff 90       	pop	r15
    4df2:	ef 90       	pop	r14
    4df4:	df 90       	pop	r13
    4df6:	cf 90       	pop	r12
    4df8:	bf 90       	pop	r11
    4dfa:	af 90       	pop	r10
    4dfc:	9f 90       	pop	r9
    4dfe:	8f 90       	pop	r8
    4e00:	7f 90       	pop	r7
    4e02:	6f 90       	pop	r6
    4e04:	5f 90       	pop	r5
    4e06:	4f 90       	pop	r4
    4e08:	3f 90       	pop	r3
    4e0a:	2f 90       	pop	r2
    4e0c:	0c 94 a0 21 	jmp	0x4340	; 0x4340 <_ZN14TFT_22_ILI92258endWriteEv>

00004e10 <_ZN14TFT_22_ILI922513drawRectangleEjjjjj>:
    4e10:	4f 92       	push	r4
    4e12:	5f 92       	push	r5
    4e14:	6f 92       	push	r6
    4e16:	7f 92       	push	r7
    4e18:	8f 92       	push	r8
    4e1a:	9f 92       	push	r9
    4e1c:	af 92       	push	r10
    4e1e:	bf 92       	push	r11
    4e20:	cf 92       	push	r12
    4e22:	df 92       	push	r13
    4e24:	ef 92       	push	r14
    4e26:	ff 92       	push	r15
    4e28:	0f 93       	push	r16
    4e2a:	1f 93       	push	r17
    4e2c:	cf 93       	push	r28
    4e2e:	df 93       	push	r29
    4e30:	ec 01       	movw	r28, r24
    4e32:	4b 01       	movw	r8, r22
    4e34:	3a 01       	movw	r6, r20
    4e36:	29 01       	movw	r4, r18
    4e38:	68 01       	movw	r12, r16
    4e3a:	0e 94 61 21 	call	0x42c2	; 0x42c2 <_ZN14TFT_22_ILI922510startWriteEv>
    4e3e:	94 01       	movw	r18, r8
    4e40:	a3 01       	movw	r20, r6
    4e42:	b4 01       	movw	r22, r8
    4e44:	ce 01       	movw	r24, r28
    4e46:	0e 94 57 26 	call	0x4cae	; 0x4cae <_ZN14TFT_22_ILI92258drawLineEjjjjj>
    4e4a:	83 01       	movw	r16, r6
    4e4c:	92 01       	movw	r18, r4
    4e4e:	a3 01       	movw	r20, r6
    4e50:	b4 01       	movw	r22, r8
    4e52:	ce 01       	movw	r24, r28
    4e54:	0e 94 57 26 	call	0x4cae	; 0x4cae <_ZN14TFT_22_ILI92258drawLineEjjjjj>
    4e58:	86 01       	movw	r16, r12
    4e5a:	92 01       	movw	r18, r4
    4e5c:	a6 01       	movw	r20, r12
    4e5e:	b4 01       	movw	r22, r8
    4e60:	ce 01       	movw	r24, r28
    4e62:	0e 94 57 26 	call	0x4cae	; 0x4cae <_ZN14TFT_22_ILI92258drawLineEjjjjj>
    4e66:	92 01       	movw	r18, r4
    4e68:	a3 01       	movw	r20, r6
    4e6a:	b2 01       	movw	r22, r4
    4e6c:	ce 01       	movw	r24, r28
    4e6e:	0e 94 57 26 	call	0x4cae	; 0x4cae <_ZN14TFT_22_ILI92258drawLineEjjjjj>
    4e72:	ce 01       	movw	r24, r28
    4e74:	df 91       	pop	r29
    4e76:	cf 91       	pop	r28
    4e78:	1f 91       	pop	r17
    4e7a:	0f 91       	pop	r16
    4e7c:	ff 90       	pop	r15
    4e7e:	ef 90       	pop	r14
    4e80:	df 90       	pop	r13
    4e82:	cf 90       	pop	r12
    4e84:	bf 90       	pop	r11
    4e86:	af 90       	pop	r10
    4e88:	9f 90       	pop	r9
    4e8a:	8f 90       	pop	r8
    4e8c:	7f 90       	pop	r7
    4e8e:	6f 90       	pop	r6
    4e90:	5f 90       	pop	r5
    4e92:	4f 90       	pop	r4
    4e94:	0c 94 a0 21 	jmp	0x4340	; 0x4340 <_ZN14TFT_22_ILI92258endWriteEv>

00004e98 <_ZN14TFT_22_ILI92258drawCharEjjjj>:
    4e98:	2f 92       	push	r2
    4e9a:	3f 92       	push	r3
    4e9c:	4f 92       	push	r4
    4e9e:	5f 92       	push	r5
    4ea0:	6f 92       	push	r6
    4ea2:	7f 92       	push	r7
    4ea4:	8f 92       	push	r8
    4ea6:	9f 92       	push	r9
    4ea8:	af 92       	push	r10
    4eaa:	bf 92       	push	r11
    4eac:	cf 92       	push	r12
    4eae:	df 92       	push	r13
    4eb0:	ef 92       	push	r14
    4eb2:	ff 92       	push	r15
    4eb4:	0f 93       	push	r16
    4eb6:	1f 93       	push	r17
    4eb8:	cf 93       	push	r28
    4eba:	df 93       	push	r29
    4ebc:	cd b7       	in	r28, 0x3d	; 61
    4ebe:	de b7       	in	r29, 0x3e	; 62
    4ec0:	2a 97       	sbiw	r28, 0x0a	; 10
    4ec2:	0f b6       	in	r0, 0x3f	; 63
    4ec4:	f8 94       	cli
    4ec6:	de bf       	out	0x3e, r29	; 62
    4ec8:	0f be       	out	0x3f, r0	; 63
    4eca:	cd bf       	out	0x3d, r28	; 61
    4ecc:	9a 87       	std	Y+10, r25	; 0x0a
    4ece:	89 87       	std	Y+9, r24	; 0x09
    4ed0:	7b 01       	movw	r14, r22
    4ed2:	6a 01       	movw	r12, r20
    4ed4:	50 2e       	mov	r5, r16
    4ed6:	41 2e       	mov	r4, r17
    4ed8:	dc 01       	movw	r26, r24
    4eda:	d8 96       	adiw	r26, 0x38	; 56
    4edc:	7c 90       	ld	r7, X
    4ede:	d8 97       	sbiw	r26, 0x38	; 56
    4ee0:	dc 96       	adiw	r26, 0x3c	; 60
    4ee2:	8c 91       	ld	r24, X
    4ee4:	dc 97       	sbiw	r26, 0x3c	; 60
    4ee6:	78 9e       	mul	r7, r24
    4ee8:	c0 01       	movw	r24, r0
    4eea:	11 24       	eor	r1, r1
    4eec:	01 96       	adiw	r24, 0x01	; 1
    4eee:	da 96       	adiw	r26, 0x3a	; 58
    4ef0:	4c 91       	ld	r20, X
    4ef2:	da 97       	sbiw	r26, 0x3a	; 58
    4ef4:	24 1b       	sub	r18, r20
    4ef6:	31 09       	sbc	r19, r1
    4ef8:	82 9f       	mul	r24, r18
    4efa:	a0 01       	movw	r20, r0
    4efc:	83 9f       	mul	r24, r19
    4efe:	50 0d       	add	r21, r0
    4f00:	92 9f       	mul	r25, r18
    4f02:	50 0d       	add	r21, r0
    4f04:	11 24       	eor	r1, r1
    4f06:	dd 96       	adiw	r26, 0x3d	; 61
    4f08:	8c 91       	ld	r24, X
    4f0a:	dd 97       	sbiw	r26, 0x3d	; 61
    4f0c:	81 11       	cpse	r24, r1
    4f0e:	09 c0       	rjmp	.+18     	; 0x4f22 <_ZN14TFT_22_ILI92258drawCharEjjjj+0x8a>
    4f10:	d6 96       	adiw	r26, 0x36	; 54
    4f12:	ed 91       	ld	r30, X+
    4f14:	fc 91       	ld	r31, X
    4f16:	d7 97       	sbiw	r26, 0x37	; 55
    4f18:	ca 01       	movw	r24, r20
    4f1a:	04 96       	adiw	r24, 0x04	; 4
    4f1c:	e8 0f       	add	r30, r24
    4f1e:	f9 1f       	adc	r31, r25
    4f20:	74 90       	lpm	r7, Z
    4f22:	5a 01       	movw	r10, r20
    4f24:	b5 e0       	ldi	r27, 0x05	; 5
    4f26:	ab 0e       	add	r10, r27
    4f28:	b1 1c       	adc	r11, r1
    4f2a:	89 85       	ldd	r24, Y+9	; 0x09
    4f2c:	9a 85       	ldd	r25, Y+10	; 0x0a
    4f2e:	0e 94 61 21 	call	0x42c2	; 0x42c2 <_ZN14TFT_22_ILI922510startWriteEv>
    4f32:	e7 2d       	mov	r30, r7
    4f34:	f0 e0       	ldi	r31, 0x00	; 0
    4f36:	fa 83       	std	Y+2, r31	; 0x02
    4f38:	e9 83       	std	Y+1, r30	; 0x01
    4f3a:	97 01       	movw	r18, r14
    4f3c:	2f 5f       	subi	r18, 0xFF	; 255
    4f3e:	3f 4f       	sbci	r19, 0xFF	; 255
    4f40:	2e 0f       	add	r18, r30
    4f42:	3f 1f       	adc	r19, r31
    4f44:	a9 85       	ldd	r26, Y+9	; 0x09
    4f46:	ba 85       	ldd	r27, Y+10	; 0x0a
    4f48:	8d 91       	ld	r24, X+
    4f4a:	9c 91       	ld	r25, X
    4f4c:	11 97       	sbiw	r26, 0x01	; 1
    4f4e:	28 17       	cp	r18, r24
    4f50:	39 07       	cpc	r19, r25
    4f52:	80 f4       	brcc	.+32     	; 0x4f74 <_ZN14TFT_22_ILI92258drawCharEjjjj+0xdc>
    4f54:	d9 96       	adiw	r26, 0x39	; 57
    4f56:	0c 91       	ld	r16, X
    4f58:	d9 97       	sbiw	r26, 0x39	; 57
    4f5a:	10 e0       	ldi	r17, 0x00	; 0
    4f5c:	01 50       	subi	r16, 0x01	; 1
    4f5e:	11 09       	sbc	r17, r1
    4f60:	0c 0d       	add	r16, r12
    4f62:	1d 1d       	adc	r17, r13
    4f64:	12 96       	adiw	r26, 0x02	; 2
    4f66:	8d 91       	ld	r24, X+
    4f68:	9c 91       	ld	r25, X
    4f6a:	13 97       	sbiw	r26, 0x03	; 3
    4f6c:	08 17       	cp	r16, r24
    4f6e:	19 07       	cpc	r17, r25
    4f70:	08 f4       	brcc	.+2      	; 0x4f74 <_ZN14TFT_22_ILI92258drawCharEjjjj+0xdc>
    4f72:	6c c0       	rjmp	.+216    	; 0x504c <_ZN14TFT_22_ILI92258drawCharEjjjj+0x1b4>
    4f74:	31 2c       	mov	r3, r1
    4f76:	61 2c       	mov	r6, r1
    4f78:	45 01       	movw	r8, r10
    4f7a:	21 2c       	mov	r2, r1
    4f7c:	f7 01       	movw	r30, r14
    4f7e:	e6 0d       	add	r30, r6
    4f80:	f1 1d       	adc	r31, r1
    4f82:	f8 87       	std	Y+8, r31	; 0x08
    4f84:	ef 83       	std	Y+7, r30	; 0x07
    4f86:	88 2d       	mov	r24, r8
    4f88:	8a 19       	sub	r24, r10
    4f8a:	a9 85       	ldd	r26, Y+9	; 0x09
    4f8c:	ba 85       	ldd	r27, Y+10	; 0x0a
    4f8e:	dc 96       	adiw	r26, 0x3c	; 60
    4f90:	9c 91       	ld	r25, X
    4f92:	dc 97       	sbiw	r26, 0x3c	; 60
    4f94:	89 17       	cp	r24, r25
    4f96:	08 f0       	brcs	.+2      	; 0x4f9a <_ZN14TFT_22_ILI92258drawCharEjjjj+0x102>
    4f98:	54 c0       	rjmp	.+168    	; 0x5042 <_ZN14TFT_22_ILI92258drawCharEjjjj+0x1aa>
    4f9a:	76 14       	cp	r7, r6
    4f9c:	41 f0       	breq	.+16     	; 0x4fae <_ZN14TFT_22_ILI92258drawCharEjjjj+0x116>
    4f9e:	d6 96       	adiw	r26, 0x36	; 54
    4fa0:	ed 91       	ld	r30, X+
    4fa2:	fc 91       	ld	r31, X
    4fa4:	d7 97       	sbiw	r26, 0x37	; 55
    4fa6:	e8 0d       	add	r30, r8
    4fa8:	f9 1d       	adc	r31, r9
    4faa:	e4 91       	lpm	r30, Z
    4fac:	01 c0       	rjmp	.+2      	; 0x4fb0 <_ZN14TFT_22_ILI92258drawCharEjjjj+0x118>
    4fae:	e0 e0       	ldi	r30, 0x00	; 0
    4fb0:	bf ef       	ldi	r27, 0xFF	; 255
    4fb2:	8b 1a       	sub	r8, r27
    4fb4:	9b 0a       	sbc	r9, r27
    4fb6:	96 01       	movw	r18, r12
    4fb8:	98 e0       	ldi	r25, 0x08	; 8
    4fba:	89 9f       	mul	r24, r25
    4fbc:	20 0d       	add	r18, r0
    4fbe:	31 1d       	adc	r19, r1
    4fc0:	11 24       	eor	r1, r1
    4fc2:	3e 83       	std	Y+6, r19	; 0x06
    4fc4:	2d 83       	std	Y+5, r18	; 0x05
    4fc6:	00 e0       	ldi	r16, 0x00	; 0
    4fc8:	10 e0       	ldi	r17, 0x00	; 0
    4fca:	ae 2f       	mov	r26, r30
    4fcc:	b0 e0       	ldi	r27, 0x00	; 0
    4fce:	bc 83       	std	Y+4, r27	; 0x04
    4fd0:	ab 83       	std	Y+3, r26	; 0x03
    4fd2:	e9 85       	ldd	r30, Y+9	; 0x09
    4fd4:	fa 85       	ldd	r31, Y+10	; 0x0a
    4fd6:	81 ad       	ldd	r24, Z+57	; 0x39
    4fd8:	28 16       	cp	r2, r24
    4fda:	a8 f6       	brcc	.-86     	; 0x4f86 <_ZN14TFT_22_ILI92258drawCharEjjjj+0xee>
    4fdc:	8b 81       	ldd	r24, Y+3	; 0x03
    4fde:	9c 81       	ldd	r25, Y+4	; 0x04
    4fe0:	00 2e       	mov	r0, r16
    4fe2:	02 c0       	rjmp	.+4      	; 0x4fe8 <_ZN14TFT_22_ILI92258drawCharEjjjj+0x150>
    4fe4:	95 95       	asr	r25
    4fe6:	87 95       	ror	r24
    4fe8:	0a 94       	dec	r0
    4fea:	e2 f7       	brpl	.-8      	; 0x4fe4 <_ZN14TFT_22_ILI92258drawCharEjjjj+0x14c>
    4fec:	33 20       	and	r3, r3
    4fee:	61 f0       	breq	.+24     	; 0x5008 <_ZN14TFT_22_ILI92258drawCharEjjjj+0x170>
    4ff0:	80 fd       	sbrc	r24, 0
    4ff2:	03 c0       	rjmp	.+6      	; 0x4ffa <_ZN14TFT_22_ILI92258drawCharEjjjj+0x162>
    4ff4:	64 81       	ldd	r22, Z+4	; 0x04
    4ff6:	75 81       	ldd	r23, Z+5	; 0x05
    4ff8:	02 c0       	rjmp	.+4      	; 0x4ffe <_ZN14TFT_22_ILI92258drawCharEjjjj+0x166>
    4ffa:	65 2d       	mov	r22, r5
    4ffc:	74 2d       	mov	r23, r4
    4ffe:	89 85       	ldd	r24, Y+9	; 0x09
    5000:	9a 85       	ldd	r25, Y+10	; 0x0a
    5002:	0e 94 bd 20 	call	0x417a	; 0x417a <_ZN14TFT_22_ILI922512_writeData16Ej>
    5006:	16 c0       	rjmp	.+44     	; 0x5034 <_ZN14TFT_22_ILI92258drawCharEjjjj+0x19c>
    5008:	80 fd       	sbrc	r24, 0
    500a:	08 c0       	rjmp	.+16     	; 0x501c <_ZN14TFT_22_ILI92258drawCharEjjjj+0x184>
    500c:	a9 85       	ldd	r26, Y+9	; 0x09
    500e:	ba 85       	ldd	r27, Y+10	; 0x0a
    5010:	14 96       	adiw	r26, 0x04	; 4
    5012:	2c 91       	ld	r18, X
    5014:	14 97       	sbiw	r26, 0x04	; 4
    5016:	15 96       	adiw	r26, 0x05	; 5
    5018:	3c 91       	ld	r19, X
    501a:	02 c0       	rjmp	.+4      	; 0x5020 <_ZN14TFT_22_ILI92258drawCharEjjjj+0x188>
    501c:	25 2d       	mov	r18, r5
    501e:	34 2d       	mov	r19, r4
    5020:	4d 81       	ldd	r20, Y+5	; 0x05
    5022:	5e 81       	ldd	r21, Y+6	; 0x06
    5024:	40 0f       	add	r20, r16
    5026:	51 1f       	adc	r21, r17
    5028:	6f 81       	ldd	r22, Y+7	; 0x07
    502a:	78 85       	ldd	r23, Y+8	; 0x08
    502c:	89 85       	ldd	r24, Y+9	; 0x09
    502e:	9a 85       	ldd	r25, Y+10	; 0x0a
    5030:	0e 94 0a 26 	call	0x4c14	; 0x4c14 <_ZN14TFT_22_ILI92259drawPixelEjjj>
    5034:	23 94       	inc	r2
    5036:	0f 5f       	subi	r16, 0xFF	; 255
    5038:	1f 4f       	sbci	r17, 0xFF	; 255
    503a:	08 30       	cpi	r16, 0x08	; 8
    503c:	11 05       	cpc	r17, r1
    503e:	49 f6       	brne	.-110    	; 0x4fd2 <_ZN14TFT_22_ILI92258drawCharEjjjj+0x13a>
    5040:	a2 cf       	rjmp	.-188    	; 0x4f86 <_ZN14TFT_22_ILI92258drawCharEjjjj+0xee>
    5042:	63 94       	inc	r6
    5044:	76 14       	cp	r7, r6
    5046:	58 f0       	brcs	.+22     	; 0x505e <_ZN14TFT_22_ILI92258drawCharEjjjj+0x1c6>
    5048:	54 01       	movw	r10, r8
    504a:	96 cf       	rjmp	.-212    	; 0x4f78 <_ZN14TFT_22_ILI92258drawCharEjjjj+0xe0>
    504c:	a6 01       	movw	r20, r12
    504e:	b7 01       	movw	r22, r14
    5050:	89 85       	ldd	r24, Y+9	; 0x09
    5052:	9a 85       	ldd	r25, Y+10	; 0x0a
    5054:	0e 94 49 23 	call	0x4692	; 0x4692 <_ZN14TFT_22_ILI922510_setWindowEjjjj>
    5058:	33 24       	eor	r3, r3
    505a:	33 94       	inc	r3
    505c:	8c cf       	rjmp	.-232    	; 0x4f76 <_ZN14TFT_22_ILI92258drawCharEjjjj+0xde>
    505e:	89 85       	ldd	r24, Y+9	; 0x09
    5060:	9a 85       	ldd	r25, Y+10	; 0x0a
    5062:	0e 94 a0 21 	call	0x4340	; 0x4340 <_ZN14TFT_22_ILI92258endWriteEv>
    5066:	89 85       	ldd	r24, Y+9	; 0x09
    5068:	9a 85       	ldd	r25, Y+10	; 0x0a
    506a:	0e 94 16 21 	call	0x422c	; 0x422c <_ZN14TFT_22_ILI922512_resetWindowEv>
    506e:	89 81       	ldd	r24, Y+1	; 0x01
    5070:	9a 81       	ldd	r25, Y+2	; 0x02
    5072:	2a 96       	adiw	r28, 0x0a	; 10
    5074:	0f b6       	in	r0, 0x3f	; 63
    5076:	f8 94       	cli
    5078:	de bf       	out	0x3e, r29	; 62
    507a:	0f be       	out	0x3f, r0	; 63
    507c:	cd bf       	out	0x3d, r28	; 61
    507e:	df 91       	pop	r29
    5080:	cf 91       	pop	r28
    5082:	1f 91       	pop	r17
    5084:	0f 91       	pop	r16
    5086:	ff 90       	pop	r15
    5088:	ef 90       	pop	r14
    508a:	df 90       	pop	r13
    508c:	cf 90       	pop	r12
    508e:	bf 90       	pop	r11
    5090:	af 90       	pop	r10
    5092:	9f 90       	pop	r9
    5094:	8f 90       	pop	r8
    5096:	7f 90       	pop	r7
    5098:	6f 90       	pop	r6
    509a:	5f 90       	pop	r5
    509c:	4f 90       	pop	r4
    509e:	3f 90       	pop	r3
    50a0:	2f 90       	pop	r2
    50a2:	08 95       	ret

000050a4 <_ZN14TFT_22_ILI92258drawTextEjj6Stringj>:
    50a4:	6f 92       	push	r6
    50a6:	7f 92       	push	r7
    50a8:	8f 92       	push	r8
    50aa:	9f 92       	push	r9
    50ac:	af 92       	push	r10
    50ae:	bf 92       	push	r11
    50b0:	cf 92       	push	r12
    50b2:	df 92       	push	r13
    50b4:	ff 92       	push	r15
    50b6:	0f 93       	push	r16
    50b8:	1f 93       	push	r17
    50ba:	cf 93       	push	r28
    50bc:	df 93       	push	r29
    50be:	6c 01       	movw	r12, r24
    50c0:	eb 01       	movw	r28, r22
    50c2:	5a 01       	movw	r10, r20
    50c4:	39 01       	movw	r6, r18
    50c6:	48 01       	movw	r8, r16
    50c8:	f1 2c       	mov	r15, r1
    50ca:	6f 2d       	mov	r22, r15
    50cc:	70 e0       	ldi	r23, 0x00	; 0
    50ce:	f3 01       	movw	r30, r6
    50d0:	84 81       	ldd	r24, Z+4	; 0x04
    50d2:	95 81       	ldd	r25, Z+5	; 0x05
    50d4:	68 17       	cp	r22, r24
    50d6:	79 07       	cpc	r23, r25
    50d8:	80 f4       	brcc	.+32     	; 0x50fa <_ZN14TFT_22_ILI92258drawTextEjj6Stringj+0x56>
    50da:	c3 01       	movw	r24, r6
    50dc:	0e 94 4a 1c 	call	0x3894	; 0x3894 <_ZNK6String6charAtEj>
    50e0:	28 2f       	mov	r18, r24
    50e2:	30 e0       	ldi	r19, 0x00	; 0
    50e4:	84 01       	movw	r16, r8
    50e6:	a5 01       	movw	r20, r10
    50e8:	be 01       	movw	r22, r28
    50ea:	c6 01       	movw	r24, r12
    50ec:	0e 94 4c 27 	call	0x4e98	; 0x4e98 <_ZN14TFT_22_ILI92258drawCharEjjjj>
    50f0:	01 96       	adiw	r24, 0x01	; 1
    50f2:	c8 0f       	add	r28, r24
    50f4:	d9 1f       	adc	r29, r25
    50f6:	f3 94       	inc	r15
    50f8:	e8 cf       	rjmp	.-48     	; 0x50ca <_ZN14TFT_22_ILI92258drawTextEjj6Stringj+0x26>
    50fa:	ce 01       	movw	r24, r28
    50fc:	df 91       	pop	r29
    50fe:	cf 91       	pop	r28
    5100:	1f 91       	pop	r17
    5102:	0f 91       	pop	r16
    5104:	ff 90       	pop	r15
    5106:	df 90       	pop	r13
    5108:	cf 90       	pop	r12
    510a:	bf 90       	pop	r11
    510c:	af 90       	pop	r10
    510e:	9f 90       	pop	r9
    5110:	8f 90       	pop	r8
    5112:	7f 90       	pop	r7
    5114:	6f 90       	pop	r6
    5116:	08 95       	ret

00005118 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb>:
    5118:	2f 92       	push	r2
    511a:	3f 92       	push	r3
    511c:	4f 92       	push	r4
    511e:	5f 92       	push	r5
    5120:	6f 92       	push	r6
    5122:	7f 92       	push	r7
    5124:	8f 92       	push	r8
    5126:	9f 92       	push	r9
    5128:	af 92       	push	r10
    512a:	bf 92       	push	r11
    512c:	cf 92       	push	r12
    512e:	df 92       	push	r13
    5130:	ef 92       	push	r14
    5132:	ff 92       	push	r15
    5134:	0f 93       	push	r16
    5136:	1f 93       	push	r17
    5138:	cf 93       	push	r28
    513a:	df 93       	push	r29
    513c:	cd b7       	in	r28, 0x3d	; 61
    513e:	de b7       	in	r29, 0x3e	; 62
    5140:	c2 55       	subi	r28, 0x52	; 82
    5142:	d1 09       	sbc	r29, r1
    5144:	0f b6       	in	r0, 0x3f	; 63
    5146:	f8 94       	cli
    5148:	de bf       	out	0x3e, r29	; 62
    514a:	0f be       	out	0x3f, r0	; 63
    514c:	cd bf       	out	0x3d, r28	; 61
    514e:	3c 01       	movw	r6, r24
    5150:	7e af       	std	Y+62, r23	; 0x3e
    5152:	6d af       	std	Y+61, r22	; 0x3d
    5154:	2a 01       	movw	r4, r20
    5156:	28 96       	adiw	r28, 0x08	; 8
    5158:	3f af       	std	Y+63, r19	; 0x3f
    515a:	2e af       	std	Y+62, r18	; 0x3e
    515c:	28 97       	sbiw	r28, 0x08	; 8
    515e:	18 01       	movw	r2, r16
    5160:	2a 96       	adiw	r28, 0x0a	; 10
    5162:	df ae       	std	Y+63, r13	; 0x3f
    5164:	ce ae       	std	Y+62, r12	; 0x3e
    5166:	2a 97       	sbiw	r28, 0x0a	; 10
    5168:	2e 96       	adiw	r28, 0x0e	; 14
    516a:	bf ae       	std	Y+63, r11	; 0x3f
    516c:	ae ae       	std	Y+62, r10	; 0x3e
    516e:	2e 97       	sbiw	r28, 0x0e	; 14
    5170:	2f 96       	adiw	r28, 0x0f	; 15
    5172:	8f ae       	std	Y+63, r8	; 0x3f
    5174:	2f 97       	sbiw	r28, 0x0f	; 15
    5176:	c8 01       	movw	r24, r16
    5178:	07 96       	adiw	r24, 0x07	; 7
    517a:	97 fd       	sbrc	r25, 7
    517c:	07 96       	adiw	r24, 0x07	; 7
    517e:	9c 01       	movw	r18, r24
    5180:	73 e0       	ldi	r23, 0x03	; 3
    5182:	35 95       	asr	r19
    5184:	27 95       	ror	r18
    5186:	7a 95       	dec	r23
    5188:	e1 f7       	brne	.-8      	; 0x5182 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x6a>
    518a:	24 96       	adiw	r28, 0x04	; 4
    518c:	3f af       	std	Y+63, r19	; 0x3f
    518e:	2e af       	std	Y+62, r18	; 0x3e
    5190:	24 97       	sbiw	r28, 0x04	; 4
    5192:	a9 96       	adiw	r28, 0x29	; 41
    5194:	3f ad       	ldd	r19, Y+63	; 0x3f
    5196:	a9 97       	sbiw	r28, 0x29	; 41
    5198:	31 11       	cpse	r19, r1
    519a:	05 c0       	rjmp	.+10     	; 0x51a6 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x8e>
    519c:	80 e8       	ldi	r24, 0x80	; 128
    519e:	22 96       	adiw	r28, 0x02	; 2
    51a0:	8f af       	std	Y+63, r24	; 0x3f
    51a2:	22 97       	sbiw	r28, 0x02	; 2
    51a4:	04 c0       	rjmp	.+8      	; 0x51ae <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x96>
    51a6:	91 e0       	ldi	r25, 0x01	; 1
    51a8:	22 96       	adiw	r28, 0x02	; 2
    51aa:	9f af       	std	Y+63, r25	; 0x3f
    51ac:	22 97       	sbiw	r28, 0x02	; 2
    51ae:	f3 01       	movw	r30, r6
    51b0:	83 81       	ldd	r24, Z+3	; 0x03
    51b2:	8f 93       	push	r24
    51b4:	82 81       	ldd	r24, Z+2	; 0x02
    51b6:	8f 93       	push	r24
    51b8:	81 81       	ldd	r24, Z+1	; 0x01
    51ba:	8f 93       	push	r24
    51bc:	80 81       	ld	r24, Z
    51be:	8f 93       	push	r24
    51c0:	8d e0       	ldi	r24, 0x0D	; 13
    51c2:	92 e0       	ldi	r25, 0x02	; 2
    51c4:	9f 93       	push	r25
    51c6:	8f 93       	push	r24
    51c8:	8e 01       	movw	r16, r28
    51ca:	0f 5f       	subi	r16, 0xFF	; 255
    51cc:	1f 4f       	sbci	r17, 0xFF	; 255
    51ce:	1f 93       	push	r17
    51d0:	0f 93       	push	r16
    51d2:	0e 94 a0 34 	call	0x6940	; 0x6940 <sprintf>
    51d6:	b8 01       	movw	r22, r16
    51d8:	82 e8       	ldi	r24, 0x82	; 130
    51da:	93 e0       	ldi	r25, 0x03	; 3
    51dc:	0e 94 90 18 	call	0x3120	; 0x3120 <_ZN5Print7printlnEPKc>
    51e0:	2d ad       	ldd	r18, Y+61	; 0x3d
    51e2:	3e ad       	ldd	r19, Y+62	; 0x3e
    51e4:	21 96       	adiw	r28, 0x01	; 1
    51e6:	3f af       	std	Y+63, r19	; 0x3f
    51e8:	2e af       	std	Y+62, r18	; 0x3e
    51ea:	21 97       	sbiw	r28, 0x01	; 1
    51ec:	0f b6       	in	r0, 0x3f	; 63
    51ee:	f8 94       	cli
    51f0:	de bf       	out	0x3e, r29	; 62
    51f2:	0f be       	out	0x3f, r0	; 63
    51f4:	cd bf       	out	0x3d, r28	; 61
    51f6:	37 ff       	sbrs	r19, 7
    51f8:	04 c0       	rjmp	.+8      	; 0x5202 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0xea>
    51fa:	21 96       	adiw	r28, 0x01	; 1
    51fc:	1f ae       	std	Y+63, r1	; 0x3f
    51fe:	1e ae       	std	Y+62, r1	; 0x3e
    5200:	21 97       	sbiw	r28, 0x01	; 1
    5202:	a2 01       	movw	r20, r4
    5204:	57 fe       	sbrs	r5, 7
    5206:	02 c0       	rjmp	.+4      	; 0x520c <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0xf4>
    5208:	40 e0       	ldi	r20, 0x00	; 0
    520a:	50 e0       	ldi	r21, 0x00	; 0
    520c:	f3 01       	movw	r30, r6
    520e:	20 81       	ld	r18, Z
    5210:	31 81       	ldd	r19, Z+1	; 0x01
    5212:	8d ad       	ldd	r24, Y+61	; 0x3d
    5214:	9e ad       	ldd	r25, Y+62	; 0x3e
    5216:	82 0d       	add	r24, r2
    5218:	93 1d       	adc	r25, r3
    521a:	28 17       	cp	r18, r24
    521c:	39 07       	cpc	r19, r25
    521e:	08 f4       	brcc	.+2      	; 0x5222 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x10a>
    5220:	c9 01       	movw	r24, r18
    5222:	9c 01       	movw	r18, r24
    5224:	21 50       	subi	r18, 0x01	; 1
    5226:	31 09       	sbc	r19, r1
    5228:	26 96       	adiw	r28, 0x06	; 6
    522a:	3f af       	std	Y+63, r19	; 0x3f
    522c:	2e af       	std	Y+62, r18	; 0x3e
    522e:	26 97       	sbiw	r28, 0x06	; 6
    5230:	f3 01       	movw	r30, r6
    5232:	82 81       	ldd	r24, Z+2	; 0x02
    5234:	93 81       	ldd	r25, Z+3	; 0x03
    5236:	92 01       	movw	r18, r4
    5238:	2e 0d       	add	r18, r14
    523a:	3f 1d       	adc	r19, r15
    523c:	82 17       	cp	r24, r18
    523e:	93 07       	cpc	r25, r19
    5240:	08 f4       	brcc	.+2      	; 0x5244 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x12c>
    5242:	9c 01       	movw	r18, r24
    5244:	89 01       	movw	r16, r18
    5246:	01 50       	subi	r16, 0x01	; 1
    5248:	11 09       	sbc	r17, r1
    524a:	69 01       	movw	r12, r18
    524c:	c4 1a       	sub	r12, r20
    524e:	d5 0a       	sbc	r13, r21
    5250:	66 e0       	ldi	r22, 0x06	; 6
    5252:	e6 2e       	mov	r14, r22
    5254:	26 96       	adiw	r28, 0x06	; 6
    5256:	2e ad       	ldd	r18, Y+62	; 0x3e
    5258:	3f ad       	ldd	r19, Y+63	; 0x3f
    525a:	26 97       	sbiw	r28, 0x06	; 6
    525c:	21 96       	adiw	r28, 0x01	; 1
    525e:	6e ad       	ldd	r22, Y+62	; 0x3e
    5260:	7f ad       	ldd	r23, Y+63	; 0x3f
    5262:	21 97       	sbiw	r28, 0x01	; 1
    5264:	c3 01       	movw	r24, r6
    5266:	0e 94 d0 21 	call	0x43a0	; 0x43a0 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t>
    526a:	c3 01       	movw	r24, r6
    526c:	0e 94 61 21 	call	0x42c2	; 0x42c2 <_ZN14TFT_22_ILI922510startWriteEv>
    5270:	57 fe       	sbrs	r5, 7
    5272:	05 c0       	rjmp	.+10     	; 0x527e <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x166>
    5274:	aa 24       	eor	r10, r10
    5276:	bb 24       	eor	r11, r11
    5278:	a4 18       	sub	r10, r4
    527a:	b5 08       	sbc	r11, r5
    527c:	02 c0       	rjmp	.+4      	; 0x5282 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x16a>
    527e:	a1 2c       	mov	r10, r1
    5280:	b1 2c       	mov	r11, r1
    5282:	57 fe       	sbrs	r5, 7
    5284:	05 c0       	rjmp	.+10     	; 0x5290 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x178>
    5286:	ee 24       	eor	r14, r14
    5288:	ff 24       	eor	r15, r15
    528a:	e4 18       	sub	r14, r4
    528c:	f5 08       	sbc	r15, r5
    528e:	02 c0       	rjmp	.+4      	; 0x5294 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x17c>
    5290:	e1 2c       	mov	r14, r1
    5292:	f1 2c       	mov	r15, r1
    5294:	97 01       	movw	r18, r14
    5296:	2c 0d       	add	r18, r12
    5298:	3d 1d       	adc	r19, r13
    529a:	2c 96       	adiw	r28, 0x0c	; 12
    529c:	3f af       	std	Y+63, r19	; 0x3f
    529e:	2e af       	std	Y+62, r18	; 0x3e
    52a0:	2c 97       	sbiw	r28, 0x0c	; 12
    52a2:	24 96       	adiw	r28, 0x04	; 4
    52a4:	8e ad       	ldd	r24, Y+62	; 0x3e
    52a6:	9f ad       	ldd	r25, Y+63	; 0x3f
    52a8:	24 97       	sbiw	r28, 0x04	; 4
    52aa:	a8 9e       	mul	r10, r24
    52ac:	40 01       	movw	r8, r0
    52ae:	a9 9e       	mul	r10, r25
    52b0:	90 0c       	add	r9, r0
    52b2:	b8 9e       	mul	r11, r24
    52b4:	90 0c       	add	r9, r0
    52b6:	11 24       	eor	r1, r1
    52b8:	f1 2c       	mov	r15, r1
    52ba:	e1 2c       	mov	r14, r1
    52bc:	2c 96       	adiw	r28, 0x0c	; 12
    52be:	ee ad       	ldd	r30, Y+62	; 0x3e
    52c0:	ff ad       	ldd	r31, Y+63	; 0x3f
    52c2:	2c 97       	sbiw	r28, 0x0c	; 12
    52c4:	ae 16       	cp	r10, r30
    52c6:	bf 06       	cpc	r11, r31
    52c8:	0c f0       	brlt	.+2      	; 0x52cc <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x1b4>
    52ca:	94 c0       	rjmp	.+296    	; 0x53f4 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x2dc>
    52cc:	cd ac       	ldd	r12, Y+61	; 0x3d
    52ce:	de ac       	ldd	r13, Y+62	; 0x3e
    52d0:	00 e0       	ldi	r16, 0x00	; 0
    52d2:	10 e0       	ldi	r17, 0x00	; 0
    52d4:	28 96       	adiw	r28, 0x08	; 8
    52d6:	2e ad       	ldd	r18, Y+62	; 0x3e
    52d8:	3f ad       	ldd	r19, Y+63	; 0x3f
    52da:	28 97       	sbiw	r28, 0x08	; 8
    52dc:	28 0d       	add	r18, r8
    52de:	39 1d       	adc	r19, r9
    52e0:	61 96       	adiw	r28, 0x11	; 17
    52e2:	3f af       	std	Y+63, r19	; 0x3f
    52e4:	2e af       	std	Y+62, r18	; 0x3e
    52e6:	61 97       	sbiw	r28, 0x11	; 17
    52e8:	c5 01       	movw	r24, r10
    52ea:	84 0d       	add	r24, r4
    52ec:	95 1d       	adc	r25, r5
    52ee:	63 96       	adiw	r28, 0x13	; 19
    52f0:	9f af       	std	Y+63, r25	; 0x3f
    52f2:	8e af       	std	Y+62, r24	; 0x3e
    52f4:	63 97       	sbiw	r28, 0x13	; 19
    52f6:	02 15       	cp	r16, r2
    52f8:	13 05       	cpc	r17, r3
    52fa:	0c f0       	brlt	.+2      	; 0x52fe <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x1e6>
    52fc:	71 c0       	rjmp	.+226    	; 0x53e0 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x2c8>
    52fe:	c8 01       	movw	r24, r16
    5300:	87 70       	andi	r24, 0x07	; 7
    5302:	99 27       	eor	r25, r25
    5304:	89 2b       	or	r24, r25
    5306:	49 f0       	breq	.+18     	; 0x531a <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x202>
    5308:	a9 96       	adiw	r28, 0x29	; 41
    530a:	9f ad       	ldd	r25, Y+63	; 0x3f
    530c:	a9 97       	sbiw	r28, 0x29	; 41
    530e:	99 23       	and	r25, r25
    5310:	11 f0       	breq	.+4      	; 0x5316 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x1fe>
    5312:	f6 94       	lsr	r15
    5314:	28 c0       	rjmp	.+80     	; 0x5366 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x24e>
    5316:	ff 0c       	add	r15, r15
    5318:	26 c0       	rjmp	.+76     	; 0x5366 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x24e>
    531a:	a8 96       	adiw	r28, 0x28	; 40
    531c:	ef ad       	ldd	r30, Y+63	; 0x3f
    531e:	a8 97       	sbiw	r28, 0x28	; 40
    5320:	ee 23       	and	r30, r30
    5322:	91 f0       	breq	.+36     	; 0x5348 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x230>
    5324:	f8 01       	movw	r30, r16
    5326:	17 fd       	sbrc	r17, 7
    5328:	37 96       	adiw	r30, 0x07	; 7
    532a:	33 e0       	ldi	r19, 0x03	; 3
    532c:	f5 95       	asr	r31
    532e:	e7 95       	ror	r30
    5330:	3a 95       	dec	r19
    5332:	e1 f7       	brne	.-8      	; 0x532c <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x214>
    5334:	e8 0d       	add	r30, r8
    5336:	f9 1d       	adc	r31, r9
    5338:	28 96       	adiw	r28, 0x08	; 8
    533a:	2e ad       	ldd	r18, Y+62	; 0x3e
    533c:	3f ad       	ldd	r19, Y+63	; 0x3f
    533e:	28 97       	sbiw	r28, 0x08	; 8
    5340:	e2 0f       	add	r30, r18
    5342:	f3 1f       	adc	r31, r19
    5344:	f4 90       	lpm	r15, Z
    5346:	0f c0       	rjmp	.+30     	; 0x5366 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x24e>
    5348:	c8 01       	movw	r24, r16
    534a:	17 fd       	sbrc	r17, 7
    534c:	07 96       	adiw	r24, 0x07	; 7
    534e:	23 e0       	ldi	r18, 0x03	; 3
    5350:	95 95       	asr	r25
    5352:	87 95       	ror	r24
    5354:	2a 95       	dec	r18
    5356:	e1 f7       	brne	.-8      	; 0x5350 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x238>
    5358:	61 96       	adiw	r28, 0x11	; 17
    535a:	ee ad       	ldd	r30, Y+62	; 0x3e
    535c:	ff ad       	ldd	r31, Y+63	; 0x3f
    535e:	61 97       	sbiw	r28, 0x11	; 17
    5360:	e8 0f       	add	r30, r24
    5362:	f9 1f       	adc	r31, r25
    5364:	f0 80       	ld	r15, Z
    5366:	21 96       	adiw	r28, 0x01	; 1
    5368:	8e ad       	ldd	r24, Y+62	; 0x3e
    536a:	9f ad       	ldd	r25, Y+63	; 0x3f
    536c:	21 97       	sbiw	r28, 0x01	; 1
    536e:	c8 16       	cp	r12, r24
    5370:	d9 06       	cpc	r13, r25
    5372:	84 f1       	brlt	.+96     	; 0x53d4 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x2bc>
    5374:	26 96       	adiw	r28, 0x06	; 6
    5376:	ee ad       	ldd	r30, Y+62	; 0x3e
    5378:	ff ad       	ldd	r31, Y+63	; 0x3f
    537a:	26 97       	sbiw	r28, 0x06	; 6
    537c:	ec 15       	cp	r30, r12
    537e:	fd 05       	cpc	r31, r13
    5380:	4c f1       	brlt	.+82     	; 0x53d4 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x2bc>
    5382:	22 96       	adiw	r28, 0x02	; 2
    5384:	8f ad       	ldd	r24, Y+63	; 0x3f
    5386:	22 97       	sbiw	r28, 0x02	; 2
    5388:	8f 21       	and	r24, r15
    538a:	a9 f0       	breq	.+42     	; 0x53b6 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x29e>
    538c:	ee 20       	and	r14, r14
    538e:	71 f0       	breq	.+28     	; 0x53ac <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x294>
    5390:	2a 96       	adiw	r28, 0x0a	; 10
    5392:	2e ad       	ldd	r18, Y+62	; 0x3e
    5394:	3f ad       	ldd	r19, Y+63	; 0x3f
    5396:	2a 97       	sbiw	r28, 0x0a	; 10
    5398:	63 96       	adiw	r28, 0x13	; 19
    539a:	4e ad       	ldd	r20, Y+62	; 0x3e
    539c:	5f ad       	ldd	r21, Y+63	; 0x3f
    539e:	63 97       	sbiw	r28, 0x13	; 19
    53a0:	b6 01       	movw	r22, r12
    53a2:	c3 01       	movw	r24, r6
    53a4:	0e 94 0a 26 	call	0x4c14	; 0x4c14 <_ZN14TFT_22_ILI92259drawPixelEjjj>
    53a8:	e1 2c       	mov	r14, r1
    53aa:	14 c0       	rjmp	.+40     	; 0x53d4 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x2bc>
    53ac:	2a 96       	adiw	r28, 0x0a	; 10
    53ae:	6e ad       	ldd	r22, Y+62	; 0x3e
    53b0:	7f ad       	ldd	r23, Y+63	; 0x3f
    53b2:	2a 97       	sbiw	r28, 0x0a	; 10
    53b4:	09 c0       	rjmp	.+18     	; 0x53c8 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x2b0>
    53b6:	2f 96       	adiw	r28, 0x0f	; 15
    53b8:	ff ad       	ldd	r31, Y+63	; 0x3f
    53ba:	2f 97       	sbiw	r28, 0x0f	; 15
    53bc:	f1 11       	cpse	r31, r1
    53be:	08 c0       	rjmp	.+16     	; 0x53d0 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x2b8>
    53c0:	2e 96       	adiw	r28, 0x0e	; 14
    53c2:	6e ad       	ldd	r22, Y+62	; 0x3e
    53c4:	7f ad       	ldd	r23, Y+63	; 0x3f
    53c6:	2e 97       	sbiw	r28, 0x0e	; 14
    53c8:	c3 01       	movw	r24, r6
    53ca:	0e 94 bd 20 	call	0x417a	; 0x417a <_ZN14TFT_22_ILI922512_writeData16Ej>
    53ce:	02 c0       	rjmp	.+4      	; 0x53d4 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x2bc>
    53d0:	ee 24       	eor	r14, r14
    53d2:	e3 94       	inc	r14
    53d4:	0f 5f       	subi	r16, 0xFF	; 255
    53d6:	1f 4f       	sbci	r17, 0xFF	; 255
    53d8:	2f ef       	ldi	r18, 0xFF	; 255
    53da:	c2 1a       	sub	r12, r18
    53dc:	d2 0a       	sbc	r13, r18
    53de:	8b cf       	rjmp	.-234    	; 0x52f6 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x1de>
    53e0:	3f ef       	ldi	r19, 0xFF	; 255
    53e2:	a3 1a       	sub	r10, r19
    53e4:	b3 0a       	sbc	r11, r19
    53e6:	24 96       	adiw	r28, 0x04	; 4
    53e8:	8e ad       	ldd	r24, Y+62	; 0x3e
    53ea:	9f ad       	ldd	r25, Y+63	; 0x3f
    53ec:	24 97       	sbiw	r28, 0x04	; 4
    53ee:	88 0e       	add	r8, r24
    53f0:	99 1e       	adc	r9, r25
    53f2:	64 cf       	rjmp	.-312    	; 0x52bc <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x1a4>
    53f4:	c3 01       	movw	r24, r6
    53f6:	0e 94 a0 21 	call	0x4340	; 0x4340 <_ZN14TFT_22_ILI92258endWriteEv>
    53fa:	ce 5a       	subi	r28, 0xAE	; 174
    53fc:	df 4f       	sbci	r29, 0xFF	; 255
    53fe:	0f b6       	in	r0, 0x3f	; 63
    5400:	f8 94       	cli
    5402:	de bf       	out	0x3e, r29	; 62
    5404:	0f be       	out	0x3f, r0	; 63
    5406:	cd bf       	out	0x3d, r28	; 61
    5408:	df 91       	pop	r29
    540a:	cf 91       	pop	r28
    540c:	1f 91       	pop	r17
    540e:	0f 91       	pop	r16
    5410:	ff 90       	pop	r15
    5412:	ef 90       	pop	r14
    5414:	df 90       	pop	r13
    5416:	cf 90       	pop	r12
    5418:	bf 90       	pop	r11
    541a:	af 90       	pop	r10
    541c:	9f 90       	pop	r9
    541e:	8f 90       	pop	r8
    5420:	7f 90       	pop	r7
    5422:	6f 90       	pop	r6
    5424:	5f 90       	pop	r5
    5426:	4f 90       	pop	r4
    5428:	3f 90       	pop	r3
    542a:	2f 90       	pop	r2
    542c:	08 95       	ret

0000542e <_ZN14TFT_22_ILI922510drawBitmapEiiPKhiij>:
    542e:	8f 92       	push	r8
    5430:	af 92       	push	r10
    5432:	bf 92       	push	r11
    5434:	cf 92       	push	r12
    5436:	df 92       	push	r13
    5438:	ef 92       	push	r14
    543a:	ff 92       	push	r15
    543c:	0f 93       	push	r16
    543e:	1f 93       	push	r17
    5440:	1f 92       	push	r1
    5442:	e1 e0       	ldi	r30, 0x01	; 1
    5444:	ef 93       	push	r30
    5446:	88 24       	eor	r8, r8
    5448:	83 94       	inc	r8
    544a:	a1 2c       	mov	r10, r1
    544c:	b1 2c       	mov	r11, r1
    544e:	0e 94 8c 28 	call	0x5118	; 0x5118 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb>
    5452:	0f 90       	pop	r0
    5454:	0f 90       	pop	r0
    5456:	1f 91       	pop	r17
    5458:	0f 91       	pop	r16
    545a:	ff 90       	pop	r15
    545c:	ef 90       	pop	r14
    545e:	df 90       	pop	r13
    5460:	cf 90       	pop	r12
    5462:	bf 90       	pop	r11
    5464:	af 90       	pop	r10
    5466:	8f 90       	pop	r8
    5468:	08 95       	ret

0000546a <_ZN14TFT_22_ILI922510setGFXFontEPK7GFXfont>:


// TEXT- AND CHARACTER-HANDLING FUNCTIONS ----------------------------------

void TFT_22_ILI9225::setGFXFont(const GFXfont *f) {
    gfxFont = (GFXfont *)f;
    546a:	8e 5b       	subi	r24, 0xBE	; 190
    546c:	9f 4f       	sbci	r25, 0xFF	; 255
    546e:	fc 01       	movw	r30, r24
    5470:	71 83       	std	Z+1, r23	; 0x01
    5472:	60 83       	st	Z, r22
    5474:	08 95       	ret

00005476 <_ZN14TFT_22_ILI922511drawGFXCharEiihj>:
    }
}


// Draw a character
uint16_t TFT_22_ILI9225::drawGFXChar(int16_t x, int16_t y, unsigned char c, uint16_t color) {
    5476:	2f 92       	push	r2
    5478:	3f 92       	push	r3
    547a:	4f 92       	push	r4
    547c:	5f 92       	push	r5
    547e:	6f 92       	push	r6
    5480:	7f 92       	push	r7
    5482:	8f 92       	push	r8
    5484:	9f 92       	push	r9
    5486:	af 92       	push	r10
    5488:	bf 92       	push	r11
    548a:	cf 92       	push	r12
    548c:	df 92       	push	r13
    548e:	ef 92       	push	r14
    5490:	ff 92       	push	r15
    5492:	0f 93       	push	r16
    5494:	1f 93       	push	r17
    5496:	cf 93       	push	r28
    5498:	df 93       	push	r29
    549a:	00 d0       	rcall	.+0      	; 0x549c <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0x26>
    549c:	00 d0       	rcall	.+0      	; 0x549e <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0x28>
    549e:	00 d0       	rcall	.+0      	; 0x54a0 <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0x2a>
    54a0:	cd b7       	in	r28, 0x3d	; 61
    54a2:	de b7       	in	r29, 0x3e	; 62
    54a4:	6c 01       	movw	r12, r24
    54a6:	5b 01       	movw	r10, r22
    54a8:	7a 01       	movw	r14, r20

    c -= (uint8_t)pgm_read_byte(&gfxFont->first);
    54aa:	fc 01       	movw	r30, r24
    54ac:	ee 5b       	subi	r30, 0xBE	; 190
    54ae:	ff 4f       	sbci	r31, 0xFF	; 255
    54b0:	40 81       	ld	r20, Z
    54b2:	51 81       	ldd	r21, Z+1	; 0x01
    54b4:	fa 01       	movw	r30, r20
    54b6:	34 96       	adiw	r30, 0x04	; 4
    54b8:	e4 91       	lpm	r30, Z
    54ba:	2e 1b       	sub	r18, r30
    GFXglyph *glyph  = &(((GFXglyph *)pgm_read_pointer(&gfxFont->glyph))[c]);
    54bc:	fa 01       	movw	r30, r20
    54be:	32 96       	adiw	r30, 0x02	; 2
    54c0:	85 91       	lpm	r24, Z+
    54c2:	94 91       	lpm	r25, Z
    54c4:	37 e0       	ldi	r19, 0x07	; 7
    54c6:	23 9f       	mul	r18, r19
    54c8:	80 0d       	add	r24, r0
    54ca:	91 1d       	adc	r25, r1
    54cc:	11 24       	eor	r1, r1
    uint8_t  *bitmap = (uint8_t *)pgm_read_pointer(&gfxFont->bitmap);
    54ce:	fa 01       	movw	r30, r20
    54d0:	25 90       	lpm	r2, Z+
    54d2:	34 90       	lpm	r3, Z

    uint16_t bo = pgm_read_word(&glyph->bitmapOffset);
    54d4:	fc 01       	movw	r30, r24
    54d6:	25 91       	lpm	r18, Z+
    54d8:	34 91       	lpm	r19, Z
    54da:	3e 83       	std	Y+6, r19	; 0x06
    54dc:	2d 83       	std	Y+5, r18	; 0x05
    uint8_t  w  = pgm_read_byte(&glyph->width),
    54de:	fc 01       	movw	r30, r24
    54e0:	32 96       	adiw	r30, 0x02	; 2
    54e2:	34 91       	lpm	r19, Z
    54e4:	3a 83       	std	Y+2, r19	; 0x02
             h  = pgm_read_byte(&glyph->height),
    54e6:	31 96       	adiw	r30, 0x01	; 1
    54e8:	24 91       	lpm	r18, Z
    54ea:	2b 83       	std	Y+3, r18	; 0x03
             xa = pgm_read_byte(&glyph->xAdvance);
    54ec:	31 96       	adiw	r30, 0x01	; 1
    54ee:	34 91       	lpm	r19, Z
    54f0:	3c 83       	std	Y+4, r19	; 0x04
    int8_t   xo = pgm_read_byte(&glyph->xOffset),
    54f2:	31 96       	adiw	r30, 0x01	; 1
    54f4:	84 90       	lpm	r8, Z
             yo = pgm_read_byte(&glyph->yOffset);
    54f6:	31 96       	adiw	r30, 0x01	; 1
    54f8:	94 90       	lpm	r9, Z
    uint8_t  xx, yy, bits = 0, bit = 0;

    // Add character clipping here one day

    startWrite();
    54fa:	c6 01       	movw	r24, r12
    54fc:	0e 94 61 21 	call	0x42c2	; 0x42c2 <_ZN14TFT_22_ILI922510startWriteEv>
    uint8_t  w  = pgm_read_byte(&glyph->width),
             h  = pgm_read_byte(&glyph->height),
             xa = pgm_read_byte(&glyph->xAdvance);
    int8_t   xo = pgm_read_byte(&glyph->xOffset),
             yo = pgm_read_byte(&glyph->yOffset);
    uint8_t  xx, yy, bits = 0, bit = 0;
    5500:	19 82       	std	Y+1, r1	; 0x01
    5502:	71 2c       	mov	r7, r1

    // Add character clipping here one day

    startWrite();
    for(yy=0; yy<h; yy++) {
    5504:	61 2c       	mov	r6, r1
        for(xx=0; xx<w; xx++) {
            if(!(bit++ & 7)) {
                bits = pgm_read_byte(&bitmap[bo++]);
            }
            if(bits & 0x80) {
                drawPixel(x+xo+xx, y+yo+yy, color);
    5506:	27 01       	movw	r4, r14
    5508:	49 0c       	add	r4, r9
    550a:	51 1c       	adc	r5, r1
    550c:	97 fc       	sbrc	r9, 7
    550e:	5a 94       	dec	r5
    5510:	a8 0c       	add	r10, r8
    5512:	b1 1c       	adc	r11, r1
    5514:	87 fc       	sbrc	r8, 7
    5516:	ba 94       	dec	r11
    uint8_t  xx, yy, bits = 0, bit = 0;

    // Add character clipping here one day

    startWrite();
    for(yy=0; yy<h; yy++) {
    5518:	8b 81       	ldd	r24, Y+3	; 0x03
    551a:	68 16       	cp	r6, r24
    551c:	59 f1       	breq	.+86     	; 0x5574 <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0xfe>
    551e:	e1 2c       	mov	r14, r1
    5520:	f1 2c       	mov	r15, r1
        for(xx=0; xx<w; xx++) {
            if(!(bit++ & 7)) {
                bits = pgm_read_byte(&bitmap[bo++]);
            }
            if(bits & 0x80) {
                drawPixel(x+xo+xx, y+yo+yy, color);
    5522:	42 01       	movw	r8, r4
    5524:	86 0c       	add	r8, r6
    5526:	91 1c       	adc	r9, r1
    5528:	89 81       	ldd	r24, Y+1	; 0x01
    552a:	8e 0d       	add	r24, r14

    // Add character clipping here one day

    startWrite();
    for(yy=0; yy<h; yy++) {
        for(xx=0; xx<w; xx++) {
    552c:	9a 81       	ldd	r25, Y+2	; 0x02
    552e:	e9 16       	cp	r14, r25
    5530:	d8 f4       	brcc	.+54     	; 0x5568 <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0xf2>
            if(!(bit++ & 7)) {
    5532:	87 70       	andi	r24, 0x07	; 7
    5534:	51 f4       	brne	.+20     	; 0x554a <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0xd4>
                bits = pgm_read_byte(&bitmap[bo++]);
    5536:	8d 81       	ldd	r24, Y+5	; 0x05
    5538:	9e 81       	ldd	r25, Y+6	; 0x06
    553a:	01 96       	adiw	r24, 0x01	; 1
    553c:	ed 81       	ldd	r30, Y+5	; 0x05
    553e:	fe 81       	ldd	r31, Y+6	; 0x06
    5540:	e2 0d       	add	r30, r2
    5542:	f3 1d       	adc	r31, r3
    5544:	74 90       	lpm	r7, Z
    5546:	9e 83       	std	Y+6, r25	; 0x06
    5548:	8d 83       	std	Y+5, r24	; 0x05
            }
            if(bits & 0x80) {
    554a:	77 fe       	sbrs	r7, 7
    554c:	08 c0       	rjmp	.+16     	; 0x555e <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0xe8>
                drawPixel(x+xo+xx, y+yo+yy, color);
    554e:	98 01       	movw	r18, r16
    5550:	a4 01       	movw	r20, r8
    5552:	b5 01       	movw	r22, r10
    5554:	6e 0d       	add	r22, r14
    5556:	7f 1d       	adc	r23, r15
    5558:	c6 01       	movw	r24, r12
    555a:	0e 94 0a 26 	call	0x4c14	; 0x4c14 <_ZN14TFT_22_ILI92259drawPixelEjjj>
            }
            bits <<= 1;
    555e:	77 0c       	add	r7, r7
    5560:	2f ef       	ldi	r18, 0xFF	; 255
    5562:	e2 1a       	sub	r14, r18
    5564:	f2 0a       	sbc	r15, r18

    // Add character clipping here one day

    startWrite();
    for(yy=0; yy<h; yy++) {
        for(xx=0; xx<w; xx++) {
    5566:	e0 cf       	rjmp	.-64     	; 0x5528 <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0xb2>
    5568:	39 81       	ldd	r19, Y+1	; 0x01
    556a:	8a 81       	ldd	r24, Y+2	; 0x02
    556c:	38 0f       	add	r19, r24
    556e:	39 83       	std	Y+1, r19	; 0x01
    uint8_t  xx, yy, bits = 0, bit = 0;

    // Add character clipping here one day

    startWrite();
    for(yy=0; yy<h; yy++) {
    5570:	63 94       	inc	r6
    5572:	d2 cf       	rjmp	.-92     	; 0x5518 <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0xa2>
                drawPixel(x+xo+xx, y+yo+yy, color);
            }
            bits <<= 1;
        }
    }
    endWrite();
    5574:	c6 01       	movw	r24, r12
    5576:	0e 94 a0 21 	call	0x4340	; 0x4340 <_ZN14TFT_22_ILI92258endWriteEv>

    return (uint16_t)xa;
}
    557a:	2c 81       	ldd	r18, Y+4	; 0x04
    557c:	82 2f       	mov	r24, r18
    557e:	90 e0       	ldi	r25, 0x00	; 0
    5580:	26 96       	adiw	r28, 0x06	; 6
    5582:	0f b6       	in	r0, 0x3f	; 63
    5584:	f8 94       	cli
    5586:	de bf       	out	0x3e, r29	; 62
    5588:	0f be       	out	0x3f, r0	; 63
    558a:	cd bf       	out	0x3d, r28	; 61
    558c:	df 91       	pop	r29
    558e:	cf 91       	pop	r28
    5590:	1f 91       	pop	r17
    5592:	0f 91       	pop	r16
    5594:	ff 90       	pop	r15
    5596:	ef 90       	pop	r14
    5598:	df 90       	pop	r13
    559a:	cf 90       	pop	r12
    559c:	bf 90       	pop	r11
    559e:	af 90       	pop	r10
    55a0:	9f 90       	pop	r9
    55a2:	8f 90       	pop	r8
    55a4:	7f 90       	pop	r7
    55a6:	6f 90       	pop	r6
    55a8:	5f 90       	pop	r5
    55aa:	4f 90       	pop	r4
    55ac:	3f 90       	pop	r3
    55ae:	2f 90       	pop	r2
    55b0:	08 95       	ret

000055b2 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj>:
    gfxFont = (GFXfont *)f;
}


// Draw a string
void TFT_22_ILI9225::drawGFXText(int16_t x, int16_t y, STRING s, uint16_t color) {
    55b2:	6f 92       	push	r6
    55b4:	7f 92       	push	r7
    55b6:	8f 92       	push	r8
    55b8:	9f 92       	push	r9
    55ba:	af 92       	push	r10
    55bc:	bf 92       	push	r11
    55be:	cf 92       	push	r12
    55c0:	df 92       	push	r13
    55c2:	ff 92       	push	r15
    55c4:	0f 93       	push	r16
    55c6:	1f 93       	push	r17
    55c8:	cf 93       	push	r28
    55ca:	df 93       	push	r29
    55cc:	6c 01       	movw	r12, r24
    55ce:	eb 01       	movw	r28, r22
    55d0:	5a 01       	movw	r10, r20
    55d2:	39 01       	movw	r6, r18
    55d4:	48 01       	movw	r8, r16

    int16_t currx = x;

    if(gfxFont) {
    55d6:	fc 01       	movw	r30, r24
    55d8:	ee 5b       	subi	r30, 0xBE	; 190
    55da:	ff 4f       	sbci	r31, 0xFF	; 255
    55dc:	80 81       	ld	r24, Z
    55de:	91 81       	ldd	r25, Z+1	; 0x01
    55e0:	89 2b       	or	r24, r25
    55e2:	c1 f0       	breq	.+48     	; 0x5614 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj+0x62>
    55e4:	f1 2c       	mov	r15, r1
        // Print every character in string
#ifdef USE_STRING_CLASS
        for (uint8_t k = 0; k < s.length(); k++) {
    55e6:	6f 2d       	mov	r22, r15
    55e8:	70 e0       	ldi	r23, 0x00	; 0
    55ea:	f3 01       	movw	r30, r6
    55ec:	84 81       	ldd	r24, Z+4	; 0x04
    55ee:	95 81       	ldd	r25, Z+5	; 0x05
    55f0:	68 17       	cp	r22, r24
    55f2:	79 07       	cpc	r23, r25
    55f4:	78 f4       	brcc	.+30     	; 0x5614 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj+0x62>
            currx += drawGFXChar(currx, y, s.charAt(k), color) + 1;
    55f6:	c3 01       	movw	r24, r6
    55f8:	0e 94 4a 1c 	call	0x3894	; 0x3894 <_ZNK6String6charAtEj>
    55fc:	84 01       	movw	r16, r8
    55fe:	28 2f       	mov	r18, r24
    5600:	a5 01       	movw	r20, r10
    5602:	be 01       	movw	r22, r28
    5604:	c6 01       	movw	r24, r12
    5606:	0e 94 3b 2a 	call	0x5476	; 0x5476 <_ZN14TFT_22_ILI922511drawGFXCharEiihj>
    560a:	21 96       	adiw	r28, 0x01	; 1
    560c:	c8 0f       	add	r28, r24
    560e:	d9 1f       	adc	r29, r25
    int16_t currx = x;

    if(gfxFont) {
        // Print every character in string
#ifdef USE_STRING_CLASS
        for (uint8_t k = 0; k < s.length(); k++) {
    5610:	f3 94       	inc	r15
    5612:	e9 cf       	rjmp	.-46     	; 0x55e6 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj+0x34>
        for (uint8_t k = 0; k < strlen(s); k++) {
            currx += drawGFXChar(currx, y, s[k], color) + 1;
        }
#endif
    }
}
    5614:	df 91       	pop	r29
    5616:	cf 91       	pop	r28
    5618:	1f 91       	pop	r17
    561a:	0f 91       	pop	r16
    561c:	ff 90       	pop	r15
    561e:	df 90       	pop	r13
    5620:	cf 90       	pop	r12
    5622:	bf 90       	pop	r11
    5624:	af 90       	pop	r10
    5626:	9f 90       	pop	r9
    5628:	8f 90       	pop	r8
    562a:	7f 90       	pop	r7
    562c:	6f 90       	pop	r6
    562e:	08 95       	ret

00005630 <_ZN7TwoWire9availableEv>:
}

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
    5630:	80 91 5c 04 	lds	r24, 0x045C	; 0x80045c <_ZN7TwoWire14rxBufferLengthE>
    5634:	90 e0       	ldi	r25, 0x00	; 0
    5636:	20 91 5d 04 	lds	r18, 0x045D	; 0x80045d <_ZN7TwoWire13rxBufferIndexE>
    563a:	82 1b       	sub	r24, r18
    563c:	91 09       	sbc	r25, r1
    563e:	08 95       	ret

00005640 <_ZN7TwoWire4readEv>:
    5640:	90 91 5d 04 	lds	r25, 0x045D	; 0x80045d <_ZN7TwoWire13rxBufferIndexE>
    5644:	80 91 5c 04 	lds	r24, 0x045C	; 0x80045c <_ZN7TwoWire14rxBufferLengthE>
    5648:	98 17       	cp	r25, r24
    564a:	50 f4       	brcc	.+20     	; 0x5660 <_ZN7TwoWire4readEv+0x20>
    564c:	e9 2f       	mov	r30, r25
    564e:	f0 e0       	ldi	r31, 0x00	; 0
    5650:	e2 5a       	subi	r30, 0xA2	; 162
    5652:	fb 4f       	sbci	r31, 0xFB	; 251
    5654:	20 81       	ld	r18, Z
    5656:	30 e0       	ldi	r19, 0x00	; 0
    5658:	9f 5f       	subi	r25, 0xFF	; 255
    565a:	90 93 5d 04 	sts	0x045D, r25	; 0x80045d <_ZN7TwoWire13rxBufferIndexE>
    565e:	02 c0       	rjmp	.+4      	; 0x5664 <_ZN7TwoWire4readEv+0x24>
    5660:	2f ef       	ldi	r18, 0xFF	; 255
    5662:	3f ef       	ldi	r19, 0xFF	; 255
    5664:	c9 01       	movw	r24, r18
    5666:	08 95       	ret

00005668 <_ZN7TwoWire4peekEv>:
    5668:	e0 91 5d 04 	lds	r30, 0x045D	; 0x80045d <_ZN7TwoWire13rxBufferIndexE>
    566c:	80 91 5c 04 	lds	r24, 0x045C	; 0x80045c <_ZN7TwoWire14rxBufferLengthE>
    5670:	e8 17       	cp	r30, r24
    5672:	30 f4       	brcc	.+12     	; 0x5680 <_ZN7TwoWire4peekEv+0x18>
    5674:	f0 e0       	ldi	r31, 0x00	; 0
    5676:	e2 5a       	subi	r30, 0xA2	; 162
    5678:	fb 4f       	sbci	r31, 0xFB	; 251
    567a:	80 81       	ld	r24, Z
    567c:	90 e0       	ldi	r25, 0x00	; 0
    567e:	08 95       	ret
    5680:	8f ef       	ldi	r24, 0xFF	; 255
    5682:	9f ef       	ldi	r25, 0xFF	; 255
    5684:	08 95       	ret

00005686 <_ZN7TwoWire5flushEv>:
    5686:	08 95       	ret

00005688 <_ZN7TwoWire16onReceiveServiceEPhi>:
    5688:	cf 93       	push	r28
    568a:	df 93       	push	r29
    568c:	ec 01       	movw	r28, r24
    568e:	e0 91 34 04 	lds	r30, 0x0434	; 0x800434 <_ZN7TwoWire14user_onReceiveE>
    5692:	f0 91 35 04 	lds	r31, 0x0435	; 0x800435 <_ZN7TwoWire14user_onReceiveE+0x1>
    5696:	30 97       	sbiw	r30, 0x00	; 0
    5698:	f1 f0       	breq	.+60     	; 0x56d6 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
    569a:	90 91 5d 04 	lds	r25, 0x045D	; 0x80045d <_ZN7TwoWire13rxBufferIndexE>
    569e:	80 91 5c 04 	lds	r24, 0x045C	; 0x80045c <_ZN7TwoWire14rxBufferLengthE>
    56a2:	98 17       	cp	r25, r24
    56a4:	c0 f0       	brcs	.+48     	; 0x56d6 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
    56a6:	90 e0       	ldi	r25, 0x00	; 0
    56a8:	29 2f       	mov	r18, r25
    56aa:	30 e0       	ldi	r19, 0x00	; 0
    56ac:	26 17       	cp	r18, r22
    56ae:	37 07       	cpc	r19, r23
    56b0:	54 f4       	brge	.+20     	; 0x56c6 <_ZN7TwoWire16onReceiveServiceEPhi+0x3e>
    56b2:	de 01       	movw	r26, r28
    56b4:	a2 0f       	add	r26, r18
    56b6:	b3 1f       	adc	r27, r19
    56b8:	4c 91       	ld	r20, X
    56ba:	d9 01       	movw	r26, r18
    56bc:	a2 5a       	subi	r26, 0xA2	; 162
    56be:	bb 4f       	sbci	r27, 0xFB	; 251
    56c0:	4c 93       	st	X, r20
    56c2:	9f 5f       	subi	r25, 0xFF	; 255
    56c4:	f1 cf       	rjmp	.-30     	; 0x56a8 <_ZN7TwoWire16onReceiveServiceEPhi+0x20>
    56c6:	10 92 5d 04 	sts	0x045D, r1	; 0x80045d <_ZN7TwoWire13rxBufferIndexE>
    56ca:	60 93 5c 04 	sts	0x045C, r22	; 0x80045c <_ZN7TwoWire14rxBufferLengthE>
    56ce:	cb 01       	movw	r24, r22
    56d0:	df 91       	pop	r29
    56d2:	cf 91       	pop	r28
    56d4:	09 94       	ijmp
    56d6:	df 91       	pop	r29
    56d8:	cf 91       	pop	r28
    56da:	08 95       	ret

000056dc <_ZN7TwoWire16onRequestServiceEv>:
    56dc:	e0 91 36 04 	lds	r30, 0x0436	; 0x800436 <_ZN7TwoWire14user_onRequestE>
    56e0:	f0 91 37 04 	lds	r31, 0x0437	; 0x800437 <_ZN7TwoWire14user_onRequestE+0x1>
    56e4:	30 97       	sbiw	r30, 0x00	; 0
    56e6:	29 f0       	breq	.+10     	; 0x56f2 <_ZN7TwoWire16onRequestServiceEv+0x16>
    56e8:	10 92 3a 04 	sts	0x043A, r1	; 0x80043a <_ZN7TwoWire13txBufferIndexE>
    56ec:	10 92 39 04 	sts	0x0439, r1	; 0x800439 <_ZN7TwoWire14txBufferLengthE>
    56f0:	09 94       	ijmp
    56f2:	08 95       	ret

000056f4 <_ZN7TwoWire5writeEPKhj>:
    56f4:	cf 92       	push	r12
    56f6:	df 92       	push	r13
    56f8:	ef 92       	push	r14
    56fa:	ff 92       	push	r15
    56fc:	0f 93       	push	r16
    56fe:	1f 93       	push	r17
    5700:	cf 93       	push	r28
    5702:	df 93       	push	r29
    5704:	7c 01       	movw	r14, r24
    5706:	cb 01       	movw	r24, r22
    5708:	8a 01       	movw	r16, r20
    570a:	20 91 38 04 	lds	r18, 0x0438	; 0x800438 <_ZN7TwoWire12transmittingE>
    570e:	22 23       	and	r18, r18
    5710:	89 f0       	breq	.+34     	; 0x5734 <_ZN7TwoWire5writeEPKhj+0x40>
    5712:	eb 01       	movw	r28, r22
    5714:	6b 01       	movw	r12, r22
    5716:	c4 0e       	add	r12, r20
    5718:	d5 1e       	adc	r13, r21
    571a:	cc 15       	cp	r28, r12
    571c:	dd 05       	cpc	r29, r13
    571e:	69 f0       	breq	.+26     	; 0x573a <_ZN7TwoWire5writeEPKhj+0x46>
    5720:	69 91       	ld	r22, Y+
    5722:	d7 01       	movw	r26, r14
    5724:	ed 91       	ld	r30, X+
    5726:	fc 91       	ld	r31, X
    5728:	01 90       	ld	r0, Z+
    572a:	f0 81       	ld	r31, Z
    572c:	e0 2d       	mov	r30, r0
    572e:	c7 01       	movw	r24, r14
    5730:	09 95       	icall
    5732:	f3 cf       	rjmp	.-26     	; 0x571a <_ZN7TwoWire5writeEPKhj+0x26>
    5734:	64 2f       	mov	r22, r20
    5736:	0e 94 ed 2d 	call	0x5bda	; 0x5bda <twi_transmit>
    573a:	c8 01       	movw	r24, r16
    573c:	df 91       	pop	r29
    573e:	cf 91       	pop	r28
    5740:	1f 91       	pop	r17
    5742:	0f 91       	pop	r16
    5744:	ff 90       	pop	r15
    5746:	ef 90       	pop	r14
    5748:	df 90       	pop	r13
    574a:	cf 90       	pop	r12
    574c:	08 95       	ret

0000574e <_ZN7TwoWire5writeEh>:
    574e:	cf 93       	push	r28
    5750:	df 93       	push	r29
    5752:	1f 92       	push	r1
    5754:	cd b7       	in	r28, 0x3d	; 61
    5756:	de b7       	in	r29, 0x3e	; 62
    5758:	69 83       	std	Y+1, r22	; 0x01
    575a:	20 91 38 04 	lds	r18, 0x0438	; 0x800438 <_ZN7TwoWire12transmittingE>
    575e:	22 23       	and	r18, r18
    5760:	d1 f0       	breq	.+52     	; 0x5796 <_ZN7TwoWire5writeEh+0x48>
    5762:	20 91 39 04 	lds	r18, 0x0439	; 0x800439 <_ZN7TwoWire14txBufferLengthE>
    5766:	20 32       	cpi	r18, 0x20	; 32
    5768:	40 f0       	brcs	.+16     	; 0x577a <_ZN7TwoWire5writeEh+0x2c>
    576a:	21 e0       	ldi	r18, 0x01	; 1
    576c:	30 e0       	ldi	r19, 0x00	; 0
    576e:	fc 01       	movw	r30, r24
    5770:	33 83       	std	Z+3, r19	; 0x03
    5772:	22 83       	std	Z+2, r18	; 0x02
    5774:	80 e0       	ldi	r24, 0x00	; 0
    5776:	90 e0       	ldi	r25, 0x00	; 0
    5778:	15 c0       	rjmp	.+42     	; 0x57a4 <_ZN7TwoWire5writeEh+0x56>
    577a:	80 91 3a 04 	lds	r24, 0x043A	; 0x80043a <_ZN7TwoWire13txBufferIndexE>
    577e:	e8 2f       	mov	r30, r24
    5780:	f0 e0       	ldi	r31, 0x00	; 0
    5782:	e5 5c       	subi	r30, 0xC5	; 197
    5784:	fb 4f       	sbci	r31, 0xFB	; 251
    5786:	99 81       	ldd	r25, Y+1	; 0x01
    5788:	90 83       	st	Z, r25
    578a:	8f 5f       	subi	r24, 0xFF	; 255
    578c:	80 93 3a 04 	sts	0x043A, r24	; 0x80043a <_ZN7TwoWire13txBufferIndexE>
    5790:	80 93 39 04 	sts	0x0439, r24	; 0x800439 <_ZN7TwoWire14txBufferLengthE>
    5794:	05 c0       	rjmp	.+10     	; 0x57a0 <_ZN7TwoWire5writeEh+0x52>
    5796:	61 e0       	ldi	r22, 0x01	; 1
    5798:	ce 01       	movw	r24, r28
    579a:	01 96       	adiw	r24, 0x01	; 1
    579c:	0e 94 ed 2d 	call	0x5bda	; 0x5bda <twi_transmit>
    57a0:	81 e0       	ldi	r24, 0x01	; 1
    57a2:	90 e0       	ldi	r25, 0x00	; 0
    57a4:	0f 90       	pop	r0
    57a6:	df 91       	pop	r29
    57a8:	cf 91       	pop	r28
    57aa:	08 95       	ret

000057ac <_ZN7TwoWireC1Ev>:
    57ac:	fc 01       	movw	r30, r24
    57ae:	13 82       	std	Z+3, r1	; 0x03
    57b0:	12 82       	std	Z+2, r1	; 0x02
    57b2:	88 ee       	ldi	r24, 0xE8	; 232
    57b4:	93 e0       	ldi	r25, 0x03	; 3
    57b6:	a0 e0       	ldi	r26, 0x00	; 0
    57b8:	b0 e0       	ldi	r27, 0x00	; 0
    57ba:	84 83       	std	Z+4, r24	; 0x04
    57bc:	95 83       	std	Z+5, r25	; 0x05
    57be:	a6 83       	std	Z+6, r26	; 0x06
    57c0:	b7 83       	std	Z+7, r27	; 0x07
    57c2:	8f e2       	ldi	r24, 0x2F	; 47
    57c4:	92 e0       	ldi	r25, 0x02	; 2
    57c6:	91 83       	std	Z+1, r25	; 0x01
    57c8:	80 83       	st	Z, r24
    57ca:	08 95       	ret

000057cc <_ZN7TwoWire5beginEv>:
    57cc:	10 92 5d 04 	sts	0x045D, r1	; 0x80045d <_ZN7TwoWire13rxBufferIndexE>
    57d0:	10 92 5c 04 	sts	0x045C, r1	; 0x80045c <_ZN7TwoWire14rxBufferLengthE>
    57d4:	10 92 3a 04 	sts	0x043A, r1	; 0x80043a <_ZN7TwoWire13txBufferIndexE>
    57d8:	10 92 39 04 	sts	0x0439, r1	; 0x800439 <_ZN7TwoWire14txBufferLengthE>
    57dc:	0e 94 ae 2d 	call	0x5b5c	; 0x5b5c <twi_init>
    57e0:	8e e6       	ldi	r24, 0x6E	; 110
    57e2:	9b e2       	ldi	r25, 0x2B	; 43
    57e4:	0e 94 1a 2e 	call	0x5c34	; 0x5c34 <twi_attachSlaveTxEvent>
    57e8:	84 e4       	ldi	r24, 0x44	; 68
    57ea:	9b e2       	ldi	r25, 0x2B	; 43
    57ec:	0c 94 15 2e 	jmp	0x5c2a	; 0x5c2a <twi_attachSlaveRxEvent>

000057f0 <_ZN7TwoWire8setClockEm>:
    57f0:	cb 01       	movw	r24, r22
    57f2:	ba 01       	movw	r22, r20
    57f4:	0c 94 d9 2d 	jmp	0x5bb2	; 0x5bb2 <twi_setFrequency>

000057f8 <_ZN7TwoWire17beginTransmissionEh>:
    57f8:	81 e0       	ldi	r24, 0x01	; 1
    57fa:	80 93 38 04 	sts	0x0438, r24	; 0x800438 <_ZN7TwoWire12transmittingE>
    57fe:	60 93 5b 04 	sts	0x045B, r22	; 0x80045b <_ZN7TwoWire9txAddressE>
    5802:	10 92 3a 04 	sts	0x043A, r1	; 0x80043a <_ZN7TwoWire13txBufferIndexE>
    5806:	10 92 39 04 	sts	0x0439, r1	; 0x800439 <_ZN7TwoWire14txBufferLengthE>
    580a:	08 95       	ret

0000580c <_ZN7TwoWire15endTransmissionEh>:
    580c:	0f 93       	push	r16
    580e:	06 2f       	mov	r16, r22
    5810:	21 e0       	ldi	r18, 0x01	; 1
    5812:	40 91 39 04 	lds	r20, 0x0439	; 0x800439 <_ZN7TwoWire14txBufferLengthE>
    5816:	6b e3       	ldi	r22, 0x3B	; 59
    5818:	74 e0       	ldi	r23, 0x04	; 4
    581a:	80 91 5b 04 	lds	r24, 0x045B	; 0x80045b <_ZN7TwoWire9txAddressE>
    581e:	0e 94 24 2f 	call	0x5e48	; 0x5e48 <twi_writeTo>
    5822:	10 92 3a 04 	sts	0x043A, r1	; 0x80043a <_ZN7TwoWire13txBufferIndexE>
    5826:	10 92 39 04 	sts	0x0439, r1	; 0x800439 <_ZN7TwoWire14txBufferLengthE>
    582a:	10 92 38 04 	sts	0x0438, r1	; 0x800438 <_ZN7TwoWire12transmittingE>
    582e:	0f 91       	pop	r16
    5830:	08 95       	ret

00005832 <_ZN7TwoWire11requestFromEhhmhh>:
    5832:	4f 92       	push	r4
    5834:	5f 92       	push	r5
    5836:	6f 92       	push	r6
    5838:	7f 92       	push	r7
    583a:	af 92       	push	r10
    583c:	bf 92       	push	r11
    583e:	cf 92       	push	r12
    5840:	ef 92       	push	r14
    5842:	ff 92       	push	r15
    5844:	0f 93       	push	r16
    5846:	1f 93       	push	r17
    5848:	cf 93       	push	r28
    584a:	df 93       	push	r29
    584c:	5c 01       	movw	r10, r24
    584e:	f6 2e       	mov	r15, r22
    5850:	d4 2f       	mov	r29, r20
    5852:	28 01       	movw	r4, r16
    5854:	39 01       	movw	r6, r18
    5856:	ee 20       	and	r14, r14
    5858:	21 f1       	breq	.+72     	; 0x58a2 <_ZN7TwoWire11requestFromEhhmhh+0x70>
    585a:	0e 94 fc 2b 	call	0x57f8	; 0x57f8 <_ZN7TwoWire17beginTransmissionEh>
    585e:	ce 2d       	mov	r28, r14
    5860:	c4 30       	cpi	r28, 0x04	; 4
    5862:	08 f0       	brcs	.+2      	; 0x5866 <_ZN7TwoWire11requestFromEhhmhh+0x34>
    5864:	c3 e0       	ldi	r28, 0x03	; 3
    5866:	c1 50       	subi	r28, 0x01	; 1
    5868:	c0 f0       	brcs	.+48     	; 0x589a <_ZN7TwoWire11requestFromEhhmhh+0x68>
    586a:	28 e0       	ldi	r18, 0x08	; 8
    586c:	c2 9f       	mul	r28, r18
    586e:	c0 01       	movw	r24, r0
    5870:	11 24       	eor	r1, r1
    5872:	a3 01       	movw	r20, r6
    5874:	92 01       	movw	r18, r4
    5876:	04 c0       	rjmp	.+8      	; 0x5880 <_ZN7TwoWire11requestFromEhhmhh+0x4e>
    5878:	56 95       	lsr	r21
    587a:	47 95       	ror	r20
    587c:	37 95       	ror	r19
    587e:	27 95       	ror	r18
    5880:	8a 95       	dec	r24
    5882:	d2 f7       	brpl	.-12     	; 0x5878 <_ZN7TwoWire11requestFromEhhmhh+0x46>
    5884:	ca 01       	movw	r24, r20
    5886:	b9 01       	movw	r22, r18
    5888:	d5 01       	movw	r26, r10
    588a:	ed 91       	ld	r30, X+
    588c:	fc 91       	ld	r31, X
    588e:	01 90       	ld	r0, Z+
    5890:	f0 81       	ld	r31, Z
    5892:	e0 2d       	mov	r30, r0
    5894:	c5 01       	movw	r24, r10
    5896:	09 95       	icall
    5898:	e6 cf       	rjmp	.-52     	; 0x5866 <_ZN7TwoWire11requestFromEhhmhh+0x34>
    589a:	60 e0       	ldi	r22, 0x00	; 0
    589c:	c5 01       	movw	r24, r10
    589e:	0e 94 06 2c 	call	0x580c	; 0x580c <_ZN7TwoWire15endTransmissionEh>
    58a2:	4d 2f       	mov	r20, r29
    58a4:	d1 32       	cpi	r29, 0x21	; 33
    58a6:	08 f0       	brcs	.+2      	; 0x58aa <_ZN7TwoWire11requestFromEhhmhh+0x78>
    58a8:	40 e2       	ldi	r20, 0x20	; 32
    58aa:	2c 2d       	mov	r18, r12
    58ac:	6e e5       	ldi	r22, 0x5E	; 94
    58ae:	74 e0       	ldi	r23, 0x04	; 4
    58b0:	8f 2d       	mov	r24, r15
    58b2:	0e 94 3b 2e 	call	0x5c76	; 0x5c76 <twi_readFrom>
    58b6:	10 92 5d 04 	sts	0x045D, r1	; 0x80045d <_ZN7TwoWire13rxBufferIndexE>
    58ba:	80 93 5c 04 	sts	0x045C, r24	; 0x80045c <_ZN7TwoWire14rxBufferLengthE>
    58be:	df 91       	pop	r29
    58c0:	cf 91       	pop	r28
    58c2:	1f 91       	pop	r17
    58c4:	0f 91       	pop	r16
    58c6:	ff 90       	pop	r15
    58c8:	ef 90       	pop	r14
    58ca:	cf 90       	pop	r12
    58cc:	bf 90       	pop	r11
    58ce:	af 90       	pop	r10
    58d0:	7f 90       	pop	r7
    58d2:	6f 90       	pop	r6
    58d4:	5f 90       	pop	r5
    58d6:	4f 90       	pop	r4
    58d8:	08 95       	ret

000058da <_ZN7TwoWire11requestFromEhhh>:
    58da:	cf 92       	push	r12
    58dc:	ef 92       	push	r14
    58de:	0f 93       	push	r16
    58e0:	1f 93       	push	r17
    58e2:	c2 2e       	mov	r12, r18
    58e4:	e1 2c       	mov	r14, r1
    58e6:	00 e0       	ldi	r16, 0x00	; 0
    58e8:	10 e0       	ldi	r17, 0x00	; 0
    58ea:	98 01       	movw	r18, r16
    58ec:	0e 94 19 2c 	call	0x5832	; 0x5832 <_ZN7TwoWire11requestFromEhhmhh>
    58f0:	1f 91       	pop	r17
    58f2:	0f 91       	pop	r16
    58f4:	ef 90       	pop	r14
    58f6:	cf 90       	pop	r12
    58f8:	08 95       	ret

000058fa <_ZN7TwoWire11requestFromEhh>:
    58fa:	21 e0       	ldi	r18, 0x01	; 1
    58fc:	0c 94 6d 2c 	jmp	0x58da	; 0x58da <_ZN7TwoWire11requestFromEhhh>

00005900 <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
}

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
    5900:	88 e2       	ldi	r24, 0x28	; 40
    5902:	94 e0       	ldi	r25, 0x04	; 4
    5904:	0c 94 d6 2b 	jmp	0x57ac	; 0x57ac <_ZN7TwoWireC1Ev>

00005908 <yield>:
 * libraries or sketches that supports cooperative threads.
 *
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
    5908:	08 95       	ret

0000590a <analogWrite>:
// Right now, PWM output only works on the pins with
// hardware support.  These are defined in the appropriate
// pins_*.c file.  For the rest of the pins, we default
// to digital output.
void analogWrite(uint8_t pin, int val)
{
    590a:	1f 93       	push	r17
    590c:	cf 93       	push	r28
    590e:	df 93       	push	r29
    5910:	18 2f       	mov	r17, r24
    5912:	eb 01       	movw	r28, r22
	// We need to make sure the PWM output is enabled for those pins
	// that support it, as we turn it off when digitally reading or
	// writing with them.  Also, make sure the pin is in output mode
	// for consistenty with Wiring, which doesn't require a pinMode
	// call for the analog output pins.
	pinMode(pin, OUTPUT);
    5914:	61 e0       	ldi	r22, 0x01	; 1
    5916:	0e 94 0d 2d 	call	0x5a1a	; 0x5a1a <pinMode>
	if (val == 0)
    591a:	20 97       	sbiw	r28, 0x00	; 0
    591c:	11 f4       	brne	.+4      	; 0x5922 <analogWrite+0x18>
	{
		digitalWrite(pin, LOW);
    591e:	60 e0       	ldi	r22, 0x00	; 0
    5920:	04 c0       	rjmp	.+8      	; 0x592a <analogWrite+0x20>
	}
	else if (val == 255)
    5922:	cf 3f       	cpi	r28, 0xFF	; 255
    5924:	d1 05       	cpc	r29, r1
    5926:	39 f4       	brne	.+14     	; 0x5936 <analogWrite+0x2c>
	{
		digitalWrite(pin, HIGH);
    5928:	61 e0       	ldi	r22, 0x01	; 1
    592a:	81 2f       	mov	r24, r17
				} else {
					digitalWrite(pin, HIGH);
				}
		}
	}
}
    592c:	df 91       	pop	r29
    592e:	cf 91       	pop	r28
    5930:	1f 91       	pop	r17
	{
		digitalWrite(pin, LOW);
	}
	else if (val == 255)
	{
		digitalWrite(pin, HIGH);
    5932:	0c 94 49 2d 	jmp	0x5a92	; 0x5a92 <digitalWrite>
	}
	else
	{
		switch(digitalPinToTimer(pin))
    5936:	e1 2f       	mov	r30, r17
    5938:	f0 e0       	ldi	r31, 0x00	; 0
    593a:	e1 5e       	subi	r30, 0xE1	; 225
    593c:	ff 4d       	sbci	r31, 0xDF	; 223
    593e:	e4 91       	lpm	r30, Z
    5940:	e3 30       	cpi	r30, 0x03	; 3
    5942:	f9 f0       	breq	.+62     	; 0x5982 <analogWrite+0x78>
    5944:	48 f4       	brcc	.+18     	; 0x5958 <analogWrite+0x4e>
    5946:	e1 30       	cpi	r30, 0x01	; 1
    5948:	b9 f0       	breq	.+46     	; 0x5978 <analogWrite+0x6e>
    594a:	e2 30       	cpi	r30, 0x02	; 2
    594c:	a1 f5       	brne	.+104    	; 0x59b6 <analogWrite+0xac>
			#endif

			#if defined(TCCR0A) && defined(COM0B1)
			case TIMER0B:
				// connect pwm to pin on timer 0, channel B
				sbi(TCCR0A, COM0B1);
    594e:	84 b5       	in	r24, 0x24	; 36
    5950:	80 62       	ori	r24, 0x20	; 32
    5952:	84 bd       	out	0x24, r24	; 36
				OCR0B = val; // set pwm duty
    5954:	c8 bd       	out	0x28, r28	; 40
				break;
    5956:	34 c0       	rjmp	.+104    	; 0x59c0 <analogWrite+0xb6>
	{
		digitalWrite(pin, HIGH);
	}
	else
	{
		switch(digitalPinToTimer(pin))
    5958:	e7 30       	cpi	r30, 0x07	; 7
    595a:	e9 f0       	breq	.+58     	; 0x5996 <analogWrite+0x8c>
    595c:	e8 30       	cpi	r30, 0x08	; 8
    595e:	19 f1       	breq	.+70     	; 0x59a6 <analogWrite+0x9c>
    5960:	e4 30       	cpi	r30, 0x04	; 4
    5962:	49 f5       	brne	.+82     	; 0x59b6 <analogWrite+0xac>
			#endif

			#if defined(TCCR1A) && defined(COM1B1)
			case TIMER1B:
				// connect pwm to pin on timer 1, channel B
				sbi(TCCR1A, COM1B1);
    5964:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    5968:	80 62       	ori	r24, 0x20	; 32
    596a:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
				OCR1B = val; // set pwm duty
    596e:	d0 93 8b 00 	sts	0x008B, r29	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    5972:	c0 93 8a 00 	sts	0x008A, r28	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
				break;
    5976:	24 c0       	rjmp	.+72     	; 0x59c0 <analogWrite+0xb6>
			#endif

			#if defined(TCCR0A) && defined(COM0A1)
			case TIMER0A:
				// connect pwm to pin on timer 0, channel A
				sbi(TCCR0A, COM0A1);
    5978:	84 b5       	in	r24, 0x24	; 36
    597a:	80 68       	ori	r24, 0x80	; 128
    597c:	84 bd       	out	0x24, r24	; 36
				OCR0A = val; // set pwm duty
    597e:	c7 bd       	out	0x27, r28	; 39
				break;
    5980:	1f c0       	rjmp	.+62     	; 0x59c0 <analogWrite+0xb6>
			#endif

			#if defined(TCCR1A) && defined(COM1A1)
			case TIMER1A:
				// connect pwm to pin on timer 1, channel A
				sbi(TCCR1A, COM1A1);
    5982:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    5986:	80 68       	ori	r24, 0x80	; 128
    5988:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
				OCR1A = val; // set pwm duty
    598c:	d0 93 89 00 	sts	0x0089, r29	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    5990:	c0 93 88 00 	sts	0x0088, r28	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
				break;
    5994:	15 c0       	rjmp	.+42     	; 0x59c0 <analogWrite+0xb6>
			#endif

			#if defined(TCCR2A) && defined(COM2A1)
			case TIMER2A:
				// connect pwm to pin on timer 2, channel A
				sbi(TCCR2A, COM2A1);
    5996:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    599a:	80 68       	ori	r24, 0x80	; 128
    599c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
				OCR2A = val; // set pwm duty
    59a0:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
				break;
    59a4:	0d c0       	rjmp	.+26     	; 0x59c0 <analogWrite+0xb6>
			#endif

			#if defined(TCCR2A) && defined(COM2B1)
			case TIMER2B:
				// connect pwm to pin on timer 2, channel B
				sbi(TCCR2A, COM2B1);
    59a6:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    59aa:	80 62       	ori	r24, 0x20	; 32
    59ac:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
				OCR2B = val; // set pwm duty
    59b0:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
				break;
    59b4:	05 c0       	rjmp	.+10     	; 0x59c0 <analogWrite+0xb6>
				break;
			#endif

			case NOT_ON_TIMER:
			default:
				if (val < 128) {
    59b6:	c0 38       	cpi	r28, 0x80	; 128
    59b8:	d1 05       	cpc	r29, r1
    59ba:	0c f0       	brlt	.+2      	; 0x59be <analogWrite+0xb4>
    59bc:	b5 cf       	rjmp	.-150    	; 0x5928 <analogWrite+0x1e>
    59be:	af cf       	rjmp	.-162    	; 0x591e <analogWrite+0x14>
				} else {
					digitalWrite(pin, HIGH);
				}
		}
	}
}
    59c0:	df 91       	pop	r29
    59c2:	cf 91       	pop	r28
    59c4:	1f 91       	pop	r17
    59c6:	08 95       	ret

000059c8 <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
    59c8:	83 30       	cpi	r24, 0x03	; 3
    59ca:	81 f0       	breq	.+32     	; 0x59ec <turnOffPWM+0x24>
    59cc:	28 f4       	brcc	.+10     	; 0x59d8 <turnOffPWM+0x10>
    59ce:	81 30       	cpi	r24, 0x01	; 1
    59d0:	99 f0       	breq	.+38     	; 0x59f8 <turnOffPWM+0x30>
    59d2:	82 30       	cpi	r24, 0x02	; 2
    59d4:	a1 f0       	breq	.+40     	; 0x59fe <turnOffPWM+0x36>
    59d6:	08 95       	ret
    59d8:	87 30       	cpi	r24, 0x07	; 7
    59da:	a9 f0       	breq	.+42     	; 0x5a06 <turnOffPWM+0x3e>
    59dc:	88 30       	cpi	r24, 0x08	; 8
    59de:	b9 f0       	breq	.+46     	; 0x5a0e <turnOffPWM+0x46>
    59e0:	84 30       	cpi	r24, 0x04	; 4
    59e2:	d1 f4       	brne	.+52     	; 0x5a18 <turnOffPWM+0x50>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    59e4:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    59e8:	8f 7d       	andi	r24, 0xDF	; 223
    59ea:	03 c0       	rjmp	.+6      	; 0x59f2 <turnOffPWM+0x2a>
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
    59ec:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    59f0:	8f 77       	andi	r24, 0x7F	; 127
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    59f2:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    59f6:	08 95       	ret
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
    59f8:	84 b5       	in	r24, 0x24	; 36
    59fa:	8f 77       	andi	r24, 0x7F	; 127
    59fc:	02 c0       	rjmp	.+4      	; 0x5a02 <turnOffPWM+0x3a>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
    59fe:	84 b5       	in	r24, 0x24	; 36
    5a00:	8f 7d       	andi	r24, 0xDF	; 223
    5a02:	84 bd       	out	0x24, r24	; 36
    5a04:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
    5a06:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    5a0a:	8f 77       	andi	r24, 0x7F	; 127
    5a0c:	03 c0       	rjmp	.+6      	; 0x5a14 <turnOffPWM+0x4c>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
    5a0e:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    5a12:	8f 7d       	andi	r24, 0xDF	; 223
    5a14:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    5a18:	08 95       	ret

00005a1a <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    5a1a:	cf 93       	push	r28
    5a1c:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    5a1e:	90 e0       	ldi	r25, 0x00	; 0
    5a20:	fc 01       	movw	r30, r24
    5a22:	ed 5c       	subi	r30, 0xCD	; 205
    5a24:	ff 4d       	sbci	r31, 0xDF	; 223
    5a26:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
    5a28:	fc 01       	movw	r30, r24
    5a2a:	e9 5b       	subi	r30, 0xB9	; 185
    5a2c:	ff 4d       	sbci	r31, 0xDF	; 223
    5a2e:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    5a30:	88 23       	and	r24, r24
    5a32:	61 f1       	breq	.+88     	; 0x5a8c <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    5a34:	90 e0       	ldi	r25, 0x00	; 0
    5a36:	88 0f       	add	r24, r24
    5a38:	99 1f       	adc	r25, r25
    5a3a:	fc 01       	movw	r30, r24
    5a3c:	eb 59       	subi	r30, 0x9B	; 155
    5a3e:	ff 4d       	sbci	r31, 0xDF	; 223
    5a40:	c5 91       	lpm	r28, Z+
    5a42:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
    5a44:	fc 01       	movw	r30, r24
    5a46:	e5 5a       	subi	r30, 0xA5	; 165
    5a48:	ff 4d       	sbci	r31, 0xDF	; 223
    5a4a:	a5 91       	lpm	r26, Z+
    5a4c:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
    5a4e:	61 11       	cpse	r22, r1
    5a50:	09 c0       	rjmp	.+18     	; 0x5a64 <pinMode+0x4a>
		uint8_t oldSREG = SREG;
    5a52:	9f b7       	in	r25, 0x3f	; 63
                cli();
    5a54:	f8 94       	cli
		*reg &= ~bit;
    5a56:	88 81       	ld	r24, Y
    5a58:	20 95       	com	r18
    5a5a:	82 23       	and	r24, r18
    5a5c:	88 83       	st	Y, r24
		*out &= ~bit;
    5a5e:	ec 91       	ld	r30, X
    5a60:	2e 23       	and	r18, r30
    5a62:	0b c0       	rjmp	.+22     	; 0x5a7a <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    5a64:	62 30       	cpi	r22, 0x02	; 2
    5a66:	61 f4       	brne	.+24     	; 0x5a80 <pinMode+0x66>
		uint8_t oldSREG = SREG;
    5a68:	9f b7       	in	r25, 0x3f	; 63
                cli();
    5a6a:	f8 94       	cli
		*reg &= ~bit;
    5a6c:	88 81       	ld	r24, Y
    5a6e:	32 2f       	mov	r19, r18
    5a70:	30 95       	com	r19
    5a72:	83 23       	and	r24, r19
    5a74:	88 83       	st	Y, r24
		*out |= bit;
    5a76:	ec 91       	ld	r30, X
    5a78:	2e 2b       	or	r18, r30
    5a7a:	2c 93       	st	X, r18
		SREG = oldSREG;
    5a7c:	9f bf       	out	0x3f, r25	; 63
    5a7e:	06 c0       	rjmp	.+12     	; 0x5a8c <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
    5a80:	8f b7       	in	r24, 0x3f	; 63
                cli();
    5a82:	f8 94       	cli
		*reg |= bit;
    5a84:	e8 81       	ld	r30, Y
    5a86:	2e 2b       	or	r18, r30
    5a88:	28 83       	st	Y, r18
		SREG = oldSREG;
    5a8a:	8f bf       	out	0x3f, r24	; 63
	}
}
    5a8c:	df 91       	pop	r29
    5a8e:	cf 91       	pop	r28
    5a90:	08 95       	ret

00005a92 <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
    5a92:	1f 93       	push	r17
    5a94:	cf 93       	push	r28
    5a96:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
    5a98:	28 2f       	mov	r18, r24
    5a9a:	30 e0       	ldi	r19, 0x00	; 0
    5a9c:	f9 01       	movw	r30, r18
    5a9e:	e1 5e       	subi	r30, 0xE1	; 225
    5aa0:	ff 4d       	sbci	r31, 0xDF	; 223
    5aa2:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
    5aa4:	f9 01       	movw	r30, r18
    5aa6:	ed 5c       	subi	r30, 0xCD	; 205
    5aa8:	ff 4d       	sbci	r31, 0xDF	; 223
    5aaa:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
    5aac:	f9 01       	movw	r30, r18
    5aae:	e9 5b       	subi	r30, 0xB9	; 185
    5ab0:	ff 4d       	sbci	r31, 0xDF	; 223
    5ab2:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
    5ab4:	cc 23       	and	r28, r28
    5ab6:	c1 f0       	breq	.+48     	; 0x5ae8 <digitalWrite+0x56>
    5ab8:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    5aba:	81 11       	cpse	r24, r1
    5abc:	0e 94 e4 2c 	call	0x59c8	; 0x59c8 <turnOffPWM>

	out = portOutputRegister(port);
    5ac0:	ec 2f       	mov	r30, r28
    5ac2:	f0 e0       	ldi	r31, 0x00	; 0
    5ac4:	ee 0f       	add	r30, r30
    5ac6:	ff 1f       	adc	r31, r31
    5ac8:	e5 5a       	subi	r30, 0xA5	; 165
    5aca:	ff 4d       	sbci	r31, 0xDF	; 223
    5acc:	a5 91       	lpm	r26, Z+
    5ace:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
    5ad0:	9f b7       	in	r25, 0x3f	; 63
	cli();
    5ad2:	f8 94       	cli

	if (val == LOW) {
    5ad4:	11 11       	cpse	r17, r1
    5ad6:	04 c0       	rjmp	.+8      	; 0x5ae0 <digitalWrite+0x4e>
		*out &= ~bit;
    5ad8:	8c 91       	ld	r24, X
    5ada:	d0 95       	com	r29
    5adc:	d8 23       	and	r29, r24
    5ade:	02 c0       	rjmp	.+4      	; 0x5ae4 <digitalWrite+0x52>
	} else {
		*out |= bit;
    5ae0:	ec 91       	ld	r30, X
    5ae2:	de 2b       	or	r29, r30
    5ae4:	dc 93       	st	X, r29
	}

	SREG = oldSREG;
    5ae6:	9f bf       	out	0x3f, r25	; 63
}
    5ae8:	df 91       	pop	r29
    5aea:	cf 91       	pop	r28
    5aec:	1f 91       	pop	r17
    5aee:	08 95       	ret

00005af0 <_ZN8SPIClass5beginEv>:
#ifdef SPI_TRANSACTION_MISMATCH_LED
uint8_t SPIClass::inTransactionFlag = 0;
#endif

void SPIClass::begin()
{
    5af0:	cf 93       	push	r28
  uint8_t sreg = SREG;
    5af2:	cf b7       	in	r28, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
    5af4:	f8 94       	cli
  if (!initialized) {
    5af6:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <_ZN8SPIClass11initializedE>
    5afa:	81 11       	cpse	r24, r1
    5afc:	27 c0       	rjmp	.+78     	; 0x5b4c <_ZN8SPIClass5beginEv+0x5c>
    // Set SS to high so a connected chip will be "deselected" by default
    uint8_t port = digitalPinToPort(SS);
    5afe:	e1 e5       	ldi	r30, 0x51	; 81
    5b00:	f0 e2       	ldi	r31, 0x20	; 32
    5b02:	84 91       	lpm	r24, Z
    uint8_t bit = digitalPinToBitMask(SS);
    5b04:	ed e3       	ldi	r30, 0x3D	; 61
    5b06:	f0 e2       	ldi	r31, 0x20	; 32
    5b08:	94 91       	lpm	r25, Z
    volatile uint8_t *reg = portModeRegister(port);
    5b0a:	e8 2f       	mov	r30, r24
    5b0c:	f0 e0       	ldi	r31, 0x00	; 0
    5b0e:	ee 0f       	add	r30, r30
    5b10:	ff 1f       	adc	r31, r31
    5b12:	eb 59       	subi	r30, 0x9B	; 155
    5b14:	ff 4d       	sbci	r31, 0xDF	; 223
    5b16:	a5 91       	lpm	r26, Z+
    5b18:	b4 91       	lpm	r27, Z

    // if the SS pin is not already configured as an output
    // then set it high (to enable the internal pull-up resistor)
    if(!(*reg & bit)){
    5b1a:	ec 91       	ld	r30, X
    5b1c:	e9 23       	and	r30, r25
    5b1e:	21 f4       	brne	.+8      	; 0x5b28 <_ZN8SPIClass5beginEv+0x38>
      digitalWrite(SS, HIGH);
    5b20:	61 e0       	ldi	r22, 0x01	; 1
    5b22:	8a e0       	ldi	r24, 0x0A	; 10
    5b24:	0e 94 49 2d 	call	0x5a92	; 0x5a92 <digitalWrite>
    }

    // When the SS pin is set as OUTPUT, it can be used as
    // a general purpose output port (it doesn't influence
    // SPI operations).
    pinMode(SS, OUTPUT);
    5b28:	61 e0       	ldi	r22, 0x01	; 1
    5b2a:	8a e0       	ldi	r24, 0x0A	; 10
    5b2c:	0e 94 0d 2d 	call	0x5a1a	; 0x5a1a <pinMode>

    // Warning: if the SS pin ever becomes a LOW INPUT then SPI
    // automatically switches to Slave, so the data direction of
    // the SS pin MUST be kept as OUTPUT.
    SPCR |= _BV(MSTR);
    5b30:	8c b5       	in	r24, 0x2c	; 44
    5b32:	80 61       	ori	r24, 0x10	; 16
    5b34:	8c bd       	out	0x2c, r24	; 44
    SPCR |= _BV(SPE);
    5b36:	8c b5       	in	r24, 0x2c	; 44
    5b38:	80 64       	ori	r24, 0x40	; 64
    5b3a:	8c bd       	out	0x2c, r24	; 44
    // MISO pin automatically overrides to INPUT.
    // By doing this AFTER enabling SPI, we avoid accidentally
    // clocking in a single bit since the lines go directly
    // from "input" to SPI control.
    // http://code.google.com/p/arduino/issues/detail?id=888
    pinMode(SCK, OUTPUT);
    5b3c:	61 e0       	ldi	r22, 0x01	; 1
    5b3e:	8d e0       	ldi	r24, 0x0D	; 13
    5b40:	0e 94 0d 2d 	call	0x5a1a	; 0x5a1a <pinMode>
    pinMode(MOSI, OUTPUT);
    5b44:	61 e0       	ldi	r22, 0x01	; 1
    5b46:	8b e0       	ldi	r24, 0x0B	; 11
    5b48:	0e 94 0d 2d 	call	0x5a1a	; 0x5a1a <pinMode>
  }
  initialized++; // reference count
    5b4c:	80 91 81 04 	lds	r24, 0x0481	; 0x800481 <_ZN8SPIClass11initializedE>
    5b50:	8f 5f       	subi	r24, 0xFF	; 255
    5b52:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <_ZN8SPIClass11initializedE>
  SREG = sreg;
    5b56:	cf bf       	out	0x3f, r28	; 63
}
    5b58:	cf 91       	pop	r28
    5b5a:	08 95       	ret

00005b5c <twi_init>:
  bool flag = twi_timed_out_flag;
  if (clear_flag){
    twi_timed_out_flag = false;
  }
  return(flag);
}
    5b5c:	10 92 f5 04 	sts	0x04F5, r1	; 0x8004f5 <twi_state>
    5b60:	81 e0       	ldi	r24, 0x01	; 1
    5b62:	80 93 f3 04 	sts	0x04F3, r24	; 0x8004f3 <twi_sendStop>
    5b66:	10 92 f2 04 	sts	0x04F2, r1	; 0x8004f2 <twi_inRepStart>
    5b6a:	61 e0       	ldi	r22, 0x01	; 1
    5b6c:	82 e1       	ldi	r24, 0x12	; 18
    5b6e:	0e 94 49 2d 	call	0x5a92	; 0x5a92 <digitalWrite>
    5b72:	61 e0       	ldi	r22, 0x01	; 1
    5b74:	83 e1       	ldi	r24, 0x13	; 19
    5b76:	0e 94 49 2d 	call	0x5a92	; 0x5a92 <digitalWrite>
    5b7a:	e9 eb       	ldi	r30, 0xB9	; 185
    5b7c:	f0 e0       	ldi	r31, 0x00	; 0
    5b7e:	80 81       	ld	r24, Z
    5b80:	8e 7f       	andi	r24, 0xFE	; 254
    5b82:	80 83       	st	Z, r24
    5b84:	80 81       	ld	r24, Z
    5b86:	8d 7f       	andi	r24, 0xFD	; 253
    5b88:	80 83       	st	Z, r24
    5b8a:	88 e4       	ldi	r24, 0x48	; 72
    5b8c:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    5b90:	85 e4       	ldi	r24, 0x45	; 69
    5b92:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5b96:	08 95       	ret

00005b98 <twi_disable>:
    5b98:	ec eb       	ldi	r30, 0xBC	; 188
    5b9a:	f0 e0       	ldi	r31, 0x00	; 0
    5b9c:	80 81       	ld	r24, Z
    5b9e:	8a 7b       	andi	r24, 0xBA	; 186
    5ba0:	80 83       	st	Z, r24
    5ba2:	60 e0       	ldi	r22, 0x00	; 0
    5ba4:	82 e1       	ldi	r24, 0x12	; 18
    5ba6:	0e 94 49 2d 	call	0x5a92	; 0x5a92 <digitalWrite>
    5baa:	60 e0       	ldi	r22, 0x00	; 0
    5bac:	83 e1       	ldi	r24, 0x13	; 19
    5bae:	0c 94 49 2d 	jmp	0x5a92	; 0x5a92 <digitalWrite>

00005bb2 <twi_setFrequency>:
    5bb2:	9b 01       	movw	r18, r22
    5bb4:	ac 01       	movw	r20, r24
    5bb6:	60 e0       	ldi	r22, 0x00	; 0
    5bb8:	74 e2       	ldi	r23, 0x24	; 36
    5bba:	84 ef       	ldi	r24, 0xF4	; 244
    5bbc:	90 e0       	ldi	r25, 0x00	; 0
    5bbe:	0e 94 14 32 	call	0x6428	; 0x6428 <__udivmodsi4>
    5bc2:	da 01       	movw	r26, r20
    5bc4:	c9 01       	movw	r24, r18
    5bc6:	40 97       	sbiw	r24, 0x10	; 16
    5bc8:	a1 09       	sbc	r26, r1
    5bca:	b1 09       	sbc	r27, r1
    5bcc:	b6 95       	lsr	r27
    5bce:	a7 95       	ror	r26
    5bd0:	97 95       	ror	r25
    5bd2:	87 95       	ror	r24
    5bd4:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    5bd8:	08 95       	ret

00005bda <twi_transmit>:
    5bda:	40 91 a4 04 	lds	r20, 0x04A4	; 0x8004a4 <twi_txBufferLength>
    5bde:	26 2f       	mov	r18, r22
    5be0:	30 e0       	ldi	r19, 0x00	; 0
    5be2:	24 0f       	add	r18, r20
    5be4:	31 1d       	adc	r19, r1
    5be6:	21 32       	cpi	r18, 0x21	; 33
    5be8:	31 05       	cpc	r19, r1
    5bea:	dc f4       	brge	.+54     	; 0x5c22 <twi_transmit+0x48>
    5bec:	20 91 f5 04 	lds	r18, 0x04F5	; 0x8004f5 <twi_state>
    5bf0:	24 30       	cpi	r18, 0x04	; 4
    5bf2:	c9 f4       	brne	.+50     	; 0x5c26 <twi_transmit+0x4c>
    5bf4:	fc 01       	movw	r30, r24
    5bf6:	80 e0       	ldi	r24, 0x00	; 0
    5bf8:	90 e0       	ldi	r25, 0x00	; 0
    5bfa:	86 17       	cp	r24, r22
    5bfc:	58 f4       	brcc	.+22     	; 0x5c14 <twi_transmit+0x3a>
    5bfe:	30 91 a4 04 	lds	r19, 0x04A4	; 0x8004a4 <twi_txBufferLength>
    5c02:	21 91       	ld	r18, Z+
    5c04:	dc 01       	movw	r26, r24
    5c06:	aa 55       	subi	r26, 0x5A	; 90
    5c08:	bb 4f       	sbci	r27, 0xFB	; 251
    5c0a:	a3 0f       	add	r26, r19
    5c0c:	b1 1d       	adc	r27, r1
    5c0e:	2c 93       	st	X, r18
    5c10:	01 96       	adiw	r24, 0x01	; 1
    5c12:	f3 cf       	rjmp	.-26     	; 0x5bfa <twi_transmit+0x20>
    5c14:	80 91 a4 04 	lds	r24, 0x04A4	; 0x8004a4 <twi_txBufferLength>
    5c18:	68 0f       	add	r22, r24
    5c1a:	60 93 a4 04 	sts	0x04A4, r22	; 0x8004a4 <twi_txBufferLength>
    5c1e:	80 e0       	ldi	r24, 0x00	; 0
    5c20:	08 95       	ret
    5c22:	81 e0       	ldi	r24, 0x01	; 1
    5c24:	08 95       	ret
    5c26:	82 e0       	ldi	r24, 0x02	; 2
    5c28:	08 95       	ret

00005c2a <twi_attachSlaveRxEvent>:
    5c2a:	90 93 e9 04 	sts	0x04E9, r25	; 0x8004e9 <twi_onSlaveReceive+0x1>
    5c2e:	80 93 e8 04 	sts	0x04E8, r24	; 0x8004e8 <twi_onSlaveReceive>
    5c32:	08 95       	ret

00005c34 <twi_attachSlaveTxEvent>:
    5c34:	90 93 eb 04 	sts	0x04EB, r25	; 0x8004eb <twi_onSlaveTransmit+0x1>
    5c38:	80 93 ea 04 	sts	0x04EA, r24	; 0x8004ea <twi_onSlaveTransmit>
    5c3c:	08 95       	ret

00005c3e <twi_releaseBus>:
    5c3e:	85 ec       	ldi	r24, 0xC5	; 197
    5c40:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5c44:	10 92 f5 04 	sts	0x04F5, r1	; 0x8004f5 <twi_state>
    5c48:	08 95       	ret

00005c4a <twi_handleTimeout>:
    5c4a:	cf 93       	push	r28
    5c4c:	df 93       	push	r29
    5c4e:	91 e0       	ldi	r25, 0x01	; 1
    5c50:	90 93 ed 04 	sts	0x04ED, r25	; 0x8004ed <twi_timed_out_flag>
    5c54:	88 23       	and	r24, r24
    5c56:	61 f0       	breq	.+24     	; 0x5c70 <twi_handleTimeout+0x26>
    5c58:	c0 91 b8 00 	lds	r28, 0x00B8	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    5c5c:	d0 91 ba 00 	lds	r29, 0x00BA	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7f80ba>
    5c60:	0e 94 cc 2d 	call	0x5b98	; 0x5b98 <twi_disable>
    5c64:	0e 94 ae 2d 	call	0x5b5c	; 0x5b5c <twi_init>
    5c68:	d0 93 ba 00 	sts	0x00BA, r29	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7f80ba>
    5c6c:	c0 93 b8 00 	sts	0x00B8, r28	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    5c70:	df 91       	pop	r29
    5c72:	cf 91       	pop	r28
    5c74:	08 95       	ret

00005c76 <twi_readFrom>:
    5c76:	4f 92       	push	r4
    5c78:	5f 92       	push	r5
    5c7a:	6f 92       	push	r6
    5c7c:	7f 92       	push	r7
    5c7e:	8f 92       	push	r8
    5c80:	9f 92       	push	r9
    5c82:	af 92       	push	r10
    5c84:	bf 92       	push	r11
    5c86:	cf 92       	push	r12
    5c88:	df 92       	push	r13
    5c8a:	ef 92       	push	r14
    5c8c:	ff 92       	push	r15
    5c8e:	0f 93       	push	r16
    5c90:	1f 93       	push	r17
    5c92:	cf 93       	push	r28
    5c94:	df 93       	push	r29
    5c96:	f8 2e       	mov	r15, r24
    5c98:	16 2f       	mov	r17, r22
    5c9a:	07 2f       	mov	r16, r23
    5c9c:	c4 2f       	mov	r28, r20
    5c9e:	e2 2e       	mov	r14, r18
    5ca0:	41 32       	cpi	r20, 0x21	; 33
    5ca2:	08 f0       	brcs	.+2      	; 0x5ca6 <twi_readFrom+0x30>
    5ca4:	be c0       	rjmp	.+380    	; 0x5e22 <twi_readFrom+0x1ac>
    5ca6:	0e 94 25 1a 	call	0x344a	; 0x344a <micros>
    5caa:	4b 01       	movw	r8, r22
    5cac:	5c 01       	movw	r10, r24
    5cae:	d0 91 f5 04 	lds	r29, 0x04F5	; 0x8004f5 <twi_state>
    5cb2:	dd 23       	and	r29, r29
    5cb4:	31 f1       	breq	.+76     	; 0x5d02 <twi_readFrom+0x8c>
    5cb6:	80 91 ee 04 	lds	r24, 0x04EE	; 0x8004ee <twi_timeout_us>
    5cba:	90 91 ef 04 	lds	r25, 0x04EF	; 0x8004ef <twi_timeout_us+0x1>
    5cbe:	a0 91 f0 04 	lds	r26, 0x04F0	; 0x8004f0 <twi_timeout_us+0x2>
    5cc2:	b0 91 f1 04 	lds	r27, 0x04F1	; 0x8004f1 <twi_timeout_us+0x3>
    5cc6:	89 2b       	or	r24, r25
    5cc8:	8a 2b       	or	r24, r26
    5cca:	8b 2b       	or	r24, r27
    5ccc:	81 f3       	breq	.-32     	; 0x5cae <twi_readFrom+0x38>
    5cce:	0e 94 25 1a 	call	0x344a	; 0x344a <micros>
    5cd2:	40 90 ee 04 	lds	r4, 0x04EE	; 0x8004ee <twi_timeout_us>
    5cd6:	50 90 ef 04 	lds	r5, 0x04EF	; 0x8004ef <twi_timeout_us+0x1>
    5cda:	60 90 f0 04 	lds	r6, 0x04F0	; 0x8004f0 <twi_timeout_us+0x2>
    5cde:	70 90 f1 04 	lds	r7, 0x04F1	; 0x8004f1 <twi_timeout_us+0x3>
    5ce2:	dc 01       	movw	r26, r24
    5ce4:	cb 01       	movw	r24, r22
    5ce6:	88 19       	sub	r24, r8
    5ce8:	99 09       	sbc	r25, r9
    5cea:	aa 09       	sbc	r26, r10
    5cec:	bb 09       	sbc	r27, r11
    5cee:	48 16       	cp	r4, r24
    5cf0:	59 06       	cpc	r5, r25
    5cf2:	6a 06       	cpc	r6, r26
    5cf4:	7b 06       	cpc	r7, r27
    5cf6:	d8 f6       	brcc	.-74     	; 0x5cae <twi_readFrom+0x38>
    5cf8:	80 91 ec 04 	lds	r24, 0x04EC	; 0x8004ec <twi_do_reset_on_timeout>
    5cfc:	0e 94 25 2e 	call	0x5c4a	; 0x5c4a <twi_handleTimeout>
    5d00:	90 c0       	rjmp	.+288    	; 0x5e22 <twi_readFrom+0x1ac>
    5d02:	81 e0       	ldi	r24, 0x01	; 1
    5d04:	80 93 f5 04 	sts	0x04F5, r24	; 0x8004f5 <twi_state>
    5d08:	e0 92 f3 04 	sts	0x04F3, r14	; 0x8004f3 <twi_sendStop>
    5d0c:	9f ef       	ldi	r25, 0xFF	; 255
    5d0e:	90 93 82 04 	sts	0x0482, r25	; 0x800482 <twi_error>
    5d12:	10 92 c7 04 	sts	0x04C7, r1	; 0x8004c7 <twi_masterBufferIndex>
    5d16:	9c 0f       	add	r25, r28
    5d18:	90 93 c6 04 	sts	0x04C6, r25	; 0x8004c6 <twi_masterBufferLength>
    5d1c:	80 93 f4 04 	sts	0x04F4, r24	; 0x8004f4 <twi_slarw>
    5d20:	90 91 f4 04 	lds	r25, 0x04F4	; 0x8004f4 <twi_slarw>
    5d24:	8f 2d       	mov	r24, r15
    5d26:	88 0f       	add	r24, r24
    5d28:	89 2b       	or	r24, r25
    5d2a:	80 93 f4 04 	sts	0x04F4, r24	; 0x8004f4 <twi_slarw>
    5d2e:	80 91 f2 04 	lds	r24, 0x04F2	; 0x8004f2 <twi_inRepStart>
    5d32:	81 30       	cpi	r24, 0x01	; 1
    5d34:	89 f5       	brne	.+98     	; 0x5d98 <twi_readFrom+0x122>
    5d36:	10 92 f2 04 	sts	0x04F2, r1	; 0x8004f2 <twi_inRepStart>
    5d3a:	0e 94 25 1a 	call	0x344a	; 0x344a <micros>
    5d3e:	6b 01       	movw	r12, r22
    5d40:	7c 01       	movw	r14, r24
    5d42:	80 91 f4 04 	lds	r24, 0x04F4	; 0x8004f4 <twi_slarw>
    5d46:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    5d4a:	80 91 ee 04 	lds	r24, 0x04EE	; 0x8004ee <twi_timeout_us>
    5d4e:	90 91 ef 04 	lds	r25, 0x04EF	; 0x8004ef <twi_timeout_us+0x1>
    5d52:	a0 91 f0 04 	lds	r26, 0x04F0	; 0x8004f0 <twi_timeout_us+0x2>
    5d56:	b0 91 f1 04 	lds	r27, 0x04F1	; 0x8004f1 <twi_timeout_us+0x3>
    5d5a:	89 2b       	or	r24, r25
    5d5c:	8a 2b       	or	r24, r26
    5d5e:	8b 2b       	or	r24, r27
    5d60:	a9 f0       	breq	.+42     	; 0x5d8c <twi_readFrom+0x116>
    5d62:	0e 94 25 1a 	call	0x344a	; 0x344a <micros>
    5d66:	80 90 ee 04 	lds	r8, 0x04EE	; 0x8004ee <twi_timeout_us>
    5d6a:	90 90 ef 04 	lds	r9, 0x04EF	; 0x8004ef <twi_timeout_us+0x1>
    5d6e:	a0 90 f0 04 	lds	r10, 0x04F0	; 0x8004f0 <twi_timeout_us+0x2>
    5d72:	b0 90 f1 04 	lds	r11, 0x04F1	; 0x8004f1 <twi_timeout_us+0x3>
    5d76:	dc 01       	movw	r26, r24
    5d78:	cb 01       	movw	r24, r22
    5d7a:	8c 19       	sub	r24, r12
    5d7c:	9d 09       	sbc	r25, r13
    5d7e:	ae 09       	sbc	r26, r14
    5d80:	bf 09       	sbc	r27, r15
    5d82:	88 16       	cp	r8, r24
    5d84:	99 06       	cpc	r9, r25
    5d86:	aa 06       	cpc	r10, r26
    5d88:	bb 06       	cpc	r11, r27
    5d8a:	90 f1       	brcs	.+100    	; 0x5df0 <twi_readFrom+0x17a>
    5d8c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5d90:	83 fd       	sbrc	r24, 3
    5d92:	d7 cf       	rjmp	.-82     	; 0x5d42 <twi_readFrom+0xcc>
    5d94:	85 ec       	ldi	r24, 0xC5	; 197
    5d96:	01 c0       	rjmp	.+2      	; 0x5d9a <twi_readFrom+0x124>
    5d98:	85 ee       	ldi	r24, 0xE5	; 229
    5d9a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5d9e:	0e 94 25 1a 	call	0x344a	; 0x344a <micros>
    5da2:	6b 01       	movw	r12, r22
    5da4:	7c 01       	movw	r14, r24
    5da6:	80 91 f5 04 	lds	r24, 0x04F5	; 0x8004f5 <twi_state>
    5daa:	81 30       	cpi	r24, 0x01	; 1
    5dac:	31 f5       	brne	.+76     	; 0x5dfa <twi_readFrom+0x184>
    5dae:	80 91 ee 04 	lds	r24, 0x04EE	; 0x8004ee <twi_timeout_us>
    5db2:	90 91 ef 04 	lds	r25, 0x04EF	; 0x8004ef <twi_timeout_us+0x1>
    5db6:	a0 91 f0 04 	lds	r26, 0x04F0	; 0x8004f0 <twi_timeout_us+0x2>
    5dba:	b0 91 f1 04 	lds	r27, 0x04F1	; 0x8004f1 <twi_timeout_us+0x3>
    5dbe:	89 2b       	or	r24, r25
    5dc0:	8a 2b       	or	r24, r26
    5dc2:	8b 2b       	or	r24, r27
    5dc4:	81 f3       	breq	.-32     	; 0x5da6 <twi_readFrom+0x130>
    5dc6:	0e 94 25 1a 	call	0x344a	; 0x344a <micros>
    5dca:	80 90 ee 04 	lds	r8, 0x04EE	; 0x8004ee <twi_timeout_us>
    5dce:	90 90 ef 04 	lds	r9, 0x04EF	; 0x8004ef <twi_timeout_us+0x1>
    5dd2:	a0 90 f0 04 	lds	r10, 0x04F0	; 0x8004f0 <twi_timeout_us+0x2>
    5dd6:	b0 90 f1 04 	lds	r11, 0x04F1	; 0x8004f1 <twi_timeout_us+0x3>
    5dda:	dc 01       	movw	r26, r24
    5ddc:	cb 01       	movw	r24, r22
    5dde:	8c 19       	sub	r24, r12
    5de0:	9d 09       	sbc	r25, r13
    5de2:	ae 09       	sbc	r26, r14
    5de4:	bf 09       	sbc	r27, r15
    5de6:	88 16       	cp	r8, r24
    5de8:	99 06       	cpc	r9, r25
    5dea:	aa 06       	cpc	r10, r26
    5dec:	bb 06       	cpc	r11, r27
    5dee:	d8 f6       	brcc	.-74     	; 0x5da6 <twi_readFrom+0x130>
    5df0:	80 91 ec 04 	lds	r24, 0x04EC	; 0x8004ec <twi_do_reset_on_timeout>
    5df4:	0e 94 25 2e 	call	0x5c4a	; 0x5c4a <twi_handleTimeout>
    5df8:	15 c0       	rjmp	.+42     	; 0x5e24 <twi_readFrom+0x1ae>
    5dfa:	80 91 c7 04 	lds	r24, 0x04C7	; 0x8004c7 <twi_masterBufferIndex>
    5dfe:	8c 17       	cp	r24, r28
    5e00:	10 f4       	brcc	.+4      	; 0x5e06 <twi_readFrom+0x190>
    5e02:	c0 91 c7 04 	lds	r28, 0x04C7	; 0x8004c7 <twi_masterBufferIndex>
    5e06:	a8 ec       	ldi	r26, 0xC8	; 200
    5e08:	b4 e0       	ldi	r27, 0x04	; 4
    5e0a:	91 2f       	mov	r25, r17
    5e0c:	e1 2f       	mov	r30, r17
    5e0e:	f0 2f       	mov	r31, r16
    5e10:	8e 2f       	mov	r24, r30
    5e12:	89 1b       	sub	r24, r25
    5e14:	8c 17       	cp	r24, r28
    5e16:	18 f4       	brcc	.+6      	; 0x5e1e <twi_readFrom+0x1a8>
    5e18:	8d 91       	ld	r24, X+
    5e1a:	81 93       	st	Z+, r24
    5e1c:	f9 cf       	rjmp	.-14     	; 0x5e10 <twi_readFrom+0x19a>
    5e1e:	dc 2f       	mov	r29, r28
    5e20:	01 c0       	rjmp	.+2      	; 0x5e24 <twi_readFrom+0x1ae>
    5e22:	d0 e0       	ldi	r29, 0x00	; 0
    5e24:	8d 2f       	mov	r24, r29
    5e26:	df 91       	pop	r29
    5e28:	cf 91       	pop	r28
    5e2a:	1f 91       	pop	r17
    5e2c:	0f 91       	pop	r16
    5e2e:	ff 90       	pop	r15
    5e30:	ef 90       	pop	r14
    5e32:	df 90       	pop	r13
    5e34:	cf 90       	pop	r12
    5e36:	bf 90       	pop	r11
    5e38:	af 90       	pop	r10
    5e3a:	9f 90       	pop	r9
    5e3c:	8f 90       	pop	r8
    5e3e:	7f 90       	pop	r7
    5e40:	6f 90       	pop	r6
    5e42:	5f 90       	pop	r5
    5e44:	4f 90       	pop	r4
    5e46:	08 95       	ret

00005e48 <twi_writeTo>:
    5e48:	4f 92       	push	r4
    5e4a:	5f 92       	push	r5
    5e4c:	6f 92       	push	r6
    5e4e:	7f 92       	push	r7
    5e50:	8f 92       	push	r8
    5e52:	9f 92       	push	r9
    5e54:	af 92       	push	r10
    5e56:	bf 92       	push	r11
    5e58:	cf 92       	push	r12
    5e5a:	df 92       	push	r13
    5e5c:	ef 92       	push	r14
    5e5e:	ff 92       	push	r15
    5e60:	0f 93       	push	r16
    5e62:	1f 93       	push	r17
    5e64:	cf 93       	push	r28
    5e66:	df 93       	push	r29
    5e68:	41 32       	cpi	r20, 0x21	; 33
    5e6a:	08 f0       	brcs	.+2      	; 0x5e6e <twi_writeTo+0x26>
    5e6c:	c6 c0       	rjmp	.+396    	; 0x5ffa <twi_writeTo+0x1b2>
    5e6e:	12 2f       	mov	r17, r18
    5e70:	f4 2e       	mov	r15, r20
    5e72:	d7 2e       	mov	r13, r23
    5e74:	e6 2e       	mov	r14, r22
    5e76:	d8 2f       	mov	r29, r24
    5e78:	0e 94 25 1a 	call	0x344a	; 0x344a <micros>
    5e7c:	4b 01       	movw	r8, r22
    5e7e:	5c 01       	movw	r10, r24
    5e80:	c0 91 f5 04 	lds	r28, 0x04F5	; 0x8004f5 <twi_state>
    5e84:	cc 23       	and	r28, r28
    5e86:	11 f1       	breq	.+68     	; 0x5ecc <twi_writeTo+0x84>
    5e88:	80 91 ee 04 	lds	r24, 0x04EE	; 0x8004ee <twi_timeout_us>
    5e8c:	90 91 ef 04 	lds	r25, 0x04EF	; 0x8004ef <twi_timeout_us+0x1>
    5e90:	a0 91 f0 04 	lds	r26, 0x04F0	; 0x8004f0 <twi_timeout_us+0x2>
    5e94:	b0 91 f1 04 	lds	r27, 0x04F1	; 0x8004f1 <twi_timeout_us+0x3>
    5e98:	89 2b       	or	r24, r25
    5e9a:	8a 2b       	or	r24, r26
    5e9c:	8b 2b       	or	r24, r27
    5e9e:	81 f3       	breq	.-32     	; 0x5e80 <twi_writeTo+0x38>
    5ea0:	0e 94 25 1a 	call	0x344a	; 0x344a <micros>
    5ea4:	40 90 ee 04 	lds	r4, 0x04EE	; 0x8004ee <twi_timeout_us>
    5ea8:	50 90 ef 04 	lds	r5, 0x04EF	; 0x8004ef <twi_timeout_us+0x1>
    5eac:	60 90 f0 04 	lds	r6, 0x04F0	; 0x8004f0 <twi_timeout_us+0x2>
    5eb0:	70 90 f1 04 	lds	r7, 0x04F1	; 0x8004f1 <twi_timeout_us+0x3>
    5eb4:	dc 01       	movw	r26, r24
    5eb6:	cb 01       	movw	r24, r22
    5eb8:	88 19       	sub	r24, r8
    5eba:	99 09       	sbc	r25, r9
    5ebc:	aa 09       	sbc	r26, r10
    5ebe:	bb 09       	sbc	r27, r11
    5ec0:	48 16       	cp	r4, r24
    5ec2:	59 06       	cpc	r5, r25
    5ec4:	6a 06       	cpc	r6, r26
    5ec6:	7b 06       	cpc	r7, r27
    5ec8:	d8 f6       	brcc	.-74     	; 0x5e80 <twi_writeTo+0x38>
    5eca:	83 c0       	rjmp	.+262    	; 0x5fd2 <twi_writeTo+0x18a>
    5ecc:	82 e0       	ldi	r24, 0x02	; 2
    5ece:	80 93 f5 04 	sts	0x04F5, r24	; 0x8004f5 <twi_state>
    5ed2:	00 93 f3 04 	sts	0x04F3, r16	; 0x8004f3 <twi_sendStop>
    5ed6:	8f ef       	ldi	r24, 0xFF	; 255
    5ed8:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <twi_error>
    5edc:	10 92 c7 04 	sts	0x04C7, r1	; 0x8004c7 <twi_masterBufferIndex>
    5ee0:	f0 92 c6 04 	sts	0x04C6, r15	; 0x8004c6 <twi_masterBufferLength>
    5ee4:	9e 2d       	mov	r25, r14
    5ee6:	a8 ec       	ldi	r26, 0xC8	; 200
    5ee8:	b4 e0       	ldi	r27, 0x04	; 4
    5eea:	ee 2d       	mov	r30, r14
    5eec:	fd 2d       	mov	r31, r13
    5eee:	8e 2f       	mov	r24, r30
    5ef0:	89 1b       	sub	r24, r25
    5ef2:	8f 15       	cp	r24, r15
    5ef4:	18 f4       	brcc	.+6      	; 0x5efc <twi_writeTo+0xb4>
    5ef6:	81 91       	ld	r24, Z+
    5ef8:	8d 93       	st	X+, r24
    5efa:	f9 cf       	rjmp	.-14     	; 0x5eee <twi_writeTo+0xa6>
    5efc:	10 92 f4 04 	sts	0x04F4, r1	; 0x8004f4 <twi_slarw>
    5f00:	90 91 f4 04 	lds	r25, 0x04F4	; 0x8004f4 <twi_slarw>
    5f04:	dd 0f       	add	r29, r29
    5f06:	d9 2b       	or	r29, r25
    5f08:	d0 93 f4 04 	sts	0x04F4, r29	; 0x8004f4 <twi_slarw>
    5f0c:	80 91 f2 04 	lds	r24, 0x04F2	; 0x8004f2 <twi_inRepStart>
    5f10:	81 30       	cpi	r24, 0x01	; 1
    5f12:	89 f5       	brne	.+98     	; 0x5f76 <twi_writeTo+0x12e>
    5f14:	10 92 f2 04 	sts	0x04F2, r1	; 0x8004f2 <twi_inRepStart>
    5f18:	0e 94 25 1a 	call	0x344a	; 0x344a <micros>
    5f1c:	6b 01       	movw	r12, r22
    5f1e:	7c 01       	movw	r14, r24
    5f20:	80 91 f4 04 	lds	r24, 0x04F4	; 0x8004f4 <twi_slarw>
    5f24:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    5f28:	80 91 ee 04 	lds	r24, 0x04EE	; 0x8004ee <twi_timeout_us>
    5f2c:	90 91 ef 04 	lds	r25, 0x04EF	; 0x8004ef <twi_timeout_us+0x1>
    5f30:	a0 91 f0 04 	lds	r26, 0x04F0	; 0x8004f0 <twi_timeout_us+0x2>
    5f34:	b0 91 f1 04 	lds	r27, 0x04F1	; 0x8004f1 <twi_timeout_us+0x3>
    5f38:	89 2b       	or	r24, r25
    5f3a:	8a 2b       	or	r24, r26
    5f3c:	8b 2b       	or	r24, r27
    5f3e:	a9 f0       	breq	.+42     	; 0x5f6a <twi_writeTo+0x122>
    5f40:	0e 94 25 1a 	call	0x344a	; 0x344a <micros>
    5f44:	80 90 ee 04 	lds	r8, 0x04EE	; 0x8004ee <twi_timeout_us>
    5f48:	90 90 ef 04 	lds	r9, 0x04EF	; 0x8004ef <twi_timeout_us+0x1>
    5f4c:	a0 90 f0 04 	lds	r10, 0x04F0	; 0x8004f0 <twi_timeout_us+0x2>
    5f50:	b0 90 f1 04 	lds	r11, 0x04F1	; 0x8004f1 <twi_timeout_us+0x3>
    5f54:	dc 01       	movw	r26, r24
    5f56:	cb 01       	movw	r24, r22
    5f58:	8c 19       	sub	r24, r12
    5f5a:	9d 09       	sbc	r25, r13
    5f5c:	ae 09       	sbc	r26, r14
    5f5e:	bf 09       	sbc	r27, r15
    5f60:	88 16       	cp	r8, r24
    5f62:	99 06       	cpc	r9, r25
    5f64:	aa 06       	cpc	r10, r26
    5f66:	bb 06       	cpc	r11, r27
    5f68:	a0 f1       	brcs	.+104    	; 0x5fd2 <twi_writeTo+0x18a>
    5f6a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5f6e:	83 fd       	sbrc	r24, 3
    5f70:	d7 cf       	rjmp	.-82     	; 0x5f20 <twi_writeTo+0xd8>
    5f72:	85 ec       	ldi	r24, 0xC5	; 197
    5f74:	01 c0       	rjmp	.+2      	; 0x5f78 <twi_writeTo+0x130>
    5f76:	85 ee       	ldi	r24, 0xE5	; 229
    5f78:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5f7c:	0e 94 25 1a 	call	0x344a	; 0x344a <micros>
    5f80:	6b 01       	movw	r12, r22
    5f82:	7c 01       	movw	r14, r24
    5f84:	11 23       	and	r17, r17
    5f86:	59 f1       	breq	.+86     	; 0x5fde <twi_writeTo+0x196>
    5f88:	80 91 f5 04 	lds	r24, 0x04F5	; 0x8004f5 <twi_state>
    5f8c:	82 30       	cpi	r24, 0x02	; 2
    5f8e:	39 f5       	brne	.+78     	; 0x5fde <twi_writeTo+0x196>
    5f90:	80 91 ee 04 	lds	r24, 0x04EE	; 0x8004ee <twi_timeout_us>
    5f94:	90 91 ef 04 	lds	r25, 0x04EF	; 0x8004ef <twi_timeout_us+0x1>
    5f98:	a0 91 f0 04 	lds	r26, 0x04F0	; 0x8004f0 <twi_timeout_us+0x2>
    5f9c:	b0 91 f1 04 	lds	r27, 0x04F1	; 0x8004f1 <twi_timeout_us+0x3>
    5fa0:	89 2b       	or	r24, r25
    5fa2:	8a 2b       	or	r24, r26
    5fa4:	8b 2b       	or	r24, r27
    5fa6:	71 f3       	breq	.-36     	; 0x5f84 <twi_writeTo+0x13c>
    5fa8:	0e 94 25 1a 	call	0x344a	; 0x344a <micros>
    5fac:	80 90 ee 04 	lds	r8, 0x04EE	; 0x8004ee <twi_timeout_us>
    5fb0:	90 90 ef 04 	lds	r9, 0x04EF	; 0x8004ef <twi_timeout_us+0x1>
    5fb4:	a0 90 f0 04 	lds	r10, 0x04F0	; 0x8004f0 <twi_timeout_us+0x2>
    5fb8:	b0 90 f1 04 	lds	r11, 0x04F1	; 0x8004f1 <twi_timeout_us+0x3>
    5fbc:	dc 01       	movw	r26, r24
    5fbe:	cb 01       	movw	r24, r22
    5fc0:	8c 19       	sub	r24, r12
    5fc2:	9d 09       	sbc	r25, r13
    5fc4:	ae 09       	sbc	r26, r14
    5fc6:	bf 09       	sbc	r27, r15
    5fc8:	88 16       	cp	r8, r24
    5fca:	99 06       	cpc	r9, r25
    5fcc:	aa 06       	cpc	r10, r26
    5fce:	bb 06       	cpc	r11, r27
    5fd0:	c8 f6       	brcc	.-78     	; 0x5f84 <twi_writeTo+0x13c>
    5fd2:	80 91 ec 04 	lds	r24, 0x04EC	; 0x8004ec <twi_do_reset_on_timeout>
    5fd6:	0e 94 25 2e 	call	0x5c4a	; 0x5c4a <twi_handleTimeout>
    5fda:	c5 e0       	ldi	r28, 0x05	; 5
    5fdc:	13 c0       	rjmp	.+38     	; 0x6004 <twi_writeTo+0x1bc>
    5fde:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <twi_error>
    5fe2:	8f 3f       	cpi	r24, 0xFF	; 255
    5fe4:	79 f0       	breq	.+30     	; 0x6004 <twi_writeTo+0x1bc>
    5fe6:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <twi_error>
    5fea:	80 32       	cpi	r24, 0x20	; 32
    5fec:	41 f0       	breq	.+16     	; 0x5ffe <twi_writeTo+0x1b6>
    5fee:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <twi_error>
    5ff2:	80 33       	cpi	r24, 0x30	; 48
    5ff4:	31 f0       	breq	.+12     	; 0x6002 <twi_writeTo+0x1ba>
    5ff6:	c4 e0       	ldi	r28, 0x04	; 4
    5ff8:	05 c0       	rjmp	.+10     	; 0x6004 <twi_writeTo+0x1bc>
    5ffa:	c1 e0       	ldi	r28, 0x01	; 1
    5ffc:	03 c0       	rjmp	.+6      	; 0x6004 <twi_writeTo+0x1bc>
    5ffe:	c2 e0       	ldi	r28, 0x02	; 2
    6000:	01 c0       	rjmp	.+2      	; 0x6004 <twi_writeTo+0x1bc>
    6002:	c3 e0       	ldi	r28, 0x03	; 3
    6004:	8c 2f       	mov	r24, r28
    6006:	df 91       	pop	r29
    6008:	cf 91       	pop	r28
    600a:	1f 91       	pop	r17
    600c:	0f 91       	pop	r16
    600e:	ff 90       	pop	r15
    6010:	ef 90       	pop	r14
    6012:	df 90       	pop	r13
    6014:	cf 90       	pop	r12
    6016:	bf 90       	pop	r11
    6018:	af 90       	pop	r10
    601a:	9f 90       	pop	r9
    601c:	8f 90       	pop	r8
    601e:	7f 90       	pop	r7
    6020:	6f 90       	pop	r6
    6022:	5f 90       	pop	r5
    6024:	4f 90       	pop	r4
    6026:	08 95       	ret

00006028 <twi_stop>:
    6028:	85 ed       	ldi	r24, 0xD5	; 213
    602a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    602e:	80 91 ee 04 	lds	r24, 0x04EE	; 0x8004ee <twi_timeout_us>
    6032:	90 91 ef 04 	lds	r25, 0x04EF	; 0x8004ef <twi_timeout_us+0x1>
    6036:	a0 91 f0 04 	lds	r26, 0x04F0	; 0x8004f0 <twi_timeout_us+0x2>
    603a:	b0 91 f1 04 	lds	r27, 0x04F1	; 0x8004f1 <twi_timeout_us+0x3>
    603e:	07 96       	adiw	r24, 0x07	; 7
    6040:	a1 1d       	adc	r26, r1
    6042:	b1 1d       	adc	r27, r1
    6044:	23 e0       	ldi	r18, 0x03	; 3
    6046:	b6 95       	lsr	r27
    6048:	a7 95       	ror	r26
    604a:	97 95       	ror	r25
    604c:	87 95       	ror	r24
    604e:	2a 95       	dec	r18
    6050:	d1 f7       	brne	.-12     	; 0x6046 <twi_stop+0x1e>
    6052:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    6056:	24 ff       	sbrs	r18, 4
    6058:	1c c0       	rjmp	.+56     	; 0x6092 <twi_stop+0x6a>
    605a:	40 91 ee 04 	lds	r20, 0x04EE	; 0x8004ee <twi_timeout_us>
    605e:	50 91 ef 04 	lds	r21, 0x04EF	; 0x8004ef <twi_timeout_us+0x1>
    6062:	60 91 f0 04 	lds	r22, 0x04F0	; 0x8004f0 <twi_timeout_us+0x2>
    6066:	70 91 f1 04 	lds	r23, 0x04F1	; 0x8004f1 <twi_timeout_us+0x3>
    606a:	45 2b       	or	r20, r21
    606c:	46 2b       	or	r20, r22
    606e:	47 2b       	or	r20, r23
    6070:	81 f3       	breq	.-32     	; 0x6052 <twi_stop+0x2a>
    6072:	00 97       	sbiw	r24, 0x00	; 0
    6074:	a1 05       	cpc	r26, r1
    6076:	b1 05       	cpc	r27, r1
    6078:	41 f0       	breq	.+16     	; 0x608a <twi_stop+0x62>
    607a:	25 e3       	ldi	r18, 0x35	; 53
    607c:	2a 95       	dec	r18
    607e:	f1 f7       	brne	.-4      	; 0x607c <twi_stop+0x54>
    6080:	00 00       	nop
    6082:	01 97       	sbiw	r24, 0x01	; 1
    6084:	a1 09       	sbc	r26, r1
    6086:	b1 09       	sbc	r27, r1
    6088:	e4 cf       	rjmp	.-56     	; 0x6052 <twi_stop+0x2a>
    608a:	80 91 ec 04 	lds	r24, 0x04EC	; 0x8004ec <twi_do_reset_on_timeout>
    608e:	0c 94 25 2e 	jmp	0x5c4a	; 0x5c4a <twi_handleTimeout>
    6092:	10 92 f5 04 	sts	0x04F5, r1	; 0x8004f5 <twi_state>
    6096:	08 95       	ret

00006098 <__vector_24>:

ISR(TWI_vect)
{
    6098:	1f 92       	push	r1
    609a:	0f 92       	push	r0
    609c:	0f b6       	in	r0, 0x3f	; 63
    609e:	0f 92       	push	r0
    60a0:	11 24       	eor	r1, r1
    60a2:	2f 93       	push	r18
    60a4:	3f 93       	push	r19
    60a6:	4f 93       	push	r20
    60a8:	5f 93       	push	r21
    60aa:	6f 93       	push	r22
    60ac:	7f 93       	push	r23
    60ae:	8f 93       	push	r24
    60b0:	9f 93       	push	r25
    60b2:	af 93       	push	r26
    60b4:	bf 93       	push	r27
    60b6:	ef 93       	push	r30
    60b8:	ff 93       	push	r31
  switch(TW_STATUS){
    60ba:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
    60be:	88 7f       	andi	r24, 0xF8	; 248
    60c0:	80 36       	cpi	r24, 0x60	; 96
    60c2:	09 f4       	brne	.+2      	; 0x60c6 <__vector_24+0x2e>
    60c4:	9e c0       	rjmp	.+316    	; 0x6202 <__vector_24+0x16a>
    60c6:	78 f5       	brcc	.+94     	; 0x6126 <__vector_24+0x8e>
    60c8:	88 32       	cpi	r24, 0x28	; 40
    60ca:	09 f4       	brne	.+2      	; 0x60ce <__vector_24+0x36>
    60cc:	5d c0       	rjmp	.+186    	; 0x6188 <__vector_24+0xf0>
    60ce:	90 f4       	brcc	.+36     	; 0x60f4 <__vector_24+0x5c>
    60d0:	80 31       	cpi	r24, 0x10	; 16
    60d2:	09 f4       	brne	.+2      	; 0x60d6 <__vector_24+0x3e>
    60d4:	56 c0       	rjmp	.+172    	; 0x6182 <__vector_24+0xea>
    60d6:	38 f4       	brcc	.+14     	; 0x60e6 <__vector_24+0x4e>
    60d8:	88 23       	and	r24, r24
    60da:	09 f4       	brne	.+2      	; 0x60de <__vector_24+0x46>
    60dc:	f5 c0       	rjmp	.+490    	; 0x62c8 <__vector_24+0x230>
    60de:	88 30       	cpi	r24, 0x08	; 8
    60e0:	09 f4       	brne	.+2      	; 0x60e4 <__vector_24+0x4c>
    60e2:	4f c0       	rjmp	.+158    	; 0x6182 <__vector_24+0xea>
    60e4:	f5 c0       	rjmp	.+490    	; 0x62d0 <__vector_24+0x238>
    60e6:	88 31       	cpi	r24, 0x18	; 24
    60e8:	09 f4       	brne	.+2      	; 0x60ec <__vector_24+0x54>
    60ea:	4e c0       	rjmp	.+156    	; 0x6188 <__vector_24+0xf0>
    60ec:	80 32       	cpi	r24, 0x20	; 32
    60ee:	09 f4       	brne	.+2      	; 0x60f2 <__vector_24+0x5a>
    60f0:	5f c0       	rjmp	.+190    	; 0x61b0 <__vector_24+0x118>
    60f2:	ee c0       	rjmp	.+476    	; 0x62d0 <__vector_24+0x238>
    60f4:	80 34       	cpi	r24, 0x40	; 64
    60f6:	09 f4       	brne	.+2      	; 0x60fa <__vector_24+0x62>
    60f8:	6a c0       	rjmp	.+212    	; 0x61ce <__vector_24+0x136>
    60fa:	58 f4       	brcc	.+22     	; 0x6112 <__vector_24+0x7a>
    60fc:	80 33       	cpi	r24, 0x30	; 48
    60fe:	09 f4       	brne	.+2      	; 0x6102 <__vector_24+0x6a>
    6100:	57 c0       	rjmp	.+174    	; 0x61b0 <__vector_24+0x118>
    6102:	88 33       	cpi	r24, 0x38	; 56
    6104:	09 f0       	breq	.+2      	; 0x6108 <__vector_24+0x70>
    6106:	e4 c0       	rjmp	.+456    	; 0x62d0 <__vector_24+0x238>
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
    6108:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <twi_error>
      twi_releaseBus();
    610c:	0e 94 1f 2e 	call	0x5c3e	; 0x5c3e <twi_releaseBus>
      break;
    6110:	df c0       	rjmp	.+446    	; 0x62d0 <__vector_24+0x238>
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    6112:	80 35       	cpi	r24, 0x50	; 80
    6114:	09 f4       	brne	.+2      	; 0x6118 <__vector_24+0x80>
    6116:	4f c0       	rjmp	.+158    	; 0x61b6 <__vector_24+0x11e>
    6118:	88 35       	cpi	r24, 0x58	; 88
    611a:	09 f4       	brne	.+2      	; 0x611e <__vector_24+0x86>
    611c:	5d c0       	rjmp	.+186    	; 0x61d8 <__vector_24+0x140>
    611e:	88 34       	cpi	r24, 0x48	; 72
    6120:	09 f0       	breq	.+2      	; 0x6124 <__vector_24+0x8c>
    6122:	d6 c0       	rjmp	.+428    	; 0x62d0 <__vector_24+0x238>
    6124:	d3 c0       	rjmp	.+422    	; 0x62cc <__vector_24+0x234>
    6126:	88 39       	cpi	r24, 0x98	; 152
    6128:	09 f4       	brne	.+2      	; 0x612c <__vector_24+0x94>
    612a:	c4 c0       	rjmp	.+392    	; 0x62b4 <__vector_24+0x21c>
    612c:	a8 f4       	brcc	.+42     	; 0x6158 <__vector_24+0xc0>
    612e:	88 37       	cpi	r24, 0x78	; 120
    6130:	09 f4       	brne	.+2      	; 0x6134 <__vector_24+0x9c>
    6132:	67 c0       	rjmp	.+206    	; 0x6202 <__vector_24+0x16a>
    6134:	38 f4       	brcc	.+14     	; 0x6144 <__vector_24+0xac>
    6136:	88 36       	cpi	r24, 0x68	; 104
    6138:	09 f4       	brne	.+2      	; 0x613c <__vector_24+0xa4>
    613a:	63 c0       	rjmp	.+198    	; 0x6202 <__vector_24+0x16a>
    613c:	80 37       	cpi	r24, 0x70	; 112
    613e:	09 f4       	brne	.+2      	; 0x6142 <__vector_24+0xaa>
    6140:	60 c0       	rjmp	.+192    	; 0x6202 <__vector_24+0x16a>
    6142:	c6 c0       	rjmp	.+396    	; 0x62d0 <__vector_24+0x238>
    6144:	88 38       	cpi	r24, 0x88	; 136
    6146:	09 f4       	brne	.+2      	; 0x614a <__vector_24+0xb2>
    6148:	b5 c0       	rjmp	.+362    	; 0x62b4 <__vector_24+0x21c>
    614a:	80 39       	cpi	r24, 0x90	; 144
    614c:	09 f4       	brne	.+2      	; 0x6150 <__vector_24+0xb8>
    614e:	5f c0       	rjmp	.+190    	; 0x620e <__vector_24+0x176>
    6150:	80 38       	cpi	r24, 0x80	; 128
    6152:	09 f0       	breq	.+2      	; 0x6156 <__vector_24+0xbe>
    6154:	bd c0       	rjmp	.+378    	; 0x62d0 <__vector_24+0x238>
    6156:	5b c0       	rjmp	.+182    	; 0x620e <__vector_24+0x176>
    6158:	80 3b       	cpi	r24, 0xB0	; 176
    615a:	09 f4       	brne	.+2      	; 0x615e <__vector_24+0xc6>
    615c:	83 c0       	rjmp	.+262    	; 0x6264 <__vector_24+0x1cc>
    615e:	38 f4       	brcc	.+14     	; 0x616e <__vector_24+0xd6>
    6160:	80 3a       	cpi	r24, 0xA0	; 160
    6162:	09 f4       	brne	.+2      	; 0x6166 <__vector_24+0xce>
    6164:	66 c0       	rjmp	.+204    	; 0x6232 <__vector_24+0x19a>
    6166:	88 3a       	cpi	r24, 0xA8	; 168
    6168:	09 f4       	brne	.+2      	; 0x616c <__vector_24+0xd4>
    616a:	7c c0       	rjmp	.+248    	; 0x6264 <__vector_24+0x1cc>
    616c:	b1 c0       	rjmp	.+354    	; 0x62d0 <__vector_24+0x238>
    616e:	80 3c       	cpi	r24, 0xC0	; 192
    6170:	09 f4       	brne	.+2      	; 0x6174 <__vector_24+0xdc>
    6172:	a4 c0       	rjmp	.+328    	; 0x62bc <__vector_24+0x224>
    6174:	88 3c       	cpi	r24, 0xC8	; 200
    6176:	09 f4       	brne	.+2      	; 0x617a <__vector_24+0xe2>
    6178:	a1 c0       	rjmp	.+322    	; 0x62bc <__vector_24+0x224>
    617a:	88 3b       	cpi	r24, 0xB8	; 184
    617c:	09 f4       	brne	.+2      	; 0x6180 <__vector_24+0xe8>
    617e:	87 c0       	rjmp	.+270    	; 0x628e <__vector_24+0x1f6>
    6180:	a7 c0       	rjmp	.+334    	; 0x62d0 <__vector_24+0x238>
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
    6182:	80 91 f4 04 	lds	r24, 0x04F4	; 0x8004f4 <twi_slarw>
    6186:	10 c0       	rjmp	.+32     	; 0x61a8 <__vector_24+0x110>

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
    6188:	90 91 c7 04 	lds	r25, 0x04C7	; 0x8004c7 <twi_masterBufferIndex>
    618c:	80 91 c6 04 	lds	r24, 0x04C6	; 0x8004c6 <twi_masterBufferLength>
    6190:	98 17       	cp	r25, r24
    6192:	70 f5       	brcc	.+92     	; 0x61f0 <__vector_24+0x158>
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    6194:	e0 91 c7 04 	lds	r30, 0x04C7	; 0x8004c7 <twi_masterBufferIndex>
    6198:	81 e0       	ldi	r24, 0x01	; 1
    619a:	8e 0f       	add	r24, r30
    619c:	80 93 c7 04 	sts	0x04C7, r24	; 0x8004c7 <twi_masterBufferIndex>
    61a0:	f0 e0       	ldi	r31, 0x00	; 0
    61a2:	e8 53       	subi	r30, 0x38	; 56
    61a4:	fb 4f       	sbci	r31, 0xFB	; 251
    61a6:	80 81       	ld	r24, Z
    61a8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    61ac:	85 ec       	ldi	r24, 0xC5	; 197
    61ae:	83 c0       	rjmp	.+262    	; 0x62b6 <__vector_24+0x21e>
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
    61b0:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <twi_error>
    61b4:	8b c0       	rjmp	.+278    	; 0x62cc <__vector_24+0x234>
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    61b6:	e0 91 c7 04 	lds	r30, 0x04C7	; 0x8004c7 <twi_masterBufferIndex>
    61ba:	81 e0       	ldi	r24, 0x01	; 1
    61bc:	8e 0f       	add	r24, r30
    61be:	80 93 c7 04 	sts	0x04C7, r24	; 0x8004c7 <twi_masterBufferIndex>
    61c2:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    61c6:	f0 e0       	ldi	r31, 0x00	; 0
    61c8:	e8 53       	subi	r30, 0x38	; 56
    61ca:	fb 4f       	sbci	r31, 0xFB	; 251
    61cc:	80 83       	st	Z, r24
      __attribute__ ((fallthrough));
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
    61ce:	90 91 c7 04 	lds	r25, 0x04C7	; 0x8004c7 <twi_masterBufferIndex>
    61d2:	80 91 c6 04 	lds	r24, 0x04C6	; 0x8004c6 <twi_masterBufferLength>
    61d6:	6b c0       	rjmp	.+214    	; 0x62ae <__vector_24+0x216>
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    61d8:	e0 91 c7 04 	lds	r30, 0x04C7	; 0x8004c7 <twi_masterBufferIndex>
    61dc:	81 e0       	ldi	r24, 0x01	; 1
    61de:	8e 0f       	add	r24, r30
    61e0:	80 93 c7 04 	sts	0x04C7, r24	; 0x8004c7 <twi_masterBufferIndex>
    61e4:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    61e8:	f0 e0       	ldi	r31, 0x00	; 0
    61ea:	e8 53       	subi	r30, 0x38	; 56
    61ec:	fb 4f       	sbci	r31, 0xFB	; 251
    61ee:	80 83       	st	Z, r24
      if (twi_sendStop){
    61f0:	80 91 f3 04 	lds	r24, 0x04F3	; 0x8004f3 <twi_sendStop>
    61f4:	81 11       	cpse	r24, r1
    61f6:	6a c0       	rjmp	.+212    	; 0x62cc <__vector_24+0x234>
        twi_stop();
      } else {
        twi_inRepStart = true;	// we're gonna send the START
    61f8:	81 e0       	ldi	r24, 0x01	; 1
    61fa:	80 93 f2 04 	sts	0x04F2, r24	; 0x8004f2 <twi_inRepStart>
        // don't enable the interrupt. We'll generate the start, but we
        // avoid handling the interrupt until we're in the next transaction,
        // at the point where we would normally issue the start.
        TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    61fe:	84 ea       	ldi	r24, 0xA4	; 164
    6200:	5e c0       	rjmp	.+188    	; 0x62be <__vector_24+0x226>
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
    6202:	83 e0       	ldi	r24, 0x03	; 3
    6204:	80 93 f5 04 	sts	0x04F5, r24	; 0x8004f5 <twi_state>
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
    6208:	10 92 83 04 	sts	0x0483, r1	; 0x800483 <twi_rxBufferIndex>
    620c:	cf cf       	rjmp	.-98     	; 0x61ac <__vector_24+0x114>
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    620e:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <twi_rxBufferIndex>
    6212:	80 32       	cpi	r24, 0x20	; 32
    6214:	08 f0       	brcs	.+2      	; 0x6218 <__vector_24+0x180>
    6216:	4e c0       	rjmp	.+156    	; 0x62b4 <__vector_24+0x21c>
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
    6218:	e0 91 83 04 	lds	r30, 0x0483	; 0x800483 <twi_rxBufferIndex>
    621c:	81 e0       	ldi	r24, 0x01	; 1
    621e:	8e 0f       	add	r24, r30
    6220:	80 93 83 04 	sts	0x0483, r24	; 0x800483 <twi_rxBufferIndex>
    6224:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    6228:	f0 e0       	ldi	r31, 0x00	; 0
    622a:	ec 57       	subi	r30, 0x7C	; 124
    622c:	fb 4f       	sbci	r31, 0xFB	; 251
    622e:	80 83       	st	Z, r24
    6230:	bd cf       	rjmp	.-134    	; 0x61ac <__vector_24+0x114>
        twi_reply(0);
      }
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
    6232:	0e 94 1f 2e 	call	0x5c3e	; 0x5c3e <twi_releaseBus>
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    6236:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <twi_rxBufferIndex>
    623a:	80 32       	cpi	r24, 0x20	; 32
    623c:	30 f4       	brcc	.+12     	; 0x624a <__vector_24+0x1b2>
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
    623e:	e0 91 83 04 	lds	r30, 0x0483	; 0x800483 <twi_rxBufferIndex>
    6242:	f0 e0       	ldi	r31, 0x00	; 0
    6244:	ec 57       	subi	r30, 0x7C	; 124
    6246:	fb 4f       	sbci	r31, 0xFB	; 251
    6248:	10 82       	st	Z, r1
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
    624a:	60 91 83 04 	lds	r22, 0x0483	; 0x800483 <twi_rxBufferIndex>
    624e:	70 e0       	ldi	r23, 0x00	; 0
    6250:	e0 91 e8 04 	lds	r30, 0x04E8	; 0x8004e8 <twi_onSlaveReceive>
    6254:	f0 91 e9 04 	lds	r31, 0x04E9	; 0x8004e9 <twi_onSlaveReceive+0x1>
    6258:	84 e8       	ldi	r24, 0x84	; 132
    625a:	94 e0       	ldi	r25, 0x04	; 4
    625c:	09 95       	icall
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
    625e:	10 92 83 04 	sts	0x0483, r1	; 0x800483 <twi_rxBufferIndex>
      break;
    6262:	36 c0       	rjmp	.+108    	; 0x62d0 <__vector_24+0x238>
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
    6264:	84 e0       	ldi	r24, 0x04	; 4
    6266:	80 93 f5 04 	sts	0x04F5, r24	; 0x8004f5 <twi_state>
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
    626a:	10 92 a5 04 	sts	0x04A5, r1	; 0x8004a5 <twi_txBufferIndex>
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
    626e:	10 92 a4 04 	sts	0x04A4, r1	; 0x8004a4 <twi_txBufferLength>
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
    6272:	e0 91 ea 04 	lds	r30, 0x04EA	; 0x8004ea <twi_onSlaveTransmit>
    6276:	f0 91 eb 04 	lds	r31, 0x04EB	; 0x8004eb <twi_onSlaveTransmit+0x1>
    627a:	09 95       	icall
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
    627c:	80 91 a4 04 	lds	r24, 0x04A4	; 0x8004a4 <twi_txBufferLength>
    6280:	81 11       	cpse	r24, r1
    6282:	05 c0       	rjmp	.+10     	; 0x628e <__vector_24+0x1f6>
        twi_txBufferLength = 1;
    6284:	81 e0       	ldi	r24, 0x01	; 1
    6286:	80 93 a4 04 	sts	0x04A4, r24	; 0x8004a4 <twi_txBufferLength>
        twi_txBuffer[0] = 0x00;
    628a:	10 92 a6 04 	sts	0x04A6, r1	; 0x8004a6 <twi_txBuffer>
      }
      __attribute__ ((fallthrough));		  
      // transmit first byte from buffer, fall
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
    628e:	e0 91 a5 04 	lds	r30, 0x04A5	; 0x8004a5 <twi_txBufferIndex>
    6292:	81 e0       	ldi	r24, 0x01	; 1
    6294:	8e 0f       	add	r24, r30
    6296:	80 93 a5 04 	sts	0x04A5, r24	; 0x8004a5 <twi_txBufferIndex>
    629a:	f0 e0       	ldi	r31, 0x00	; 0
    629c:	ea 55       	subi	r30, 0x5A	; 90
    629e:	fb 4f       	sbci	r31, 0xFB	; 251
    62a0:	80 81       	ld	r24, Z
    62a2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    62a6:	90 91 a5 04 	lds	r25, 0x04A5	; 0x8004a5 <twi_txBufferIndex>
    62aa:	80 91 a4 04 	lds	r24, 0x04A4	; 0x8004a4 <twi_txBufferLength>
    62ae:	98 17       	cp	r25, r24
    62b0:	08 f4       	brcc	.+2      	; 0x62b4 <__vector_24+0x21c>
    62b2:	7c cf       	rjmp	.-264    	; 0x61ac <__vector_24+0x114>
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    62b4:	85 e8       	ldi	r24, 0x85	; 133
    62b6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    62ba:	0a c0       	rjmp	.+20     	; 0x62d0 <__vector_24+0x238>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    62bc:	85 ec       	ldi	r24, 0xC5	; 197
    62be:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
    62c2:	10 92 f5 04 	sts	0x04F5, r1	; 0x8004f5 <twi_state>
      break;
    62c6:	04 c0       	rjmp	.+8      	; 0x62d0 <__vector_24+0x238>

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
    62c8:	10 92 82 04 	sts	0x0482, r1	; 0x800482 <twi_error>
      twi_stop();
    62cc:	0e 94 14 30 	call	0x6028	; 0x6028 <twi_stop>
      break;
  }
}
    62d0:	ff 91       	pop	r31
    62d2:	ef 91       	pop	r30
    62d4:	bf 91       	pop	r27
    62d6:	af 91       	pop	r26
    62d8:	9f 91       	pop	r25
    62da:	8f 91       	pop	r24
    62dc:	7f 91       	pop	r23
    62de:	6f 91       	pop	r22
    62e0:	5f 91       	pop	r21
    62e2:	4f 91       	pop	r20
    62e4:	3f 91       	pop	r19
    62e6:	2f 91       	pop	r18
    62e8:	0f 90       	pop	r0
    62ea:	0f be       	out	0x3f, r0	; 63
    62ec:	0f 90       	pop	r0
    62ee:	1f 90       	pop	r1
    62f0:	18 95       	reti

000062f2 <__cmpsf2>:
    62f2:	0e 94 3d 16 	call	0x2c7a	; 0x2c7a <__fp_cmp>
    62f6:	08 f4       	brcc	.+2      	; 0x62fa <__cmpsf2+0x8>
    62f8:	81 e0       	ldi	r24, 0x01	; 1
    62fa:	08 95       	ret

000062fc <__mulsf3>:
    62fc:	0e 94 91 31 	call	0x6322	; 0x6322 <__mulsf3x>
    6300:	0c 94 fe 15 	jmp	0x2bfc	; 0x2bfc <__fp_round>
    6304:	0e 94 f0 15 	call	0x2be0	; 0x2be0 <__fp_pscA>
    6308:	38 f0       	brcs	.+14     	; 0x6318 <__mulsf3+0x1c>
    630a:	0e 94 f7 15 	call	0x2bee	; 0x2bee <__fp_pscB>
    630e:	20 f0       	brcs	.+8      	; 0x6318 <__mulsf3+0x1c>
    6310:	95 23       	and	r25, r21
    6312:	11 f0       	breq	.+4      	; 0x6318 <__mulsf3+0x1c>
    6314:	0c 94 e7 15 	jmp	0x2bce	; 0x2bce <__fp_inf>
    6318:	0c 94 ed 15 	jmp	0x2bda	; 0x2bda <__fp_nan>
    631c:	11 24       	eor	r1, r1
    631e:	0c 94 32 16 	jmp	0x2c64	; 0x2c64 <__fp_szero>

00006322 <__mulsf3x>:
    6322:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__fp_split3>
    6326:	70 f3       	brcs	.-36     	; 0x6304 <__mulsf3+0x8>

00006328 <__mulsf3_pse>:
    6328:	95 9f       	mul	r25, r21
    632a:	c1 f3       	breq	.-16     	; 0x631c <__mulsf3+0x20>
    632c:	95 0f       	add	r25, r21
    632e:	50 e0       	ldi	r21, 0x00	; 0
    6330:	55 1f       	adc	r21, r21
    6332:	62 9f       	mul	r22, r18
    6334:	f0 01       	movw	r30, r0
    6336:	72 9f       	mul	r23, r18
    6338:	bb 27       	eor	r27, r27
    633a:	f0 0d       	add	r31, r0
    633c:	b1 1d       	adc	r27, r1
    633e:	63 9f       	mul	r22, r19
    6340:	aa 27       	eor	r26, r26
    6342:	f0 0d       	add	r31, r0
    6344:	b1 1d       	adc	r27, r1
    6346:	aa 1f       	adc	r26, r26
    6348:	64 9f       	mul	r22, r20
    634a:	66 27       	eor	r22, r22
    634c:	b0 0d       	add	r27, r0
    634e:	a1 1d       	adc	r26, r1
    6350:	66 1f       	adc	r22, r22
    6352:	82 9f       	mul	r24, r18
    6354:	22 27       	eor	r18, r18
    6356:	b0 0d       	add	r27, r0
    6358:	a1 1d       	adc	r26, r1
    635a:	62 1f       	adc	r22, r18
    635c:	73 9f       	mul	r23, r19
    635e:	b0 0d       	add	r27, r0
    6360:	a1 1d       	adc	r26, r1
    6362:	62 1f       	adc	r22, r18
    6364:	83 9f       	mul	r24, r19
    6366:	a0 0d       	add	r26, r0
    6368:	61 1d       	adc	r22, r1
    636a:	22 1f       	adc	r18, r18
    636c:	74 9f       	mul	r23, r20
    636e:	33 27       	eor	r19, r19
    6370:	a0 0d       	add	r26, r0
    6372:	61 1d       	adc	r22, r1
    6374:	23 1f       	adc	r18, r19
    6376:	84 9f       	mul	r24, r20
    6378:	60 0d       	add	r22, r0
    637a:	21 1d       	adc	r18, r1
    637c:	82 2f       	mov	r24, r18
    637e:	76 2f       	mov	r23, r22
    6380:	6a 2f       	mov	r22, r26
    6382:	11 24       	eor	r1, r1
    6384:	9f 57       	subi	r25, 0x7F	; 127
    6386:	50 40       	sbci	r21, 0x00	; 0
    6388:	9a f0       	brmi	.+38     	; 0x63b0 <__mulsf3_pse+0x88>
    638a:	f1 f0       	breq	.+60     	; 0x63c8 <__mulsf3_pse+0xa0>
    638c:	88 23       	and	r24, r24
    638e:	4a f0       	brmi	.+18     	; 0x63a2 <__mulsf3_pse+0x7a>
    6390:	ee 0f       	add	r30, r30
    6392:	ff 1f       	adc	r31, r31
    6394:	bb 1f       	adc	r27, r27
    6396:	66 1f       	adc	r22, r22
    6398:	77 1f       	adc	r23, r23
    639a:	88 1f       	adc	r24, r24
    639c:	91 50       	subi	r25, 0x01	; 1
    639e:	50 40       	sbci	r21, 0x00	; 0
    63a0:	a9 f7       	brne	.-22     	; 0x638c <__mulsf3_pse+0x64>
    63a2:	9e 3f       	cpi	r25, 0xFE	; 254
    63a4:	51 05       	cpc	r21, r1
    63a6:	80 f0       	brcs	.+32     	; 0x63c8 <__mulsf3_pse+0xa0>
    63a8:	0c 94 e7 15 	jmp	0x2bce	; 0x2bce <__fp_inf>
    63ac:	0c 94 32 16 	jmp	0x2c64	; 0x2c64 <__fp_szero>
    63b0:	5f 3f       	cpi	r21, 0xFF	; 255
    63b2:	e4 f3       	brlt	.-8      	; 0x63ac <__mulsf3_pse+0x84>
    63b4:	98 3e       	cpi	r25, 0xE8	; 232
    63b6:	d4 f3       	brlt	.-12     	; 0x63ac <__mulsf3_pse+0x84>
    63b8:	86 95       	lsr	r24
    63ba:	77 95       	ror	r23
    63bc:	67 95       	ror	r22
    63be:	b7 95       	ror	r27
    63c0:	f7 95       	ror	r31
    63c2:	e7 95       	ror	r30
    63c4:	9f 5f       	subi	r25, 0xFF	; 255
    63c6:	c1 f7       	brne	.-16     	; 0x63b8 <__mulsf3_pse+0x90>
    63c8:	fe 2b       	or	r31, r30
    63ca:	88 0f       	add	r24, r24
    63cc:	91 1d       	adc	r25, r1
    63ce:	96 95       	lsr	r25
    63d0:	87 95       	ror	r24
    63d2:	97 f9       	bld	r25, 7
    63d4:	08 95       	ret

000063d6 <__unordsf2>:
    63d6:	0e 94 3d 16 	call	0x2c7a	; 0x2c7a <__fp_cmp>
    63da:	88 0b       	sbc	r24, r24
    63dc:	99 0b       	sbc	r25, r25
    63de:	08 95       	ret

000063e0 <__mulsi3>:
    63e0:	db 01       	movw	r26, r22
    63e2:	8f 93       	push	r24
    63e4:	9f 93       	push	r25
    63e6:	0e 94 5b 32 	call	0x64b6	; 0x64b6 <__muluhisi3>
    63ea:	bf 91       	pop	r27
    63ec:	af 91       	pop	r26
    63ee:	a2 9f       	mul	r26, r18
    63f0:	80 0d       	add	r24, r0
    63f2:	91 1d       	adc	r25, r1
    63f4:	a3 9f       	mul	r26, r19
    63f6:	90 0d       	add	r25, r0
    63f8:	b2 9f       	mul	r27, r18
    63fa:	90 0d       	add	r25, r0
    63fc:	11 24       	eor	r1, r1
    63fe:	08 95       	ret

00006400 <__divmodhi4>:
    6400:	97 fb       	bst	r25, 7
    6402:	07 2e       	mov	r0, r23
    6404:	16 f4       	brtc	.+4      	; 0x640a <__divmodhi4+0xa>
    6406:	00 94       	com	r0
    6408:	07 d0       	rcall	.+14     	; 0x6418 <__divmodhi4_neg1>
    640a:	77 fd       	sbrc	r23, 7
    640c:	09 d0       	rcall	.+18     	; 0x6420 <__divmodhi4_neg2>
    640e:	0e 94 66 32 	call	0x64cc	; 0x64cc <__udivmodhi4>
    6412:	07 fc       	sbrc	r0, 7
    6414:	05 d0       	rcall	.+10     	; 0x6420 <__divmodhi4_neg2>
    6416:	3e f4       	brtc	.+14     	; 0x6426 <__divmodhi4_exit>

00006418 <__divmodhi4_neg1>:
    6418:	90 95       	com	r25
    641a:	81 95       	neg	r24
    641c:	9f 4f       	sbci	r25, 0xFF	; 255
    641e:	08 95       	ret

00006420 <__divmodhi4_neg2>:
    6420:	70 95       	com	r23
    6422:	61 95       	neg	r22
    6424:	7f 4f       	sbci	r23, 0xFF	; 255

00006426 <__divmodhi4_exit>:
    6426:	08 95       	ret

00006428 <__udivmodsi4>:
    6428:	a1 e2       	ldi	r26, 0x21	; 33
    642a:	1a 2e       	mov	r1, r26
    642c:	aa 1b       	sub	r26, r26
    642e:	bb 1b       	sub	r27, r27
    6430:	fd 01       	movw	r30, r26
    6432:	0d c0       	rjmp	.+26     	; 0x644e <__udivmodsi4_ep>

00006434 <__udivmodsi4_loop>:
    6434:	aa 1f       	adc	r26, r26
    6436:	bb 1f       	adc	r27, r27
    6438:	ee 1f       	adc	r30, r30
    643a:	ff 1f       	adc	r31, r31
    643c:	a2 17       	cp	r26, r18
    643e:	b3 07       	cpc	r27, r19
    6440:	e4 07       	cpc	r30, r20
    6442:	f5 07       	cpc	r31, r21
    6444:	20 f0       	brcs	.+8      	; 0x644e <__udivmodsi4_ep>
    6446:	a2 1b       	sub	r26, r18
    6448:	b3 0b       	sbc	r27, r19
    644a:	e4 0b       	sbc	r30, r20
    644c:	f5 0b       	sbc	r31, r21

0000644e <__udivmodsi4_ep>:
    644e:	66 1f       	adc	r22, r22
    6450:	77 1f       	adc	r23, r23
    6452:	88 1f       	adc	r24, r24
    6454:	99 1f       	adc	r25, r25
    6456:	1a 94       	dec	r1
    6458:	69 f7       	brne	.-38     	; 0x6434 <__udivmodsi4_loop>
    645a:	60 95       	com	r22
    645c:	70 95       	com	r23
    645e:	80 95       	com	r24
    6460:	90 95       	com	r25
    6462:	9b 01       	movw	r18, r22
    6464:	ac 01       	movw	r20, r24
    6466:	bd 01       	movw	r22, r26
    6468:	cf 01       	movw	r24, r30
    646a:	08 95       	ret

0000646c <__divmodsi4>:
    646c:	05 2e       	mov	r0, r21
    646e:	97 fb       	bst	r25, 7
    6470:	1e f4       	brtc	.+6      	; 0x6478 <__divmodsi4+0xc>
    6472:	00 94       	com	r0
    6474:	0e 94 4d 32 	call	0x649a	; 0x649a <__negsi2>
    6478:	57 fd       	sbrc	r21, 7
    647a:	07 d0       	rcall	.+14     	; 0x648a <__divmodsi4_neg2>
    647c:	0e 94 14 32 	call	0x6428	; 0x6428 <__udivmodsi4>
    6480:	07 fc       	sbrc	r0, 7
    6482:	03 d0       	rcall	.+6      	; 0x648a <__divmodsi4_neg2>
    6484:	4e f4       	brtc	.+18     	; 0x6498 <__divmodsi4_exit>
    6486:	0c 94 4d 32 	jmp	0x649a	; 0x649a <__negsi2>

0000648a <__divmodsi4_neg2>:
    648a:	50 95       	com	r21
    648c:	40 95       	com	r20
    648e:	30 95       	com	r19
    6490:	21 95       	neg	r18
    6492:	3f 4f       	sbci	r19, 0xFF	; 255
    6494:	4f 4f       	sbci	r20, 0xFF	; 255
    6496:	5f 4f       	sbci	r21, 0xFF	; 255

00006498 <__divmodsi4_exit>:
    6498:	08 95       	ret

0000649a <__negsi2>:
    649a:	90 95       	com	r25
    649c:	80 95       	com	r24
    649e:	70 95       	com	r23
    64a0:	61 95       	neg	r22
    64a2:	7f 4f       	sbci	r23, 0xFF	; 255
    64a4:	8f 4f       	sbci	r24, 0xFF	; 255
    64a6:	9f 4f       	sbci	r25, 0xFF	; 255
    64a8:	08 95       	ret

000064aa <__tablejump2__>:
    64aa:	ee 0f       	add	r30, r30
    64ac:	ff 1f       	adc	r31, r31
    64ae:	05 90       	lpm	r0, Z+
    64b0:	f4 91       	lpm	r31, Z
    64b2:	e0 2d       	mov	r30, r0
    64b4:	09 94       	ijmp

000064b6 <__muluhisi3>:
    64b6:	0e 94 7a 32 	call	0x64f4	; 0x64f4 <__umulhisi3>
    64ba:	a5 9f       	mul	r26, r21
    64bc:	90 0d       	add	r25, r0
    64be:	b4 9f       	mul	r27, r20
    64c0:	90 0d       	add	r25, r0
    64c2:	a4 9f       	mul	r26, r20
    64c4:	80 0d       	add	r24, r0
    64c6:	91 1d       	adc	r25, r1
    64c8:	11 24       	eor	r1, r1
    64ca:	08 95       	ret

000064cc <__udivmodhi4>:
    64cc:	aa 1b       	sub	r26, r26
    64ce:	bb 1b       	sub	r27, r27
    64d0:	51 e1       	ldi	r21, 0x11	; 17
    64d2:	07 c0       	rjmp	.+14     	; 0x64e2 <__udivmodhi4_ep>

000064d4 <__udivmodhi4_loop>:
    64d4:	aa 1f       	adc	r26, r26
    64d6:	bb 1f       	adc	r27, r27
    64d8:	a6 17       	cp	r26, r22
    64da:	b7 07       	cpc	r27, r23
    64dc:	10 f0       	brcs	.+4      	; 0x64e2 <__udivmodhi4_ep>
    64de:	a6 1b       	sub	r26, r22
    64e0:	b7 0b       	sbc	r27, r23

000064e2 <__udivmodhi4_ep>:
    64e2:	88 1f       	adc	r24, r24
    64e4:	99 1f       	adc	r25, r25
    64e6:	5a 95       	dec	r21
    64e8:	a9 f7       	brne	.-22     	; 0x64d4 <__udivmodhi4_loop>
    64ea:	80 95       	com	r24
    64ec:	90 95       	com	r25
    64ee:	bc 01       	movw	r22, r24
    64f0:	cd 01       	movw	r24, r26
    64f2:	08 95       	ret

000064f4 <__umulhisi3>:
    64f4:	a2 9f       	mul	r26, r18
    64f6:	b0 01       	movw	r22, r0
    64f8:	b3 9f       	mul	r27, r19
    64fa:	c0 01       	movw	r24, r0
    64fc:	a3 9f       	mul	r26, r19
    64fe:	70 0d       	add	r23, r0
    6500:	81 1d       	adc	r24, r1
    6502:	11 24       	eor	r1, r1
    6504:	91 1d       	adc	r25, r1
    6506:	b2 9f       	mul	r27, r18
    6508:	70 0d       	add	r23, r0
    650a:	81 1d       	adc	r24, r1
    650c:	11 24       	eor	r1, r1
    650e:	91 1d       	adc	r25, r1
    6510:	08 95       	ret

00006512 <dtostrf>:
    6512:	ef 92       	push	r14
    6514:	0f 93       	push	r16
    6516:	1f 93       	push	r17
    6518:	cf 93       	push	r28
    651a:	df 93       	push	r29
    651c:	e8 01       	movw	r28, r16
    651e:	47 fd       	sbrc	r20, 7
    6520:	02 c0       	rjmp	.+4      	; 0x6526 <dtostrf+0x14>
    6522:	34 e0       	ldi	r19, 0x04	; 4
    6524:	01 c0       	rjmp	.+2      	; 0x6528 <dtostrf+0x16>
    6526:	34 e1       	ldi	r19, 0x14	; 20
    6528:	04 2e       	mov	r0, r20
    652a:	00 0c       	add	r0, r0
    652c:	55 0b       	sbc	r21, r21
    652e:	57 ff       	sbrs	r21, 7
    6530:	03 c0       	rjmp	.+6      	; 0x6538 <dtostrf+0x26>
    6532:	51 95       	neg	r21
    6534:	41 95       	neg	r20
    6536:	51 09       	sbc	r21, r1
    6538:	e3 2e       	mov	r14, r19
    653a:	02 2f       	mov	r16, r18
    653c:	24 2f       	mov	r18, r20
    653e:	ae 01       	movw	r20, r28
    6540:	0e 94 a3 36 	call	0x6d46	; 0x6d46 <dtoa_prf>
    6544:	ce 01       	movw	r24, r28
    6546:	df 91       	pop	r29
    6548:	cf 91       	pop	r28
    654a:	1f 91       	pop	r17
    654c:	0f 91       	pop	r16
    654e:	ef 90       	pop	r14
    6550:	08 95       	ret

00006552 <malloc>:
    6552:	0f 93       	push	r16
    6554:	1f 93       	push	r17
    6556:	cf 93       	push	r28
    6558:	df 93       	push	r29
    655a:	82 30       	cpi	r24, 0x02	; 2
    655c:	91 05       	cpc	r25, r1
    655e:	10 f4       	brcc	.+4      	; 0x6564 <malloc+0x12>
    6560:	82 e0       	ldi	r24, 0x02	; 2
    6562:	90 e0       	ldi	r25, 0x00	; 0
    6564:	e0 91 f8 04 	lds	r30, 0x04F8	; 0x8004f8 <__flp>
    6568:	f0 91 f9 04 	lds	r31, 0x04F9	; 0x8004f9 <__flp+0x1>
    656c:	20 e0       	ldi	r18, 0x00	; 0
    656e:	30 e0       	ldi	r19, 0x00	; 0
    6570:	a0 e0       	ldi	r26, 0x00	; 0
    6572:	b0 e0       	ldi	r27, 0x00	; 0
    6574:	30 97       	sbiw	r30, 0x00	; 0
    6576:	19 f1       	breq	.+70     	; 0x65be <malloc+0x6c>
    6578:	40 81       	ld	r20, Z
    657a:	51 81       	ldd	r21, Z+1	; 0x01
    657c:	02 81       	ldd	r16, Z+2	; 0x02
    657e:	13 81       	ldd	r17, Z+3	; 0x03
    6580:	48 17       	cp	r20, r24
    6582:	59 07       	cpc	r21, r25
    6584:	c8 f0       	brcs	.+50     	; 0x65b8 <malloc+0x66>
    6586:	84 17       	cp	r24, r20
    6588:	95 07       	cpc	r25, r21
    658a:	69 f4       	brne	.+26     	; 0x65a6 <malloc+0x54>
    658c:	10 97       	sbiw	r26, 0x00	; 0
    658e:	31 f0       	breq	.+12     	; 0x659c <malloc+0x4a>
    6590:	12 96       	adiw	r26, 0x02	; 2
    6592:	0c 93       	st	X, r16
    6594:	12 97       	sbiw	r26, 0x02	; 2
    6596:	13 96       	adiw	r26, 0x03	; 3
    6598:	1c 93       	st	X, r17
    659a:	27 c0       	rjmp	.+78     	; 0x65ea <malloc+0x98>
    659c:	00 93 f8 04 	sts	0x04F8, r16	; 0x8004f8 <__flp>
    65a0:	10 93 f9 04 	sts	0x04F9, r17	; 0x8004f9 <__flp+0x1>
    65a4:	22 c0       	rjmp	.+68     	; 0x65ea <malloc+0x98>
    65a6:	21 15       	cp	r18, r1
    65a8:	31 05       	cpc	r19, r1
    65aa:	19 f0       	breq	.+6      	; 0x65b2 <malloc+0x60>
    65ac:	42 17       	cp	r20, r18
    65ae:	53 07       	cpc	r21, r19
    65b0:	18 f4       	brcc	.+6      	; 0x65b8 <malloc+0x66>
    65b2:	9a 01       	movw	r18, r20
    65b4:	bd 01       	movw	r22, r26
    65b6:	ef 01       	movw	r28, r30
    65b8:	df 01       	movw	r26, r30
    65ba:	f8 01       	movw	r30, r16
    65bc:	db cf       	rjmp	.-74     	; 0x6574 <malloc+0x22>
    65be:	21 15       	cp	r18, r1
    65c0:	31 05       	cpc	r19, r1
    65c2:	f9 f0       	breq	.+62     	; 0x6602 <malloc+0xb0>
    65c4:	28 1b       	sub	r18, r24
    65c6:	39 0b       	sbc	r19, r25
    65c8:	24 30       	cpi	r18, 0x04	; 4
    65ca:	31 05       	cpc	r19, r1
    65cc:	80 f4       	brcc	.+32     	; 0x65ee <malloc+0x9c>
    65ce:	8a 81       	ldd	r24, Y+2	; 0x02
    65d0:	9b 81       	ldd	r25, Y+3	; 0x03
    65d2:	61 15       	cp	r22, r1
    65d4:	71 05       	cpc	r23, r1
    65d6:	21 f0       	breq	.+8      	; 0x65e0 <malloc+0x8e>
    65d8:	fb 01       	movw	r30, r22
    65da:	93 83       	std	Z+3, r25	; 0x03
    65dc:	82 83       	std	Z+2, r24	; 0x02
    65de:	04 c0       	rjmp	.+8      	; 0x65e8 <malloc+0x96>
    65e0:	90 93 f9 04 	sts	0x04F9, r25	; 0x8004f9 <__flp+0x1>
    65e4:	80 93 f8 04 	sts	0x04F8, r24	; 0x8004f8 <__flp>
    65e8:	fe 01       	movw	r30, r28
    65ea:	32 96       	adiw	r30, 0x02	; 2
    65ec:	44 c0       	rjmp	.+136    	; 0x6676 <malloc+0x124>
    65ee:	fe 01       	movw	r30, r28
    65f0:	e2 0f       	add	r30, r18
    65f2:	f3 1f       	adc	r31, r19
    65f4:	81 93       	st	Z+, r24
    65f6:	91 93       	st	Z+, r25
    65f8:	22 50       	subi	r18, 0x02	; 2
    65fa:	31 09       	sbc	r19, r1
    65fc:	39 83       	std	Y+1, r19	; 0x01
    65fe:	28 83       	st	Y, r18
    6600:	3a c0       	rjmp	.+116    	; 0x6676 <malloc+0x124>
    6602:	20 91 f6 04 	lds	r18, 0x04F6	; 0x8004f6 <__brkval>
    6606:	30 91 f7 04 	lds	r19, 0x04F7	; 0x8004f7 <__brkval+0x1>
    660a:	23 2b       	or	r18, r19
    660c:	41 f4       	brne	.+16     	; 0x661e <malloc+0xcc>
    660e:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    6612:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    6616:	30 93 f7 04 	sts	0x04F7, r19	; 0x8004f7 <__brkval+0x1>
    661a:	20 93 f6 04 	sts	0x04F6, r18	; 0x8004f6 <__brkval>
    661e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    6622:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    6626:	21 15       	cp	r18, r1
    6628:	31 05       	cpc	r19, r1
    662a:	41 f4       	brne	.+16     	; 0x663c <malloc+0xea>
    662c:	2d b7       	in	r18, 0x3d	; 61
    662e:	3e b7       	in	r19, 0x3e	; 62
    6630:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    6634:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    6638:	24 1b       	sub	r18, r20
    663a:	35 0b       	sbc	r19, r21
    663c:	e0 91 f6 04 	lds	r30, 0x04F6	; 0x8004f6 <__brkval>
    6640:	f0 91 f7 04 	lds	r31, 0x04F7	; 0x8004f7 <__brkval+0x1>
    6644:	e2 17       	cp	r30, r18
    6646:	f3 07       	cpc	r31, r19
    6648:	a0 f4       	brcc	.+40     	; 0x6672 <malloc+0x120>
    664a:	2e 1b       	sub	r18, r30
    664c:	3f 0b       	sbc	r19, r31
    664e:	28 17       	cp	r18, r24
    6650:	39 07       	cpc	r19, r25
    6652:	78 f0       	brcs	.+30     	; 0x6672 <malloc+0x120>
    6654:	ac 01       	movw	r20, r24
    6656:	4e 5f       	subi	r20, 0xFE	; 254
    6658:	5f 4f       	sbci	r21, 0xFF	; 255
    665a:	24 17       	cp	r18, r20
    665c:	35 07       	cpc	r19, r21
    665e:	48 f0       	brcs	.+18     	; 0x6672 <malloc+0x120>
    6660:	4e 0f       	add	r20, r30
    6662:	5f 1f       	adc	r21, r31
    6664:	50 93 f7 04 	sts	0x04F7, r21	; 0x8004f7 <__brkval+0x1>
    6668:	40 93 f6 04 	sts	0x04F6, r20	; 0x8004f6 <__brkval>
    666c:	81 93       	st	Z+, r24
    666e:	91 93       	st	Z+, r25
    6670:	02 c0       	rjmp	.+4      	; 0x6676 <malloc+0x124>
    6672:	e0 e0       	ldi	r30, 0x00	; 0
    6674:	f0 e0       	ldi	r31, 0x00	; 0
    6676:	cf 01       	movw	r24, r30
    6678:	df 91       	pop	r29
    667a:	cf 91       	pop	r28
    667c:	1f 91       	pop	r17
    667e:	0f 91       	pop	r16
    6680:	08 95       	ret

00006682 <free>:
    6682:	cf 93       	push	r28
    6684:	df 93       	push	r29
    6686:	00 97       	sbiw	r24, 0x00	; 0
    6688:	09 f4       	brne	.+2      	; 0x668c <free+0xa>
    668a:	81 c0       	rjmp	.+258    	; 0x678e <free+0x10c>
    668c:	fc 01       	movw	r30, r24
    668e:	32 97       	sbiw	r30, 0x02	; 2
    6690:	13 82       	std	Z+3, r1	; 0x03
    6692:	12 82       	std	Z+2, r1	; 0x02
    6694:	a0 91 f8 04 	lds	r26, 0x04F8	; 0x8004f8 <__flp>
    6698:	b0 91 f9 04 	lds	r27, 0x04F9	; 0x8004f9 <__flp+0x1>
    669c:	10 97       	sbiw	r26, 0x00	; 0
    669e:	81 f4       	brne	.+32     	; 0x66c0 <free+0x3e>
    66a0:	20 81       	ld	r18, Z
    66a2:	31 81       	ldd	r19, Z+1	; 0x01
    66a4:	82 0f       	add	r24, r18
    66a6:	93 1f       	adc	r25, r19
    66a8:	20 91 f6 04 	lds	r18, 0x04F6	; 0x8004f6 <__brkval>
    66ac:	30 91 f7 04 	lds	r19, 0x04F7	; 0x8004f7 <__brkval+0x1>
    66b0:	28 17       	cp	r18, r24
    66b2:	39 07       	cpc	r19, r25
    66b4:	51 f5       	brne	.+84     	; 0x670a <free+0x88>
    66b6:	f0 93 f7 04 	sts	0x04F7, r31	; 0x8004f7 <__brkval+0x1>
    66ba:	e0 93 f6 04 	sts	0x04F6, r30	; 0x8004f6 <__brkval>
    66be:	67 c0       	rjmp	.+206    	; 0x678e <free+0x10c>
    66c0:	ed 01       	movw	r28, r26
    66c2:	20 e0       	ldi	r18, 0x00	; 0
    66c4:	30 e0       	ldi	r19, 0x00	; 0
    66c6:	ce 17       	cp	r28, r30
    66c8:	df 07       	cpc	r29, r31
    66ca:	40 f4       	brcc	.+16     	; 0x66dc <free+0x5a>
    66cc:	4a 81       	ldd	r20, Y+2	; 0x02
    66ce:	5b 81       	ldd	r21, Y+3	; 0x03
    66d0:	9e 01       	movw	r18, r28
    66d2:	41 15       	cp	r20, r1
    66d4:	51 05       	cpc	r21, r1
    66d6:	f1 f0       	breq	.+60     	; 0x6714 <free+0x92>
    66d8:	ea 01       	movw	r28, r20
    66da:	f5 cf       	rjmp	.-22     	; 0x66c6 <free+0x44>
    66dc:	d3 83       	std	Z+3, r29	; 0x03
    66de:	c2 83       	std	Z+2, r28	; 0x02
    66e0:	40 81       	ld	r20, Z
    66e2:	51 81       	ldd	r21, Z+1	; 0x01
    66e4:	84 0f       	add	r24, r20
    66e6:	95 1f       	adc	r25, r21
    66e8:	c8 17       	cp	r28, r24
    66ea:	d9 07       	cpc	r29, r25
    66ec:	59 f4       	brne	.+22     	; 0x6704 <free+0x82>
    66ee:	88 81       	ld	r24, Y
    66f0:	99 81       	ldd	r25, Y+1	; 0x01
    66f2:	84 0f       	add	r24, r20
    66f4:	95 1f       	adc	r25, r21
    66f6:	02 96       	adiw	r24, 0x02	; 2
    66f8:	91 83       	std	Z+1, r25	; 0x01
    66fa:	80 83       	st	Z, r24
    66fc:	8a 81       	ldd	r24, Y+2	; 0x02
    66fe:	9b 81       	ldd	r25, Y+3	; 0x03
    6700:	93 83       	std	Z+3, r25	; 0x03
    6702:	82 83       	std	Z+2, r24	; 0x02
    6704:	21 15       	cp	r18, r1
    6706:	31 05       	cpc	r19, r1
    6708:	29 f4       	brne	.+10     	; 0x6714 <free+0x92>
    670a:	f0 93 f9 04 	sts	0x04F9, r31	; 0x8004f9 <__flp+0x1>
    670e:	e0 93 f8 04 	sts	0x04F8, r30	; 0x8004f8 <__flp>
    6712:	3d c0       	rjmp	.+122    	; 0x678e <free+0x10c>
    6714:	e9 01       	movw	r28, r18
    6716:	fb 83       	std	Y+3, r31	; 0x03
    6718:	ea 83       	std	Y+2, r30	; 0x02
    671a:	49 91       	ld	r20, Y+
    671c:	59 91       	ld	r21, Y+
    671e:	c4 0f       	add	r28, r20
    6720:	d5 1f       	adc	r29, r21
    6722:	ec 17       	cp	r30, r28
    6724:	fd 07       	cpc	r31, r29
    6726:	61 f4       	brne	.+24     	; 0x6740 <free+0xbe>
    6728:	80 81       	ld	r24, Z
    672a:	91 81       	ldd	r25, Z+1	; 0x01
    672c:	84 0f       	add	r24, r20
    672e:	95 1f       	adc	r25, r21
    6730:	02 96       	adiw	r24, 0x02	; 2
    6732:	e9 01       	movw	r28, r18
    6734:	99 83       	std	Y+1, r25	; 0x01
    6736:	88 83       	st	Y, r24
    6738:	82 81       	ldd	r24, Z+2	; 0x02
    673a:	93 81       	ldd	r25, Z+3	; 0x03
    673c:	9b 83       	std	Y+3, r25	; 0x03
    673e:	8a 83       	std	Y+2, r24	; 0x02
    6740:	e0 e0       	ldi	r30, 0x00	; 0
    6742:	f0 e0       	ldi	r31, 0x00	; 0
    6744:	12 96       	adiw	r26, 0x02	; 2
    6746:	8d 91       	ld	r24, X+
    6748:	9c 91       	ld	r25, X
    674a:	13 97       	sbiw	r26, 0x03	; 3
    674c:	00 97       	sbiw	r24, 0x00	; 0
    674e:	19 f0       	breq	.+6      	; 0x6756 <free+0xd4>
    6750:	fd 01       	movw	r30, r26
    6752:	dc 01       	movw	r26, r24
    6754:	f7 cf       	rjmp	.-18     	; 0x6744 <free+0xc2>
    6756:	8d 91       	ld	r24, X+
    6758:	9c 91       	ld	r25, X
    675a:	11 97       	sbiw	r26, 0x01	; 1
    675c:	9d 01       	movw	r18, r26
    675e:	2e 5f       	subi	r18, 0xFE	; 254
    6760:	3f 4f       	sbci	r19, 0xFF	; 255
    6762:	82 0f       	add	r24, r18
    6764:	93 1f       	adc	r25, r19
    6766:	20 91 f6 04 	lds	r18, 0x04F6	; 0x8004f6 <__brkval>
    676a:	30 91 f7 04 	lds	r19, 0x04F7	; 0x8004f7 <__brkval+0x1>
    676e:	28 17       	cp	r18, r24
    6770:	39 07       	cpc	r19, r25
    6772:	69 f4       	brne	.+26     	; 0x678e <free+0x10c>
    6774:	30 97       	sbiw	r30, 0x00	; 0
    6776:	29 f4       	brne	.+10     	; 0x6782 <free+0x100>
    6778:	10 92 f9 04 	sts	0x04F9, r1	; 0x8004f9 <__flp+0x1>
    677c:	10 92 f8 04 	sts	0x04F8, r1	; 0x8004f8 <__flp>
    6780:	02 c0       	rjmp	.+4      	; 0x6786 <free+0x104>
    6782:	13 82       	std	Z+3, r1	; 0x03
    6784:	12 82       	std	Z+2, r1	; 0x02
    6786:	b0 93 f7 04 	sts	0x04F7, r27	; 0x8004f7 <__brkval+0x1>
    678a:	a0 93 f6 04 	sts	0x04F6, r26	; 0x8004f6 <__brkval>
    678e:	df 91       	pop	r29
    6790:	cf 91       	pop	r28
    6792:	08 95       	ret

00006794 <realloc>:
    6794:	a0 e0       	ldi	r26, 0x00	; 0
    6796:	b0 e0       	ldi	r27, 0x00	; 0
    6798:	e0 ed       	ldi	r30, 0xD0	; 208
    679a:	f3 e3       	ldi	r31, 0x33	; 51
    679c:	0c 94 89 39 	jmp	0x7312	; 0x7312 <__prologue_saves__+0x8>
    67a0:	ec 01       	movw	r28, r24
    67a2:	00 97       	sbiw	r24, 0x00	; 0
    67a4:	21 f4       	brne	.+8      	; 0x67ae <realloc+0x1a>
    67a6:	cb 01       	movw	r24, r22
    67a8:	0e 94 a9 32 	call	0x6552	; 0x6552 <malloc>
    67ac:	b4 c0       	rjmp	.+360    	; 0x6916 <realloc+0x182>
    67ae:	fc 01       	movw	r30, r24
    67b0:	e6 0f       	add	r30, r22
    67b2:	f7 1f       	adc	r31, r23
    67b4:	9c 01       	movw	r18, r24
    67b6:	22 50       	subi	r18, 0x02	; 2
    67b8:	31 09       	sbc	r19, r1
    67ba:	e2 17       	cp	r30, r18
    67bc:	f3 07       	cpc	r31, r19
    67be:	08 f4       	brcc	.+2      	; 0x67c2 <realloc+0x2e>
    67c0:	a8 c0       	rjmp	.+336    	; 0x6912 <realloc+0x17e>
    67c2:	d9 01       	movw	r26, r18
    67c4:	0d 91       	ld	r16, X+
    67c6:	1c 91       	ld	r17, X
    67c8:	11 97       	sbiw	r26, 0x01	; 1
    67ca:	06 17       	cp	r16, r22
    67cc:	17 07       	cpc	r17, r23
    67ce:	b0 f0       	brcs	.+44     	; 0x67fc <realloc+0x68>
    67d0:	05 30       	cpi	r16, 0x05	; 5
    67d2:	11 05       	cpc	r17, r1
    67d4:	08 f4       	brcc	.+2      	; 0x67d8 <realloc+0x44>
    67d6:	9b c0       	rjmp	.+310    	; 0x690e <realloc+0x17a>
    67d8:	c8 01       	movw	r24, r16
    67da:	04 97       	sbiw	r24, 0x04	; 4
    67dc:	86 17       	cp	r24, r22
    67de:	97 07       	cpc	r25, r23
    67e0:	08 f4       	brcc	.+2      	; 0x67e4 <realloc+0x50>
    67e2:	95 c0       	rjmp	.+298    	; 0x690e <realloc+0x17a>
    67e4:	02 50       	subi	r16, 0x02	; 2
    67e6:	11 09       	sbc	r17, r1
    67e8:	06 1b       	sub	r16, r22
    67ea:	17 0b       	sbc	r17, r23
    67ec:	01 93       	st	Z+, r16
    67ee:	11 93       	st	Z+, r17
    67f0:	6d 93       	st	X+, r22
    67f2:	7c 93       	st	X, r23
    67f4:	cf 01       	movw	r24, r30
    67f6:	0e 94 41 33 	call	0x6682	; 0x6682 <free>
    67fa:	89 c0       	rjmp	.+274    	; 0x690e <realloc+0x17a>
    67fc:	5b 01       	movw	r10, r22
    67fe:	a0 1a       	sub	r10, r16
    6800:	b1 0a       	sbc	r11, r17
    6802:	4c 01       	movw	r8, r24
    6804:	80 0e       	add	r8, r16
    6806:	91 1e       	adc	r9, r17
    6808:	a0 91 f8 04 	lds	r26, 0x04F8	; 0x8004f8 <__flp>
    680c:	b0 91 f9 04 	lds	r27, 0x04F9	; 0x8004f9 <__flp+0x1>
    6810:	61 2c       	mov	r6, r1
    6812:	71 2c       	mov	r7, r1
    6814:	e1 2c       	mov	r14, r1
    6816:	f1 2c       	mov	r15, r1
    6818:	10 97       	sbiw	r26, 0x00	; 0
    681a:	09 f4       	brne	.+2      	; 0x681e <realloc+0x8a>
    681c:	46 c0       	rjmp	.+140    	; 0x68aa <realloc+0x116>
    681e:	8d 91       	ld	r24, X+
    6820:	9c 91       	ld	r25, X
    6822:	11 97       	sbiw	r26, 0x01	; 1
    6824:	a8 15       	cp	r26, r8
    6826:	b9 05       	cpc	r27, r9
    6828:	b1 f5       	brne	.+108    	; 0x6896 <realloc+0x102>
    682a:	6c 01       	movw	r12, r24
    682c:	42 e0       	ldi	r20, 0x02	; 2
    682e:	c4 0e       	add	r12, r20
    6830:	d1 1c       	adc	r13, r1
    6832:	ca 14       	cp	r12, r10
    6834:	db 04       	cpc	r13, r11
    6836:	78 f1       	brcs	.+94     	; 0x6896 <realloc+0x102>
    6838:	4c 01       	movw	r8, r24
    683a:	8a 18       	sub	r8, r10
    683c:	9b 08       	sbc	r9, r11
    683e:	64 01       	movw	r12, r8
    6840:	42 e0       	ldi	r20, 0x02	; 2
    6842:	c4 0e       	add	r12, r20
    6844:	d1 1c       	adc	r13, r1
    6846:	12 96       	adiw	r26, 0x02	; 2
    6848:	bc 90       	ld	r11, X
    684a:	12 97       	sbiw	r26, 0x02	; 2
    684c:	13 96       	adiw	r26, 0x03	; 3
    684e:	ac 91       	ld	r26, X
    6850:	b5 e0       	ldi	r27, 0x05	; 5
    6852:	cb 16       	cp	r12, r27
    6854:	d1 04       	cpc	r13, r1
    6856:	40 f0       	brcs	.+16     	; 0x6868 <realloc+0xd4>
    6858:	b2 82       	std	Z+2, r11	; 0x02
    685a:	a3 83       	std	Z+3, r26	; 0x03
    685c:	91 82       	std	Z+1, r9	; 0x01
    685e:	80 82       	st	Z, r8
    6860:	d9 01       	movw	r26, r18
    6862:	6d 93       	st	X+, r22
    6864:	7c 93       	st	X, r23
    6866:	09 c0       	rjmp	.+18     	; 0x687a <realloc+0xe6>
    6868:	0e 5f       	subi	r16, 0xFE	; 254
    686a:	1f 4f       	sbci	r17, 0xFF	; 255
    686c:	80 0f       	add	r24, r16
    686e:	91 1f       	adc	r25, r17
    6870:	f9 01       	movw	r30, r18
    6872:	91 83       	std	Z+1, r25	; 0x01
    6874:	80 83       	st	Z, r24
    6876:	eb 2d       	mov	r30, r11
    6878:	fa 2f       	mov	r31, r26
    687a:	e1 14       	cp	r14, r1
    687c:	f1 04       	cpc	r15, r1
    687e:	31 f0       	breq	.+12     	; 0x688c <realloc+0xf8>
    6880:	d7 01       	movw	r26, r14
    6882:	13 96       	adiw	r26, 0x03	; 3
    6884:	fc 93       	st	X, r31
    6886:	ee 93       	st	-X, r30
    6888:	12 97       	sbiw	r26, 0x02	; 2
    688a:	41 c0       	rjmp	.+130    	; 0x690e <realloc+0x17a>
    688c:	f0 93 f9 04 	sts	0x04F9, r31	; 0x8004f9 <__flp+0x1>
    6890:	e0 93 f8 04 	sts	0x04F8, r30	; 0x8004f8 <__flp>
    6894:	3c c0       	rjmp	.+120    	; 0x690e <realloc+0x17a>
    6896:	68 16       	cp	r6, r24
    6898:	79 06       	cpc	r7, r25
    689a:	08 f4       	brcc	.+2      	; 0x689e <realloc+0x10a>
    689c:	3c 01       	movw	r6, r24
    689e:	7d 01       	movw	r14, r26
    68a0:	12 96       	adiw	r26, 0x02	; 2
    68a2:	0d 90       	ld	r0, X+
    68a4:	bc 91       	ld	r27, X
    68a6:	a0 2d       	mov	r26, r0
    68a8:	b7 cf       	rjmp	.-146    	; 0x6818 <realloc+0x84>
    68aa:	80 91 f6 04 	lds	r24, 0x04F6	; 0x8004f6 <__brkval>
    68ae:	90 91 f7 04 	lds	r25, 0x04F7	; 0x8004f7 <__brkval+0x1>
    68b2:	88 16       	cp	r8, r24
    68b4:	99 06       	cpc	r9, r25
    68b6:	e1 f4       	brne	.+56     	; 0x68f0 <realloc+0x15c>
    68b8:	66 16       	cp	r6, r22
    68ba:	77 06       	cpc	r7, r23
    68bc:	c8 f4       	brcc	.+50     	; 0x68f0 <realloc+0x15c>
    68be:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    68c2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    68c6:	00 97       	sbiw	r24, 0x00	; 0
    68c8:	41 f4       	brne	.+16     	; 0x68da <realloc+0x146>
    68ca:	8d b7       	in	r24, 0x3d	; 61
    68cc:	9e b7       	in	r25, 0x3e	; 62
    68ce:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    68d2:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    68d6:	84 1b       	sub	r24, r20
    68d8:	95 0b       	sbc	r25, r21
    68da:	e8 17       	cp	r30, r24
    68dc:	f9 07       	cpc	r31, r25
    68de:	c8 f4       	brcc	.+50     	; 0x6912 <realloc+0x17e>
    68e0:	f0 93 f7 04 	sts	0x04F7, r31	; 0x8004f7 <__brkval+0x1>
    68e4:	e0 93 f6 04 	sts	0x04F6, r30	; 0x8004f6 <__brkval>
    68e8:	f9 01       	movw	r30, r18
    68ea:	71 83       	std	Z+1, r23	; 0x01
    68ec:	60 83       	st	Z, r22
    68ee:	0f c0       	rjmp	.+30     	; 0x690e <realloc+0x17a>
    68f0:	cb 01       	movw	r24, r22
    68f2:	0e 94 a9 32 	call	0x6552	; 0x6552 <malloc>
    68f6:	7c 01       	movw	r14, r24
    68f8:	00 97       	sbiw	r24, 0x00	; 0
    68fa:	59 f0       	breq	.+22     	; 0x6912 <realloc+0x17e>
    68fc:	a8 01       	movw	r20, r16
    68fe:	be 01       	movw	r22, r28
    6900:	0e 94 90 34 	call	0x6920	; 0x6920 <memcpy>
    6904:	ce 01       	movw	r24, r28
    6906:	0e 94 41 33 	call	0x6682	; 0x6682 <free>
    690a:	c7 01       	movw	r24, r14
    690c:	04 c0       	rjmp	.+8      	; 0x6916 <realloc+0x182>
    690e:	ce 01       	movw	r24, r28
    6910:	02 c0       	rjmp	.+4      	; 0x6916 <realloc+0x182>
    6912:	80 e0       	ldi	r24, 0x00	; 0
    6914:	90 e0       	ldi	r25, 0x00	; 0
    6916:	cd b7       	in	r28, 0x3d	; 61
    6918:	de b7       	in	r29, 0x3e	; 62
    691a:	ee e0       	ldi	r30, 0x0E	; 14
    691c:	0c 94 a5 39 	jmp	0x734a	; 0x734a <__epilogue_restores__+0x8>

00006920 <memcpy>:
    6920:	fb 01       	movw	r30, r22
    6922:	dc 01       	movw	r26, r24
    6924:	02 c0       	rjmp	.+4      	; 0x692a <memcpy+0xa>
    6926:	01 90       	ld	r0, Z+
    6928:	0d 92       	st	X+, r0
    692a:	41 50       	subi	r20, 0x01	; 1
    692c:	50 40       	sbci	r21, 0x00	; 0
    692e:	d8 f7       	brcc	.-10     	; 0x6926 <memcpy+0x6>
    6930:	08 95       	ret

00006932 <strcpy>:
    6932:	fb 01       	movw	r30, r22
    6934:	dc 01       	movw	r26, r24
    6936:	01 90       	ld	r0, Z+
    6938:	0d 92       	st	X+, r0
    693a:	00 20       	and	r0, r0
    693c:	e1 f7       	brne	.-8      	; 0x6936 <strcpy+0x4>
    693e:	08 95       	ret

00006940 <sprintf>:
    6940:	ae e0       	ldi	r26, 0x0E	; 14
    6942:	b0 e0       	ldi	r27, 0x00	; 0
    6944:	e6 ea       	ldi	r30, 0xA6	; 166
    6946:	f4 e3       	ldi	r31, 0x34	; 52
    6948:	0c 94 93 39 	jmp	0x7326	; 0x7326 <__prologue_saves__+0x1c>
    694c:	0d 89       	ldd	r16, Y+21	; 0x15
    694e:	1e 89       	ldd	r17, Y+22	; 0x16
    6950:	86 e0       	ldi	r24, 0x06	; 6
    6952:	8c 83       	std	Y+4, r24	; 0x04
    6954:	1a 83       	std	Y+2, r17	; 0x02
    6956:	09 83       	std	Y+1, r16	; 0x01
    6958:	8f ef       	ldi	r24, 0xFF	; 255
    695a:	9f e7       	ldi	r25, 0x7F	; 127
    695c:	9e 83       	std	Y+6, r25	; 0x06
    695e:	8d 83       	std	Y+5, r24	; 0x05
    6960:	ae 01       	movw	r20, r28
    6962:	47 5e       	subi	r20, 0xE7	; 231
    6964:	5f 4f       	sbci	r21, 0xFF	; 255
    6966:	6f 89       	ldd	r22, Y+23	; 0x17
    6968:	78 8d       	ldd	r23, Y+24	; 0x18
    696a:	ce 01       	movw	r24, r28
    696c:	01 96       	adiw	r24, 0x01	; 1
    696e:	0e 94 c2 34 	call	0x6984	; 0x6984 <vfprintf>
    6972:	ef 81       	ldd	r30, Y+7	; 0x07
    6974:	f8 85       	ldd	r31, Y+8	; 0x08
    6976:	e0 0f       	add	r30, r16
    6978:	f1 1f       	adc	r31, r17
    697a:	10 82       	st	Z, r1
    697c:	2e 96       	adiw	r28, 0x0e	; 14
    697e:	e4 e0       	ldi	r30, 0x04	; 4
    6980:	0c 94 af 39 	jmp	0x735e	; 0x735e <__epilogue_restores__+0x1c>

00006984 <vfprintf>:
    6984:	ab e0       	ldi	r26, 0x0B	; 11
    6986:	b0 e0       	ldi	r27, 0x00	; 0
    6988:	e8 ec       	ldi	r30, 0xC8	; 200
    698a:	f4 e3       	ldi	r31, 0x34	; 52
    698c:	0c 94 85 39 	jmp	0x730a	; 0x730a <__prologue_saves__>
    6990:	6c 01       	movw	r12, r24
    6992:	7b 01       	movw	r14, r22
    6994:	8a 01       	movw	r16, r20
    6996:	fc 01       	movw	r30, r24
    6998:	17 82       	std	Z+7, r1	; 0x07
    699a:	16 82       	std	Z+6, r1	; 0x06
    699c:	83 81       	ldd	r24, Z+3	; 0x03
    699e:	81 ff       	sbrs	r24, 1
    69a0:	cc c1       	rjmp	.+920    	; 0x6d3a <vfprintf+0x3b6>
    69a2:	ce 01       	movw	r24, r28
    69a4:	01 96       	adiw	r24, 0x01	; 1
    69a6:	3c 01       	movw	r6, r24
    69a8:	f6 01       	movw	r30, r12
    69aa:	93 81       	ldd	r25, Z+3	; 0x03
    69ac:	f7 01       	movw	r30, r14
    69ae:	93 fd       	sbrc	r25, 3
    69b0:	85 91       	lpm	r24, Z+
    69b2:	93 ff       	sbrs	r25, 3
    69b4:	81 91       	ld	r24, Z+
    69b6:	7f 01       	movw	r14, r30
    69b8:	88 23       	and	r24, r24
    69ba:	09 f4       	brne	.+2      	; 0x69be <vfprintf+0x3a>
    69bc:	ba c1       	rjmp	.+884    	; 0x6d32 <vfprintf+0x3ae>
    69be:	85 32       	cpi	r24, 0x25	; 37
    69c0:	39 f4       	brne	.+14     	; 0x69d0 <vfprintf+0x4c>
    69c2:	93 fd       	sbrc	r25, 3
    69c4:	85 91       	lpm	r24, Z+
    69c6:	93 ff       	sbrs	r25, 3
    69c8:	81 91       	ld	r24, Z+
    69ca:	7f 01       	movw	r14, r30
    69cc:	85 32       	cpi	r24, 0x25	; 37
    69ce:	29 f4       	brne	.+10     	; 0x69da <vfprintf+0x56>
    69d0:	b6 01       	movw	r22, r12
    69d2:	90 e0       	ldi	r25, 0x00	; 0
    69d4:	0e 94 eb 38 	call	0x71d6	; 0x71d6 <fputc>
    69d8:	e7 cf       	rjmp	.-50     	; 0x69a8 <vfprintf+0x24>
    69da:	91 2c       	mov	r9, r1
    69dc:	21 2c       	mov	r2, r1
    69de:	31 2c       	mov	r3, r1
    69e0:	ff e1       	ldi	r31, 0x1F	; 31
    69e2:	f3 15       	cp	r31, r3
    69e4:	d8 f0       	brcs	.+54     	; 0x6a1c <vfprintf+0x98>
    69e6:	8b 32       	cpi	r24, 0x2B	; 43
    69e8:	79 f0       	breq	.+30     	; 0x6a08 <vfprintf+0x84>
    69ea:	38 f4       	brcc	.+14     	; 0x69fa <vfprintf+0x76>
    69ec:	80 32       	cpi	r24, 0x20	; 32
    69ee:	79 f0       	breq	.+30     	; 0x6a0e <vfprintf+0x8a>
    69f0:	83 32       	cpi	r24, 0x23	; 35
    69f2:	a1 f4       	brne	.+40     	; 0x6a1c <vfprintf+0x98>
    69f4:	23 2d       	mov	r18, r3
    69f6:	20 61       	ori	r18, 0x10	; 16
    69f8:	1d c0       	rjmp	.+58     	; 0x6a34 <vfprintf+0xb0>
    69fa:	8d 32       	cpi	r24, 0x2D	; 45
    69fc:	61 f0       	breq	.+24     	; 0x6a16 <vfprintf+0x92>
    69fe:	80 33       	cpi	r24, 0x30	; 48
    6a00:	69 f4       	brne	.+26     	; 0x6a1c <vfprintf+0x98>
    6a02:	23 2d       	mov	r18, r3
    6a04:	21 60       	ori	r18, 0x01	; 1
    6a06:	16 c0       	rjmp	.+44     	; 0x6a34 <vfprintf+0xb0>
    6a08:	83 2d       	mov	r24, r3
    6a0a:	82 60       	ori	r24, 0x02	; 2
    6a0c:	38 2e       	mov	r3, r24
    6a0e:	e3 2d       	mov	r30, r3
    6a10:	e4 60       	ori	r30, 0x04	; 4
    6a12:	3e 2e       	mov	r3, r30
    6a14:	2a c0       	rjmp	.+84     	; 0x6a6a <vfprintf+0xe6>
    6a16:	f3 2d       	mov	r31, r3
    6a18:	f8 60       	ori	r31, 0x08	; 8
    6a1a:	1d c0       	rjmp	.+58     	; 0x6a56 <vfprintf+0xd2>
    6a1c:	37 fc       	sbrc	r3, 7
    6a1e:	2d c0       	rjmp	.+90     	; 0x6a7a <vfprintf+0xf6>
    6a20:	20 ed       	ldi	r18, 0xD0	; 208
    6a22:	28 0f       	add	r18, r24
    6a24:	2a 30       	cpi	r18, 0x0A	; 10
    6a26:	40 f0       	brcs	.+16     	; 0x6a38 <vfprintf+0xb4>
    6a28:	8e 32       	cpi	r24, 0x2E	; 46
    6a2a:	b9 f4       	brne	.+46     	; 0x6a5a <vfprintf+0xd6>
    6a2c:	36 fc       	sbrc	r3, 6
    6a2e:	81 c1       	rjmp	.+770    	; 0x6d32 <vfprintf+0x3ae>
    6a30:	23 2d       	mov	r18, r3
    6a32:	20 64       	ori	r18, 0x40	; 64
    6a34:	32 2e       	mov	r3, r18
    6a36:	19 c0       	rjmp	.+50     	; 0x6a6a <vfprintf+0xe6>
    6a38:	36 fe       	sbrs	r3, 6
    6a3a:	06 c0       	rjmp	.+12     	; 0x6a48 <vfprintf+0xc4>
    6a3c:	8a e0       	ldi	r24, 0x0A	; 10
    6a3e:	98 9e       	mul	r9, r24
    6a40:	20 0d       	add	r18, r0
    6a42:	11 24       	eor	r1, r1
    6a44:	92 2e       	mov	r9, r18
    6a46:	11 c0       	rjmp	.+34     	; 0x6a6a <vfprintf+0xe6>
    6a48:	ea e0       	ldi	r30, 0x0A	; 10
    6a4a:	2e 9e       	mul	r2, r30
    6a4c:	20 0d       	add	r18, r0
    6a4e:	11 24       	eor	r1, r1
    6a50:	22 2e       	mov	r2, r18
    6a52:	f3 2d       	mov	r31, r3
    6a54:	f0 62       	ori	r31, 0x20	; 32
    6a56:	3f 2e       	mov	r3, r31
    6a58:	08 c0       	rjmp	.+16     	; 0x6a6a <vfprintf+0xe6>
    6a5a:	8c 36       	cpi	r24, 0x6C	; 108
    6a5c:	21 f4       	brne	.+8      	; 0x6a66 <vfprintf+0xe2>
    6a5e:	83 2d       	mov	r24, r3
    6a60:	80 68       	ori	r24, 0x80	; 128
    6a62:	38 2e       	mov	r3, r24
    6a64:	02 c0       	rjmp	.+4      	; 0x6a6a <vfprintf+0xe6>
    6a66:	88 36       	cpi	r24, 0x68	; 104
    6a68:	41 f4       	brne	.+16     	; 0x6a7a <vfprintf+0xf6>
    6a6a:	f7 01       	movw	r30, r14
    6a6c:	93 fd       	sbrc	r25, 3
    6a6e:	85 91       	lpm	r24, Z+
    6a70:	93 ff       	sbrs	r25, 3
    6a72:	81 91       	ld	r24, Z+
    6a74:	7f 01       	movw	r14, r30
    6a76:	81 11       	cpse	r24, r1
    6a78:	b3 cf       	rjmp	.-154    	; 0x69e0 <vfprintf+0x5c>
    6a7a:	98 2f       	mov	r25, r24
    6a7c:	9f 7d       	andi	r25, 0xDF	; 223
    6a7e:	95 54       	subi	r25, 0x45	; 69
    6a80:	93 30       	cpi	r25, 0x03	; 3
    6a82:	28 f4       	brcc	.+10     	; 0x6a8e <vfprintf+0x10a>
    6a84:	0c 5f       	subi	r16, 0xFC	; 252
    6a86:	1f 4f       	sbci	r17, 0xFF	; 255
    6a88:	9f e3       	ldi	r25, 0x3F	; 63
    6a8a:	99 83       	std	Y+1, r25	; 0x01
    6a8c:	0d c0       	rjmp	.+26     	; 0x6aa8 <vfprintf+0x124>
    6a8e:	83 36       	cpi	r24, 0x63	; 99
    6a90:	31 f0       	breq	.+12     	; 0x6a9e <vfprintf+0x11a>
    6a92:	83 37       	cpi	r24, 0x73	; 115
    6a94:	71 f0       	breq	.+28     	; 0x6ab2 <vfprintf+0x12e>
    6a96:	83 35       	cpi	r24, 0x53	; 83
    6a98:	09 f0       	breq	.+2      	; 0x6a9c <vfprintf+0x118>
    6a9a:	59 c0       	rjmp	.+178    	; 0x6b4e <vfprintf+0x1ca>
    6a9c:	21 c0       	rjmp	.+66     	; 0x6ae0 <vfprintf+0x15c>
    6a9e:	f8 01       	movw	r30, r16
    6aa0:	80 81       	ld	r24, Z
    6aa2:	89 83       	std	Y+1, r24	; 0x01
    6aa4:	0e 5f       	subi	r16, 0xFE	; 254
    6aa6:	1f 4f       	sbci	r17, 0xFF	; 255
    6aa8:	88 24       	eor	r8, r8
    6aaa:	83 94       	inc	r8
    6aac:	91 2c       	mov	r9, r1
    6aae:	53 01       	movw	r10, r6
    6ab0:	13 c0       	rjmp	.+38     	; 0x6ad8 <vfprintf+0x154>
    6ab2:	28 01       	movw	r4, r16
    6ab4:	f2 e0       	ldi	r31, 0x02	; 2
    6ab6:	4f 0e       	add	r4, r31
    6ab8:	51 1c       	adc	r5, r1
    6aba:	f8 01       	movw	r30, r16
    6abc:	a0 80       	ld	r10, Z
    6abe:	b1 80       	ldd	r11, Z+1	; 0x01
    6ac0:	36 fe       	sbrs	r3, 6
    6ac2:	03 c0       	rjmp	.+6      	; 0x6aca <vfprintf+0x146>
    6ac4:	69 2d       	mov	r22, r9
    6ac6:	70 e0       	ldi	r23, 0x00	; 0
    6ac8:	02 c0       	rjmp	.+4      	; 0x6ace <vfprintf+0x14a>
    6aca:	6f ef       	ldi	r22, 0xFF	; 255
    6acc:	7f ef       	ldi	r23, 0xFF	; 255
    6ace:	c5 01       	movw	r24, r10
    6ad0:	0e 94 e0 38 	call	0x71c0	; 0x71c0 <strnlen>
    6ad4:	4c 01       	movw	r8, r24
    6ad6:	82 01       	movw	r16, r4
    6ad8:	f3 2d       	mov	r31, r3
    6ada:	ff 77       	andi	r31, 0x7F	; 127
    6adc:	3f 2e       	mov	r3, r31
    6ade:	16 c0       	rjmp	.+44     	; 0x6b0c <vfprintf+0x188>
    6ae0:	28 01       	movw	r4, r16
    6ae2:	22 e0       	ldi	r18, 0x02	; 2
    6ae4:	42 0e       	add	r4, r18
    6ae6:	51 1c       	adc	r5, r1
    6ae8:	f8 01       	movw	r30, r16
    6aea:	a0 80       	ld	r10, Z
    6aec:	b1 80       	ldd	r11, Z+1	; 0x01
    6aee:	36 fe       	sbrs	r3, 6
    6af0:	03 c0       	rjmp	.+6      	; 0x6af8 <vfprintf+0x174>
    6af2:	69 2d       	mov	r22, r9
    6af4:	70 e0       	ldi	r23, 0x00	; 0
    6af6:	02 c0       	rjmp	.+4      	; 0x6afc <vfprintf+0x178>
    6af8:	6f ef       	ldi	r22, 0xFF	; 255
    6afa:	7f ef       	ldi	r23, 0xFF	; 255
    6afc:	c5 01       	movw	r24, r10
    6afe:	0e 94 d5 38 	call	0x71aa	; 0x71aa <strnlen_P>
    6b02:	4c 01       	movw	r8, r24
    6b04:	f3 2d       	mov	r31, r3
    6b06:	f0 68       	ori	r31, 0x80	; 128
    6b08:	3f 2e       	mov	r3, r31
    6b0a:	82 01       	movw	r16, r4
    6b0c:	33 fc       	sbrc	r3, 3
    6b0e:	1b c0       	rjmp	.+54     	; 0x6b46 <vfprintf+0x1c2>
    6b10:	82 2d       	mov	r24, r2
    6b12:	90 e0       	ldi	r25, 0x00	; 0
    6b14:	88 16       	cp	r8, r24
    6b16:	99 06       	cpc	r9, r25
    6b18:	b0 f4       	brcc	.+44     	; 0x6b46 <vfprintf+0x1c2>
    6b1a:	b6 01       	movw	r22, r12
    6b1c:	80 e2       	ldi	r24, 0x20	; 32
    6b1e:	90 e0       	ldi	r25, 0x00	; 0
    6b20:	0e 94 eb 38 	call	0x71d6	; 0x71d6 <fputc>
    6b24:	2a 94       	dec	r2
    6b26:	f4 cf       	rjmp	.-24     	; 0x6b10 <vfprintf+0x18c>
    6b28:	f5 01       	movw	r30, r10
    6b2a:	37 fc       	sbrc	r3, 7
    6b2c:	85 91       	lpm	r24, Z+
    6b2e:	37 fe       	sbrs	r3, 7
    6b30:	81 91       	ld	r24, Z+
    6b32:	5f 01       	movw	r10, r30
    6b34:	b6 01       	movw	r22, r12
    6b36:	90 e0       	ldi	r25, 0x00	; 0
    6b38:	0e 94 eb 38 	call	0x71d6	; 0x71d6 <fputc>
    6b3c:	21 10       	cpse	r2, r1
    6b3e:	2a 94       	dec	r2
    6b40:	21 e0       	ldi	r18, 0x01	; 1
    6b42:	82 1a       	sub	r8, r18
    6b44:	91 08       	sbc	r9, r1
    6b46:	81 14       	cp	r8, r1
    6b48:	91 04       	cpc	r9, r1
    6b4a:	71 f7       	brne	.-36     	; 0x6b28 <vfprintf+0x1a4>
    6b4c:	e8 c0       	rjmp	.+464    	; 0x6d1e <vfprintf+0x39a>
    6b4e:	84 36       	cpi	r24, 0x64	; 100
    6b50:	11 f0       	breq	.+4      	; 0x6b56 <vfprintf+0x1d2>
    6b52:	89 36       	cpi	r24, 0x69	; 105
    6b54:	41 f5       	brne	.+80     	; 0x6ba6 <vfprintf+0x222>
    6b56:	f8 01       	movw	r30, r16
    6b58:	37 fe       	sbrs	r3, 7
    6b5a:	07 c0       	rjmp	.+14     	; 0x6b6a <vfprintf+0x1e6>
    6b5c:	60 81       	ld	r22, Z
    6b5e:	71 81       	ldd	r23, Z+1	; 0x01
    6b60:	82 81       	ldd	r24, Z+2	; 0x02
    6b62:	93 81       	ldd	r25, Z+3	; 0x03
    6b64:	0c 5f       	subi	r16, 0xFC	; 252
    6b66:	1f 4f       	sbci	r17, 0xFF	; 255
    6b68:	08 c0       	rjmp	.+16     	; 0x6b7a <vfprintf+0x1f6>
    6b6a:	60 81       	ld	r22, Z
    6b6c:	71 81       	ldd	r23, Z+1	; 0x01
    6b6e:	07 2e       	mov	r0, r23
    6b70:	00 0c       	add	r0, r0
    6b72:	88 0b       	sbc	r24, r24
    6b74:	99 0b       	sbc	r25, r25
    6b76:	0e 5f       	subi	r16, 0xFE	; 254
    6b78:	1f 4f       	sbci	r17, 0xFF	; 255
    6b7a:	f3 2d       	mov	r31, r3
    6b7c:	ff 76       	andi	r31, 0x6F	; 111
    6b7e:	3f 2e       	mov	r3, r31
    6b80:	97 ff       	sbrs	r25, 7
    6b82:	09 c0       	rjmp	.+18     	; 0x6b96 <vfprintf+0x212>
    6b84:	90 95       	com	r25
    6b86:	80 95       	com	r24
    6b88:	70 95       	com	r23
    6b8a:	61 95       	neg	r22
    6b8c:	7f 4f       	sbci	r23, 0xFF	; 255
    6b8e:	8f 4f       	sbci	r24, 0xFF	; 255
    6b90:	9f 4f       	sbci	r25, 0xFF	; 255
    6b92:	f0 68       	ori	r31, 0x80	; 128
    6b94:	3f 2e       	mov	r3, r31
    6b96:	2a e0       	ldi	r18, 0x0A	; 10
    6b98:	30 e0       	ldi	r19, 0x00	; 0
    6b9a:	a3 01       	movw	r20, r6
    6b9c:	0e 94 27 39 	call	0x724e	; 0x724e <__ultoa_invert>
    6ba0:	88 2e       	mov	r8, r24
    6ba2:	86 18       	sub	r8, r6
    6ba4:	45 c0       	rjmp	.+138    	; 0x6c30 <vfprintf+0x2ac>
    6ba6:	85 37       	cpi	r24, 0x75	; 117
    6ba8:	31 f4       	brne	.+12     	; 0x6bb6 <vfprintf+0x232>
    6baa:	23 2d       	mov	r18, r3
    6bac:	2f 7e       	andi	r18, 0xEF	; 239
    6bae:	b2 2e       	mov	r11, r18
    6bb0:	2a e0       	ldi	r18, 0x0A	; 10
    6bb2:	30 e0       	ldi	r19, 0x00	; 0
    6bb4:	25 c0       	rjmp	.+74     	; 0x6c00 <vfprintf+0x27c>
    6bb6:	93 2d       	mov	r25, r3
    6bb8:	99 7f       	andi	r25, 0xF9	; 249
    6bba:	b9 2e       	mov	r11, r25
    6bbc:	8f 36       	cpi	r24, 0x6F	; 111
    6bbe:	c1 f0       	breq	.+48     	; 0x6bf0 <vfprintf+0x26c>
    6bc0:	18 f4       	brcc	.+6      	; 0x6bc8 <vfprintf+0x244>
    6bc2:	88 35       	cpi	r24, 0x58	; 88
    6bc4:	79 f0       	breq	.+30     	; 0x6be4 <vfprintf+0x260>
    6bc6:	b5 c0       	rjmp	.+362    	; 0x6d32 <vfprintf+0x3ae>
    6bc8:	80 37       	cpi	r24, 0x70	; 112
    6bca:	19 f0       	breq	.+6      	; 0x6bd2 <vfprintf+0x24e>
    6bcc:	88 37       	cpi	r24, 0x78	; 120
    6bce:	21 f0       	breq	.+8      	; 0x6bd8 <vfprintf+0x254>
    6bd0:	b0 c0       	rjmp	.+352    	; 0x6d32 <vfprintf+0x3ae>
    6bd2:	e9 2f       	mov	r30, r25
    6bd4:	e0 61       	ori	r30, 0x10	; 16
    6bd6:	be 2e       	mov	r11, r30
    6bd8:	b4 fe       	sbrs	r11, 4
    6bda:	0d c0       	rjmp	.+26     	; 0x6bf6 <vfprintf+0x272>
    6bdc:	fb 2d       	mov	r31, r11
    6bde:	f4 60       	ori	r31, 0x04	; 4
    6be0:	bf 2e       	mov	r11, r31
    6be2:	09 c0       	rjmp	.+18     	; 0x6bf6 <vfprintf+0x272>
    6be4:	34 fe       	sbrs	r3, 4
    6be6:	0a c0       	rjmp	.+20     	; 0x6bfc <vfprintf+0x278>
    6be8:	29 2f       	mov	r18, r25
    6bea:	26 60       	ori	r18, 0x06	; 6
    6bec:	b2 2e       	mov	r11, r18
    6bee:	06 c0       	rjmp	.+12     	; 0x6bfc <vfprintf+0x278>
    6bf0:	28 e0       	ldi	r18, 0x08	; 8
    6bf2:	30 e0       	ldi	r19, 0x00	; 0
    6bf4:	05 c0       	rjmp	.+10     	; 0x6c00 <vfprintf+0x27c>
    6bf6:	20 e1       	ldi	r18, 0x10	; 16
    6bf8:	30 e0       	ldi	r19, 0x00	; 0
    6bfa:	02 c0       	rjmp	.+4      	; 0x6c00 <vfprintf+0x27c>
    6bfc:	20 e1       	ldi	r18, 0x10	; 16
    6bfe:	32 e0       	ldi	r19, 0x02	; 2
    6c00:	f8 01       	movw	r30, r16
    6c02:	b7 fe       	sbrs	r11, 7
    6c04:	07 c0       	rjmp	.+14     	; 0x6c14 <vfprintf+0x290>
    6c06:	60 81       	ld	r22, Z
    6c08:	71 81       	ldd	r23, Z+1	; 0x01
    6c0a:	82 81       	ldd	r24, Z+2	; 0x02
    6c0c:	93 81       	ldd	r25, Z+3	; 0x03
    6c0e:	0c 5f       	subi	r16, 0xFC	; 252
    6c10:	1f 4f       	sbci	r17, 0xFF	; 255
    6c12:	06 c0       	rjmp	.+12     	; 0x6c20 <vfprintf+0x29c>
    6c14:	60 81       	ld	r22, Z
    6c16:	71 81       	ldd	r23, Z+1	; 0x01
    6c18:	80 e0       	ldi	r24, 0x00	; 0
    6c1a:	90 e0       	ldi	r25, 0x00	; 0
    6c1c:	0e 5f       	subi	r16, 0xFE	; 254
    6c1e:	1f 4f       	sbci	r17, 0xFF	; 255
    6c20:	a3 01       	movw	r20, r6
    6c22:	0e 94 27 39 	call	0x724e	; 0x724e <__ultoa_invert>
    6c26:	88 2e       	mov	r8, r24
    6c28:	86 18       	sub	r8, r6
    6c2a:	fb 2d       	mov	r31, r11
    6c2c:	ff 77       	andi	r31, 0x7F	; 127
    6c2e:	3f 2e       	mov	r3, r31
    6c30:	36 fe       	sbrs	r3, 6
    6c32:	0d c0       	rjmp	.+26     	; 0x6c4e <vfprintf+0x2ca>
    6c34:	23 2d       	mov	r18, r3
    6c36:	2e 7f       	andi	r18, 0xFE	; 254
    6c38:	a2 2e       	mov	r10, r18
    6c3a:	89 14       	cp	r8, r9
    6c3c:	58 f4       	brcc	.+22     	; 0x6c54 <vfprintf+0x2d0>
    6c3e:	34 fe       	sbrs	r3, 4
    6c40:	0b c0       	rjmp	.+22     	; 0x6c58 <vfprintf+0x2d4>
    6c42:	32 fc       	sbrc	r3, 2
    6c44:	09 c0       	rjmp	.+18     	; 0x6c58 <vfprintf+0x2d4>
    6c46:	83 2d       	mov	r24, r3
    6c48:	8e 7e       	andi	r24, 0xEE	; 238
    6c4a:	a8 2e       	mov	r10, r24
    6c4c:	05 c0       	rjmp	.+10     	; 0x6c58 <vfprintf+0x2d4>
    6c4e:	b8 2c       	mov	r11, r8
    6c50:	a3 2c       	mov	r10, r3
    6c52:	03 c0       	rjmp	.+6      	; 0x6c5a <vfprintf+0x2d6>
    6c54:	b8 2c       	mov	r11, r8
    6c56:	01 c0       	rjmp	.+2      	; 0x6c5a <vfprintf+0x2d6>
    6c58:	b9 2c       	mov	r11, r9
    6c5a:	a4 fe       	sbrs	r10, 4
    6c5c:	0f c0       	rjmp	.+30     	; 0x6c7c <vfprintf+0x2f8>
    6c5e:	fe 01       	movw	r30, r28
    6c60:	e8 0d       	add	r30, r8
    6c62:	f1 1d       	adc	r31, r1
    6c64:	80 81       	ld	r24, Z
    6c66:	80 33       	cpi	r24, 0x30	; 48
    6c68:	21 f4       	brne	.+8      	; 0x6c72 <vfprintf+0x2ee>
    6c6a:	9a 2d       	mov	r25, r10
    6c6c:	99 7e       	andi	r25, 0xE9	; 233
    6c6e:	a9 2e       	mov	r10, r25
    6c70:	09 c0       	rjmp	.+18     	; 0x6c84 <vfprintf+0x300>
    6c72:	a2 fe       	sbrs	r10, 2
    6c74:	06 c0       	rjmp	.+12     	; 0x6c82 <vfprintf+0x2fe>
    6c76:	b3 94       	inc	r11
    6c78:	b3 94       	inc	r11
    6c7a:	04 c0       	rjmp	.+8      	; 0x6c84 <vfprintf+0x300>
    6c7c:	8a 2d       	mov	r24, r10
    6c7e:	86 78       	andi	r24, 0x86	; 134
    6c80:	09 f0       	breq	.+2      	; 0x6c84 <vfprintf+0x300>
    6c82:	b3 94       	inc	r11
    6c84:	a3 fc       	sbrc	r10, 3
    6c86:	11 c0       	rjmp	.+34     	; 0x6caa <vfprintf+0x326>
    6c88:	a0 fe       	sbrs	r10, 0
    6c8a:	06 c0       	rjmp	.+12     	; 0x6c98 <vfprintf+0x314>
    6c8c:	b2 14       	cp	r11, r2
    6c8e:	88 f4       	brcc	.+34     	; 0x6cb2 <vfprintf+0x32e>
    6c90:	28 0c       	add	r2, r8
    6c92:	92 2c       	mov	r9, r2
    6c94:	9b 18       	sub	r9, r11
    6c96:	0e c0       	rjmp	.+28     	; 0x6cb4 <vfprintf+0x330>
    6c98:	b2 14       	cp	r11, r2
    6c9a:	60 f4       	brcc	.+24     	; 0x6cb4 <vfprintf+0x330>
    6c9c:	b6 01       	movw	r22, r12
    6c9e:	80 e2       	ldi	r24, 0x20	; 32
    6ca0:	90 e0       	ldi	r25, 0x00	; 0
    6ca2:	0e 94 eb 38 	call	0x71d6	; 0x71d6 <fputc>
    6ca6:	b3 94       	inc	r11
    6ca8:	f7 cf       	rjmp	.-18     	; 0x6c98 <vfprintf+0x314>
    6caa:	b2 14       	cp	r11, r2
    6cac:	18 f4       	brcc	.+6      	; 0x6cb4 <vfprintf+0x330>
    6cae:	2b 18       	sub	r2, r11
    6cb0:	02 c0       	rjmp	.+4      	; 0x6cb6 <vfprintf+0x332>
    6cb2:	98 2c       	mov	r9, r8
    6cb4:	21 2c       	mov	r2, r1
    6cb6:	a4 fe       	sbrs	r10, 4
    6cb8:	10 c0       	rjmp	.+32     	; 0x6cda <vfprintf+0x356>
    6cba:	b6 01       	movw	r22, r12
    6cbc:	80 e3       	ldi	r24, 0x30	; 48
    6cbe:	90 e0       	ldi	r25, 0x00	; 0
    6cc0:	0e 94 eb 38 	call	0x71d6	; 0x71d6 <fputc>
    6cc4:	a2 fe       	sbrs	r10, 2
    6cc6:	17 c0       	rjmp	.+46     	; 0x6cf6 <vfprintf+0x372>
    6cc8:	a1 fc       	sbrc	r10, 1
    6cca:	03 c0       	rjmp	.+6      	; 0x6cd2 <vfprintf+0x34e>
    6ccc:	88 e7       	ldi	r24, 0x78	; 120
    6cce:	90 e0       	ldi	r25, 0x00	; 0
    6cd0:	02 c0       	rjmp	.+4      	; 0x6cd6 <vfprintf+0x352>
    6cd2:	88 e5       	ldi	r24, 0x58	; 88
    6cd4:	90 e0       	ldi	r25, 0x00	; 0
    6cd6:	b6 01       	movw	r22, r12
    6cd8:	0c c0       	rjmp	.+24     	; 0x6cf2 <vfprintf+0x36e>
    6cda:	8a 2d       	mov	r24, r10
    6cdc:	86 78       	andi	r24, 0x86	; 134
    6cde:	59 f0       	breq	.+22     	; 0x6cf6 <vfprintf+0x372>
    6ce0:	a1 fe       	sbrs	r10, 1
    6ce2:	02 c0       	rjmp	.+4      	; 0x6ce8 <vfprintf+0x364>
    6ce4:	8b e2       	ldi	r24, 0x2B	; 43
    6ce6:	01 c0       	rjmp	.+2      	; 0x6cea <vfprintf+0x366>
    6ce8:	80 e2       	ldi	r24, 0x20	; 32
    6cea:	a7 fc       	sbrc	r10, 7
    6cec:	8d e2       	ldi	r24, 0x2D	; 45
    6cee:	b6 01       	movw	r22, r12
    6cf0:	90 e0       	ldi	r25, 0x00	; 0
    6cf2:	0e 94 eb 38 	call	0x71d6	; 0x71d6 <fputc>
    6cf6:	89 14       	cp	r8, r9
    6cf8:	38 f4       	brcc	.+14     	; 0x6d08 <vfprintf+0x384>
    6cfa:	b6 01       	movw	r22, r12
    6cfc:	80 e3       	ldi	r24, 0x30	; 48
    6cfe:	90 e0       	ldi	r25, 0x00	; 0
    6d00:	0e 94 eb 38 	call	0x71d6	; 0x71d6 <fputc>
    6d04:	9a 94       	dec	r9
    6d06:	f7 cf       	rjmp	.-18     	; 0x6cf6 <vfprintf+0x372>
    6d08:	8a 94       	dec	r8
    6d0a:	f3 01       	movw	r30, r6
    6d0c:	e8 0d       	add	r30, r8
    6d0e:	f1 1d       	adc	r31, r1
    6d10:	80 81       	ld	r24, Z
    6d12:	b6 01       	movw	r22, r12
    6d14:	90 e0       	ldi	r25, 0x00	; 0
    6d16:	0e 94 eb 38 	call	0x71d6	; 0x71d6 <fputc>
    6d1a:	81 10       	cpse	r8, r1
    6d1c:	f5 cf       	rjmp	.-22     	; 0x6d08 <vfprintf+0x384>
    6d1e:	22 20       	and	r2, r2
    6d20:	09 f4       	brne	.+2      	; 0x6d24 <vfprintf+0x3a0>
    6d22:	42 ce       	rjmp	.-892    	; 0x69a8 <vfprintf+0x24>
    6d24:	b6 01       	movw	r22, r12
    6d26:	80 e2       	ldi	r24, 0x20	; 32
    6d28:	90 e0       	ldi	r25, 0x00	; 0
    6d2a:	0e 94 eb 38 	call	0x71d6	; 0x71d6 <fputc>
    6d2e:	2a 94       	dec	r2
    6d30:	f6 cf       	rjmp	.-20     	; 0x6d1e <vfprintf+0x39a>
    6d32:	f6 01       	movw	r30, r12
    6d34:	86 81       	ldd	r24, Z+6	; 0x06
    6d36:	97 81       	ldd	r25, Z+7	; 0x07
    6d38:	02 c0       	rjmp	.+4      	; 0x6d3e <vfprintf+0x3ba>
    6d3a:	8f ef       	ldi	r24, 0xFF	; 255
    6d3c:	9f ef       	ldi	r25, 0xFF	; 255
    6d3e:	2b 96       	adiw	r28, 0x0b	; 11
    6d40:	e2 e1       	ldi	r30, 0x12	; 18
    6d42:	0c 94 a1 39 	jmp	0x7342	; 0x7342 <__epilogue_restores__>

00006d46 <dtoa_prf>:
    6d46:	a9 e0       	ldi	r26, 0x09	; 9
    6d48:	b0 e0       	ldi	r27, 0x00	; 0
    6d4a:	e9 ea       	ldi	r30, 0xA9	; 169
    6d4c:	f6 e3       	ldi	r31, 0x36	; 54
    6d4e:	0c 94 8b 39 	jmp	0x7316	; 0x7316 <__prologue_saves__+0xc>
    6d52:	6a 01       	movw	r12, r20
    6d54:	12 2f       	mov	r17, r18
    6d56:	b0 2e       	mov	r11, r16
    6d58:	2b e3       	ldi	r18, 0x3B	; 59
    6d5a:	20 17       	cp	r18, r16
    6d5c:	20 f0       	brcs	.+8      	; 0x6d66 <dtoa_prf+0x20>
    6d5e:	ff 24       	eor	r15, r15
    6d60:	f3 94       	inc	r15
    6d62:	f0 0e       	add	r15, r16
    6d64:	02 c0       	rjmp	.+4      	; 0x6d6a <dtoa_prf+0x24>
    6d66:	2c e3       	ldi	r18, 0x3C	; 60
    6d68:	f2 2e       	mov	r15, r18
    6d6a:	0f 2d       	mov	r16, r15
    6d6c:	27 e0       	ldi	r18, 0x07	; 7
    6d6e:	ae 01       	movw	r20, r28
    6d70:	4f 5f       	subi	r20, 0xFF	; 255
    6d72:	5f 4f       	sbci	r21, 0xFF	; 255
    6d74:	0e 94 fd 37 	call	0x6ffa	; 0x6ffa <__ftoa_engine>
    6d78:	bc 01       	movw	r22, r24
    6d7a:	49 81       	ldd	r20, Y+1	; 0x01
    6d7c:	84 2f       	mov	r24, r20
    6d7e:	89 70       	andi	r24, 0x09	; 9
    6d80:	81 30       	cpi	r24, 0x01	; 1
    6d82:	31 f0       	breq	.+12     	; 0x6d90 <dtoa_prf+0x4a>
    6d84:	e1 fc       	sbrc	r14, 1
    6d86:	06 c0       	rjmp	.+12     	; 0x6d94 <dtoa_prf+0x4e>
    6d88:	e0 fe       	sbrs	r14, 0
    6d8a:	06 c0       	rjmp	.+12     	; 0x6d98 <dtoa_prf+0x52>
    6d8c:	90 e2       	ldi	r25, 0x20	; 32
    6d8e:	05 c0       	rjmp	.+10     	; 0x6d9a <dtoa_prf+0x54>
    6d90:	9d e2       	ldi	r25, 0x2D	; 45
    6d92:	03 c0       	rjmp	.+6      	; 0x6d9a <dtoa_prf+0x54>
    6d94:	9b e2       	ldi	r25, 0x2B	; 43
    6d96:	01 c0       	rjmp	.+2      	; 0x6d9a <dtoa_prf+0x54>
    6d98:	90 e0       	ldi	r25, 0x00	; 0
    6d9a:	5e 2d       	mov	r21, r14
    6d9c:	50 71       	andi	r21, 0x10	; 16
    6d9e:	43 ff       	sbrs	r20, 3
    6da0:	3c c0       	rjmp	.+120    	; 0x6e1a <dtoa_prf+0xd4>
    6da2:	91 11       	cpse	r25, r1
    6da4:	02 c0       	rjmp	.+4      	; 0x6daa <dtoa_prf+0x64>
    6da6:	83 e0       	ldi	r24, 0x03	; 3
    6da8:	01 c0       	rjmp	.+2      	; 0x6dac <dtoa_prf+0x66>
    6daa:	84 e0       	ldi	r24, 0x04	; 4
    6dac:	81 17       	cp	r24, r17
    6dae:	18 f4       	brcc	.+6      	; 0x6db6 <dtoa_prf+0x70>
    6db0:	21 2f       	mov	r18, r17
    6db2:	28 1b       	sub	r18, r24
    6db4:	01 c0       	rjmp	.+2      	; 0x6db8 <dtoa_prf+0x72>
    6db6:	20 e0       	ldi	r18, 0x00	; 0
    6db8:	51 11       	cpse	r21, r1
    6dba:	0b c0       	rjmp	.+22     	; 0x6dd2 <dtoa_prf+0x8c>
    6dbc:	f6 01       	movw	r30, r12
    6dbe:	82 2f       	mov	r24, r18
    6dc0:	30 e2       	ldi	r19, 0x20	; 32
    6dc2:	88 23       	and	r24, r24
    6dc4:	19 f0       	breq	.+6      	; 0x6dcc <dtoa_prf+0x86>
    6dc6:	31 93       	st	Z+, r19
    6dc8:	81 50       	subi	r24, 0x01	; 1
    6dca:	fb cf       	rjmp	.-10     	; 0x6dc2 <dtoa_prf+0x7c>
    6dcc:	c2 0e       	add	r12, r18
    6dce:	d1 1c       	adc	r13, r1
    6dd0:	20 e0       	ldi	r18, 0x00	; 0
    6dd2:	99 23       	and	r25, r25
    6dd4:	29 f0       	breq	.+10     	; 0x6de0 <dtoa_prf+0x9a>
    6dd6:	d6 01       	movw	r26, r12
    6dd8:	9c 93       	st	X, r25
    6dda:	f6 01       	movw	r30, r12
    6ddc:	31 96       	adiw	r30, 0x01	; 1
    6dde:	6f 01       	movw	r12, r30
    6de0:	c6 01       	movw	r24, r12
    6de2:	03 96       	adiw	r24, 0x03	; 3
    6de4:	e2 fe       	sbrs	r14, 2
    6de6:	0a c0       	rjmp	.+20     	; 0x6dfc <dtoa_prf+0xb6>
    6de8:	3e e4       	ldi	r19, 0x4E	; 78
    6dea:	d6 01       	movw	r26, r12
    6dec:	3c 93       	st	X, r19
    6dee:	41 e4       	ldi	r20, 0x41	; 65
    6df0:	11 96       	adiw	r26, 0x01	; 1
    6df2:	4c 93       	st	X, r20
    6df4:	11 97       	sbiw	r26, 0x01	; 1
    6df6:	12 96       	adiw	r26, 0x02	; 2
    6df8:	3c 93       	st	X, r19
    6dfa:	06 c0       	rjmp	.+12     	; 0x6e08 <dtoa_prf+0xc2>
    6dfc:	3e e6       	ldi	r19, 0x6E	; 110
    6dfe:	f6 01       	movw	r30, r12
    6e00:	30 83       	st	Z, r19
    6e02:	41 e6       	ldi	r20, 0x61	; 97
    6e04:	41 83       	std	Z+1, r20	; 0x01
    6e06:	32 83       	std	Z+2, r19	; 0x02
    6e08:	fc 01       	movw	r30, r24
    6e0a:	32 2f       	mov	r19, r18
    6e0c:	40 e2       	ldi	r20, 0x20	; 32
    6e0e:	33 23       	and	r19, r19
    6e10:	09 f4       	brne	.+2      	; 0x6e14 <dtoa_prf+0xce>
    6e12:	42 c0       	rjmp	.+132    	; 0x6e98 <dtoa_prf+0x152>
    6e14:	41 93       	st	Z+, r20
    6e16:	31 50       	subi	r19, 0x01	; 1
    6e18:	fa cf       	rjmp	.-12     	; 0x6e0e <dtoa_prf+0xc8>
    6e1a:	42 ff       	sbrs	r20, 2
    6e1c:	44 c0       	rjmp	.+136    	; 0x6ea6 <dtoa_prf+0x160>
    6e1e:	91 11       	cpse	r25, r1
    6e20:	02 c0       	rjmp	.+4      	; 0x6e26 <dtoa_prf+0xe0>
    6e22:	83 e0       	ldi	r24, 0x03	; 3
    6e24:	01 c0       	rjmp	.+2      	; 0x6e28 <dtoa_prf+0xe2>
    6e26:	84 e0       	ldi	r24, 0x04	; 4
    6e28:	81 17       	cp	r24, r17
    6e2a:	18 f4       	brcc	.+6      	; 0x6e32 <dtoa_prf+0xec>
    6e2c:	21 2f       	mov	r18, r17
    6e2e:	28 1b       	sub	r18, r24
    6e30:	01 c0       	rjmp	.+2      	; 0x6e34 <dtoa_prf+0xee>
    6e32:	20 e0       	ldi	r18, 0x00	; 0
    6e34:	51 11       	cpse	r21, r1
    6e36:	0b c0       	rjmp	.+22     	; 0x6e4e <dtoa_prf+0x108>
    6e38:	f6 01       	movw	r30, r12
    6e3a:	82 2f       	mov	r24, r18
    6e3c:	30 e2       	ldi	r19, 0x20	; 32
    6e3e:	88 23       	and	r24, r24
    6e40:	19 f0       	breq	.+6      	; 0x6e48 <dtoa_prf+0x102>
    6e42:	31 93       	st	Z+, r19
    6e44:	81 50       	subi	r24, 0x01	; 1
    6e46:	fb cf       	rjmp	.-10     	; 0x6e3e <dtoa_prf+0xf8>
    6e48:	c2 0e       	add	r12, r18
    6e4a:	d1 1c       	adc	r13, r1
    6e4c:	20 e0       	ldi	r18, 0x00	; 0
    6e4e:	99 23       	and	r25, r25
    6e50:	29 f0       	breq	.+10     	; 0x6e5c <dtoa_prf+0x116>
    6e52:	d6 01       	movw	r26, r12
    6e54:	9c 93       	st	X, r25
    6e56:	f6 01       	movw	r30, r12
    6e58:	31 96       	adiw	r30, 0x01	; 1
    6e5a:	6f 01       	movw	r12, r30
    6e5c:	c6 01       	movw	r24, r12
    6e5e:	03 96       	adiw	r24, 0x03	; 3
    6e60:	e2 fe       	sbrs	r14, 2
    6e62:	0b c0       	rjmp	.+22     	; 0x6e7a <dtoa_prf+0x134>
    6e64:	39 e4       	ldi	r19, 0x49	; 73
    6e66:	d6 01       	movw	r26, r12
    6e68:	3c 93       	st	X, r19
    6e6a:	3e e4       	ldi	r19, 0x4E	; 78
    6e6c:	11 96       	adiw	r26, 0x01	; 1
    6e6e:	3c 93       	st	X, r19
    6e70:	11 97       	sbiw	r26, 0x01	; 1
    6e72:	36 e4       	ldi	r19, 0x46	; 70
    6e74:	12 96       	adiw	r26, 0x02	; 2
    6e76:	3c 93       	st	X, r19
    6e78:	07 c0       	rjmp	.+14     	; 0x6e88 <dtoa_prf+0x142>
    6e7a:	39 e6       	ldi	r19, 0x69	; 105
    6e7c:	f6 01       	movw	r30, r12
    6e7e:	30 83       	st	Z, r19
    6e80:	3e e6       	ldi	r19, 0x6E	; 110
    6e82:	31 83       	std	Z+1, r19	; 0x01
    6e84:	36 e6       	ldi	r19, 0x66	; 102
    6e86:	32 83       	std	Z+2, r19	; 0x02
    6e88:	fc 01       	movw	r30, r24
    6e8a:	32 2f       	mov	r19, r18
    6e8c:	40 e2       	ldi	r20, 0x20	; 32
    6e8e:	33 23       	and	r19, r19
    6e90:	19 f0       	breq	.+6      	; 0x6e98 <dtoa_prf+0x152>
    6e92:	41 93       	st	Z+, r20
    6e94:	31 50       	subi	r19, 0x01	; 1
    6e96:	fb cf       	rjmp	.-10     	; 0x6e8e <dtoa_prf+0x148>
    6e98:	fc 01       	movw	r30, r24
    6e9a:	e2 0f       	add	r30, r18
    6e9c:	f1 1d       	adc	r31, r1
    6e9e:	10 82       	st	Z, r1
    6ea0:	8e ef       	ldi	r24, 0xFE	; 254
    6ea2:	9f ef       	ldi	r25, 0xFF	; 255
    6ea4:	a6 c0       	rjmp	.+332    	; 0x6ff2 <dtoa_prf+0x2ac>
    6ea6:	21 e0       	ldi	r18, 0x01	; 1
    6ea8:	30 e0       	ldi	r19, 0x00	; 0
    6eaa:	91 11       	cpse	r25, r1
    6eac:	02 c0       	rjmp	.+4      	; 0x6eb2 <dtoa_prf+0x16c>
    6eae:	20 e0       	ldi	r18, 0x00	; 0
    6eb0:	30 e0       	ldi	r19, 0x00	; 0
    6eb2:	16 16       	cp	r1, r22
    6eb4:	17 06       	cpc	r1, r23
    6eb6:	1c f4       	brge	.+6      	; 0x6ebe <dtoa_prf+0x178>
    6eb8:	fb 01       	movw	r30, r22
    6eba:	31 96       	adiw	r30, 0x01	; 1
    6ebc:	02 c0       	rjmp	.+4      	; 0x6ec2 <dtoa_prf+0x17c>
    6ebe:	e1 e0       	ldi	r30, 0x01	; 1
    6ec0:	f0 e0       	ldi	r31, 0x00	; 0
    6ec2:	2e 0f       	add	r18, r30
    6ec4:	3f 1f       	adc	r19, r31
    6ec6:	bb 20       	and	r11, r11
    6ec8:	21 f0       	breq	.+8      	; 0x6ed2 <dtoa_prf+0x18c>
    6eca:	eb 2d       	mov	r30, r11
    6ecc:	f0 e0       	ldi	r31, 0x00	; 0
    6ece:	31 96       	adiw	r30, 0x01	; 1
    6ed0:	02 c0       	rjmp	.+4      	; 0x6ed6 <dtoa_prf+0x190>
    6ed2:	e0 e0       	ldi	r30, 0x00	; 0
    6ed4:	f0 e0       	ldi	r31, 0x00	; 0
    6ed6:	2e 0f       	add	r18, r30
    6ed8:	3f 1f       	adc	r19, r31
    6eda:	e1 2f       	mov	r30, r17
    6edc:	f0 e0       	ldi	r31, 0x00	; 0
    6ede:	2e 17       	cp	r18, r30
    6ee0:	3f 07       	cpc	r19, r31
    6ee2:	1c f4       	brge	.+6      	; 0x6eea <dtoa_prf+0x1a4>
    6ee4:	12 1b       	sub	r17, r18
    6ee6:	21 2f       	mov	r18, r17
    6ee8:	01 c0       	rjmp	.+2      	; 0x6eec <dtoa_prf+0x1a6>
    6eea:	20 e0       	ldi	r18, 0x00	; 0
    6eec:	8e 2d       	mov	r24, r14
    6eee:	88 71       	andi	r24, 0x18	; 24
    6ef0:	59 f4       	brne	.+22     	; 0x6f08 <dtoa_prf+0x1c2>
    6ef2:	f6 01       	movw	r30, r12
    6ef4:	82 2f       	mov	r24, r18
    6ef6:	30 e2       	ldi	r19, 0x20	; 32
    6ef8:	88 23       	and	r24, r24
    6efa:	19 f0       	breq	.+6      	; 0x6f02 <dtoa_prf+0x1bc>
    6efc:	31 93       	st	Z+, r19
    6efe:	81 50       	subi	r24, 0x01	; 1
    6f00:	fb cf       	rjmp	.-10     	; 0x6ef8 <dtoa_prf+0x1b2>
    6f02:	c2 0e       	add	r12, r18
    6f04:	d1 1c       	adc	r13, r1
    6f06:	20 e0       	ldi	r18, 0x00	; 0
    6f08:	99 23       	and	r25, r25
    6f0a:	29 f0       	breq	.+10     	; 0x6f16 <dtoa_prf+0x1d0>
    6f0c:	d6 01       	movw	r26, r12
    6f0e:	9c 93       	st	X, r25
    6f10:	f6 01       	movw	r30, r12
    6f12:	31 96       	adiw	r30, 0x01	; 1
    6f14:	6f 01       	movw	r12, r30
    6f16:	51 11       	cpse	r21, r1
    6f18:	0b c0       	rjmp	.+22     	; 0x6f30 <dtoa_prf+0x1ea>
    6f1a:	f6 01       	movw	r30, r12
    6f1c:	82 2f       	mov	r24, r18
    6f1e:	90 e3       	ldi	r25, 0x30	; 48
    6f20:	88 23       	and	r24, r24
    6f22:	19 f0       	breq	.+6      	; 0x6f2a <dtoa_prf+0x1e4>
    6f24:	91 93       	st	Z+, r25
    6f26:	81 50       	subi	r24, 0x01	; 1
    6f28:	fb cf       	rjmp	.-10     	; 0x6f20 <dtoa_prf+0x1da>
    6f2a:	c2 0e       	add	r12, r18
    6f2c:	d1 1c       	adc	r13, r1
    6f2e:	20 e0       	ldi	r18, 0x00	; 0
    6f30:	0f 2d       	mov	r16, r15
    6f32:	06 0f       	add	r16, r22
    6f34:	9a 81       	ldd	r25, Y+2	; 0x02
    6f36:	34 2f       	mov	r19, r20
    6f38:	30 71       	andi	r19, 0x10	; 16
    6f3a:	44 ff       	sbrs	r20, 4
    6f3c:	03 c0       	rjmp	.+6      	; 0x6f44 <dtoa_prf+0x1fe>
    6f3e:	91 33       	cpi	r25, 0x31	; 49
    6f40:	09 f4       	brne	.+2      	; 0x6f44 <dtoa_prf+0x1fe>
    6f42:	01 50       	subi	r16, 0x01	; 1
    6f44:	10 16       	cp	r1, r16
    6f46:	24 f4       	brge	.+8      	; 0x6f50 <dtoa_prf+0x20a>
    6f48:	09 30       	cpi	r16, 0x09	; 9
    6f4a:	18 f0       	brcs	.+6      	; 0x6f52 <dtoa_prf+0x20c>
    6f4c:	08 e0       	ldi	r16, 0x08	; 8
    6f4e:	01 c0       	rjmp	.+2      	; 0x6f52 <dtoa_prf+0x20c>
    6f50:	01 e0       	ldi	r16, 0x01	; 1
    6f52:	ab 01       	movw	r20, r22
    6f54:	77 ff       	sbrs	r23, 7
    6f56:	02 c0       	rjmp	.+4      	; 0x6f5c <dtoa_prf+0x216>
    6f58:	40 e0       	ldi	r20, 0x00	; 0
    6f5a:	50 e0       	ldi	r21, 0x00	; 0
    6f5c:	fb 01       	movw	r30, r22
    6f5e:	e4 1b       	sub	r30, r20
    6f60:	f5 0b       	sbc	r31, r21
    6f62:	a1 e0       	ldi	r26, 0x01	; 1
    6f64:	b0 e0       	ldi	r27, 0x00	; 0
    6f66:	ac 0f       	add	r26, r28
    6f68:	bd 1f       	adc	r27, r29
    6f6a:	ea 0f       	add	r30, r26
    6f6c:	fb 1f       	adc	r31, r27
    6f6e:	8e e2       	ldi	r24, 0x2E	; 46
    6f70:	a8 2e       	mov	r10, r24
    6f72:	4b 01       	movw	r8, r22
    6f74:	80 1a       	sub	r8, r16
    6f76:	91 08       	sbc	r9, r1
    6f78:	0b 2d       	mov	r16, r11
    6f7a:	10 e0       	ldi	r17, 0x00	; 0
    6f7c:	11 95       	neg	r17
    6f7e:	01 95       	neg	r16
    6f80:	11 09       	sbc	r17, r1
    6f82:	4f 3f       	cpi	r20, 0xFF	; 255
    6f84:	bf ef       	ldi	r27, 0xFF	; 255
    6f86:	5b 07       	cpc	r21, r27
    6f88:	21 f4       	brne	.+8      	; 0x6f92 <dtoa_prf+0x24c>
    6f8a:	d6 01       	movw	r26, r12
    6f8c:	ac 92       	st	X, r10
    6f8e:	11 96       	adiw	r26, 0x01	; 1
    6f90:	6d 01       	movw	r12, r26
    6f92:	64 17       	cp	r22, r20
    6f94:	75 07       	cpc	r23, r21
    6f96:	2c f0       	brlt	.+10     	; 0x6fa2 <dtoa_prf+0x25c>
    6f98:	84 16       	cp	r8, r20
    6f9a:	95 06       	cpc	r9, r21
    6f9c:	14 f4       	brge	.+4      	; 0x6fa2 <dtoa_prf+0x25c>
    6f9e:	81 81       	ldd	r24, Z+1	; 0x01
    6fa0:	01 c0       	rjmp	.+2      	; 0x6fa4 <dtoa_prf+0x25e>
    6fa2:	80 e3       	ldi	r24, 0x30	; 48
    6fa4:	41 50       	subi	r20, 0x01	; 1
    6fa6:	51 09       	sbc	r21, r1
    6fa8:	31 96       	adiw	r30, 0x01	; 1
    6faa:	d6 01       	movw	r26, r12
    6fac:	11 96       	adiw	r26, 0x01	; 1
    6fae:	7d 01       	movw	r14, r26
    6fb0:	40 17       	cp	r20, r16
    6fb2:	51 07       	cpc	r21, r17
    6fb4:	24 f0       	brlt	.+8      	; 0x6fbe <dtoa_prf+0x278>
    6fb6:	d6 01       	movw	r26, r12
    6fb8:	8c 93       	st	X, r24
    6fba:	67 01       	movw	r12, r14
    6fbc:	e2 cf       	rjmp	.-60     	; 0x6f82 <dtoa_prf+0x23c>
    6fbe:	64 17       	cp	r22, r20
    6fc0:	75 07       	cpc	r23, r21
    6fc2:	39 f4       	brne	.+14     	; 0x6fd2 <dtoa_prf+0x28c>
    6fc4:	96 33       	cpi	r25, 0x36	; 54
    6fc6:	20 f4       	brcc	.+8      	; 0x6fd0 <dtoa_prf+0x28a>
    6fc8:	95 33       	cpi	r25, 0x35	; 53
    6fca:	19 f4       	brne	.+6      	; 0x6fd2 <dtoa_prf+0x28c>
    6fcc:	31 11       	cpse	r19, r1
    6fce:	01 c0       	rjmp	.+2      	; 0x6fd2 <dtoa_prf+0x28c>
    6fd0:	81 e3       	ldi	r24, 0x31	; 49
    6fd2:	f6 01       	movw	r30, r12
    6fd4:	80 83       	st	Z, r24
    6fd6:	f7 01       	movw	r30, r14
    6fd8:	82 2f       	mov	r24, r18
    6fda:	90 e2       	ldi	r25, 0x20	; 32
    6fdc:	88 23       	and	r24, r24
    6fde:	19 f0       	breq	.+6      	; 0x6fe6 <dtoa_prf+0x2a0>
    6fe0:	91 93       	st	Z+, r25
    6fe2:	81 50       	subi	r24, 0x01	; 1
    6fe4:	fb cf       	rjmp	.-10     	; 0x6fdc <dtoa_prf+0x296>
    6fe6:	f7 01       	movw	r30, r14
    6fe8:	e2 0f       	add	r30, r18
    6fea:	f1 1d       	adc	r31, r1
    6fec:	10 82       	st	Z, r1
    6fee:	80 e0       	ldi	r24, 0x00	; 0
    6ff0:	90 e0       	ldi	r25, 0x00	; 0
    6ff2:	29 96       	adiw	r28, 0x09	; 9
    6ff4:	ec e0       	ldi	r30, 0x0C	; 12
    6ff6:	0c 94 a7 39 	jmp	0x734e	; 0x734e <__epilogue_restores__+0xc>

00006ffa <__ftoa_engine>:
    6ffa:	28 30       	cpi	r18, 0x08	; 8
    6ffc:	08 f0       	brcs	.+2      	; 0x7000 <__ftoa_engine+0x6>
    6ffe:	27 e0       	ldi	r18, 0x07	; 7
    7000:	33 27       	eor	r19, r19
    7002:	da 01       	movw	r26, r20
    7004:	99 0f       	add	r25, r25
    7006:	31 1d       	adc	r19, r1
    7008:	87 fd       	sbrc	r24, 7
    700a:	91 60       	ori	r25, 0x01	; 1
    700c:	00 96       	adiw	r24, 0x00	; 0
    700e:	61 05       	cpc	r22, r1
    7010:	71 05       	cpc	r23, r1
    7012:	39 f4       	brne	.+14     	; 0x7022 <__ftoa_engine+0x28>
    7014:	32 60       	ori	r19, 0x02	; 2
    7016:	2e 5f       	subi	r18, 0xFE	; 254
    7018:	3d 93       	st	X+, r19
    701a:	30 e3       	ldi	r19, 0x30	; 48
    701c:	2a 95       	dec	r18
    701e:	e1 f7       	brne	.-8      	; 0x7018 <__ftoa_engine+0x1e>
    7020:	08 95       	ret
    7022:	9f 3f       	cpi	r25, 0xFF	; 255
    7024:	30 f0       	brcs	.+12     	; 0x7032 <__ftoa_engine+0x38>
    7026:	80 38       	cpi	r24, 0x80	; 128
    7028:	71 05       	cpc	r23, r1
    702a:	61 05       	cpc	r22, r1
    702c:	09 f0       	breq	.+2      	; 0x7030 <__ftoa_engine+0x36>
    702e:	3c 5f       	subi	r19, 0xFC	; 252
    7030:	3c 5f       	subi	r19, 0xFC	; 252
    7032:	3d 93       	st	X+, r19
    7034:	91 30       	cpi	r25, 0x01	; 1
    7036:	08 f0       	brcs	.+2      	; 0x703a <__ftoa_engine+0x40>
    7038:	80 68       	ori	r24, 0x80	; 128
    703a:	91 1d       	adc	r25, r1
    703c:	df 93       	push	r29
    703e:	cf 93       	push	r28
    7040:	1f 93       	push	r17
    7042:	0f 93       	push	r16
    7044:	ff 92       	push	r15
    7046:	ef 92       	push	r14
    7048:	19 2f       	mov	r17, r25
    704a:	98 7f       	andi	r25, 0xF8	; 248
    704c:	96 95       	lsr	r25
    704e:	e9 2f       	mov	r30, r25
    7050:	96 95       	lsr	r25
    7052:	96 95       	lsr	r25
    7054:	e9 0f       	add	r30, r25
    7056:	ff 27       	eor	r31, r31
    7058:	e2 51       	subi	r30, 0x12	; 18
    705a:	ff 4f       	sbci	r31, 0xFF	; 255
    705c:	99 27       	eor	r25, r25
    705e:	33 27       	eor	r19, r19
    7060:	ee 24       	eor	r14, r14
    7062:	ff 24       	eor	r15, r15
    7064:	a7 01       	movw	r20, r14
    7066:	e7 01       	movw	r28, r14
    7068:	05 90       	lpm	r0, Z+
    706a:	08 94       	sec
    706c:	07 94       	ror	r0
    706e:	28 f4       	brcc	.+10     	; 0x707a <__ftoa_engine+0x80>
    7070:	36 0f       	add	r19, r22
    7072:	e7 1e       	adc	r14, r23
    7074:	f8 1e       	adc	r15, r24
    7076:	49 1f       	adc	r20, r25
    7078:	51 1d       	adc	r21, r1
    707a:	66 0f       	add	r22, r22
    707c:	77 1f       	adc	r23, r23
    707e:	88 1f       	adc	r24, r24
    7080:	99 1f       	adc	r25, r25
    7082:	06 94       	lsr	r0
    7084:	a1 f7       	brne	.-24     	; 0x706e <__ftoa_engine+0x74>
    7086:	05 90       	lpm	r0, Z+
    7088:	07 94       	ror	r0
    708a:	28 f4       	brcc	.+10     	; 0x7096 <__ftoa_engine+0x9c>
    708c:	e7 0e       	add	r14, r23
    708e:	f8 1e       	adc	r15, r24
    7090:	49 1f       	adc	r20, r25
    7092:	56 1f       	adc	r21, r22
    7094:	c1 1d       	adc	r28, r1
    7096:	77 0f       	add	r23, r23
    7098:	88 1f       	adc	r24, r24
    709a:	99 1f       	adc	r25, r25
    709c:	66 1f       	adc	r22, r22
    709e:	06 94       	lsr	r0
    70a0:	a1 f7       	brne	.-24     	; 0x708a <__ftoa_engine+0x90>
    70a2:	05 90       	lpm	r0, Z+
    70a4:	07 94       	ror	r0
    70a6:	28 f4       	brcc	.+10     	; 0x70b2 <__ftoa_engine+0xb8>
    70a8:	f8 0e       	add	r15, r24
    70aa:	49 1f       	adc	r20, r25
    70ac:	56 1f       	adc	r21, r22
    70ae:	c7 1f       	adc	r28, r23
    70b0:	d1 1d       	adc	r29, r1
    70b2:	88 0f       	add	r24, r24
    70b4:	99 1f       	adc	r25, r25
    70b6:	66 1f       	adc	r22, r22
    70b8:	77 1f       	adc	r23, r23
    70ba:	06 94       	lsr	r0
    70bc:	a1 f7       	brne	.-24     	; 0x70a6 <__ftoa_engine+0xac>
    70be:	05 90       	lpm	r0, Z+
    70c0:	07 94       	ror	r0
    70c2:	20 f4       	brcc	.+8      	; 0x70cc <__ftoa_engine+0xd2>
    70c4:	49 0f       	add	r20, r25
    70c6:	56 1f       	adc	r21, r22
    70c8:	c7 1f       	adc	r28, r23
    70ca:	d8 1f       	adc	r29, r24
    70cc:	99 0f       	add	r25, r25
    70ce:	66 1f       	adc	r22, r22
    70d0:	77 1f       	adc	r23, r23
    70d2:	88 1f       	adc	r24, r24
    70d4:	06 94       	lsr	r0
    70d6:	a9 f7       	brne	.-22     	; 0x70c2 <__ftoa_engine+0xc8>
    70d8:	84 91       	lpm	r24, Z
    70da:	10 95       	com	r17
    70dc:	17 70       	andi	r17, 0x07	; 7
    70de:	41 f0       	breq	.+16     	; 0x70f0 <__ftoa_engine+0xf6>
    70e0:	d6 95       	lsr	r29
    70e2:	c7 95       	ror	r28
    70e4:	57 95       	ror	r21
    70e6:	47 95       	ror	r20
    70e8:	f7 94       	ror	r15
    70ea:	e7 94       	ror	r14
    70ec:	1a 95       	dec	r17
    70ee:	c1 f7       	brne	.-16     	; 0x70e0 <__ftoa_engine+0xe6>
    70f0:	e4 e9       	ldi	r30, 0x94	; 148
    70f2:	f0 e0       	ldi	r31, 0x00	; 0
    70f4:	68 94       	set
    70f6:	15 90       	lpm	r1, Z+
    70f8:	15 91       	lpm	r17, Z+
    70fa:	35 91       	lpm	r19, Z+
    70fc:	65 91       	lpm	r22, Z+
    70fe:	95 91       	lpm	r25, Z+
    7100:	05 90       	lpm	r0, Z+
    7102:	7f e2       	ldi	r23, 0x2F	; 47
    7104:	73 95       	inc	r23
    7106:	e1 18       	sub	r14, r1
    7108:	f1 0a       	sbc	r15, r17
    710a:	43 0b       	sbc	r20, r19
    710c:	56 0b       	sbc	r21, r22
    710e:	c9 0b       	sbc	r28, r25
    7110:	d0 09       	sbc	r29, r0
    7112:	c0 f7       	brcc	.-16     	; 0x7104 <__ftoa_engine+0x10a>
    7114:	e1 0c       	add	r14, r1
    7116:	f1 1e       	adc	r15, r17
    7118:	43 1f       	adc	r20, r19
    711a:	56 1f       	adc	r21, r22
    711c:	c9 1f       	adc	r28, r25
    711e:	d0 1d       	adc	r29, r0
    7120:	7e f4       	brtc	.+30     	; 0x7140 <__ftoa_engine+0x146>
    7122:	70 33       	cpi	r23, 0x30	; 48
    7124:	11 f4       	brne	.+4      	; 0x712a <__ftoa_engine+0x130>
    7126:	8a 95       	dec	r24
    7128:	e6 cf       	rjmp	.-52     	; 0x70f6 <__ftoa_engine+0xfc>
    712a:	e8 94       	clt
    712c:	01 50       	subi	r16, 0x01	; 1
    712e:	30 f0       	brcs	.+12     	; 0x713c <__ftoa_engine+0x142>
    7130:	08 0f       	add	r16, r24
    7132:	0a f4       	brpl	.+2      	; 0x7136 <__ftoa_engine+0x13c>
    7134:	00 27       	eor	r16, r16
    7136:	02 17       	cp	r16, r18
    7138:	08 f4       	brcc	.+2      	; 0x713c <__ftoa_engine+0x142>
    713a:	20 2f       	mov	r18, r16
    713c:	23 95       	inc	r18
    713e:	02 2f       	mov	r16, r18
    7140:	7a 33       	cpi	r23, 0x3A	; 58
    7142:	28 f0       	brcs	.+10     	; 0x714e <__ftoa_engine+0x154>
    7144:	79 e3       	ldi	r23, 0x39	; 57
    7146:	7d 93       	st	X+, r23
    7148:	2a 95       	dec	r18
    714a:	e9 f7       	brne	.-6      	; 0x7146 <__ftoa_engine+0x14c>
    714c:	10 c0       	rjmp	.+32     	; 0x716e <__ftoa_engine+0x174>
    714e:	7d 93       	st	X+, r23
    7150:	2a 95       	dec	r18
    7152:	89 f6       	brne	.-94     	; 0x70f6 <__ftoa_engine+0xfc>
    7154:	06 94       	lsr	r0
    7156:	97 95       	ror	r25
    7158:	67 95       	ror	r22
    715a:	37 95       	ror	r19
    715c:	17 95       	ror	r17
    715e:	17 94       	ror	r1
    7160:	e1 18       	sub	r14, r1
    7162:	f1 0a       	sbc	r15, r17
    7164:	43 0b       	sbc	r20, r19
    7166:	56 0b       	sbc	r21, r22
    7168:	c9 0b       	sbc	r28, r25
    716a:	d0 09       	sbc	r29, r0
    716c:	98 f0       	brcs	.+38     	; 0x7194 <__ftoa_engine+0x19a>
    716e:	23 95       	inc	r18
    7170:	7e 91       	ld	r23, -X
    7172:	73 95       	inc	r23
    7174:	7a 33       	cpi	r23, 0x3A	; 58
    7176:	08 f0       	brcs	.+2      	; 0x717a <__ftoa_engine+0x180>
    7178:	70 e3       	ldi	r23, 0x30	; 48
    717a:	7c 93       	st	X, r23
    717c:	20 13       	cpse	r18, r16
    717e:	b8 f7       	brcc	.-18     	; 0x716e <__ftoa_engine+0x174>
    7180:	7e 91       	ld	r23, -X
    7182:	70 61       	ori	r23, 0x10	; 16
    7184:	7d 93       	st	X+, r23
    7186:	30 f0       	brcs	.+12     	; 0x7194 <__ftoa_engine+0x19a>
    7188:	83 95       	inc	r24
    718a:	71 e3       	ldi	r23, 0x31	; 49
    718c:	7d 93       	st	X+, r23
    718e:	70 e3       	ldi	r23, 0x30	; 48
    7190:	2a 95       	dec	r18
    7192:	e1 f7       	brne	.-8      	; 0x718c <__ftoa_engine+0x192>
    7194:	11 24       	eor	r1, r1
    7196:	ef 90       	pop	r14
    7198:	ff 90       	pop	r15
    719a:	0f 91       	pop	r16
    719c:	1f 91       	pop	r17
    719e:	cf 91       	pop	r28
    71a0:	df 91       	pop	r29
    71a2:	99 27       	eor	r25, r25
    71a4:	87 fd       	sbrc	r24, 7
    71a6:	90 95       	com	r25
    71a8:	08 95       	ret

000071aa <strnlen_P>:
    71aa:	fc 01       	movw	r30, r24
    71ac:	05 90       	lpm	r0, Z+
    71ae:	61 50       	subi	r22, 0x01	; 1
    71b0:	70 40       	sbci	r23, 0x00	; 0
    71b2:	01 10       	cpse	r0, r1
    71b4:	d8 f7       	brcc	.-10     	; 0x71ac <strnlen_P+0x2>
    71b6:	80 95       	com	r24
    71b8:	90 95       	com	r25
    71ba:	8e 0f       	add	r24, r30
    71bc:	9f 1f       	adc	r25, r31
    71be:	08 95       	ret

000071c0 <strnlen>:
    71c0:	fc 01       	movw	r30, r24
    71c2:	61 50       	subi	r22, 0x01	; 1
    71c4:	70 40       	sbci	r23, 0x00	; 0
    71c6:	01 90       	ld	r0, Z+
    71c8:	01 10       	cpse	r0, r1
    71ca:	d8 f7       	brcc	.-10     	; 0x71c2 <strnlen+0x2>
    71cc:	80 95       	com	r24
    71ce:	90 95       	com	r25
    71d0:	8e 0f       	add	r24, r30
    71d2:	9f 1f       	adc	r25, r31
    71d4:	08 95       	ret

000071d6 <fputc>:
    71d6:	0f 93       	push	r16
    71d8:	1f 93       	push	r17
    71da:	cf 93       	push	r28
    71dc:	df 93       	push	r29
    71de:	fb 01       	movw	r30, r22
    71e0:	23 81       	ldd	r18, Z+3	; 0x03
    71e2:	21 fd       	sbrc	r18, 1
    71e4:	03 c0       	rjmp	.+6      	; 0x71ec <fputc+0x16>
    71e6:	8f ef       	ldi	r24, 0xFF	; 255
    71e8:	9f ef       	ldi	r25, 0xFF	; 255
    71ea:	2c c0       	rjmp	.+88     	; 0x7244 <fputc+0x6e>
    71ec:	22 ff       	sbrs	r18, 2
    71ee:	16 c0       	rjmp	.+44     	; 0x721c <fputc+0x46>
    71f0:	46 81       	ldd	r20, Z+6	; 0x06
    71f2:	57 81       	ldd	r21, Z+7	; 0x07
    71f4:	24 81       	ldd	r18, Z+4	; 0x04
    71f6:	35 81       	ldd	r19, Z+5	; 0x05
    71f8:	42 17       	cp	r20, r18
    71fa:	53 07       	cpc	r21, r19
    71fc:	44 f4       	brge	.+16     	; 0x720e <fputc+0x38>
    71fe:	a0 81       	ld	r26, Z
    7200:	b1 81       	ldd	r27, Z+1	; 0x01
    7202:	9d 01       	movw	r18, r26
    7204:	2f 5f       	subi	r18, 0xFF	; 255
    7206:	3f 4f       	sbci	r19, 0xFF	; 255
    7208:	31 83       	std	Z+1, r19	; 0x01
    720a:	20 83       	st	Z, r18
    720c:	8c 93       	st	X, r24
    720e:	26 81       	ldd	r18, Z+6	; 0x06
    7210:	37 81       	ldd	r19, Z+7	; 0x07
    7212:	2f 5f       	subi	r18, 0xFF	; 255
    7214:	3f 4f       	sbci	r19, 0xFF	; 255
    7216:	37 83       	std	Z+7, r19	; 0x07
    7218:	26 83       	std	Z+6, r18	; 0x06
    721a:	14 c0       	rjmp	.+40     	; 0x7244 <fputc+0x6e>
    721c:	8b 01       	movw	r16, r22
    721e:	ec 01       	movw	r28, r24
    7220:	fb 01       	movw	r30, r22
    7222:	00 84       	ldd	r0, Z+8	; 0x08
    7224:	f1 85       	ldd	r31, Z+9	; 0x09
    7226:	e0 2d       	mov	r30, r0
    7228:	09 95       	icall
    722a:	89 2b       	or	r24, r25
    722c:	e1 f6       	brne	.-72     	; 0x71e6 <fputc+0x10>
    722e:	d8 01       	movw	r26, r16
    7230:	16 96       	adiw	r26, 0x06	; 6
    7232:	8d 91       	ld	r24, X+
    7234:	9c 91       	ld	r25, X
    7236:	17 97       	sbiw	r26, 0x07	; 7
    7238:	01 96       	adiw	r24, 0x01	; 1
    723a:	17 96       	adiw	r26, 0x07	; 7
    723c:	9c 93       	st	X, r25
    723e:	8e 93       	st	-X, r24
    7240:	16 97       	sbiw	r26, 0x06	; 6
    7242:	ce 01       	movw	r24, r28
    7244:	df 91       	pop	r29
    7246:	cf 91       	pop	r28
    7248:	1f 91       	pop	r17
    724a:	0f 91       	pop	r16
    724c:	08 95       	ret

0000724e <__ultoa_invert>:
    724e:	fa 01       	movw	r30, r20
    7250:	aa 27       	eor	r26, r26
    7252:	28 30       	cpi	r18, 0x08	; 8
    7254:	51 f1       	breq	.+84     	; 0x72aa <__ultoa_invert+0x5c>
    7256:	20 31       	cpi	r18, 0x10	; 16
    7258:	81 f1       	breq	.+96     	; 0x72ba <__ultoa_invert+0x6c>
    725a:	e8 94       	clt
    725c:	6f 93       	push	r22
    725e:	6e 7f       	andi	r22, 0xFE	; 254
    7260:	6e 5f       	subi	r22, 0xFE	; 254
    7262:	7f 4f       	sbci	r23, 0xFF	; 255
    7264:	8f 4f       	sbci	r24, 0xFF	; 255
    7266:	9f 4f       	sbci	r25, 0xFF	; 255
    7268:	af 4f       	sbci	r26, 0xFF	; 255
    726a:	b1 e0       	ldi	r27, 0x01	; 1
    726c:	3e d0       	rcall	.+124    	; 0x72ea <__ultoa_invert+0x9c>
    726e:	b4 e0       	ldi	r27, 0x04	; 4
    7270:	3c d0       	rcall	.+120    	; 0x72ea <__ultoa_invert+0x9c>
    7272:	67 0f       	add	r22, r23
    7274:	78 1f       	adc	r23, r24
    7276:	89 1f       	adc	r24, r25
    7278:	9a 1f       	adc	r25, r26
    727a:	a1 1d       	adc	r26, r1
    727c:	68 0f       	add	r22, r24
    727e:	79 1f       	adc	r23, r25
    7280:	8a 1f       	adc	r24, r26
    7282:	91 1d       	adc	r25, r1
    7284:	a1 1d       	adc	r26, r1
    7286:	6a 0f       	add	r22, r26
    7288:	71 1d       	adc	r23, r1
    728a:	81 1d       	adc	r24, r1
    728c:	91 1d       	adc	r25, r1
    728e:	a1 1d       	adc	r26, r1
    7290:	20 d0       	rcall	.+64     	; 0x72d2 <__ultoa_invert+0x84>
    7292:	09 f4       	brne	.+2      	; 0x7296 <__ultoa_invert+0x48>
    7294:	68 94       	set
    7296:	3f 91       	pop	r19
    7298:	2a e0       	ldi	r18, 0x0A	; 10
    729a:	26 9f       	mul	r18, r22
    729c:	11 24       	eor	r1, r1
    729e:	30 19       	sub	r19, r0
    72a0:	30 5d       	subi	r19, 0xD0	; 208
    72a2:	31 93       	st	Z+, r19
    72a4:	de f6       	brtc	.-74     	; 0x725c <__ultoa_invert+0xe>
    72a6:	cf 01       	movw	r24, r30
    72a8:	08 95       	ret
    72aa:	46 2f       	mov	r20, r22
    72ac:	47 70       	andi	r20, 0x07	; 7
    72ae:	40 5d       	subi	r20, 0xD0	; 208
    72b0:	41 93       	st	Z+, r20
    72b2:	b3 e0       	ldi	r27, 0x03	; 3
    72b4:	0f d0       	rcall	.+30     	; 0x72d4 <__ultoa_invert+0x86>
    72b6:	c9 f7       	brne	.-14     	; 0x72aa <__ultoa_invert+0x5c>
    72b8:	f6 cf       	rjmp	.-20     	; 0x72a6 <__ultoa_invert+0x58>
    72ba:	46 2f       	mov	r20, r22
    72bc:	4f 70       	andi	r20, 0x0F	; 15
    72be:	40 5d       	subi	r20, 0xD0	; 208
    72c0:	4a 33       	cpi	r20, 0x3A	; 58
    72c2:	18 f0       	brcs	.+6      	; 0x72ca <__ultoa_invert+0x7c>
    72c4:	49 5d       	subi	r20, 0xD9	; 217
    72c6:	31 fd       	sbrc	r19, 1
    72c8:	40 52       	subi	r20, 0x20	; 32
    72ca:	41 93       	st	Z+, r20
    72cc:	02 d0       	rcall	.+4      	; 0x72d2 <__ultoa_invert+0x84>
    72ce:	a9 f7       	brne	.-22     	; 0x72ba <__ultoa_invert+0x6c>
    72d0:	ea cf       	rjmp	.-44     	; 0x72a6 <__ultoa_invert+0x58>
    72d2:	b4 e0       	ldi	r27, 0x04	; 4
    72d4:	a6 95       	lsr	r26
    72d6:	97 95       	ror	r25
    72d8:	87 95       	ror	r24
    72da:	77 95       	ror	r23
    72dc:	67 95       	ror	r22
    72de:	ba 95       	dec	r27
    72e0:	c9 f7       	brne	.-14     	; 0x72d4 <__ultoa_invert+0x86>
    72e2:	00 97       	sbiw	r24, 0x00	; 0
    72e4:	61 05       	cpc	r22, r1
    72e6:	71 05       	cpc	r23, r1
    72e8:	08 95       	ret
    72ea:	9b 01       	movw	r18, r22
    72ec:	ac 01       	movw	r20, r24
    72ee:	0a 2e       	mov	r0, r26
    72f0:	06 94       	lsr	r0
    72f2:	57 95       	ror	r21
    72f4:	47 95       	ror	r20
    72f6:	37 95       	ror	r19
    72f8:	27 95       	ror	r18
    72fa:	ba 95       	dec	r27
    72fc:	c9 f7       	brne	.-14     	; 0x72f0 <__ultoa_invert+0xa2>
    72fe:	62 0f       	add	r22, r18
    7300:	73 1f       	adc	r23, r19
    7302:	84 1f       	adc	r24, r20
    7304:	95 1f       	adc	r25, r21
    7306:	a0 1d       	adc	r26, r0
    7308:	08 95       	ret

0000730a <__prologue_saves__>:
    730a:	2f 92       	push	r2
    730c:	3f 92       	push	r3
    730e:	4f 92       	push	r4
    7310:	5f 92       	push	r5
    7312:	6f 92       	push	r6
    7314:	7f 92       	push	r7
    7316:	8f 92       	push	r8
    7318:	9f 92       	push	r9
    731a:	af 92       	push	r10
    731c:	bf 92       	push	r11
    731e:	cf 92       	push	r12
    7320:	df 92       	push	r13
    7322:	ef 92       	push	r14
    7324:	ff 92       	push	r15
    7326:	0f 93       	push	r16
    7328:	1f 93       	push	r17
    732a:	cf 93       	push	r28
    732c:	df 93       	push	r29
    732e:	cd b7       	in	r28, 0x3d	; 61
    7330:	de b7       	in	r29, 0x3e	; 62
    7332:	ca 1b       	sub	r28, r26
    7334:	db 0b       	sbc	r29, r27
    7336:	0f b6       	in	r0, 0x3f	; 63
    7338:	f8 94       	cli
    733a:	de bf       	out	0x3e, r29	; 62
    733c:	0f be       	out	0x3f, r0	; 63
    733e:	cd bf       	out	0x3d, r28	; 61
    7340:	09 94       	ijmp

00007342 <__epilogue_restores__>:
    7342:	2a 88       	ldd	r2, Y+18	; 0x12
    7344:	39 88       	ldd	r3, Y+17	; 0x11
    7346:	48 88       	ldd	r4, Y+16	; 0x10
    7348:	5f 84       	ldd	r5, Y+15	; 0x0f
    734a:	6e 84       	ldd	r6, Y+14	; 0x0e
    734c:	7d 84       	ldd	r7, Y+13	; 0x0d
    734e:	8c 84       	ldd	r8, Y+12	; 0x0c
    7350:	9b 84       	ldd	r9, Y+11	; 0x0b
    7352:	aa 84       	ldd	r10, Y+10	; 0x0a
    7354:	b9 84       	ldd	r11, Y+9	; 0x09
    7356:	c8 84       	ldd	r12, Y+8	; 0x08
    7358:	df 80       	ldd	r13, Y+7	; 0x07
    735a:	ee 80       	ldd	r14, Y+6	; 0x06
    735c:	fd 80       	ldd	r15, Y+5	; 0x05
    735e:	0c 81       	ldd	r16, Y+4	; 0x04
    7360:	1b 81       	ldd	r17, Y+3	; 0x03
    7362:	aa 81       	ldd	r26, Y+2	; 0x02
    7364:	b9 81       	ldd	r27, Y+1	; 0x01
    7366:	ce 0f       	add	r28, r30
    7368:	d1 1d       	adc	r29, r1
    736a:	0f b6       	in	r0, 0x3f	; 63
    736c:	f8 94       	cli
    736e:	de bf       	out	0x3e, r29	; 62
    7370:	0f be       	out	0x3f, r0	; 63
    7372:	cd bf       	out	0x3d, r28	; 61
    7374:	ed 01       	movw	r28, r26
    7376:	08 95       	ret

00007378 <__do_global_dtors>:
    7378:	10 e1       	ldi	r17, 0x10	; 16
    737a:	cb e3       	ldi	r28, 0x3B	; 59
    737c:	d0 e1       	ldi	r29, 0x10	; 16
    737e:	04 c0       	rjmp	.+8      	; 0x7388 <__do_global_dtors+0x10>
    7380:	fe 01       	movw	r30, r28
    7382:	0e 94 55 32 	call	0x64aa	; 0x64aa <__tablejump2__>
    7386:	21 96       	adiw	r28, 0x01	; 1
    7388:	cc 33       	cpi	r28, 0x3C	; 60
    738a:	d1 07       	cpc	r29, r17
    738c:	c9 f7       	brne	.-14     	; 0x7380 <__do_global_dtors+0x8>
    738e:	f8 94       	cli

00007390 <__stop_program>:
    7390:	ff cf       	rjmp	.-2      	; 0x7390 <__stop_program>
