
suction_pump.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000013e  00800100  0000712e  000071c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000712e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002c0  0080023e  0080023e  00007300  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00007300  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000735c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000a40  00000000  00000000  0000739c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0001aa21  00000000  00000000  00007ddc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003709  00000000  00000000  000227fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00005dda  00000000  00000000  00025f06  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00002718  00000000  00000000  0002bce0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000048a3  00000000  00000000  0002e3f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000edff  00000000  00000000  00032c9b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000a20  00000000  00000000  00041a9a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 14 10 	jmp	0x2028	; 0x2028 <__dtors_end>
       4:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
       8:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
       c:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
      10:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
      14:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
      18:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
      1c:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
      20:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
      24:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
      28:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
      2c:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
      30:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
      34:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
      38:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
      3c:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
      40:	0c 94 40 1a 	jmp	0x3480	; 0x3480 <__vector_16>
      44:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
      48:	0c 94 0a 18 	jmp	0x3014	; 0x3014 <__vector_18>
      4c:	0c 94 3c 18 	jmp	0x3078	; 0x3078 <__vector_19>
      50:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
      54:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
      58:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
      5c:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
      60:	0c 94 1a 2f 	jmp	0x5e34	; 0x5e34 <__vector_24>
      64:	0c 94 3c 10 	jmp	0x2078	; 0x2078 <__bad_interrupt>
      68:	8c 1e       	adc	r8, r28
      6a:	9b 1e       	adc	r9, r27
      6c:	9f 1e       	adc	r9, r31
      6e:	a3 1e       	adc	r10, r19
      70:	a7 1e       	adc	r10, r23
      72:	ab 1e       	adc	r10, r27
      74:	af 1e       	adc	r10, r31
      76:	b3 1e       	adc	r11, r19
      78:	b7 1e       	adc	r11, r23
      7a:	bb 1e       	adc	r11, r27
      7c:	bf 1e       	adc	r11, r31
      7e:	c3 1e       	adc	r12, r19
      80:	c7 1e       	adc	r12, r23
      82:	cb 1e       	adc	r12, r27
      84:	cf 1e       	adc	r12, r31
      86:	d3 1e       	adc	r13, r19
      88:	d7 1e       	adc	r13, r23
      8a:	db 1e       	adc	r13, r27
      8c:	df 1e       	adc	r13, r31
      8e:	e3 1e       	adc	r14, r19
      90:	e7 1e       	adc	r14, r23
      92:	eb 1e       	adc	r14, r27

00000094 <__trampolines_end>:
      94:	00 40       	sbci	r16, 0x00	; 0
      96:	7a 10       	cpse	r7, r10
      98:	f3 5a       	subi	r31, 0xA3	; 163
      9a:	00 a0       	ldd	r0, Z+32	; 0x20
      9c:	72 4e       	sbci	r23, 0xE2	; 226
      9e:	18 09       	sbc	r17, r8
      a0:	00 10       	cpse	r0, r0
      a2:	a5 d4       	rcall	.+2378   	; 0x9ee <__stack+0xef>
      a4:	e8 00       	.word	0x00e8	; ????
      a6:	00 e8       	ldi	r16, 0x80	; 128
      a8:	76 48       	sbci	r23, 0x86	; 134
      aa:	17 00       	.word	0x0017	; ????
      ac:	00 e4       	ldi	r16, 0x40	; 64
      ae:	0b 54       	subi	r16, 0x4B	; 75
      b0:	02 00       	.word	0x0002	; ????
      b2:	00 ca       	rjmp	.-3072   	; 0xfffff4b4 <__eeprom_end+0xff7ef4b4>
      b4:	9a 3b       	cpi	r25, 0xBA	; 186
      b6:	00 00       	nop
      b8:	00 e1       	ldi	r16, 0x10	; 16
      ba:	f5 05       	cpc	r31, r5
      bc:	00 00       	nop
      be:	80 96       	adiw	r24, 0x20	; 32
      c0:	98 00       	.word	0x0098	; ????
      c2:	00 00       	nop
      c4:	40 42       	sbci	r20, 0x20	; 32
      c6:	0f 00       	.word	0x000f	; ????
      c8:	00 00       	nop
      ca:	a0 86       	std	Z+8, r10	; 0x08
      cc:	01 00       	.word	0x0001	; ????
      ce:	00 00       	nop
      d0:	10 27       	eor	r17, r16
      d2:	00 00       	nop
      d4:	00 00       	nop
      d6:	e8 03       	fmulsu	r22, r16
      d8:	00 00       	nop
      da:	00 00       	nop
      dc:	64 00       	.word	0x0064	; ????
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	0a 00       	.word	0x000a	; ????
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	01 00       	.word	0x0001	; ????
      ea:	00 00       	nop
      ec:	00 00       	nop
      ee:	2c 76       	andi	r18, 0x6C	; 108
      f0:	d8 88       	ldd	r13, Y+16	; 0x10
      f2:	dc 67       	ori	r29, 0x7C	; 124
      f4:	4f 08       	sbc	r4, r15
      f6:	23 df       	rcall	.-442    	; 0xffffff3e <__eeprom_end+0xff7eff3e>
      f8:	c1 df       	rcall	.-126    	; 0x7c <__SREG__+0x3d>
      fa:	ae 59       	subi	r26, 0x9E	; 158
      fc:	e1 b1       	in	r30, 0x01	; 1
      fe:	b7 96       	adiw	r30, 0x27	; 39
     100:	e5 e3       	ldi	r30, 0x35	; 53
     102:	e4 53       	subi	r30, 0x34	; 52
     104:	c6 3a       	cpi	r28, 0xA6	; 166
     106:	e6 51       	subi	r30, 0x16	; 22
     108:	99 76       	andi	r25, 0x69	; 105
     10a:	96 e8       	ldi	r25, 0x86	; 134
     10c:	e6 c2       	rjmp	.+1484   	; 0x6da <_ZL22FreeSerif12pt7bBitmaps+0x2ac>
     10e:	84 26       	eor	r8, r20
     110:	eb 89       	ldd	r30, Y+19	; 0x13
     112:	8c 9b       	sbis	0x11, 4	; 17
     114:	62 ed       	ldi	r22, 0xD2	; 210
     116:	40 7c       	andi	r20, 0xC0	; 192
     118:	6f fc       	.word	0xfc6f	; ????
     11a:	ef bc       	out	0x2f, r14	; 47
     11c:	9c 9f       	mul	r25, r28
     11e:	40 f2       	brcs	.-112    	; 0xb0 <__trampolines_end+0x1c>
     120:	ba a5       	ldd	r27, Y+42	; 0x2a
     122:	6f a5       	ldd	r22, Y+47	; 0x2f
     124:	f4 90       	lpm	r15, Z
     126:	05 5a       	subi	r16, 0xA5	; 165
     128:	2a f7       	brpl	.-54     	; 0xf4 <__trampolines_end+0x60>
     12a:	5c 93       	st	X, r21
     12c:	6b 6c       	ori	r22, 0xCB	; 203
     12e:	f9 67       	ori	r31, 0x79	; 121
     130:	6d c1       	rjmp	.+730    	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
     132:	1b fc       	.word	0xfc1b	; ????
     134:	e0 e4       	ldi	r30, 0x40	; 64
     136:	0d 47       	sbci	r16, 0x7D	; 125
     138:	fe f5       	brtc	.+126    	; 0x1b8 <_ZL21FreeSerif12pt7bGlyphs+0x23>
     13a:	20 e6       	ldi	r18, 0x60	; 96
     13c:	b5 00       	.word	0x00b5	; ????
     13e:	d0 ed       	ldi	r29, 0xD0	; 208
     140:	90 2e       	mov	r9, r16
     142:	03 00       	.word	0x0003	; ????
     144:	94 35       	cpi	r25, 0x54	; 84
     146:	77 05       	cpc	r23, r7
     148:	00 80       	ld	r0, Z
     14a:	84 1e       	adc	r8, r20
     14c:	08 00       	.word	0x0008	; ????
     14e:	00 20       	and	r0, r0
     150:	4e 0a       	sbc	r4, r30
     152:	00 00       	nop
     154:	00 c8       	rjmp	.-4096   	; 0xfffff156 <__eeprom_end+0xff7ef156>
     156:	0c 33       	cpi	r16, 0x3C	; 60
     158:	33 33       	cpi	r19, 0x33	; 51
     15a:	33 0f       	add	r19, r19
     15c:	98 6e       	ori	r25, 0xE8	; 232
     15e:	12 83       	std	Z+2, r17	; 0x02
     160:	11 41       	sbci	r17, 0x11	; 17
     162:	ef 8d       	ldd	r30, Y+31	; 0x1f
     164:	21 14       	cp	r2, r1
     166:	89 3b       	cpi	r24, 0xB9	; 185
     168:	e6 55       	subi	r30, 0x56	; 86
     16a:	16 cf       	rjmp	.-468    	; 0xffffff98 <__eeprom_end+0xff7eff98>
     16c:	fe e6       	ldi	r31, 0x6E	; 110
     16e:	db 18       	sub	r13, r11
     170:	d1 84       	ldd	r13, Z+9	; 0x09
     172:	4b 38       	cpi	r20, 0x8B	; 139
     174:	1b f7       	brvc	.-58     	; 0x13c <__trampolines_end+0xa8>
     176:	7c 1d       	adc	r23, r12
     178:	90 1d       	adc	r25, r0
     17a:	a4 bb       	out	0x14, r26	; 20
     17c:	e4 24       	eor	r14, r4
     17e:	20 32       	cpi	r18, 0x20	; 32
     180:	84 72       	andi	r24, 0x24	; 36
     182:	5e 22       	and	r5, r30
     184:	81 00       	.word	0x0081	; ????
     186:	c9 f1       	breq	.+114    	; 0x1fa <_ZL21FreeSerif12pt7bGlyphs+0x65>
     188:	24 ec       	ldi	r18, 0xC4	; 196
     18a:	a1 e5       	ldi	r26, 0x51	; 81
     18c:	3d 27       	eor	r19, r29

0000018e <_ZL15FreeSerif12pt7b>:
     18e:	2e 04 95 01 20 7e 1d                                .... ~.

00000195 <_ZL21FreeSerif12pt7bGlyphs>:
     195:	00 00 00 00 06 00 01 00 00 02 10 08 03 f1 04 00     ................
     1a5:	06 06 0a 01 f1 09 00 0c 10 0c 00 f1 21 00 0a 12     ............!...
     1b5:	0c 01 f0 38 00 12 11 14 01 f0 5f 00 11 10 13 01     ...8......_.....
     1c5:	f1 81 00 02 06 05 01 f1 83 00 06 14 08 01 f1 92     ................
     1d5:	00 06 14 08 01 f1 a1 00 08 0a 0c 03 f2 ab 00 0b     ................
     1e5:	0b 0e 01 f6 bb 00 03 06 06 02 fe be 00 06 01 08     ................
     1f5:	01 fb bf 00 02 03 06 02 fe c0 00 07 11 07 00 f0     ................
     205:	cf 00 0a 11 0c 01 f0 e5 00 06 11 0c 03 f0 f2 00     ................
     215:	0a 0f 0c 01 f2 05 01 0a 10 0c 01 f1 19 01 0a 10     ................
     225:	0c 01 f1 2d 01 0a 11 0c 01 f0 43 01 0a 11 0c 01     ...-......C.....
     235:	f0 59 01 0a 10 0c 00 f1 6d 01 0a 11 0c 01 f0 83     .Y......m.......
     245:	01 0a 12 0c 01 f0 9a 01 02 0c 06 02 f5 9d 01 04     ................
     255:	0f 06 02 f5 a5 01 0c 0d 0e 01 f4 b9 01 0c 06 0e     ................
     265:	01 f8 c2 01 0c 0d 0e 01 f5 d6 01 08 11 0b 02 f0     ................
     275:	e7 01 11 10 15 02 f1 09 02 11 10 11 00 f1 2b 02     ..............+.
     285:	0c 10 0f 01 f1 43 02 0f 10 10 01 f1 61 02 10 10     .....C......a...
     295:	11 00 f1 81 02 0e 10 0f 00 f1 9d 02 0e 10 0e 00     ................
     2a5:	f1 b9 02 10 10 11 01 f1 d9 02 10 10 11 00 f1 f9     ................
     2b5:	02 06 10 08 01 f1 05 03 08 10 09 00 f1 15 03 10     ................
     2c5:	10 11 01 f1 35 03 0f 10 0f 00 f1 53 03 13 10 15     ....5......S....
     2d5:	01 f1 79 03 10 10 11 01 f1 99 03 0f 10 11 01 f1     ..y.............
     2e5:	b7 03 0c 10 0e 00 f1 cf 03 10 14 11 01 f1 f7 03     ................
     2f5:	0f 10 10 00 f1 15 04 0b 10 0d 00 f1 2b 04 0f 10     ............+...
     305:	0f 00 f1 49 04 10 10 11 01 f1 69 04 11 10 11 00     ...I......i.....
     315:	f1 8b 04 16 10 17 00 f1 b7 04 11 10 11 00 f1 d9     ................
     325:	04 10 10 11 00 f1 f9 04 0e 10 0f 01 f1 15 05 05     ................
     335:	14 08 02 f1 22 05 07 11 07 00 f0 31 05 05 14 08     ...."......1....
     345:	01 f1 3e 05 0a 09 0b 01 f1 4a 05 0c 01 0c 00 03     ..>......J......
     355:	4c 05 05 04 06 00 f1 4f 05 0a 0b 0a 01 f6 5d 05     L......O......].
     365:	0a 11 0c 01 f0 73 05 08 0b 0b 01 f6 7e 05 0a 11     .....s......~...
     375:	0c 01 f0 94 05 0a 0b 0b 01 f6 a2 05 09 11 09 00     ................
     385:	f0 b6 05 0c 10 0b 00 f6 ce 05 0b 11 0c 00 f0 e6     ................
     395:	05 05 10 07 00 f1 f0 05 06 15 08 00 f1 00 06 0b     ................
     3a5:	11 0c 01 f0 18 06 05 11 06 00 f0 23 06 12 0b 13     ...........#....
     3b5:	00 f6 3c 06 0b 0b 0c 00 f6 4c 06 0a 0b 0c 01 f6     ..<......L......
     3c5:	5a 06 0b 10 0c 00 f6 70 06 0a 10 0c 01 f6 84 06     Z......p........
     3d5:	08 0b 08 00 f6 8f 06 07 0b 09 01 f6 99 06 06 0d     ................
     3e5:	07 01 f4 a3 06 0a 0b 0c 01 f6 b1 06 0b 0b 0b 00     ................
     3f5:	f6 c1 06 10 0b 10 00 f6 d7 06 0b 0b 0c 00 f6 e7     ................
     405:	06 0b 10 0b 00 f6 fd 06 0a 0b 0a 00 f6 0b 07 05     ................
     415:	15 0c 02 f0 19 07 01 11 05 02 f0 1c 07 05 15 0c     ................
     425:	05 f1 2a 07 0c 03 0c 00 fa                          ..*......

0000042e <_ZL22FreeSerif12pt7bBitmaps>:
     42e:	ff fe a8 3f cf 3c f3 8a 20 0c 40 c4 08 40 8c 08     ...?.<.. .@..@..
     43e:	c7 ff 18 81 88 10 81 08 ff e1 18 31 03 10 31 02     ...........1..1.
     44e:	10 04 07 c6 5b 12 c4 b1 0f 41 f0 1e 01 e0 58 13     ....[....A....X.
     45e:	84 e1 3c 4f 96 3f 01 00 00 04 03 83 03 9f 81 c2     ..<O.?..........
     46e:	20 60 90 38 24 0c 12 03 0d 00 c6 47 9e 23 10 09      `.8$......G.#..
     47e:	84 04 e1 03 30 40 8c 20 43 08 10 c4 08 1e 00 03     ....0@. C.......
     48e:	c0 02 30 03 08 01 84 00 c4 00 7c f8 1c 38 1e 08     ..0.......|..8..
     49e:	33 0c 31 c4 10 74 18 3a 0c 0e 07 03 83 c3 e2 7e     3.1..t.:.......~
     4ae:	3e ff a0 04 21 08 61 0c 30 c3 0c 30 c1 04 18 20     >...!.a.0..0... 
     4be:	40 81 81 02 04 18 20 83 0c 30 c3 0c 30 86 10 84     @..... ..0..0...
     4ce:	20 30 b3 d7 54 38 7c d3 30 30 10 04 00 80 10 02      0..T8|.00......
     4de:	00 41 ff c1 00 20 04 00 80 10 00 df 95 00 fc fc     .A... ..........
     4ee:	06 0c 10 60 c1 06 0c 10 60 c1 06 0c 10 60 c0 1e     ...`....`....`..
     4fe:	0c c6 19 86 c0 b0 3c 0f 03 c0 f0 3c 0f 03 c0 d8     ......<....<....
     50e:	66 18 cc 1e 00 11 c3 0c 30 c3 0c 30 c3 0c 30 c3     f.......0..0..0.
     51e:	0c fc 1e 18 c4 1a 06 01 80 60 10 0c 02 01 00 c0     .........`......
     52e:	60 30 18 1f f8 1e 18 e8 18 06 01 00 80 f0 7e 03     `0............~.
     53e:	c0 70 0c 03 00 c0 6e 11 f8 01 00 c0 70 2c 0b 04     .p....n.....p,..
     54e:	c2 30 8c 43 20 c8 33 ff 03 00 c0 30 0c 00 03 f1     .0.C .3....0....
     55e:	00 40 18 0f 80 f8 0e 01 c0 30 0c 03 00 c0 20 1b     .@.......0.... .
     56e:	8c 7c 00 01 c3 c1 c0 c0 70 18 0e f3 ce c1 f0 3c     .|......p......<
     57e:	0f 03 c0 d8 36 08 c6 1e 00 3f d0 38 08 06 01 80     ....6....?.8....
     58e:	40 10 0c 02 00 80 20 10 04 01 00 80 20 1f 18 6c     @..... ..... ..l
     59e:	0f 03 c0 f8 67 30 f0 1e 09 e6 3b 07 c0 f0 3c 0d     ....g0....;...<.
     5ae:	86 1f 00 1e 08 c6 1b 02 c0 f0 3c 0f 03 e0 dc 73     ..........<....s
     5be:	ec 06 01 80 c0 70 38 38 18 00 fc 00 3f cc c0 00     .....p88....?...
     5ce:	00 06 77 12 40 00 00 07 01 e0 78 1e 07 00 c0 0f     ..w.@.....x.....
     5de:	00 3c 00 f0 03 c0 07 00 10 ff f0 00 00 00 00 00     .<..............
     5ee:	0f ff 80 0e 00 3c 00 f0 03 c0 0f 00 30 0e 07 81     .....<......0...
     5fe:	e0 78 0e 00 00 00 7c 86 83 c3 03 03 06 0c 08 08     .x....|.........
     60e:	10 10 00 00 30 30 30 03 f0 06 06 06 00 86 00 26     ....000........&
     61e:	0e d3 0c c7 0c 63 84 31 c6 18 e3 08 71 8c 4c c6     .....c.1....q.L.
     62e:	46 3d c1 80 00 30 10 07 f0 00 80 00 60 00 70 00     F=...0......`.p.
     63e:	38 00 2e 00 13 00 19 c0 08 60 04 38 04 0c 03 ff     8........`.8....
     64e:	03 03 81 00 e1 80 70 c0 3d f0 3f ff 83 0c 30 63     ......p.=.?...0c
     65e:	06 30 63 06 30 c3 f0 30 e3 06 30 33 03 30 33 07     .0c.0..0..03.03.
     66e:	30 ef fc 07 e2 38 3c c0 3b 00 36 00 38 00 30 00     0....8<.;.6.8.0.
     67e:	60 00 c0 01 80 03 00 03 00 06 00 06 00 47 03 03     `............G..
     68e:	f8 ff c0 30 78 30 1c 30 0e 30 06 30 03 30 03 30     ...0x0.0.0.0.0.0
     69e:	03 30 03 30 03 30 03 30 06 30 06 30 0c 30 78 ff     .0.0.0.0.0.0.0x.
     6ae:	c0 ff fc c0 33 00 4c 00 30 00 c0 43 03 0f fc 30     ....3.L.0..C...0
     6be:	30 c0 43 00 0c 00 30 08 c0 23 03 bf fe ff fc c0     0.C...0..#......
     6ce:	33 00 4c 00 30 00 c0 43 03 0f fc 30 30 c0 43 00     3.L.0..C...00.C.
     6de:	0c 00 30 00 c0 03 00 3f 00 07 e4 1c 3c 30 0c 60     ..0....?....<0.`
     6ee:	0c 60 04 c0 00 c0 00 c0 3f c0 0c c0 0c c0 0c 60     .`......?......`
     6fe:	0c 60 0c 30 0c 1c 1c 07 e0 fc 3f 30 0c 30 0c 30     .`.0......?0.0.0
     70e:	0c 30 0c 30 0c 30 0c 3f fc 30 0c 30 0c 30 0c 30     .0.0.0.?.0.0.0.0
     71e:	0c 30 0c 30 0c 30 0c fc 3f fc c3 0c 30 c3 0c 30     .0.0.0..?...0..0
     72e:	c3 0c 30 c3 3f 3f 0c 0c 0c 0c 0c 0c 0c 0c 0c 0c     ..0.??..........
     73e:	0c 0c 0c c8 f0 fc fe 30 38 30 20 30 40 30 80 33     .......080 0@0.3
     74e:	00 36 00 3e 00 37 00 33 80 31 c0 30 e0 30 70 30     .6.>.7.3.1.0.0p0
     75e:	38 30 3c fc 7f fc 00 60 00 c0 01 80 03 00 06 00     80<....`........
     76e:	0c 00 18 00 30 00 60 00 c0 01 80 03 00 26 00 8c     ....0.`......&..
     77e:	07 7f fe f8 01 e7 00 70 e0 0e 1e 03 c2 c0 58 5c     .......p......X\
     78e:	1b 09 82 61 38 4c 27 11 84 72 30 8e c6 10 d0 c2     ...a8L'..r0.....
     79e:	1e 18 41 83 1c 30 67 c4 3f f0 1f 78 0e 3c 04 3e     ..A..0g.?..x.<.>
     7ae:	04 2e 04 27 04 23 84 23 c4 21 e4 20 e4 20 74 20     ...'.#.#.!. . t 
     7be:	3c 20 1c 20 0c 70 0c f8 04 07 c0 30 60 c0 63 00     < . .p.....0`.c.
     7ce:	66 00 d8 00 f0 01 e0 03 c0 07 80 0f 00 1b 00 66     f..............f
     7de:	00 c6 03 06 0c 03 e0 ff 83 0e 30 73 03 30 33 03     ..........0s.03.
     7ee:	30 63 0e 3f 83 00 30 03 00 30 03 00 30 0f c0 0f     0c.?..0..0..0...
     7fe:	e0 18 30 30 18 60 0c 60 0c c0 06 c0 06 c0 06 c0     ..00.`.`........
     80e:	06 c0 06 c0 06 60 0c 60 0c 30 18 18 30 07 c0 03     .....`.`.0..0...
     81e:	c0 01 e0 00 78 00 1f ff 80 61 c0 c1 c1 81 83 03     ....x....a......
     82e:	06 06 0c 1c 18 70 3f 80 67 00 c7 01 8f 03 0f 06     .....p?.g.......
     83e:	0e 0c 0e 7e 0f 1f 46 19 81 30 27 02 f0 0f 00 f8     ...~..F..0'.....
     84e:	07 c0 38 03 c0 34 06 80 dc 32 7c ff ff 86 0e 0c     ..8..4...2|.....
     85e:	1c 18 10 30 00 60 00 c0 01 80 03 00 06 00 0c 00     ...0.`..........
     86e:	18 00 30 00 60 00 c0 07 e0 fc 1f 30 0e 30 04 30     ..0.`......0.0.0
     87e:	04 30 04 30 04 30 04 30 04 30 04 30 04 30 04 30     .0.0.0.0.0.0.0.0
     88e:	04 30 04 18 08 1c 18 07 e0 fe 0f 9c 03 0e 01 83     .0..............
     89e:	00 81 c0 40 60 40 38 20 0c 30 07 10 01 98 00 e8     ...@`@8 .0......
     8ae:	00 34 00 1e 00 06 00 03 00 01 00 fc fc 3d e1 c0     .4...........=..
     8be:	63 83 01 86 0e 04 1c 18 10 70 70 80 c3 c2 03 8b     c........pp.....
     8ce:	08 06 6e 40 1d 19 00 74 78 00 e1 e0 03 83 80 0e     ..n@...tx.......
     8de:	0c 00 10 10 00 40 40 7f 1f 9e 03 07 03 01 c3 00     .....@@.........
     8ee:	71 00 19 00 0f 00 03 80 01 e0 01 b0 01 9c 00 87     q...............
     8fe:	00 81 c0 80 e0 c0 79 f8 7f fe 1f 78 0c 38 08 1c     ......y....x.8..
     90e:	18 0e 10 06 20 07 60 03 c0 01 80 01 80 01 80 01     .... .`.........
     91e:	80 01 80 01 80 01 80 07 e0 7f fb 00 c8 07 20 38     .............. 8
     92e:	01 c0 07 00 38 01 c0 07 00 38 01 c0 0e 00 38 05     ....8....8....8.
     93e:	c0 3e 01 bf fe fe 31 8c 63 18 c6 31 8c 63 18 c6     .>....1.c..1.c..
     94e:	31 f0 c1 81 03 06 04 0c 18 10 30 60 40 c1 81 03     1.........0`@...
     95e:	06 f8 c6 31 8c 63 18 c6 31 8c 63 18 c7 f0 0c 07     ...1.c..1.c.....
     96e:	01 60 d8 23 18 c4 1b 06 80 c0 ff f0 c7 0c 30 3e     .`.#..........0>
     97e:	31 8c 30 0c 03 07 c6 33 0c c3 31 c7 b8 20 38 06     1.0....3..1.. 8.
     98e:	01 80 60 18 06 f1 c6 61 d8 36 0d 83 60 d8 26 19     ..`....a.6..`.&.
     99e:	84 3e 00 1e 23 63 c0 c0 c0 c0 c0 e1 72 3c 00 80     .>..#c......r<..
     9ae:	e0 18 06 01 80 61 d8 8e 61 b0 6c 1b 06 c1 b0 6e     .....a..a.l....n
     9be:	19 ce 3d c0 1e 08 e4 1b fe c0 30 0c 03 81 60 9c     ..=.......0...`.
     9ce:	41 e0 0f 08 c4 06 03 01 81 f0 60 30 18 0c 06 03     A.........`0....
     9de:	01 80 c0 60 fc 00 1f 03 1f 60 c6 0c 60 c3 18 1f     ...`.....`..`...
     9ee:	02 00 40 07 fc 40 24 02 c0 2c 04 e0 83 f0 30 1e     ..@..@$..,....0.
     9fe:	00 c0 18 03 00 60 0d e1 ce 30 c6 18 c3 18 63 0c     .....`...0....c.
     a0e:	61 8c 31 86 79 e0 31 80 00 09 c6 31 8c 63 18 df     a.1.y.1....1.c..
     a1e:	0c 30 00 00 31 c3 0c 30 c3 0c 30 c3 0c 30 f2 f0     .0..1..0..0..0..
     a2e:	20 1c 01 80 30 06 00 c0 18 fb 08 62 0c 81 e0 3e      ...0......b...>
     a3e:	06 e0 ce 18 c3 0e f3 e0 13 8c 63 18 c6 31 8c 63     ..........c..1.c
     a4e:	18 c6 f8 f7 8f 0e 3c e3 0c 18 c3 06 30 c1 8c 30     ......<.....0..0
     a5e:	63 0c 18 c3 06 30 c1 8c 30 67 9e 3c f7 87 18 c3     c....0..0g.<....
     a6e:	18 63 0c 61 8c 31 86 30 c6 19 e7 80 1e 18 e4 1b     .c.a.1.0........
     a7e:	03 c0 f0 3c 0f 03 60 9c 41 e0 77 87 18 c3 98 33     ...<..`.A.w....3
     a8e:	06 60 cc 19 83 30 c7 10 dc 18 03 00 60 0c 07 e0     .`...0......`...
     a9e:	1e 8c e6 1b 06 c1 b0 6c 1b 06 e1 98 e3 d8 06 01     .......l........
     aae:	80 60 18 1f 37 7b 30 30 30 30 30 30 30 30 7c 7b     .`..7{00000000|{
     abe:	0e 1c 1e 0f 07 c3 87 8a e0 21 8f 98 61 86 18 61     .........!..a..a
     ace:	86 19 38 e3 98 66 19 86 61 98 66 19 86 61 9c e3     ..8..f..a.f..a..
     ade:	dc f8 ee 08 c1 18 41 88 32 03 40 68 06 00 c0 10     ......A.2.@h....
     aee:	00 f3 e7 61 83 70 c2 30 c2 30 c4 19 64 19 68 0e     ...a.p.0.0..d.h.
     afe:	38 0e 38 0c 30 04 10 fb c6 30 64 0f 00 c0 0c 03     8.8.0....0d.....
     b0e:	c0 98 21 8c 3b cf 80 f8 ee 08 c1 18 41 88 31 03     ..!.;.......A.1.
     b1e:	40 68 06 00 c0 08 02 00 40 10 1e 03 80 7f 90 e0     @h......@.......
     b2e:	30 18 0e 03 01 c0 e0 30 5c 3f f8 19 8c 63 18 c6     0......0\?...c..
     b3e:	31 b0 63 18 c6 31 8c 61 80 ff ff 80 c3 18 c6 31     1.c..1.a.......1
     b4e:	8c 63 06 c6 31 8c 63 18 cc 00 38 06 62 41 c0        .c..1.c...8.bA.

00000b5d <_ZL15FreeSerif18pt7b>:
     b5d:	fd 0d 64 0b 20 7e 2a                                ..d. ~*

00000b64 <_ZL21FreeSerif18pt7bGlyphs>:
     b64:	00 00 00 00 09 00 01 00 00 04 18 0c 05 e9 0c 00     ................
     b74:	08 09 0e 03 e9 15 00 11 17 11 00 ea 46 00 0d 1b     ............F...
     b84:	11 02 e8 72 00 19 17 1d 02 ea ba 00 19 19 1b 01     ...r............
     b94:	e8 09 01 03 09 07 02 e9 0d 01 09 1e 0c 02 e9 2f     .............../
     ba4:	01 09 1e 0c 01 ea 51 01 0c 0e 12 03 e9 66 01 10     ......Q......f..
     bb4:	12 14 02 ef 8a 01 04 09 09 02 fd 8f 01 08 02 0c     ................
     bc4:	01 f8 91 01 04 04 09 02 fd 93 01 0a 18 0a 00 e9     ................
     bd4:	b1 01 10 18 12 01 e9 e1 01 0a 18 12 03 e9 ff 01     ................
     be4:	10 18 11 01 e9 2f 02 0d 18 11 02 e9 56 02 10 17     ...../......V...
     bf4:	12 00 ea 84 02 0d 18 11 02 e9 ab 02 10 18 12 01     ................
     c04:	e9 db 02 0e 17 12 01 ea 04 03 0c 19 12 02 e8 2a     ...............*
     c14:	03 10 1a 11 01 e8 5e 03 04 11 09 02 f0 67 03 05     ......^......g..
     c24:	16 09 02 f0 75 03 12 12 14 01 ef 9e 03 12 09 14     ....u...........
     c34:	01 f4 b3 03 12 12 14 01 ef dc 03 0d 19 10 02 e8     ................
     c44:	05 04 18 19 1e 03 e8 50 04 18 17 19 01 ea 95 04     .......P........
     c54:	14 17 16 01 ea cf 04 16 18 17 01 e9 11 05 17 17     ................
     c64:	19 01 ea 54 05 14 17 15 02 ea 8e 05 11 17 14 02     ...T............
     c74:	ea bf 05 17 18 19 01 e9 04 06 16 17 19 02 ea 44     ...............D
     c84:	06 09 17 0b 02 ea 5e 06 0c 17 0d 00 ea 81 06 17     ......^.........
     c94:	17 19 02 ea c4 06 13 17 15 02 ea fb 06 1d 17 1f     ................
     ca4:	01 ea 4f 07 17 17 19 01 ea 92 07 17 18 19 01 e9     ..O.............
     cb4:	d7 07 12 17 14 01 ea 0b 08 17 1e 19 01 e9 62 08     ..............b.
     cc4:	15 17 17 02 ea 9f 08 10 18 13 01 e9 cf 08 14 17     ................
     cd4:	15 01 ea 09 09 16 17 19 02 ea 49 09 18 17 19 00     ..........I.....
     ce4:	ea 8e 09 21 17 21 00 ea ed 09 19 17 19 00 ea 35     ...!.!.........5
     cf4:	0a 18 17 19 01 ea 7a 0a 15 17 15 00 ea b7 0a 07     ......z.........
     d04:	1c 0c 03 ea d0 0a 0a 18 0a 00 e9 ee 0a 07 1c 0c     ................
     d14:	02 ea 07 0b 0f 0d 10 01 ea 20 0b 12 02 11 00 03     ......... ......
     d24:	25 0b 08 06 09 01 e9 2b 0b 0d 10 0f 02 f1 45 0b     %......+......E.
     d34:	10 19 11 01 e8 77 0b 0e 10 10 01 f1 93 0b 10 19     .....w..........
     d44:	11 01 e8 c5 0b 0d 10 10 01 f1 df 0b 0d 19 0d 00     ................
     d54:	e8 08 0c 10 18 10 01 f1 38 0c 10 19 11 01 e8 6a     ........8......j
     d64:	0c 08 18 0a 00 e9 82 0c 09 20 0c 00 e9 a6 0c 11     ......... ......
     d74:	19 12 01 e8 dc 0c 08 19 09 00 e8 f5 0c 1a 10 1b     ................
     d84:	01 f1 29 0d 10 10 11 01 f1 49 0d 10 10 11 01 f1     ..)......I......
     d94:	69 0d 10 18 11 01 f1 99 0d 10 18 11 01 f1 c9 0d     i...............
     da4:	0b 10 0c 01 f1 df 0d 0a 10 0d 01 f1 f3 0d 08 13     ................
     db4:	0a 02 ee 06 0e 10 10 11 01 f1 26 0e 10 10 10 00     ..........&.....
     dc4:	f1 46 0e 18 10 18 00 f1 76 0e 11 10 11 00 f1 98     .F......v.......
     dd4:	0e 10 18 10 00 f1 c8 0e 0e 10 0f 00 f1 e4 0e 08     ................
     de4:	1e 11 03 e9 02 0f 02 18 07 02 e9 08 0f 08 1e 11     ................
     df4:	06 ea 26 0f 10 04 11 01 f6                          ..&......

00000dfd <_ZL22FreeSerif18pt7bBitmaps>:
     dfd:	6f ff ff fe 66 66 66 64 40 00 6f f6 e7 e7 e7 e7     o...fffd@.o.....
     e0d:	e7 46 42 42 42 03 06 01 83 00 c1 80 61 c0 30 c0     .FBBB.......a.0.
     e1d:	38 60 18 30 ff ff 7f ff 83 06 01 86 00 c3 00 c1     8`.0............
     e2d:	87 ff ff ff fe 18 30 0c 18 06 18 06 0c 03 06 01     ......0.........
     e3d:	83 00 c1 80 60 c0 02 00 10 03 e0 64 e6 23 61 1b     ....`......d.#a.
     e4d:	08 58 42 e2 03 90 1f 80 7e 00 fc 01 f0 0f c0 4e     .XB.....~......N
     e5d:	02 38 10 e0 87 04 3c 21 e1 1b c9 cf fc 1f 80 10     .8....<!........
     e6d:	00 80 07 80 20 0f f0 70 0f 07 d0 0f 02 18 07 01     .... ..p........
     e7d:	18 07 00 8c 03 80 4c 01 80 44 00 c0 26 00 60 22     ......L..D..&.`"
     e8d:	0f 30 33 1f cc 73 1e 37 f1 8e 19 e1 8e 04 00 86     .03..s.7........
     e9d:	02 00 c7 01 00 c3 80 80 61 80 80 60 c0 40 30 60     ........a..`.@0`
     ead:	40 30 38 e0 30 0f e0 18 03 c0 00 78 00 00 7e 00     @08.0......x..~.
     ebd:	00 61 80 00 60 60 00 30 30 00 18 18 00 0c 0c 00     .a..``.00.......
     ecd:	06 0c 00 03 8e 00 01 ce 00 00 7c 3f c0 38 07 80     ..........|?.8..
     edd:	3e 03 80 77 01 80 73 c0 80 f0 f0 c0 70 7c c0 78     >..w..s.....p|.x
     eed:	1e 40 3c 07 c0 1e 01 e0 0f 00 78 0f c0 ff 0d f0     .@<.......x.....
     efd:	c7 fc 7f c1 fc 1f 80 3c 00 ff fe 92 40 00 80 80     .......<....@...
     f0d:	80 80 80 c0 c0 60 70 30 18 1c 0e 07 03 81 c0 e0     .....`p0........
     f1d:	70 38 0c 06 03 80 c0 60 18 0c 03 00 c0 30 0c 80     p8.....`.....0..
     f2d:	30 0c 03 00 c0 60 18 0c 07 01 80 c0 70 38 1c 0e     0....`......p8..
     f3d:	07 03 81 c0 e0 60 30 38 18 0c 0c 04 04 04 04 04     .....`08........
     f4d:	00 0c 00 c0 0c 0c 46 e4 f7 5e 1f 00 c0 17 8e 4e     ......F..^.....N
     f5d:	e4 fc c6 0c 00 c0 01 80 01 80 01 80 01 80 01 80     ................
     f6d:	01 80 01 80 01 80 ff ff ff ff 01 80 01 80 01 80     ................
     f7d:	01 80 01 80 01 80 01 80 01 80 6f ff 11 24 80 ff     ..........o..$..
     f8d:	ff 6f f6 00 c0 60 18 06 03 80 c0 30 1c 06 01 80     .o...`.....0....
     f9d:	e0 30 0c 07 01 80 60 38 0c 03 01 c0 60 18 0e 03     .0....`8....`...
     fad:	00 03 e0 0e 70 1c 38 38 1c 38 1c 78 1e 70 0e f0     ....p.88.8.x.p..
     fbd:	0f f0 0f f0 0f f0 0f f0 0f f0 0f f0 0f f0 0f f0     ................
     fcd:	0f 70 0e 70 0e 78 1e 38 1c 38 1c 1c 38 0c 30 03     .p.p.x.8.8..8.0.
     fdd:	c0 06 03 83 e3 38 0e 03 80 e0 38 0e 03 80 e0 38     .....8....8....8
     fed:	0e 03 80 e0 38 0e 03 80 e0 38 0e 03 81 e1 ff 07     ....8....8......
     ffd:	c0 1f f0 3f f8 70 f8 60 3c c0 3c 80 1c 00 1c 00     ...?.p.`<.<.....
    100d:	1c 00 18 00 18 00 30 00 30 00 60 00 c0 00 80 01     ......0.0.`.....
    101d:	00 02 00 04 00 08 01 10 02 3f fe 7f fc ff fc 0f     .........?......
    102d:	c0 ff 0c 3c 80 e4 03 00 18 00 c0 04 00 40 04 00     ...<.........@..
    103d:	f8 1f e0 0f 00 1c 00 e0 03 00 18 00 c0 06 00 60     ...............`
    104d:	03 78 73 ff 0f c0 00 30 00 30 00 70 00 f0 00 b0     .xs....0.0.p....
    105d:	01 30 03 30 06 30 04 30 08 30 18 30 10 30 20 30     .0.0.0.0.0.0.0 0
    106d:	60 30 c0 30 ff ff ff ff 00 30 00 30 00 30 00 30     `0.0.....0.0.0.0
    107d:	00 30 00 30 00 00 7f c3 fe 1f e1 80 08 00 c0 07     .0.0............
    108d:	c0 7f 81 ff 00 fc 01 e0 07 80 1c 00 60 03 00 18     ............`...
    109d:	00 c0 06 00 60 07 78 73 ff 0f c0 00 0e 00 f8 03     ....`.xs........
    10ad:	c0 07 80 0f 00 1e 00 3c 00 7c 00 79 f0 7f fc f8     .......<.|.y....
    10bd:	3c f0 1e f0 1f f0 0f f0 0f f0 0f f0 0f 70 0f 78     <............p.x
    10cd:	0f 78 0e 3c 1e 1e 3c 0f f8 07 e0 3f fd ff f7 ff     .x.<..<....?....
    10dd:	f0 06 80 18 00 60 03 00 0c 00 30 01 80 06 00 18     .....`....0.....
    10ed:	00 e0 03 00 0c 00 70 01 80 06 00 38 00 c0 03 00     ......p....8....
    10fd:	1c 00 60 00 0f 83 fc 70 e6 07 c0 3c 03 c0 3e 03     ..`....p...<..>.
    110d:	70 67 8c 3d 81 f0 0f 81 7c 21 e6 0e c0 7c 03 c0     pg.=....|!...|..
    111d:	3c 03 c0 36 06 70 e3 fc 0f 80 07 c0 1f f0 3c 78     <..6.p........<x
    112d:	38 3c 78 1e 70 1e f0 0e f0 0f f0 0f f0 0f f0 0f     8<x.p...........
    113d:	f0 0f f8 0f 78 0f 3c 3f 1f ee 0f 9e 00 1e 00 3c     ....x.<?.......<
    114d:	00 38 00 78 00 f0 01 e0 07 80 1e 00 70 00 6f f6     .8.x........p.o.
    115d:	00 00 00 00 06 ff 60 67 bc c0 00 00 00 00 00 19     ......`g........
    116d:	ef 78 42 22 20 00 00 c0 00 f0 01 f8 01 f8 01 f8     .xB" ...........
    117d:	01 f0 03 f0 03 f0 00 f0 00 3e 00 07 e0 00 7e 00     .........>....~.
    118d:	03 e0 00 3e 00 03 f0 00 3f 00 03 c0 00 10 ff ff     ...>....?.......
    119d:	ff ff f0 00 00 00 00 00 00 00 00 00 00 03 ff ff     ................
    11ad:	ff ff c0 80 00 3c 00 0f c0 00 fc 00 07 c0 00 7c     .....<.........|
    11bd:	00 07 e0 00 7e 00 07 c0 00 f0 00 fc 00 fc 00 f8     ....~...........
    11cd:	01 f8 01 f8 01 f8 00 f0 00 30 00 00 1f 81 ff 18     .........0......
    11dd:	7d 81 ec 07 f0 3f 81 e0 0f 00 70 03 80 38 01 80     }....?....p..8..
    11ed:	08 00 c0 04 00 20 02 00 10 00 80 00 00 00 03 00     ..... ..........
    11fd:	3c 01 e0 07 00 00 7f 00 01 ff c0 07 80 f0 0f 00     <...............
    120d:	38 1c 00 1c 38 00 0c 38 00 06 70 1e 02 70 3f e3     8...8..8..p..p?.
    121d:	f0 71 e1 e0 e0 c1 e0 c0 c1 e0 c1 c1 e1 81 c1 e1     .q..............
    122d:	81 83 e1 83 82 e1 83 86 71 c7 8c 70 f9 f8 38 f0     ........q..p..8.
    123d:	f0 3c 00 00 1e 00 00 07 80 70 03 ff e0 00 7f 00     .<.......p......
    124d:	00 10 00 00 38 00 00 38 00 00 38 00 00 7c 00 00     ....8..8..8..|..
    125d:	5c 00 00 de 00 00 8e 00 01 8f 00 01 87 00 03 07     \...............
    126d:	80 03 03 80 02 03 c0 06 03 c0 07 ff c0 0f ff e0     ................
    127d:	0c 01 e0 18 00 f0 18 00 f0 30 00 78 30 00 78 70     .........0.x0.xp
    128d:	00 7c fc 01 ff ff fc 03 ff f8 1e 0f c1 e0 3c 1e     .|............<.
    129d:	01 e1 e0 1e 1e 01 e1 e0 1e 1e 03 c1 e0 78 1f fe     .............x..
    12ad:	01 ff f0 1e 07 c1 e0 1e 1e 00 f1 e0 0f 1e 00 f1     ................
    12bd:	e0 0f 1e 00 f1 e0 1e 1e 07 e3 ff f8 ff fe 00 00     ................
    12cd:	fe 08 0f ff 60 fc 1f 87 c0 1e 3c 00 38 f0 00 67     ....`.....<.8..g
    12dd:	80 01 9e 00 02 f0 00 03 c0 00 0f 00 00 3c 00 00     .............<..
    12ed:	f0 00 03 c0 00 0f 00 00 3c 00 00 78 00 01 e0 00     ........<..x....
    12fd:	03 c0 00 0f 00 02 1f 00 38 3f 03 80 7f fc 00 3f     ........8?.....?
    130d:	80 ff fc 00 7f ff 00 78 3f 80 f0 0f 81 e0 0f 83     .......x?.......
    131d:	c0 0f 07 80 0f 0f 00 1e 1e 00 1e 3c 00 3c 78 00     ...........<.<x.
    132d:	78 f0 00 f1 e0 01 e3 c0 03 c7 80 07 8f 00 1e 1e     x...............
    133d:	00 3c 3c 00 f0 78 01 e0 f0 0f 81 e0 7e 07 ff f0     .<<..x......~...
    134d:	3f ff 00 00 ff ff 87 ff f8 3c 01 83 c0 08 3c 00     ?........<....<.
    135d:	83 c0 00 3c 00 03 c0 00 3c 02 03 c0 60 3f fe 03     ...<....<...`?..
    136d:	ff e0 3c 06 03 c0 20 3c 00 03 c0 00 3c 00 03 c0     ..<... <....<...
    137d:	01 3c 00 23 c0 06 3c 01 e7 ff fe ff ff c0 ff ff     .<.#..<.........
    138d:	bf ff cf 00 67 80 13 c0 09 e0 00 f0 00 78 00 3c     ....g........x.<
    139d:	02 1e 03 0f ff 87 ff c3 c0 61 e0 10 f0 00 78 00     .........a....x.
    13ad:	3c 00 1e 00 0f 00 07 80 03 c0 03 f0 03 fc 00 00     <...............
    13bd:	fe 04 07 ff b8 1f 03 f0 f8 01 e3 e0 01 c7 80 01     ................
    13cd:	9e 00 01 3c 00 00 f0 00 01 e0 00 03 c0 00 07 80     ...<............
    13dd:	07 ff 00 07 de 00 07 bc 00 0f 78 00 1e 78 00 3c     ..........x..x.<
    13ed:	f0 00 78 f0 00 f1 f0 01 e1 f0 03 c1 f8 1f 00 ff     ..x.............
    13fd:	fc 00 3f 80 ff 03 fd f8 07 e3 c0 0f 0f 00 3c 3c     ..?...........<<
    140d:	00 f0 f0 03 c3 c0 0f 0f 00 3c 3c 00 f0 f0 03 c3     .........<<.....
    141d:	ff ff 0f ff fc 3c 00 f0 f0 03 c3 c0 0f 0f 00 3c     .....<.........<
    142d:	3c 00 f0 f0 03 c3 c0 0f 0f 00 3c 3c 00 f1 f8 07     <.........<<....
    143d:	ef f0 3f c0 ff bf 0f 07 83 c1 e0 f0 78 3c 1e 0f     ..?.........x<..
    144d:	07 83 c1 e0 f0 78 3c 1e 0f 07 83 c3 f3 fe 0f f0     .....x<.........
    145d:	7e 03 c0 3c 03 c0 3c 03 c0 3c 03 c0 3c 03 c0 3c     ~..<..<..<..<..<
    146d:	03 c0 3c 03 c0 3c 03 c0 3c 03 c6 38 f3 8f f0 7c     ..<..<..<..8...|
    147d:	00 ff 07 fc fc 03 c0 f0 07 01 e0 1c 03 c0 60 07     ..............`.
    148d:	81 80 0f 06 00 1e 18 00 3c 60 00 79 80 00 ff 00     ........<`.y....
    149d:	01 ff 00 03 df 00 07 8f 00 0f 0f 00 1e 0f 00 3c     ...............<
    14ad:	0f 00 78 0f 00 f0 1f 01 e0 1f 03 c0 1f 0f c0 3f     ..x............?
    14bd:	3f c1 ff 80 ff 00 0f c0 00 f0 00 1e 00 03 c0 00     ?...............
    14cd:	78 00 0f 00 01 e0 00 3c 00 07 80 00 f0 00 1e 00     x......<........
    14dd:	03 c0 00 78 00 0f 00 01 e0 00 3c 00 07 80 04 f0     ...x......<.....
    14ed:	01 1e 00 63 c0 3c ff ff bf ff e0 fc 00 03 f9 f0     ...c.<..........
    14fd:	00 1f 87 80 01 f8 3e 00 0f c1 f0 00 5e 0b c0 06     ......>.....^...
    150d:	f0 5e 00 37 82 78 03 3c 13 c0 19 e0 8f 01 8f 04     .^.7.x.<........
    151d:	78 0c 78 21 e0 c3 c1 0f 06 1e 08 3c 60 f0 41 e3     x.x!.......<`.A.
    152d:	07 82 07 b0 3c 10 3d 81 e0 81 f8 0f 04 07 c0 78     ....<.=........x
    153d:	20 3c 03 c1 00 e0 1e 1c 06 01 fb f8 10 1f e0 fc      <..............
    154d:	00 fe 78 00 70 78 00 40 f8 00 81 f8 01 02 f8 02     ..x.px.@........
    155d:	04 f8 04 08 f0 08 11 f0 10 21 f0 20 41 f0 40 81     .........!. A.@.
    156d:	f0 81 01 f1 02 01 e2 04 03 e4 08 03 e8 10 03 f0     ................
    157d:	20 03 e0 40 03 c0 80 03 81 00 07 07 00 06 3f 80      ..@..........?.
    158d:	04 00 00 fe 00 07 ff 00 3e 0f 80 f0 07 83 c0 07     ........>.......
    159d:	87 80 07 1e 00 0f 3c 00 1e f0 00 1f e0 00 3f c0     ......<.......?.
    15ad:	00 7f 80 00 ff 00 01 fe 00 03 fc 00 07 f8 00 0f     ................
    15bd:	78 00 3c f0 00 78 e0 01 e1 e0 03 c1 e0 0f 01 f0     x.<..x..........
    15cd:	7c 00 ff e0 00 7f 00 ff f8 1f ff 83 c1 f0 f0 1e     |...............
    15dd:	3c 07 cf 00 f3 c0 3c f0 0f 3c 03 cf 01 f3 c0 78     <.....<..<.....x
    15ed:	f0 7c 3f fe 0f fe 03 c0 00 f0 00 3c 00 0f 00 03     .|?........<....
    15fd:	c0 00 f0 00 3c 00 1f 00 0f f0 00 00 fe 00 07 ff     ....<...........
    160d:	00 3e 0f 80 f0 07 83 c0 07 87 80 0f 1e 00 0f 3c     .>.............<
    161d:	00 1e f0 00 1d e0 00 3f c0 00 7f 80 00 ff 00 01     .......?........
    162d:	fe 00 03 fc 00 07 f8 00 0f 70 00 1c f0 00 79 e0     .........p....y.
    163d:	00 f1 e0 03 c1 c0 07 01 c0 1c 01 e0 f0 00 7f 00     ................
    164d:	00 7c 00 00 7c 00 00 7c 00 00 7e 00 00 1f 00 00     .|..|..|..~.....
    165d:	0f c0 ff f0 03 ff f0 0f 07 c0 78 1e 03 c0 78 1e     ..........x...x.
    166d:	03 c0 f0 1e 07 80 f0 3c 07 81 e0 78 0f 0f 80 7f     .......<...x....
    167d:	f8 03 fe 00 1e 78 00 f1 e0 07 87 80 3c 3c 01 e0     .....x......<<..
    168d:	f0 0f 03 c0 78 0f 03 c0 7c 3f 01 f3 fc 07 e0 07     ....x...|?......
    169d:	84 1f fc 3c 3e 30 0e 70 06 70 06 70 02 78 00 7c     ...<>0.p.p.p.x.|
    16ad:	00 3f 00 1f c0 0f e0 03 f8 00 fc 00 3e 00 1f 80     .?..........>...
    16bd:	0f 80 0f c0 0f e0 0f 70 1e 78 3c 4f f8 43 f0 ff     .......p.x<O.C..
    16cd:	ff ff ff ff e0 f0 7c 0f 03 80 f0 10 0f 00 00 f0     ......|.........
    16dd:	00 0f 00 00 f0 00 0f 00 00 f0 00 0f 00 00 f0 00     ................
    16ed:	0f 00 00 f0 00 0f 00 00 f0 00 0f 00 00 f0 00 0f     ................
    16fd:	00 00 f0 00 1f 80 03 fc 00 ff 01 fd f8 01 c3 c0     ................
    170d:	02 0f 00 08 3c 00 20 f0 00 83 c0 02 0f 00 08 3c     ....<. ........<
    171d:	00 20 f0 00 83 c0 02 0f 00 08 3c 00 20 f0 00 83     . ........<. ...
    172d:	c0 02 0f 00 08 3c 00 20 f0 00 81 e0 04 07 80 30     .....<. .......0
    173d:	0f 81 80 1f fc 00 1f c0 00 ff c0 7f 3e 00 1e 1e     ............>...
    174d:	00 0c 0e 00 18 0f 00 18 07 00 10 07 80 30 07 80     .............0..
    175d:	30 03 c0 60 03 c0 60 01 e0 40 01 e0 c0 00 f0 c0     0..`..`..@......
    176d:	00 f1 80 00 71 80 00 7b 00 00 3b 00 00 3e 00 00     ....q..{..;..>..
    177d:	1e 00 00 1e 00 00 0c 00 00 0c 00 00 08 00 ff 9f     ................
    178d:	f0 3f 9f 03 e0 07 07 80 f0 03 03 c0 78 01 80 e0     .?..........x...
    179d:	1e 00 80 78 0f 00 c0 1c 03 80 60 0f 01 e0 20 07     ...x......`... .
    17ad:	81 f0 30 01 c0 bc 18 00 f0 de 08 00 78 67 0c 00     ..0.........xg..
    17bd:	1e 23 c4 00 0f 31 e6 00 03 90 7b 00 01 f8 3d 00     .#...1....{...=.
    17cd:	00 fc 0f 80 00 3c 07 c0 00 1e 03 c0 00 0f 00 e0     .....<..........
    17dd:	00 03 00 70 00 01 80 10 00 00 80 08 00 7f e0 ff     ...p............
    17ed:	0f c0 1e 03 e0 0e 00 f0 06 00 3c 06 00 0f 06 00     ..........<.....
    17fd:	07 86 00 01 e6 00 00 7b 00 00 3f 00 00 0f 00 00     .......{..?.....
    180d:	03 c0 00 03 f0 00 03 78 00 01 9e 00 01 87 80 01     .......x........
    181d:	83 e0 01 80 f0 01 80 3c 01 80 1f 01 c0 07 c1 e0     .......<........
    182d:	03 f3 fe 0f fe ff c0 ff 7e 00 1c 1e 00 18 1f 00     ........~.......
    183d:	30 0f 00 60 07 80 60 03 c0 c0 03 e1 80 01 e1 80     0..`..`.........
    184d:	00 f3 00 00 fe 00 00 7e 00 00 3c 00 00 3c 00 00     .......~..<..<..
    185d:	3c 00 00 3c 00 00 3c 00 00 3c 00 00 3c 00 00 3c     <..<..<..<..<..<
    186d:	00 00 3c 00 00 7e 00 01 ff 80 3f ff f1 ff ff 9c     ..<..~....?.....
    187d:	00 78 c0 07 84 00 38 00 03 c0 00 3c 00 03 c0 00     .x....8....<....
    188d:	1c 00 01 e0 00 1e 00 01 e0 00 0e 00 00 f0 00 0f     ................
    189d:	00 00 f0 00 07 00 00 78 00 47 80 06 78 00 33 80     .......x.G..x.3.
    18ad:	07 3f ff fb ff ff c0 ff 83 06 0c 18 30 60 c1 83     .?..........0`..
    18bd:	06 0c 18 30 60 c1 83 06 0c 18 30 60 c1 83 07 f0     ...0`.....0`....
    18cd:	c0 18 06 01 80 70 0c 03 00 e0 18 06 01 c0 30 0c     .....p........0.
    18dd:	03 80 60 18 07 00 c0 30 0e 01 80 60 1c 03 fe 0c     ..`....0...`....
    18ed:	18 30 60 c1 83 06 0c 18 30 60 c1 83 06 0c 18 30     .0`.....0`.....0
    18fd:	60 c1 83 06 0c 1f f0 03 80 0f 00 1f 00 76 00 ce     `............v..
    190d:	03 8c 06 1c 1c 18 30 30 e0 31 80 67 00 6c 00 c0     ......00.1.g.l..
    191d:	ff ff ff ff f0 c0 e0 70 18 0c 03 1f 03 8c 38 31     .......p......81
    192d:	c1 8e 0c 00 60 0f 01 98 30 c3 86 38 31 c1 8e 0c     ....`...0..81...
    193d:	78 e5 fb cf 0c 00 00 38 00 f8 00 38 00 38 00 38     x......8...8.8.8
    194d:	00 38 00 38 00 38 00 39 f0 3b fc 3c 3e 38 0e 38     .8.8.8.9.;.<>8.8
    195d:	0f 38 07 38 07 38 07 38 07 38 07 38 06 38 0e 38     .8.8.8.8.8.8.8.8
    196d:	0c 3c 1c 1f f0 07 e0 07 e0 7f e3 87 d8 0f 60 1b     .<............`.
    197d:	00 0c 00 30 00 c0 03 00 0e 00 3c 01 78 19 ff c3     ...0......<.x...
    198d:	fe 03 e0 00 00 00 1c 00 7c 00 1c 00 1c 00 1c 00     ........|.......
    199d:	1c 00 1c 00 1c 07 9c 1f dc 38 7c 70 3c 70 1c 60     .........8|p<p.`
    19ad:	1c e0 1c e0 1c e0 1c e0 1c e0 1c f0 1c 70 1c 7c     .............p.|
    19bd:	3e 3f df 0f 90 0f 81 ff 08 3c 80 e7 ff 7f ff 00     >?.......<......
    19cd:	18 00 c0 07 00 38 03 e0 37 83 3f f0 ff 03 f0 01     .....8..7.?.....
    19dd:	f0 3f c3 8e 18 00 c0 0e 00 70 03 80 1c 03 fe 1f     .?.......p......
    19ed:	f0 38 01 c0 0e 00 70 03 80 1c 00 e0 07 00 38 01     .8....p.......8.
    19fd:	c0 0e 00 70 07 c0 ff 80 0f c0 1f ff 38 ff 70 70     ...p........8.pp
    1a0d:	70 70 70 30 70 30 70 30 38 20 1c 60 0f 80 10 00     ppp0p0p08 .`....
    1a1d:	20 00 60 00 7f e0 3f fc 1f fe 20 06 40 02 c0 02      .`...?... .@...
    1a2d:	c0 04 f0 18 7f f0 1f 80 00 00 38 00 f8 00 38 00     ..........8...8.
    1a3d:	38 00 38 00 38 00 38 00 38 00 38 f0 3b f8 3e 3c     8.8.8.8.8.8.;.><
    1a4d:	3c 1c 38 1c 38 1c 38 1c 38 1c 38 1c 38 1c 38 1c     <.8.8.8.8.8.8.8.
    1a5d:	38 1c 38 1c 38 1c 7c 3e fe 7f 18 3c 3c 18 00 00     8.8.8.|>...<<...
    1a6d:	00 00 04 3c 7c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c     ...<|...........
    1a7d:	3c ff 03 03 c1 e0 60 00 00 00 00 00 83 c3 e0 70     <.....`........p
    1a8d:	38 1c 0e 07 03 81 c0 e0 70 38 1c 0e 07 03 81 c0     8.......p8......
    1a9d:	e0 70 37 3b f8 f8 00 00 1c 00 3e 00 07 00 03 80     .p7;......>.....
    1aad:	01 c0 00 e0 00 70 00 38 00 1c 3f 8e 0f 07 06 03     .....p.8..?.....
    1abd:	86 01 c4 00 e4 00 7e 00 3f 80 1d c0 0e 70 07 1c     ......~.?....p..
    1acd:	03 8f 01 c3 c0 e0 f0 f8 3c fe 7f 80 00 1c 7c 1c     ........<.....|.
    1add:	1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c     ................
    1aed:	1c 1c 1c 3c ff 38 f0 7c 3e fe 7f 83 e3 f0 e0 e0     ...<.8.|>.......
    1afd:	70 1c 38 1c 07 0e 07 01 c3 81 c0 70 e0 70 1c 38     p.8........p.p.8
    1b0d:	1c 07 0e 07 01 c3 81 c0 70 e0 70 1c 38 1c 07 0e     ........p.p.8...
    1b1d:	07 01 c3 81 e0 73 f9 fc 7f 38 f0 fb f8 3e 3c 38     .....s...8...><8
    1b2d:	1c 38 1c 38 1c 38 1c 38 1c 38 1c 38 1c 38 1c 38     .8.8.8.8.8.8.8.8
    1b3d:	1c 38 1c 38 1c 78 3c fe 7f 07 e0 1f f8 3c 7c 78     .8.8.x<......<|x
    1b4d:	3e 70 1e f0 0f f0 0f f0 0f f0 0f f0 0f f8 0f 78     >p.............x
    1b5d:	0e 7c 1c 3e 3c 0f f0 07 c0 18 f0 fb fc 3e 1e 38     .|.><........>.8
    1b6d:	0e 38 0f 38 07 38 07 38 07 38 07 38 07 38 06 38     .8.8.8.8.8.8.8.8
    1b7d:	0e 38 0c 3e 1c 3b f8 39 e0 38 00 38 00 38 00 38     .8.>.;.9.8.8.8.8
    1b8d:	00 38 00 38 00 7c 00 ff 00 07 c4 1f ec 3c 3c 70     .8.8.|.......<<p
    1b9d:	1c 70 1c 60 1c e0 1c e0 1c e0 1c e0 1c e0 1c f0     .p.`............
    1bad:	1c 70 1c 78 3c 3f dc 1f 1c 00 1c 00 1c 00 1c 00     .p.x<?..........
    1bbd:	1c 00 1c 00 1c 00 3e 00 ff 19 ff 7c f3 9c 03 80     ......>....|....
    1bcd:	70 0e 01 c0 38 07 00 e0 1c 03 80 70 1f 07 f0 3e     p...8......p...>
    1bdd:	58 7c 0f 03 c0 7c 07 80 f8 1f 81 f8 1e 03 c0 f0     X|...|..........
    1bed:	3e 1a 7c 10 30 70 fe fe 70 70 70 70 70 70 70 70     >.|.0p..pppppppp
    1bfd:	70 70 70 79 7e 3c f8 7c 38 3c 38 1c 38 1c 38 1c     pppy~<.|8<8.8.8.
    1c0d:	38 1c 38 1c 38 1c 38 1c 38 1c 38 1c 38 1c 38 1c     8.8.8.8.8.8.8.8.
    1c1d:	3c 7c 1f df 0f 18 fe 1f 7c 06 38 04 1c 04 1c 0c     <|......|.8.....
    1c2d:	0e 08 0e 18 07 10 07 10 07 20 03 a0 03 e0 01 c0     ......... ......
    1c3d:	01 c0 00 80 00 80 fc 7f 1f 78 3c 06 38 1c 04 38     .........x<.8..8
    1c4d:	1c 04 1c 1c 0c 1c 0e 08 1c 1e 18 0e 17 10 0e 37     ...............7
    1c5d:	10 07 23 30 07 63 a0 07 43 e0 03 c1 c0 03 81 c0     ..#0.c..C.......
    1c6d:	01 80 80 01 00 80 7f 7e 1e 0c 07 8c 01 c4 00 76     .......~.......v
    1c7d:	00 3e 00 0e 00 03 80 03 e0 01 70 01 1c 01 8f 01     .>........p.....
    1c8d:	83 80 80 e0 c0 79 f0 ff fe 0f 7c 06 38 06 1c 04     .....y....|.8...
    1c9d:	1c 0c 0e 0c 0e 08 0f 18 07 10 07 90 03 b0 03 a0     ................
    1cad:	01 e0 01 e0 00 c0 00 c0 00 80 00 80 01 80 01 00     ................
    1cbd:	03 00 7e 00 7c 00 78 00 7f f9 ff e6 07 10 38 00     ..~.|.x.......8.
    1ccd:	e0 07 00 38 01 e0 07 00 38 01 e0 07 01 38 0d c0     ...8....8....8..
    1cdd:	3f ff bf fe 07 0e 1c 18 18 18 18 18 18 18 18 18     ?...............
    1ced:	18 30 60 60 10 18 18 18 18 18 18 18 18 18 18 1c     .0``............
    1cfd:	0e 07 ff ff ff ff ff ff e0 70 38 18 18 18 18 18     .........p8.....
    1d0d:	18 18 18 18 18 08 06 06 08 18 18 18 18 18 18 18     ................
    1d1d:	18 18 18 38 70 e0 3e 00 7f 87 e3 fe 00 7c           ...8p.>......|

00001d2b <Terminal6x8>:
    1d2b:	06 08 20 60 04 00 00 00 00 00 00 05 00 00 06 5f     .. `..........._
    1d3b:	06 00 06 00 07 03 00 07 03 06 00 24 7e 24 7e 24     ...........$~$~$
    1d4b:	05 00 24 2b 6a 12 00 06 00 63 13 08 64 63 06 00     ..$+j....c..dc..
    1d5b:	36 49 56 20 50 04 00 00 07 03 00 00 04 00 00 3e     6IV P..........>
    1d6b:	41 00 00 04 00 00 41 3e 00 00 06 00 08 3e 1c 3e     A.....A>.....>.>
    1d7b:	08 06 00 08 08 3e 08 08 04 00 00 e0 60 00 00 06     .....>......`...
    1d8b:	00 08 08 08 08 08 04 00 00 60 60 00 00 06 00 20     .........``.... 
    1d9b:	10 08 04 02 06 00 3e 51 49 45 3e 05 00 00 42 7f     ......>QIE>...B.
    1dab:	40 00 06 00 62 51 49 49 46 06 00 22 49 49 49 36     @...bQIIF.."III6
    1dbb:	06 00 18 14 12 7f 10 06 00 2f 49 49 49 31 06 00     ........./III1..
    1dcb:	3c 4a 49 49 30 06 00 01 71 09 05 03 06 00 36 49     <JII0...q.....6I
    1ddb:	49 49 36 06 00 06 49 49 29 1e 04 00 00 6c 6c 00     II6...II)....ll.
    1deb:	00 04 00 00 ec 6c 00 00 05 00 08 14 22 41 00 06     .....l......"A..
    1dfb:	00 24 24 24 24 24 06 00 00 41 22 14 08 06 00 02     .$$$$$...A".....
    1e0b:	01 59 09 06 06 00 3e 41 5d 55 1e 06 00 7e 11 11     .Y....>A]U...~..
    1e1b:	11 7e 06 00 7f 49 49 49 36 06 00 3e 41 41 41 22     .~...III6..>AAA"
    1e2b:	06 00 7f 41 41 41 3e 06 00 7f 49 49 49 41 06 00     ...AAA>...IIIA..
    1e3b:	7f 09 09 09 01 06 00 3e 41 49 49 7a 06 00 7f 08     .......>AIIz....
    1e4b:	08 08 7f 05 00 00 41 7f 41 00 06 00 30 40 40 40     ......A.A...0@@@
    1e5b:	3f 06 00 7f 08 14 22 41 06 00 7f 40 40 40 40 06     ?....."A...@@@@.
    1e6b:	00 7f 02 04 02 7f 06 00 7f 02 04 08 7f 06 00 3e     ...............>
    1e7b:	41 41 41 3e 06 00 7f 09 09 09 06 06 00 3e 41 51     AAA>.........>AQ
    1e8b:	21 5e 06 00 7f 09 09 19 66 06 00 26 49 49 49 32     !^......f..&III2
    1e9b:	06 00 01 01 7f 01 01 06 00 3f 40 40 40 3f 06 00     .........?@@@?..
    1eab:	1f 20 40 20 1f 06 00 3f 40 3c 40 3f 06 00 63 14     . @ ...?@<@?..c.
    1ebb:	08 14 63 06 00 07 08 70 08 07 05 00 71 49 45 43     ..c....p....qIEC
    1ecb:	00 05 00 00 7f 41 41 00 06 00 02 04 08 10 20 05     .....AA....... .
    1edb:	00 00 41 41 7f 00 06 00 04 02 01 02 04 06 80 80     ..AA............
    1eeb:	80 80 80 80 04 00 00 03 07 00 00 06 00 20 54 54     ............. TT
    1efb:	54 78 06 00 7f 44 44 44 38 06 00 38 44 44 44 28     Tx...DDD8..8DDD(
    1f0b:	06 00 38 44 44 44 7f 06 00 38 54 54 54 08 05 00     ..8DDD...8TTT...
    1f1b:	08 7e 09 09 00 06 00 18 a4 a4 a4 7c 05 00 7f 04     .~.........|....
    1f2b:	04 78 00 05 00 00 00 7d 40 00 05 00 40 80 84 7d     .x.....}@...@..}
    1f3b:	00 05 00 7f 10 28 44 00 05 00 00 00 7f 40 00 06     .....(D......@..
    1f4b:	00 7c 04 18 04 78 05 00 7c 04 04 78 00 06 00 38     .|...x..|..x...8
    1f5b:	44 44 44 38 06 00 fc 44 44 44 38 06 00 38 44 44     DDD8...DDD8..8DD
    1f6b:	44 fc 06 00 44 78 44 04 08 06 00 08 54 54 54 20     D...DxD.....TTT 
    1f7b:	05 00 04 3e 44 24 00 05 00 3c 40 20 7c 00 06 00     ...>D$...<@ |...
    1f8b:	1c 20 40 20 1c 06 00 3c 60 30 60 3c 05 00 6c 10     . @ ...<`0`<..l.
    1f9b:	10 6c 00 05 00 9c a0 60 3c 00 05 00 64 54 54 4c     .l.....`<...dTTL
    1fab:	00 05 00 08 3e 41 41 00 04 00 00 00 77 00 00 06     ....>AA.....w...
    1fbb:	00 00 41 41 3e 08 05 00 02 01 02 01 00 06 00 3c     ..AA>..........<
    1fcb:	26 23 26 3c                                         &#&<

00001fcf <digital_pin_to_timer_PGM>:
    1fcf:	00 00 00 08 00 02 01 00 00 03 04 07 00 00 00 00     ................
    1fdf:	00 00 00 00                                         ....

00001fe3 <digital_pin_to_bit_mask_PGM>:
    1fe3:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
    1ff3:	04 08 10 20                                         ... 

00001ff7 <digital_pin_to_port_PGM>:
    1ff7:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
    2007:	03 03 03 03                                         ....

0000200b <port_to_output_PGM>:
    200b:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

00002015 <port_to_mode_PGM>:
    2015:	00 00 00 00 24 00 27 00 2a 00 00                    ....$.'.*..

00002020 <__ctors_start>:
    2020:	da 14       	cp	r13, r10
    2022:	6c 18       	sub	r6, r12
    2024:	4e 2b       	or	r20, r30

00002026 <__ctors_end>:
    2026:	f6 14       	cp	r15, r6

00002028 <__dtors_end>:
    2028:	11 24       	eor	r1, r1
    202a:	1f be       	out	0x3f, r1	; 63
    202c:	cf ef       	ldi	r28, 0xFF	; 255
    202e:	d8 e0       	ldi	r29, 0x08	; 8
    2030:	de bf       	out	0x3e, r29	; 62
    2032:	cd bf       	out	0x3d, r28	; 61

00002034 <__do_copy_data>:
    2034:	12 e0       	ldi	r17, 0x02	; 2
    2036:	a0 e0       	ldi	r26, 0x00	; 0
    2038:	b1 e0       	ldi	r27, 0x01	; 1
    203a:	ee e2       	ldi	r30, 0x2E	; 46
    203c:	f1 e7       	ldi	r31, 0x71	; 113
    203e:	02 c0       	rjmp	.+4      	; 0x2044 <__do_copy_data+0x10>
    2040:	05 90       	lpm	r0, Z+
    2042:	0d 92       	st	X+, r0
    2044:	ae 33       	cpi	r26, 0x3E	; 62
    2046:	b1 07       	cpc	r27, r17
    2048:	d9 f7       	brne	.-10     	; 0x2040 <__do_copy_data+0xc>

0000204a <__do_clear_bss>:
    204a:	24 e0       	ldi	r18, 0x04	; 4
    204c:	ae e3       	ldi	r26, 0x3E	; 62
    204e:	b2 e0       	ldi	r27, 0x02	; 2
    2050:	01 c0       	rjmp	.+2      	; 0x2054 <.do_clear_bss_start>

00002052 <.do_clear_bss_loop>:
    2052:	1d 92       	st	X+, r1

00002054 <.do_clear_bss_start>:
    2054:	ae 3f       	cpi	r26, 0xFE	; 254
    2056:	b2 07       	cpc	r27, r18
    2058:	e1 f7       	brne	.-8      	; 0x2052 <.do_clear_bss_loop>

0000205a <__do_global_ctors>:
    205a:	10 e1       	ldi	r17, 0x10	; 16
    205c:	c3 e1       	ldi	r28, 0x13	; 19
    205e:	d0 e1       	ldi	r29, 0x10	; 16
    2060:	04 c0       	rjmp	.+8      	; 0x206a <__do_global_ctors+0x10>
    2062:	21 97       	sbiw	r28, 0x01	; 1
    2064:	fe 01       	movw	r30, r28
    2066:	0e 94 23 31 	call	0x6246	; 0x6246 <__tablejump2__>
    206a:	c0 31       	cpi	r28, 0x10	; 16
    206c:	d1 07       	cpc	r29, r17
    206e:	c9 f7       	brne	.-14     	; 0x2062 <__do_global_ctors+0x8>
    2070:	0e 94 9a 18 	call	0x3134	; 0x3134 <main>
    2074:	0c 94 8a 38 	jmp	0x7114	; 0x7114 <__do_global_dtors>

00002078 <__bad_interrupt>:
    2078:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000207c <_Z9fill_areaij>:
}

/*******************************************************************************/

void fill_area(int area,uint16_t colour)
{
    207c:	ef 92       	push	r14
    207e:	ff 92       	push	r15
    2080:	0f 93       	push	r16
    2082:	1f 93       	push	r17
    2084:	7b 01       	movw	r14, r22
  
   int length = area/rectangle_width;
  
   tft.fillRectangle(35, 105, 35+length, 135, colour);
    2086:	6e e1       	ldi	r22, 0x1E	; 30
    2088:	70 e0       	ldi	r23, 0x00	; 0
    208a:	0e 94 ce 30 	call	0x619c	; 0x619c <__divmodhi4>
    208e:	9b 01       	movw	r18, r22
    2090:	2d 5d       	subi	r18, 0xDD	; 221
    2092:	3f 4f       	sbci	r19, 0xFF	; 255
    2094:	07 e8       	ldi	r16, 0x87	; 135
    2096:	10 e0       	ldi	r17, 0x00	; 0
    2098:	49 e6       	ldi	r20, 0x69	; 105
    209a:	50 e0       	ldi	r21, 0x00	; 0
    209c:	63 e2       	ldi	r22, 0x23	; 35
    209e:	70 e0       	ldi	r23, 0x00	; 0
    20a0:	88 e2       	ldi	r24, 0x28	; 40
    20a2:	93 e0       	ldi	r25, 0x03	; 3
    20a4:	0e 94 cb 23 	call	0x4796	; 0x4796 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj>
  
}
    20a8:	1f 91       	pop	r17
    20aa:	0f 91       	pop	r16
    20ac:	ff 90       	pop	r15
    20ae:	ef 90       	pop	r14
    20b0:	08 95       	ret

000020b2 <loop>:
    while(1){}
  }
}

/*********************************************************************************/
void loop() {
    20b2:	4f 92       	push	r4
    20b4:	5f 92       	push	r5
    20b6:	6f 92       	push	r6
    20b8:	7f 92       	push	r7
    20ba:	af 92       	push	r10
    20bc:	bf 92       	push	r11
    20be:	cf 92       	push	r12
    20c0:	df 92       	push	r13
    20c2:	ef 92       	push	r14
    20c4:	ff 92       	push	r15
    20c6:	0f 93       	push	r16
    20c8:	1f 93       	push	r17
    20ca:	cf 93       	push	r28
    20cc:	df 93       	push	r29
    20ce:	00 d0       	rcall	.+0      	; 0x20d0 <loop+0x1e>
    20d0:	00 d0       	rcall	.+0      	; 0x20d2 <loop+0x20>
    20d2:	00 d0       	rcall	.+0      	; 0x20d4 <loop+0x22>
    20d4:	cd b7       	in	r28, 0x3d	; 61
    20d6:	de b7       	in	r29, 0x3e	; 62
    20d8:	18 ec       	ldi	r17, 0xC8	; 200
  
  float final_pressure = 0;
    20da:	41 2c       	mov	r4, r1
    20dc:	51 2c       	mov	r5, r1
    20de:	32 01       	movw	r6, r4
  uint8_t i = 200;
  
  //Taking 2oo pressure value samples 
  while(i)
  {  dPress.readSensor();
    20e0:	8e e3       	ldi	r24, 0x3E	; 62
    20e2:	92 e0       	ldi	r25, 0x02	; 2
    20e4:	0e 94 ac 1f 	call	0x3f58	; 0x3f58 <_ZN7AMS581210readSensorEv>
	  pressure = dPress.getPressure_Pa(); //Pressure in pascal
    20e8:	8e e3       	ldi	r24, 0x3E	; 62
    20ea:	92 e0       	ldi	r25, 0x02	; 2
    20ec:	0e 94 77 1e 	call	0x3cee	; 0x3cee <_ZN7AMS581214getPressure_PaEv>
    20f0:	6b 01       	movw	r12, r22
    20f2:	7c 01       	movw	r14, r24
	  if(pressure >= 1700000)
    20f4:	20 e0       	ldi	r18, 0x00	; 0
    20f6:	35 e8       	ldi	r19, 0x85	; 133
    20f8:	4f ec       	ldi	r20, 0xCF	; 207
    20fa:	59 e4       	ldi	r21, 0x49	; 73
    20fc:	0e 94 9d 16 	call	0x2d3a	; 0x2d3a <__gesf2>
    2100:	87 ff       	sbrs	r24, 7
    2102:	09 c0       	rjmp	.+18     	; 0x2116 <loop+0x64>
  uint8_t i = 200;
  
  //Taking 2oo pressure value samples 
  while(i)
  {  dPress.readSensor();
	  pressure = dPress.getPressure_Pa(); //Pressure in pascal
    2104:	c0 92 81 03 	sts	0x0381, r12	; 0x800381 <pressure>
    2108:	d0 92 82 03 	sts	0x0382, r13	; 0x800382 <pressure+0x1>
    210c:	e0 92 83 03 	sts	0x0383, r14	; 0x800383 <pressure+0x2>
    2110:	f0 92 84 03 	sts	0x0384, r15	; 0x800384 <pressure+0x3>
    2114:	08 c0       	rjmp	.+16     	; 0x2126 <loop+0x74>
	  if(pressure >= 1700000)
	  {
		  pressure=0;
    2116:	10 92 81 03 	sts	0x0381, r1	; 0x800381 <pressure>
    211a:	10 92 82 03 	sts	0x0382, r1	; 0x800382 <pressure+0x1>
    211e:	10 92 83 03 	sts	0x0383, r1	; 0x800383 <pressure+0x2>
    2122:	10 92 84 03 	sts	0x0384, r1	; 0x800384 <pressure+0x3>
	  }
	  
   float kPa = (pressure/1000); //pressure in Kilo  pascal
   final_pressure = final_pressure+kPa;  
    2126:	20 e0       	ldi	r18, 0x00	; 0
    2128:	30 e0       	ldi	r19, 0x00	; 0
    212a:	4a e7       	ldi	r20, 0x7A	; 122
    212c:	54 e4       	ldi	r21, 0x44	; 68
    212e:	60 91 81 03 	lds	r22, 0x0381	; 0x800381 <pressure>
    2132:	70 91 82 03 	lds	r23, 0x0382	; 0x800382 <pressure+0x1>
    2136:	80 91 83 03 	lds	r24, 0x0383	; 0x800383 <pressure+0x2>
    213a:	90 91 84 03 	lds	r25, 0x0384	; 0x800384 <pressure+0x3>
    213e:	0e 94 67 15 	call	0x2ace	; 0x2ace <__divsf3>
    2142:	9b 01       	movw	r18, r22
    2144:	ac 01       	movw	r20, r24
    2146:	c3 01       	movw	r24, r6
    2148:	b2 01       	movw	r22, r4
    214a:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <__addsf3>
    214e:	2b 01       	movw	r4, r22
    2150:	3c 01       	movw	r6, r24
    i--;
   delay(1);
    2152:	61 e0       	ldi	r22, 0x01	; 1
    2154:	70 e0       	ldi	r23, 0x00	; 0
    2156:	80 e0       	ldi	r24, 0x00	; 0
    2158:	90 e0       	ldi	r25, 0x00	; 0
    215a:	0e 94 af 1a 	call	0x355e	; 0x355e <delay>
    215e:	11 50       	subi	r17, 0x01	; 1
  
  float final_pressure = 0;
  uint8_t i = 200;
  
  //Taking 2oo pressure value samples 
  while(i)
    2160:	09 f0       	breq	.+2      	; 0x2164 <loop+0xb2>
    2162:	be cf       	rjmp	.-132    	; 0x20e0 <loop+0x2e>
   float kPa = (pressure/1000); //pressure in Kilo  pascal
   final_pressure = final_pressure+kPa;  
    i--;
   delay(1);
  }
   final_pressure = final_pressure/200;
    2164:	20 e0       	ldi	r18, 0x00	; 0
    2166:	30 e0       	ldi	r19, 0x00	; 0
    2168:	48 e4       	ldi	r20, 0x48	; 72
    216a:	53 e4       	ldi	r21, 0x43	; 67
    216c:	c3 01       	movw	r24, r6
    216e:	b2 01       	movw	r22, r4
    2170:	0e 94 67 15 	call	0x2ace	; 0x2ace <__divsf3>
    2174:	2b 01       	movw	r4, r22
    2176:	3c 01       	movw	r6, r24
  
   Serial.print("Pressure =\t");
    2178:	6e e1       	ldi	r22, 0x1E	; 30
    217a:	71 e0       	ldi	r23, 0x01	; 1
    217c:	85 e8       	ldi	r24, 0x85	; 133
    217e:	93 e0       	ldi	r25, 0x03	; 3
    2180:	0e 94 e8 18 	call	0x31d0	; 0x31d0 <_ZN5Print5printEPKc>
   Serial.print(final_pressure,4); 
    2184:	24 e0       	ldi	r18, 0x04	; 4
    2186:	30 e0       	ldi	r19, 0x00	; 0
    2188:	b3 01       	movw	r22, r6
    218a:	a2 01       	movw	r20, r4
    218c:	85 e8       	ldi	r24, 0x85	; 133
    218e:	93 e0       	ldi	r25, 0x03	; 3
    2190:	0e 94 3e 1a 	call	0x347c	; 0x347c <_ZN5Print5printEdi>
   Serial.print("kPa");
    2194:	6a e2       	ldi	r22, 0x2A	; 42
    2196:	71 e0       	ldi	r23, 0x01	; 1
    2198:	85 e8       	ldi	r24, 0x85	; 133
    219a:	93 e0       	ldi	r25, 0x03	; 3
    219c:	0e 94 e8 18 	call	0x31d0	; 0x31d0 <_ZN5Print5printEPKc>
   //Serial.print(Angle);
   Serial.print("\n");
    21a0:	62 ea       	ldi	r22, 0xA2	; 162
    21a2:	71 e0       	ldi	r23, 0x01	; 1
    21a4:	85 e8       	ldi	r24, 0x85	; 133
    21a6:	93 e0       	ldi	r25, 0x03	; 3
    21a8:	0e 94 e8 18 	call	0x31d0	; 0x31d0 <_ZN5Print5printEPKc>
  
   Current_Area = map(final_pressure,0,100,0,4500); //Maping between Pressure and Area
    21ac:	c3 01       	movw	r24, r6
    21ae:	b2 01       	movw	r22, r4
    21b0:	0e 94 d9 15 	call	0x2bb2	; 0x2bb2 <__fixsfsi>
    21b4:	1f 92       	push	r1
    21b6:	1f 92       	push	r1
    21b8:	21 e1       	ldi	r18, 0x11	; 17
    21ba:	2f 93       	push	r18
    21bc:	24 e9       	ldi	r18, 0x94	; 148
    21be:	2f 93       	push	r18
    21c0:	a1 2c       	mov	r10, r1
    21c2:	b1 2c       	mov	r11, r1
    21c4:	65 01       	movw	r12, r10
    21c6:	14 e6       	ldi	r17, 0x64	; 100
    21c8:	e1 2e       	mov	r14, r17
    21ca:	f1 2c       	mov	r15, r1
    21cc:	00 e0       	ldi	r16, 0x00	; 0
    21ce:	10 e0       	ldi	r17, 0x00	; 0
    21d0:	20 e0       	ldi	r18, 0x00	; 0
    21d2:	30 e0       	ldi	r19, 0x00	; 0
    21d4:	a9 01       	movw	r20, r18
    21d6:	0e 94 26 1b 	call	0x364c	; 0x364c <_Z3maplllll>
    21da:	70 93 76 03 	sts	0x0376, r23	; 0x800376 <Current_Area+0x1>
    21de:	60 93 75 03 	sts	0x0375, r22	; 0x800375 <Current_Area>
   Current_Pressure = final_pressure; 
    21e2:	40 92 79 03 	sts	0x0379, r4	; 0x800379 <Current_Pressure>
    21e6:	50 92 7a 03 	sts	0x037A, r5	; 0x80037a <Current_Pressure+0x1>
    21ea:	60 92 7b 03 	sts	0x037B, r6	; 0x80037b <Current_Pressure+0x2>
    21ee:	70 92 7c 03 	sts	0x037C, r7	; 0x80037c <Current_Pressure+0x3>
   stringTwo =  String(Current_Pressure/1000, 3);
    21f2:	20 e0       	ldi	r18, 0x00	; 0
    21f4:	30 e0       	ldi	r19, 0x00	; 0
    21f6:	4a e7       	ldi	r20, 0x7A	; 122
    21f8:	54 e4       	ldi	r21, 0x44	; 68
    21fa:	c3 01       	movw	r24, r6
    21fc:	b2 01       	movw	r22, r4
    21fe:	0e 94 67 15 	call	0x2ace	; 0x2ace <__divsf3>
    2202:	ab 01       	movw	r20, r22
    2204:	bc 01       	movw	r22, r24
    2206:	23 e0       	ldi	r18, 0x03	; 3
    2208:	ce 01       	movw	r24, r28
    220a:	01 96       	adiw	r24, 0x01	; 1
    220c:	0e 94 6e 1c 	call	0x38dc	; 0x38dc <_ZN6StringC1Efh>
    2210:	be 01       	movw	r22, r28
    2212:	6f 5f       	subi	r22, 0xFF	; 255
    2214:	7f 4f       	sbci	r23, 0xFF	; 255
    2216:	8f e6       	ldi	r24, 0x6F	; 111
    2218:	93 e0       	ldi	r25, 0x03	; 3
    221a:	0e 94 4b 1c 	call	0x3896	; 0x3896 <_ZN6StringaSEOS_>
    221e:	ce 01       	movw	r24, r28
    2220:	01 96       	adiw	r24, 0x01	; 1
    2222:	0e 94 68 1b 	call	0x36d0	; 0x36d0 <_ZN6StringD1Ev>
     
	
	 if((Current_Pressure-Previous_Pressure> 1)||(Previous_Pressure-Current_Pressure > 1))   //Printing Pressure Value Screen
    2226:	40 90 79 03 	lds	r4, 0x0379	; 0x800379 <Current_Pressure>
    222a:	50 90 7a 03 	lds	r5, 0x037A	; 0x80037a <Current_Pressure+0x1>
    222e:	60 90 7b 03 	lds	r6, 0x037B	; 0x80037b <Current_Pressure+0x2>
    2232:	70 90 7c 03 	lds	r7, 0x037C	; 0x80037c <Current_Pressure+0x3>
    2236:	c0 90 7d 03 	lds	r12, 0x037D	; 0x80037d <Previous_Pressure>
    223a:	d0 90 7e 03 	lds	r13, 0x037E	; 0x80037e <Previous_Pressure+0x1>
    223e:	e0 90 7f 03 	lds	r14, 0x037F	; 0x80037f <Previous_Pressure+0x2>
    2242:	f0 90 80 03 	lds	r15, 0x0380	; 0x800380 <Previous_Pressure+0x3>
    2246:	a7 01       	movw	r20, r14
    2248:	96 01       	movw	r18, r12
    224a:	c3 01       	movw	r24, r6
    224c:	b2 01       	movw	r22, r4
    224e:	0e 94 fa 14 	call	0x29f4	; 0x29f4 <__subsf3>
    2252:	0f 90       	pop	r0
    2254:	0f 90       	pop	r0
    2256:	0f 90       	pop	r0
    2258:	0f 90       	pop	r0
    225a:	20 e0       	ldi	r18, 0x00	; 0
    225c:	30 e0       	ldi	r19, 0x00	; 0
    225e:	40 e8       	ldi	r20, 0x80	; 128
    2260:	5f e3       	ldi	r21, 0x3F	; 63
    2262:	0e 94 9d 16 	call	0x2d3a	; 0x2d3a <__gesf2>
    2266:	18 16       	cp	r1, r24
    2268:	7c f0       	brlt	.+30     	; 0x2288 <loop+0x1d6>
    226a:	a3 01       	movw	r20, r6
    226c:	92 01       	movw	r18, r4
    226e:	c7 01       	movw	r24, r14
    2270:	b6 01       	movw	r22, r12
    2272:	0e 94 fa 14 	call	0x29f4	; 0x29f4 <__subsf3>
    2276:	20 e0       	ldi	r18, 0x00	; 0
    2278:	30 e0       	ldi	r19, 0x00	; 0
    227a:	40 e8       	ldi	r20, 0x80	; 128
    227c:	5f e3       	ldi	r21, 0x3F	; 63
    227e:	0e 94 9d 16 	call	0x2d3a	; 0x2d3a <__gesf2>
    2282:	18 16       	cp	r1, r24
    2284:	0c f0       	brlt	.+2      	; 0x2288 <loop+0x1d6>
    2286:	83 c0       	rjmp	.+262    	; 0x238e <loop+0x2dc>
  { 
	  if(third_digit!=stringTwo[4])
    2288:	64 e0       	ldi	r22, 0x04	; 4
    228a:	70 e0       	ldi	r23, 0x00	; 0
    228c:	8f e6       	ldi	r24, 0x6F	; 111
    228e:	93 e0       	ldi	r25, 0x03	; 3
    2290:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN6StringixEj>
    2294:	fc 01       	movw	r30, r24
    2296:	90 81       	ld	r25, Z
    2298:	80 91 6c 03 	lds	r24, 0x036C	; 0x80036c <third_digit>
    229c:	98 17       	cp	r25, r24
    229e:	c1 f0       	breq	.+48     	; 0x22d0 <loop+0x21e>
	  {
		  
	   tft.fillRectangle(94, 45, 113, 75,COLOR_BLACK); // Rectangle  to delete Third digit	  
    22a0:	e1 2c       	mov	r14, r1
    22a2:	f1 2c       	mov	r15, r1
    22a4:	0b e4       	ldi	r16, 0x4B	; 75
    22a6:	10 e0       	ldi	r17, 0x00	; 0
    22a8:	21 e7       	ldi	r18, 0x71	; 113
    22aa:	30 e0       	ldi	r19, 0x00	; 0
    22ac:	4d e2       	ldi	r20, 0x2D	; 45
    22ae:	50 e0       	ldi	r21, 0x00	; 0
    22b0:	6e e5       	ldi	r22, 0x5E	; 94
    22b2:	70 e0       	ldi	r23, 0x00	; 0
    22b4:	88 e2       	ldi	r24, 0x28	; 40
    22b6:	93 e0       	ldi	r25, 0x03	; 3
    22b8:	0e 94 cb 23 	call	0x4796	; 0x4796 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj>
	   third_digit = stringTwo[4];
    22bc:	64 e0       	ldi	r22, 0x04	; 4
    22be:	70 e0       	ldi	r23, 0x00	; 0
    22c0:	8f e6       	ldi	r24, 0x6F	; 111
    22c2:	93 e0       	ldi	r25, 0x03	; 3
    22c4:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN6StringixEj>
    22c8:	fc 01       	movw	r30, r24
    22ca:	80 81       	ld	r24, Z
    22cc:	80 93 6c 03 	sts	0x036C, r24	; 0x80036c <third_digit>
	 
	  }
	  
	  if(second_digit != stringTwo[3])
    22d0:	63 e0       	ldi	r22, 0x03	; 3
    22d2:	70 e0       	ldi	r23, 0x00	; 0
    22d4:	8f e6       	ldi	r24, 0x6F	; 111
    22d6:	93 e0       	ldi	r25, 0x03	; 3
    22d8:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN6StringixEj>
    22dc:	fc 01       	movw	r30, r24
    22de:	90 81       	ld	r25, Z
    22e0:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <second_digit>
    22e4:	98 17       	cp	r25, r24
    22e6:	c1 f0       	breq	.+48     	; 0x2318 <loop+0x266>
	  {
		  tft.fillRectangle(76, 45, 94, 75, COLOR_BLACK); // Rectangle  to delete second digit
    22e8:	e1 2c       	mov	r14, r1
    22ea:	f1 2c       	mov	r15, r1
    22ec:	0b e4       	ldi	r16, 0x4B	; 75
    22ee:	10 e0       	ldi	r17, 0x00	; 0
    22f0:	2e e5       	ldi	r18, 0x5E	; 94
    22f2:	30 e0       	ldi	r19, 0x00	; 0
    22f4:	4d e2       	ldi	r20, 0x2D	; 45
    22f6:	50 e0       	ldi	r21, 0x00	; 0
    22f8:	6c e4       	ldi	r22, 0x4C	; 76
    22fa:	70 e0       	ldi	r23, 0x00	; 0
    22fc:	88 e2       	ldi	r24, 0x28	; 40
    22fe:	93 e0       	ldi	r25, 0x03	; 3
    2300:	0e 94 cb 23 	call	0x4796	; 0x4796 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj>
		  second_digit = stringTwo[3];
    2304:	63 e0       	ldi	r22, 0x03	; 3
    2306:	70 e0       	ldi	r23, 0x00	; 0
    2308:	8f e6       	ldi	r24, 0x6F	; 111
    230a:	93 e0       	ldi	r25, 0x03	; 3
    230c:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN6StringixEj>
    2310:	fc 01       	movw	r30, r24
    2312:	80 81       	ld	r24, Z
    2314:	80 93 6d 03 	sts	0x036D, r24	; 0x80036d <second_digit>
	  }
	 
	  if(first_digit != stringTwo[2])
    2318:	62 e0       	ldi	r22, 0x02	; 2
    231a:	70 e0       	ldi	r23, 0x00	; 0
    231c:	8f e6       	ldi	r24, 0x6F	; 111
    231e:	93 e0       	ldi	r25, 0x03	; 3
    2320:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN6StringixEj>
    2324:	fc 01       	movw	r30, r24
    2326:	90 81       	ld	r25, Z
    2328:	80 91 6e 03 	lds	r24, 0x036E	; 0x80036e <first_digit>
    232c:	98 17       	cp	r25, r24
    232e:	c1 f0       	breq	.+48     	; 0x2360 <loop+0x2ae>
	  {
		  
		tft.fillRectangle(60, 45, 75, 75, COLOR_BLACK); // Rectangle  to delete first digit
    2330:	e1 2c       	mov	r14, r1
    2332:	f1 2c       	mov	r15, r1
    2334:	0b e4       	ldi	r16, 0x4B	; 75
    2336:	10 e0       	ldi	r17, 0x00	; 0
    2338:	2b e4       	ldi	r18, 0x4B	; 75
    233a:	30 e0       	ldi	r19, 0x00	; 0
    233c:	4d e2       	ldi	r20, 0x2D	; 45
    233e:	50 e0       	ldi	r21, 0x00	; 0
    2340:	6c e3       	ldi	r22, 0x3C	; 60
    2342:	70 e0       	ldi	r23, 0x00	; 0
    2344:	88 e2       	ldi	r24, 0x28	; 40
    2346:	93 e0       	ldi	r25, 0x03	; 3
    2348:	0e 94 cb 23 	call	0x4796	; 0x4796 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj>
		first_digit = stringTwo[2];   
    234c:	62 e0       	ldi	r22, 0x02	; 2
    234e:	70 e0       	ldi	r23, 0x00	; 0
    2350:	8f e6       	ldi	r24, 0x6F	; 111
    2352:	93 e0       	ldi	r25, 0x03	; 3
    2354:	0e 94 9e 1c 	call	0x393c	; 0x393c <_ZN6StringixEj>
    2358:	fc 01       	movw	r30, r24
    235a:	80 81       	ld	r24, Z
    235c:	80 93 6e 03 	sts	0x036E, r24	; 0x80036e <first_digit>
	  
	  }
       
	    tft.drawGFXText(30,70, stringTwo,primary_color);  //Writing new value from screen
    2360:	6f e6       	ldi	r22, 0x6F	; 111
    2362:	73 e0       	ldi	r23, 0x03	; 3
    2364:	ce 01       	movw	r24, r28
    2366:	01 96       	adiw	r24, 0x01	; 1
    2368:	0e 94 42 1c 	call	0x3884	; 0x3884 <_ZN6StringC1ERKS_>
    236c:	0f ef       	ldi	r16, 0xFF	; 255
    236e:	1f ef       	ldi	r17, 0xFF	; 255
    2370:	9e 01       	movw	r18, r28
    2372:	2f 5f       	subi	r18, 0xFF	; 255
    2374:	3f 4f       	sbci	r19, 0xFF	; 255
    2376:	46 e4       	ldi	r20, 0x46	; 70
    2378:	50 e0       	ldi	r21, 0x00	; 0
    237a:	6e e1       	ldi	r22, 0x1E	; 30
    237c:	70 e0       	ldi	r23, 0x00	; 0
    237e:	88 e2       	ldi	r24, 0x28	; 40
    2380:	93 e0       	ldi	r25, 0x03	; 3
    2382:	0e 94 a7 29 	call	0x534e	; 0x534e <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj>
    2386:	ce 01       	movw	r24, r28
    2388:	01 96       	adiw	r24, 0x01	; 1
    238a:	0e 94 68 1b 	call	0x36d0	; 0x36d0 <_ZN6StringD1Ev>
      
   }
   
   
      if((Current_Pressure-Previous_Pressure > 1))   //When Pressure is increasing.
    238e:	c0 90 79 03 	lds	r12, 0x0379	; 0x800379 <Current_Pressure>
    2392:	d0 90 7a 03 	lds	r13, 0x037A	; 0x80037a <Current_Pressure+0x1>
    2396:	e0 90 7b 03 	lds	r14, 0x037B	; 0x80037b <Current_Pressure+0x2>
    239a:	f0 90 7c 03 	lds	r15, 0x037C	; 0x80037c <Current_Pressure+0x3>
    239e:	40 90 7d 03 	lds	r4, 0x037D	; 0x80037d <Previous_Pressure>
    23a2:	50 90 7e 03 	lds	r5, 0x037E	; 0x80037e <Previous_Pressure+0x1>
    23a6:	60 90 7f 03 	lds	r6, 0x037F	; 0x80037f <Previous_Pressure+0x2>
    23aa:	70 90 80 03 	lds	r7, 0x0380	; 0x800380 <Previous_Pressure+0x3>
    23ae:	a3 01       	movw	r20, r6
    23b0:	92 01       	movw	r18, r4
    23b2:	c7 01       	movw	r24, r14
    23b4:	b6 01       	movw	r22, r12
    23b6:	0e 94 fa 14 	call	0x29f4	; 0x29f4 <__subsf3>
    23ba:	20 e0       	ldi	r18, 0x00	; 0
    23bc:	30 e0       	ldi	r19, 0x00	; 0
    23be:	40 e8       	ldi	r20, 0x80	; 128
    23c0:	5f e3       	ldi	r21, 0x3F	; 63
    23c2:	0e 94 9d 16 	call	0x2d3a	; 0x2d3a <__gesf2>
    23c6:	18 16       	cp	r1, r24
    23c8:	b4 f4       	brge	.+44     	; 0x23f6 <loop+0x344>
   {
  
      if(Current_Area >= 0 && Current_Area < 900)
    23ca:	80 91 75 03 	lds	r24, 0x0375	; 0x800375 <Current_Area>
    23ce:	90 91 76 03 	lds	r25, 0x0376	; 0x800376 <Current_Area+0x1>
    23d2:	84 38       	cpi	r24, 0x84	; 132
    23d4:	f3 e0       	ldi	r31, 0x03	; 3
    23d6:	9f 07       	cpc	r25, r31
    23d8:	08 f4       	brcc	.+2      	; 0x23dc <loop+0x32a>
    23da:	65 c0       	rjmp	.+202    	; 0x24a6 <loop+0x3f4>
       {
		   fill_area(Current_Area,COLOR_GOLD);
        }
      else if(Current_Area >=900 && Current_Area <3600)
    23dc:	9c 01       	movw	r18, r24
    23de:	24 58       	subi	r18, 0x84	; 132
    23e0:	33 40       	sbci	r19, 0x03	; 3
    23e2:	2c 38       	cpi	r18, 0x8C	; 140
    23e4:	3a 40       	sbci	r19, 0x0A	; 10
    23e6:	08 f4       	brcc	.+2      	; 0x23ea <loop+0x338>
    23e8:	67 c0       	rjmp	.+206    	; 0x24b8 <loop+0x406>
      {
          fill_area(Current_Area,COLOR_GREEN);
      }
      else if(Current_Area >= 3600 )
    23ea:	80 31       	cpi	r24, 0x10	; 16
    23ec:	ee e0       	ldi	r30, 0x0E	; 14
    23ee:	9e 07       	cpc	r25, r30
    23f0:	0c f4       	brge	.+2      	; 0x23f4 <loop+0x342>
    23f2:	69 c0       	rjmp	.+210    	; 0x24c6 <loop+0x414>
    23f4:	64 c0       	rjmp	.+200    	; 0x24be <loop+0x40c>
	  Previous_Area = Current_Area;
	  
  }

   
    else if(Previous_Pressure-Current_Pressure > 1)  //Pressure is decreasing.
    23f6:	a7 01       	movw	r20, r14
    23f8:	96 01       	movw	r18, r12
    23fa:	c3 01       	movw	r24, r6
    23fc:	b2 01       	movw	r22, r4
    23fe:	0e 94 fa 14 	call	0x29f4	; 0x29f4 <__subsf3>
    2402:	20 e0       	ldi	r18, 0x00	; 0
    2404:	30 e0       	ldi	r19, 0x00	; 0
    2406:	40 e8       	ldi	r20, 0x80	; 128
    2408:	5f e3       	ldi	r21, 0x3F	; 63
    240a:	0e 94 9d 16 	call	0x2d3a	; 0x2d3a <__gesf2>
    240e:	18 16       	cp	r1, r24
    2410:	0c f0       	brlt	.+2      	; 0x2414 <loop+0x362>
    2412:	71 c0       	rjmp	.+226    	; 0x24f6 <loop+0x444>
{
    float Previous_length = Previous_Area/rectangle_width;
  
    float Current_length =  Current_Area/rectangle_width;
  
    tft.fillRectangle(35+Current_length, 105, 35+Previous_length, 135,COLOR_BLACK);
    2414:	80 91 77 03 	lds	r24, 0x0377	; 0x800377 <Previous_Area>
    2418:	90 91 78 03 	lds	r25, 0x0378	; 0x800378 <Previous_Area+0x1>
    241c:	0e e1       	ldi	r16, 0x1E	; 30
    241e:	10 e0       	ldi	r17, 0x00	; 0
    2420:	b8 01       	movw	r22, r16
    2422:	0e 94 ce 30 	call	0x619c	; 0x619c <__divmodhi4>
    2426:	07 2e       	mov	r0, r23
    2428:	00 0c       	add	r0, r0
    242a:	88 0b       	sbc	r24, r24
    242c:	99 0b       	sbc	r25, r25
    242e:	0e 94 11 16 	call	0x2c22	; 0x2c22 <__floatsisf>
    2432:	20 e0       	ldi	r18, 0x00	; 0
    2434:	30 e0       	ldi	r19, 0x00	; 0
    2436:	4c e0       	ldi	r20, 0x0C	; 12
    2438:	52 e4       	ldi	r21, 0x42	; 66
    243a:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <__addsf3>
    243e:	0e 94 e0 15 	call	0x2bc0	; 0x2bc0 <__fixunssfsi>
    2442:	2b 01       	movw	r4, r22
    2444:	3c 01       	movw	r6, r24
    2446:	80 91 75 03 	lds	r24, 0x0375	; 0x800375 <Current_Area>
    244a:	90 91 76 03 	lds	r25, 0x0376	; 0x800376 <Current_Area+0x1>
    244e:	b8 01       	movw	r22, r16
    2450:	0e 94 ce 30 	call	0x619c	; 0x619c <__divmodhi4>
    2454:	07 2e       	mov	r0, r23
    2456:	00 0c       	add	r0, r0
    2458:	88 0b       	sbc	r24, r24
    245a:	99 0b       	sbc	r25, r25
    245c:	0e 94 11 16 	call	0x2c22	; 0x2c22 <__floatsisf>
    2460:	20 e0       	ldi	r18, 0x00	; 0
    2462:	30 e0       	ldi	r19, 0x00	; 0
    2464:	4c e0       	ldi	r20, 0x0C	; 12
    2466:	52 e4       	ldi	r21, 0x42	; 66
    2468:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <__addsf3>
    246c:	0e 94 e0 15 	call	0x2bc0	; 0x2bc0 <__fixunssfsi>
    2470:	e1 2c       	mov	r14, r1
    2472:	f1 2c       	mov	r15, r1
    2474:	07 e8       	ldi	r16, 0x87	; 135
    2476:	10 e0       	ldi	r17, 0x00	; 0
    2478:	92 01       	movw	r18, r4
    247a:	49 e6       	ldi	r20, 0x69	; 105
    247c:	50 e0       	ldi	r21, 0x00	; 0
    247e:	88 e2       	ldi	r24, 0x28	; 40
    2480:	93 e0       	ldi	r25, 0x03	; 3
    2482:	0e 94 cb 23 	call	0x4796	; 0x4796 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj>
  
   if (Current_Area<50)
    2486:	80 91 75 03 	lds	r24, 0x0375	; 0x800375 <Current_Area>
    248a:	90 91 76 03 	lds	r25, 0x0376	; 0x800376 <Current_Area+0x1>
    248e:	82 33       	cpi	r24, 0x32	; 50
    2490:	91 05       	cpc	r25, r1
    2492:	1c f4       	brge	.+6      	; 0x249a <loop+0x3e8>
  {
	 fill_area(Current_Area,COLOR_BLACK); 
    2494:	60 e0       	ldi	r22, 0x00	; 0
    2496:	70 e0       	ldi	r23, 0x00	; 0
    2498:	14 c0       	rjmp	.+40     	; 0x24c2 <loop+0x410>
  }
  
  else if(Current_Area >= 50 && Current_Area < 900)
    249a:	9c 01       	movw	r18, r24
    249c:	22 53       	subi	r18, 0x32	; 50
    249e:	31 09       	sbc	r19, r1
    24a0:	22 35       	cpi	r18, 0x52	; 82
    24a2:	33 40       	sbci	r19, 0x03	; 3
    24a4:	18 f4       	brcc	.+6      	; 0x24ac <loop+0x3fa>
  {
    fill_area(Current_Area,COLOR_GOLD);
    24a6:	60 ea       	ldi	r22, 0xA0	; 160
    24a8:	7e ef       	ldi	r23, 0xFE	; 254
    24aa:	0b c0       	rjmp	.+22     	; 0x24c2 <loop+0x410>
  }
  
  else if(Current_Area >=900 && Current_Area <3600)
    24ac:	9c 01       	movw	r18, r24
    24ae:	24 58       	subi	r18, 0x84	; 132
    24b0:	33 40       	sbci	r19, 0x03	; 3
    24b2:	2c 38       	cpi	r18, 0x8C	; 140
    24b4:	3a 40       	sbci	r19, 0x0A	; 10
    24b6:	18 f4       	brcc	.+6      	; 0x24be <loop+0x40c>
  {
    fill_area(Current_Area,COLOR_GREEN);
    24b8:	60 ee       	ldi	r22, 0xE0	; 224
    24ba:	77 e0       	ldi	r23, 0x07	; 7
    24bc:	02 c0       	rjmp	.+4      	; 0x24c2 <loop+0x410>
  }
  
  else if(Current_Area >= 3600 )
  {
    fill_area(Current_Area,COLOR_RED); 
    24be:	60 e0       	ldi	r22, 0x00	; 0
    24c0:	78 ef       	ldi	r23, 0xF8	; 248
    24c2:	0e 94 3e 10 	call	0x207c	; 0x207c <_Z9fill_areaij>
  }
  
   Previous_Pressure = Current_Pressure;
    24c6:	80 91 79 03 	lds	r24, 0x0379	; 0x800379 <Current_Pressure>
    24ca:	90 91 7a 03 	lds	r25, 0x037A	; 0x80037a <Current_Pressure+0x1>
    24ce:	a0 91 7b 03 	lds	r26, 0x037B	; 0x80037b <Current_Pressure+0x2>
    24d2:	b0 91 7c 03 	lds	r27, 0x037C	; 0x80037c <Current_Pressure+0x3>
    24d6:	80 93 7d 03 	sts	0x037D, r24	; 0x80037d <Previous_Pressure>
    24da:	90 93 7e 03 	sts	0x037E, r25	; 0x80037e <Previous_Pressure+0x1>
    24de:	a0 93 7f 03 	sts	0x037F, r26	; 0x80037f <Previous_Pressure+0x2>
    24e2:	b0 93 80 03 	sts	0x0380, r27	; 0x800380 <Previous_Pressure+0x3>
  
   Previous_Area = Current_Area;
    24e6:	80 91 75 03 	lds	r24, 0x0375	; 0x800375 <Current_Area>
    24ea:	90 91 76 03 	lds	r25, 0x0376	; 0x800376 <Current_Area+0x1>
    24ee:	90 93 78 03 	sts	0x0378, r25	; 0x800378 <Previous_Area+0x1>
    24f2:	80 93 77 03 	sts	0x0377, r24	; 0x800377 <Previous_Area>

 }
}
    24f6:	26 96       	adiw	r28, 0x06	; 6
    24f8:	0f b6       	in	r0, 0x3f	; 63
    24fa:	f8 94       	cli
    24fc:	de bf       	out	0x3e, r29	; 62
    24fe:	0f be       	out	0x3f, r0	; 63
    2500:	cd bf       	out	0x3d, r28	; 61
    2502:	df 91       	pop	r29
    2504:	cf 91       	pop	r28
    2506:	1f 91       	pop	r17
    2508:	0f 91       	pop	r16
    250a:	ff 90       	pop	r15
    250c:	ef 90       	pop	r14
    250e:	df 90       	pop	r13
    2510:	cf 90       	pop	r12
    2512:	bf 90       	pop	r11
    2514:	af 90       	pop	r10
    2516:	7f 90       	pop	r7
    2518:	6f 90       	pop	r6
    251a:	5f 90       	pop	r5
    251c:	4f 90       	pop	r4
    251e:	08 95       	ret

00002520 <_Z10draw_scalev>:
}


/******************************************************************************/
void draw_scale()
{
    2520:	ef 92       	push	r14
    2522:	ff 92       	push	r15
    2524:	0f 93       	push	r16
    2526:	1f 93       	push	r17
    2528:	cf 93       	push	r28
    252a:	df 93       	push	r29
    252c:	00 d0       	rcall	.+0      	; 0x252e <_Z10draw_scalev+0xe>
    252e:	00 d0       	rcall	.+0      	; 0x2530 <_Z10draw_scalev+0x10>
    2530:	00 d0       	rcall	.+0      	; 0x2532 <_Z10draw_scalev+0x12>
    2532:	cd b7       	in	r28, 0x3d	; 61
    2534:	de b7       	in	r29, 0x3e	; 62
	 tft.drawLine(30,140,30,155,primary_color);
    2536:	ee 24       	eor	r14, r14
    2538:	ea 94       	dec	r14
    253a:	fe 2c       	mov	r15, r14
    253c:	0b e9       	ldi	r16, 0x9B	; 155
    253e:	10 e0       	ldi	r17, 0x00	; 0
    2540:	2e e1       	ldi	r18, 0x1E	; 30
    2542:	30 e0       	ldi	r19, 0x00	; 0
    2544:	4c e8       	ldi	r20, 0x8C	; 140
    2546:	50 e0       	ldi	r21, 0x00	; 0
    2548:	6e e1       	ldi	r22, 0x1E	; 30
    254a:	70 e0       	ldi	r23, 0x00	; 0
    254c:	88 e2       	ldi	r24, 0x28	; 40
    254e:	93 e0       	ldi	r25, 0x03	; 3
    2550:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <_ZN14TFT_22_ILI92258drawLineEjjjjj>
	 tft.drawText(27,158,"0",primary_color);
    2554:	6b e4       	ldi	r22, 0x4B	; 75
    2556:	71 e0       	ldi	r23, 0x01	; 1
    2558:	ce 01       	movw	r24, r28
    255a:	01 96       	adiw	r24, 0x01	; 1
    255c:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <_ZN6StringC1EPKc>
    2560:	0f ef       	ldi	r16, 0xFF	; 255
    2562:	1f ef       	ldi	r17, 0xFF	; 255
    2564:	9e 01       	movw	r18, r28
    2566:	2f 5f       	subi	r18, 0xFF	; 255
    2568:	3f 4f       	sbci	r19, 0xFF	; 255
    256a:	4e e9       	ldi	r20, 0x9E	; 158
    256c:	50 e0       	ldi	r21, 0x00	; 0
    256e:	6b e1       	ldi	r22, 0x1B	; 27
    2570:	70 e0       	ldi	r23, 0x00	; 0
    2572:	88 e2       	ldi	r24, 0x28	; 40
    2574:	93 e0       	ldi	r25, 0x03	; 3
    2576:	0e 94 c9 28 	call	0x5192	; 0x5192 <_ZN14TFT_22_ILI92258drawTextEjj6Stringj>
    257a:	ce 01       	movw	r24, r28
    257c:	01 96       	adiw	r24, 0x01	; 1
    257e:	0e 94 68 1b 	call	0x36d0	; 0x36d0 <_ZN6StringD1Ev>
	 tft.drawLine(50,140,50,150,primary_color);
    2582:	06 e9       	ldi	r16, 0x96	; 150
    2584:	10 e0       	ldi	r17, 0x00	; 0
    2586:	22 e3       	ldi	r18, 0x32	; 50
    2588:	30 e0       	ldi	r19, 0x00	; 0
    258a:	4c e8       	ldi	r20, 0x8C	; 140
    258c:	50 e0       	ldi	r21, 0x00	; 0
    258e:	62 e3       	ldi	r22, 0x32	; 50
    2590:	70 e0       	ldi	r23, 0x00	; 0
    2592:	88 e2       	ldi	r24, 0x28	; 40
    2594:	93 e0       	ldi	r25, 0x03	; 3
    2596:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <_ZN14TFT_22_ILI92258drawLineEjjjjj>
	 tft.drawLine(70,140,70,150,primary_color);
    259a:	26 e4       	ldi	r18, 0x46	; 70
    259c:	30 e0       	ldi	r19, 0x00	; 0
    259e:	4c e8       	ldi	r20, 0x8C	; 140
    25a0:	50 e0       	ldi	r21, 0x00	; 0
    25a2:	66 e4       	ldi	r22, 0x46	; 70
    25a4:	70 e0       	ldi	r23, 0x00	; 0
    25a6:	88 e2       	ldi	r24, 0x28	; 40
    25a8:	93 e0       	ldi	r25, 0x03	; 3
    25aa:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <_ZN14TFT_22_ILI92258drawLineEjjjjj>
	 tft.drawLine(90,140,90,150,primary_color);
    25ae:	2a e5       	ldi	r18, 0x5A	; 90
    25b0:	30 e0       	ldi	r19, 0x00	; 0
    25b2:	4c e8       	ldi	r20, 0x8C	; 140
    25b4:	50 e0       	ldi	r21, 0x00	; 0
    25b6:	6a e5       	ldi	r22, 0x5A	; 90
    25b8:	70 e0       	ldi	r23, 0x00	; 0
    25ba:	88 e2       	ldi	r24, 0x28	; 40
    25bc:	93 e0       	ldi	r25, 0x03	; 3
    25be:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <_ZN14TFT_22_ILI92258drawLineEjjjjj>
	 
	 tft.drawLine(110,140,110,155,primary_color);
    25c2:	0b e9       	ldi	r16, 0x9B	; 155
    25c4:	10 e0       	ldi	r17, 0x00	; 0
    25c6:	2e e6       	ldi	r18, 0x6E	; 110
    25c8:	30 e0       	ldi	r19, 0x00	; 0
    25ca:	4c e8       	ldi	r20, 0x8C	; 140
    25cc:	50 e0       	ldi	r21, 0x00	; 0
    25ce:	6e e6       	ldi	r22, 0x6E	; 110
    25d0:	70 e0       	ldi	r23, 0x00	; 0
    25d2:	88 e2       	ldi	r24, 0x28	; 40
    25d4:	93 e0       	ldi	r25, 0x03	; 3
    25d6:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <_ZN14TFT_22_ILI92258drawLineEjjjjj>
	 tft.drawText(97,158,"0.05",primary_color);
    25da:	6e e2       	ldi	r22, 0x2E	; 46
    25dc:	71 e0       	ldi	r23, 0x01	; 1
    25de:	ce 01       	movw	r24, r28
    25e0:	01 96       	adiw	r24, 0x01	; 1
    25e2:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <_ZN6StringC1EPKc>
    25e6:	0f ef       	ldi	r16, 0xFF	; 255
    25e8:	1f ef       	ldi	r17, 0xFF	; 255
    25ea:	9e 01       	movw	r18, r28
    25ec:	2f 5f       	subi	r18, 0xFF	; 255
    25ee:	3f 4f       	sbci	r19, 0xFF	; 255
    25f0:	4e e9       	ldi	r20, 0x9E	; 158
    25f2:	50 e0       	ldi	r21, 0x00	; 0
    25f4:	61 e6       	ldi	r22, 0x61	; 97
    25f6:	70 e0       	ldi	r23, 0x00	; 0
    25f8:	88 e2       	ldi	r24, 0x28	; 40
    25fa:	93 e0       	ldi	r25, 0x03	; 3
    25fc:	0e 94 c9 28 	call	0x5192	; 0x5192 <_ZN14TFT_22_ILI92258drawTextEjj6Stringj>
    2600:	ce 01       	movw	r24, r28
    2602:	01 96       	adiw	r24, 0x01	; 1
    2604:	0e 94 68 1b 	call	0x36d0	; 0x36d0 <_ZN6StringD1Ev>
	 tft.drawLine(130,140,130,150,primary_color);
    2608:	06 e9       	ldi	r16, 0x96	; 150
    260a:	10 e0       	ldi	r17, 0x00	; 0
    260c:	22 e8       	ldi	r18, 0x82	; 130
    260e:	30 e0       	ldi	r19, 0x00	; 0
    2610:	4c e8       	ldi	r20, 0x8C	; 140
    2612:	50 e0       	ldi	r21, 0x00	; 0
    2614:	62 e8       	ldi	r22, 0x82	; 130
    2616:	70 e0       	ldi	r23, 0x00	; 0
    2618:	88 e2       	ldi	r24, 0x28	; 40
    261a:	93 e0       	ldi	r25, 0x03	; 3
    261c:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <_ZN14TFT_22_ILI92258drawLineEjjjjj>
	 tft.drawLine(150,140,150,150,primary_color);
    2620:	26 e9       	ldi	r18, 0x96	; 150
    2622:	30 e0       	ldi	r19, 0x00	; 0
    2624:	4c e8       	ldi	r20, 0x8C	; 140
    2626:	50 e0       	ldi	r21, 0x00	; 0
    2628:	66 e9       	ldi	r22, 0x96	; 150
    262a:	70 e0       	ldi	r23, 0x00	; 0
    262c:	88 e2       	ldi	r24, 0x28	; 40
    262e:	93 e0       	ldi	r25, 0x03	; 3
    2630:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <_ZN14TFT_22_ILI92258drawLineEjjjjj>
	 tft.drawLine(170,140,170,150,primary_color);
    2634:	2a ea       	ldi	r18, 0xAA	; 170
    2636:	30 e0       	ldi	r19, 0x00	; 0
    2638:	4c e8       	ldi	r20, 0x8C	; 140
    263a:	50 e0       	ldi	r21, 0x00	; 0
    263c:	6a ea       	ldi	r22, 0xAA	; 170
    263e:	70 e0       	ldi	r23, 0x00	; 0
    2640:	88 e2       	ldi	r24, 0x28	; 40
    2642:	93 e0       	ldi	r25, 0x03	; 3
    2644:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <_ZN14TFT_22_ILI92258drawLineEjjjjj>
	 tft.drawLine(190,140,190,155,primary_color);
    2648:	0b e9       	ldi	r16, 0x9B	; 155
    264a:	10 e0       	ldi	r17, 0x00	; 0
    264c:	2e eb       	ldi	r18, 0xBE	; 190
    264e:	30 e0       	ldi	r19, 0x00	; 0
    2650:	4c e8       	ldi	r20, 0x8C	; 140
    2652:	50 e0       	ldi	r21, 0x00	; 0
    2654:	6e eb       	ldi	r22, 0xBE	; 190
    2656:	70 e0       	ldi	r23, 0x00	; 0
    2658:	88 e2       	ldi	r24, 0x28	; 40
    265a:	93 e0       	ldi	r25, 0x03	; 3
    265c:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <_ZN14TFT_22_ILI92258drawLineEjjjjj>
	 tft.drawText(180,156,"0.1",primary_color);
    2660:	63 e3       	ldi	r22, 0x33	; 51
    2662:	71 e0       	ldi	r23, 0x01	; 1
    2664:	ce 01       	movw	r24, r28
    2666:	01 96       	adiw	r24, 0x01	; 1
    2668:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <_ZN6StringC1EPKc>
    266c:	0f ef       	ldi	r16, 0xFF	; 255
    266e:	1f ef       	ldi	r17, 0xFF	; 255
    2670:	9e 01       	movw	r18, r28
    2672:	2f 5f       	subi	r18, 0xFF	; 255
    2674:	3f 4f       	sbci	r19, 0xFF	; 255
    2676:	4c e9       	ldi	r20, 0x9C	; 156
    2678:	50 e0       	ldi	r21, 0x00	; 0
    267a:	64 eb       	ldi	r22, 0xB4	; 180
    267c:	70 e0       	ldi	r23, 0x00	; 0
    267e:	88 e2       	ldi	r24, 0x28	; 40
    2680:	93 e0       	ldi	r25, 0x03	; 3
    2682:	0e 94 c9 28 	call	0x5192	; 0x5192 <_ZN14TFT_22_ILI92258drawTextEjj6Stringj>
    2686:	ce 01       	movw	r24, r28
    2688:	01 96       	adiw	r24, 0x01	; 1
    268a:	0e 94 68 1b 	call	0x36d0	; 0x36d0 <_ZN6StringD1Ev>
}
    268e:	26 96       	adiw	r28, 0x06	; 6
    2690:	0f b6       	in	r0, 0x3f	; 63
    2692:	f8 94       	cli
    2694:	de bf       	out	0x3e, r29	; 62
    2696:	0f be       	out	0x3f, r0	; 63
    2698:	cd bf       	out	0x3d, r28	; 61
    269a:	df 91       	pop	r29
    269c:	cf 91       	pop	r28
    269e:	1f 91       	pop	r17
    26a0:	0f 91       	pop	r16
    26a2:	ff 90       	pop	r15
    26a4:	ef 90       	pop	r14
    26a6:	08 95       	ret

000026a8 <_Z9AgVa_logov>:
/***************************************************************************/

void AgVa_logo()
{    String s2;
    26a8:	ef 92       	push	r14
    26aa:	ff 92       	push	r15
    26ac:	0f 93       	push	r16
    26ae:	1f 93       	push	r17
    26b0:	cf 93       	push	r28
    26b2:	df 93       	push	r29
    26b4:	cd b7       	in	r28, 0x3d	; 61
    26b6:	de b7       	in	r29, 0x3e	; 62
    26b8:	2c 97       	sbiw	r28, 0x0c	; 12
    26ba:	0f b6       	in	r0, 0x3f	; 63
    26bc:	f8 94       	cli
    26be:	de bf       	out	0x3e, r29	; 62
    26c0:	0f be       	out	0x3f, r0	; 63
    26c2:	cd bf       	out	0x3d, r28	; 61
    26c4:	69 e2       	ldi	r22, 0x29	; 41
    26c6:	71 e0       	ldi	r23, 0x01	; 1
    26c8:	ce 01       	movw	r24, r28
    26ca:	07 96       	adiw	r24, 0x07	; 7
    26cc:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <_ZN6StringC1EPKc>
	 tft.fillRectangle(0,0,219,176,COLOR_WHITE);
    26d0:	ee 24       	eor	r14, r14
    26d2:	ea 94       	dec	r14
    26d4:	fe 2c       	mov	r15, r14
    26d6:	00 eb       	ldi	r16, 0xB0	; 176
    26d8:	10 e0       	ldi	r17, 0x00	; 0
    26da:	2b ed       	ldi	r18, 0xDB	; 219
    26dc:	30 e0       	ldi	r19, 0x00	; 0
    26de:	40 e0       	ldi	r20, 0x00	; 0
    26e0:	50 e0       	ldi	r21, 0x00	; 0
    26e2:	60 e0       	ldi	r22, 0x00	; 0
    26e4:	70 e0       	ldi	r23, 0x00	; 0
    26e6:	88 e2       	ldi	r24, 0x28	; 40
    26e8:	93 e0       	ldi	r25, 0x03	; 3
    26ea:	0e 94 cb 23 	call	0x4796	; 0x4796 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj>
	 tft.setGFXFont(&FreeSerif12pt7b);    //Set gfx font free serif
    26ee:	6e e8       	ldi	r22, 0x8E	; 142
    26f0:	71 e0       	ldi	r23, 0x01	; 1
    26f2:	88 e2       	ldi	r24, 0x28	; 40
    26f4:	93 e0       	ldi	r25, 0x03	; 3
    26f6:	0e 94 03 29 	call	0x5206	; 0x5206 <_ZN14TFT_22_ILI922510setGFXFontEPK7GFXfont>
	 s2="AgVa";
    26fa:	67 e3       	ldi	r22, 0x37	; 55
    26fc:	71 e0       	ldi	r23, 0x01	; 1
    26fe:	ce 01       	movw	r24, r28
    2700:	07 96       	adiw	r24, 0x07	; 7
    2702:	0e 94 57 1c 	call	0x38ae	; 0x38ae <_ZN6StringaSEPKc>
	 tft.drawGFXText(20,90, s2,COLOR_DEEP_PINK);
    2706:	be 01       	movw	r22, r28
    2708:	69 5f       	subi	r22, 0xF9	; 249
    270a:	7f 4f       	sbci	r23, 0xFF	; 255
    270c:	ce 01       	movw	r24, r28
    270e:	01 96       	adiw	r24, 0x01	; 1
    2710:	0e 94 42 1c 	call	0x3884	; 0x3884 <_ZN6StringC1ERKS_>
    2714:	0b ee       	ldi	r16, 0xEB	; 235
    2716:	18 ef       	ldi	r17, 0xF8	; 248
    2718:	9e 01       	movw	r18, r28
    271a:	2f 5f       	subi	r18, 0xFF	; 255
    271c:	3f 4f       	sbci	r19, 0xFF	; 255
    271e:	4a e5       	ldi	r20, 0x5A	; 90
    2720:	50 e0       	ldi	r21, 0x00	; 0
    2722:	64 e1       	ldi	r22, 0x14	; 20
    2724:	70 e0       	ldi	r23, 0x00	; 0
    2726:	88 e2       	ldi	r24, 0x28	; 40
    2728:	93 e0       	ldi	r25, 0x03	; 3
    272a:	0e 94 a7 29 	call	0x534e	; 0x534e <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj>
    272e:	ce 01       	movw	r24, r28
    2730:	01 96       	adiw	r24, 0x01	; 1
    2732:	0e 94 68 1b 	call	0x36d0	; 0x36d0 <_ZN6StringD1Ev>
	 s2="Healthcare";
    2736:	6c e3       	ldi	r22, 0x3C	; 60
    2738:	71 e0       	ldi	r23, 0x01	; 1
    273a:	ce 01       	movw	r24, r28
    273c:	07 96       	adiw	r24, 0x07	; 7
    273e:	0e 94 57 1c 	call	0x38ae	; 0x38ae <_ZN6StringaSEPKc>
	 tft.drawGFXText(90,90, s2,COLOR_BLACK);
    2742:	be 01       	movw	r22, r28
    2744:	69 5f       	subi	r22, 0xF9	; 249
    2746:	7f 4f       	sbci	r23, 0xFF	; 255
    2748:	ce 01       	movw	r24, r28
    274a:	01 96       	adiw	r24, 0x01	; 1
    274c:	0e 94 42 1c 	call	0x3884	; 0x3884 <_ZN6StringC1ERKS_>
    2750:	00 e0       	ldi	r16, 0x00	; 0
    2752:	10 e0       	ldi	r17, 0x00	; 0
    2754:	9e 01       	movw	r18, r28
    2756:	2f 5f       	subi	r18, 0xFF	; 255
    2758:	3f 4f       	sbci	r19, 0xFF	; 255
    275a:	4a e5       	ldi	r20, 0x5A	; 90
    275c:	50 e0       	ldi	r21, 0x00	; 0
    275e:	6a e5       	ldi	r22, 0x5A	; 90
    2760:	70 e0       	ldi	r23, 0x00	; 0
    2762:	88 e2       	ldi	r24, 0x28	; 40
    2764:	93 e0       	ldi	r25, 0x03	; 3
    2766:	0e 94 a7 29 	call	0x534e	; 0x534e <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj>
    276a:	ce 01       	movw	r24, r28
    276c:	01 96       	adiw	r24, 0x01	; 1
    276e:	0e 94 68 1b 	call	0x36d0	; 0x36d0 <_ZN6StringD1Ev>
	 delay(1000);
    2772:	68 ee       	ldi	r22, 0xE8	; 232
    2774:	73 e0       	ldi	r23, 0x03	; 3
    2776:	80 e0       	ldi	r24, 0x00	; 0
    2778:	90 e0       	ldi	r25, 0x00	; 0
    277a:	0e 94 af 1a 	call	0x355e	; 0x355e <delay>
	 tft.clear();
    277e:	88 e2       	ldi	r24, 0x28	; 40
    2780:	93 e0       	ldi	r25, 0x03	; 3
    2782:	0e 94 11 24 	call	0x4822	; 0x4822 <_ZN14TFT_22_ILI92255clearEv>
	 tft.drawText(180,156,"0.1",primary_color);
}
/***************************************************************************/

void AgVa_logo()
{    String s2;
    2786:	ce 01       	movw	r24, r28
    2788:	07 96       	adiw	r24, 0x07	; 7
    278a:	0e 94 68 1b 	call	0x36d0	; 0x36d0 <_ZN6StringD1Ev>
	 tft.drawGFXText(20,90, s2,COLOR_DEEP_PINK);
	 s2="Healthcare";
	 tft.drawGFXText(90,90, s2,COLOR_BLACK);
	 delay(1000);
	 tft.clear();
}
    278e:	2c 96       	adiw	r28, 0x0c	; 12
    2790:	0f b6       	in	r0, 0x3f	; 63
    2792:	f8 94       	cli
    2794:	de bf       	out	0x3e, r29	; 62
    2796:	0f be       	out	0x3f, r0	; 63
    2798:	cd bf       	out	0x3d, r28	; 61
    279a:	df 91       	pop	r29
    279c:	cf 91       	pop	r28
    279e:	1f 91       	pop	r17
    27a0:	0f 91       	pop	r16
    27a2:	ff 90       	pop	r15
    27a4:	ef 90       	pop	r14
    27a6:	08 95       	ret

000027a8 <_Z11main_screenv>:

/************************************************************************/

void main_screen()
{
    27a8:	ef 92       	push	r14
    27aa:	ff 92       	push	r15
    27ac:	0f 93       	push	r16
    27ae:	1f 93       	push	r17
    27b0:	cf 93       	push	r28
    27b2:	df 93       	push	r29
    27b4:	cd b7       	in	r28, 0x3d	; 61
    27b6:	de b7       	in	r29, 0x3e	; 62
    27b8:	2c 97       	sbiw	r28, 0x0c	; 12
    27ba:	0f b6       	in	r0, 0x3f	; 63
    27bc:	f8 94       	cli
    27be:	de bf       	out	0x3e, r29	; 62
    27c0:	0f be       	out	0x3f, r0	; 63
    27c2:	cd bf       	out	0x3d, r28	; 61
    tft.drawRectangle(0, 0, tft.maxX() - 1, tft.maxY() - 1, primary_color);  //Drawing rectangle at boundary of tft screen.
    27c4:	88 e2       	ldi	r24, 0x28	; 40
    27c6:	93 e0       	ldi	r25, 0x03	; 3
    27c8:	0e 94 e6 20 	call	0x41cc	; 0x41cc <_ZN14TFT_22_ILI92254maxYEv>
    27cc:	8c 01       	movw	r16, r24
    27ce:	88 e2       	ldi	r24, 0x28	; 40
    27d0:	93 e0       	ldi	r25, 0x03	; 3
    27d2:	0e 94 e2 20 	call	0x41c4	; 0x41c4 <_ZN14TFT_22_ILI92254maxXEv>
    27d6:	01 50       	subi	r16, 0x01	; 1
    27d8:	11 09       	sbc	r17, r1
    27da:	9c 01       	movw	r18, r24
    27dc:	21 50       	subi	r18, 0x01	; 1
    27de:	31 09       	sbc	r19, r1
    27e0:	ee 24       	eor	r14, r14
    27e2:	ea 94       	dec	r14
    27e4:	fe 2c       	mov	r15, r14
    27e6:	40 e0       	ldi	r20, 0x00	; 0
    27e8:	50 e0       	ldi	r21, 0x00	; 0
    27ea:	60 e0       	ldi	r22, 0x00	; 0
    27ec:	70 e0       	ldi	r23, 0x00	; 0
    27ee:	88 e2       	ldi	r24, 0x28	; 40
    27f0:	93 e0       	ldi	r25, 0x03	; 3
    27f2:	0e 94 7f 27 	call	0x4efe	; 0x4efe <_ZN14TFT_22_ILI922513drawRectangleEjjjjj>
    tft.drawRectangle(1, 1, tft.maxX() - 2, tft.maxY() - 2, primary_color);
    27f6:	88 e2       	ldi	r24, 0x28	; 40
    27f8:	93 e0       	ldi	r25, 0x03	; 3
    27fa:	0e 94 e6 20 	call	0x41cc	; 0x41cc <_ZN14TFT_22_ILI92254maxYEv>
    27fe:	8c 01       	movw	r16, r24
    2800:	88 e2       	ldi	r24, 0x28	; 40
    2802:	93 e0       	ldi	r25, 0x03	; 3
    2804:	0e 94 e2 20 	call	0x41c4	; 0x41c4 <_ZN14TFT_22_ILI92254maxXEv>
    2808:	02 50       	subi	r16, 0x02	; 2
    280a:	11 09       	sbc	r17, r1
    280c:	9c 01       	movw	r18, r24
    280e:	22 50       	subi	r18, 0x02	; 2
    2810:	31 09       	sbc	r19, r1
    2812:	41 e0       	ldi	r20, 0x01	; 1
    2814:	50 e0       	ldi	r21, 0x00	; 0
    2816:	61 e0       	ldi	r22, 0x01	; 1
    2818:	70 e0       	ldi	r23, 0x00	; 0
    281a:	88 e2       	ldi	r24, 0x28	; 40
    281c:	93 e0       	ldi	r25, 0x03	; 3
    281e:	0e 94 7f 27 	call	0x4efe	; 0x4efe <_ZN14TFT_22_ILI922513drawRectangleEjjjjj>
    tft.drawRectangle(2, 2, tft.maxX() - 3, tft.maxY() - 3, primary_color);
    2822:	88 e2       	ldi	r24, 0x28	; 40
    2824:	93 e0       	ldi	r25, 0x03	; 3
    2826:	0e 94 e6 20 	call	0x41cc	; 0x41cc <_ZN14TFT_22_ILI92254maxYEv>
    282a:	8c 01       	movw	r16, r24
    282c:	88 e2       	ldi	r24, 0x28	; 40
    282e:	93 e0       	ldi	r25, 0x03	; 3
    2830:	0e 94 e2 20 	call	0x41c4	; 0x41c4 <_ZN14TFT_22_ILI92254maxXEv>
    2834:	03 50       	subi	r16, 0x03	; 3
    2836:	11 09       	sbc	r17, r1
    2838:	9c 01       	movw	r18, r24
    283a:	23 50       	subi	r18, 0x03	; 3
    283c:	31 09       	sbc	r19, r1
    283e:	42 e0       	ldi	r20, 0x02	; 2
    2840:	50 e0       	ldi	r21, 0x00	; 0
    2842:	62 e0       	ldi	r22, 0x02	; 2
    2844:	70 e0       	ldi	r23, 0x00	; 0
    2846:	88 e2       	ldi	r24, 0x28	; 40
    2848:	93 e0       	ldi	r25, 0x03	; 3
    284a:	0e 94 7f 27 	call	0x4efe	; 0x4efe <_ZN14TFT_22_ILI922513drawRectangleEjjjjj>

    tft.drawRectangle(30, 100, 190, 140,primary_color);  //Draw rectangle to show pressure display
    284e:	0c e8       	ldi	r16, 0x8C	; 140
    2850:	10 e0       	ldi	r17, 0x00	; 0
    2852:	2e eb       	ldi	r18, 0xBE	; 190
    2854:	30 e0       	ldi	r19, 0x00	; 0
    2856:	44 e6       	ldi	r20, 0x64	; 100
    2858:	50 e0       	ldi	r21, 0x00	; 0
    285a:	6e e1       	ldi	r22, 0x1E	; 30
    285c:	70 e0       	ldi	r23, 0x00	; 0
    285e:	88 e2       	ldi	r24, 0x28	; 40
    2860:	93 e0       	ldi	r25, 0x03	; 3
    2862:	0e 94 7f 27 	call	0x4efe	; 0x4efe <_ZN14TFT_22_ILI922513drawRectangleEjjjjj>
    tft.drawRectangle(28, 98, 192, 142, primary_color);
    2866:	0e e8       	ldi	r16, 0x8E	; 142
    2868:	10 e0       	ldi	r17, 0x00	; 0
    286a:	20 ec       	ldi	r18, 0xC0	; 192
    286c:	30 e0       	ldi	r19, 0x00	; 0
    286e:	42 e6       	ldi	r20, 0x62	; 98
    2870:	50 e0       	ldi	r21, 0x00	; 0
    2872:	6c e1       	ldi	r22, 0x1C	; 28
    2874:	70 e0       	ldi	r23, 0x00	; 0
    2876:	88 e2       	ldi	r24, 0x28	; 40
    2878:	93 e0       	ldi	r25, 0x03	; 3
    287a:	0e 94 7f 27 	call	0x4efe	; 0x4efe <_ZN14TFT_22_ILI922513drawRectangleEjjjjj>
    tft.drawRectangle(27, 97, 193, 143, primary_color);	
    287e:	0f e8       	ldi	r16, 0x8F	; 143
    2880:	10 e0       	ldi	r17, 0x00	; 0
    2882:	21 ec       	ldi	r18, 0xC1	; 193
    2884:	30 e0       	ldi	r19, 0x00	; 0
    2886:	41 e6       	ldi	r20, 0x61	; 97
    2888:	50 e0       	ldi	r21, 0x00	; 0
    288a:	6b e1       	ldi	r22, 0x1B	; 27
    288c:	70 e0       	ldi	r23, 0x00	; 0
    288e:	88 e2       	ldi	r24, 0x28	; 40
    2890:	93 e0       	ldi	r25, 0x03	; 3
    2892:	0e 94 7f 27 	call	0x4efe	; 0x4efe <_ZN14TFT_22_ILI922513drawRectangleEjjjjj>
    tft.setGFXFont(&FreeSerif18pt7b);
    2896:	6d e5       	ldi	r22, 0x5D	; 93
    2898:	7b e0       	ldi	r23, 0x0B	; 11
    289a:	88 e2       	ldi	r24, 0x28	; 40
    289c:	93 e0       	ldi	r25, 0x03	; 3
    289e:	0e 94 03 29 	call	0x5206	; 0x5206 <_ZN14TFT_22_ILI922510setGFXFontEPK7GFXfont>
 
    String s2="0.000";
    28a2:	67 e4       	ldi	r22, 0x47	; 71
    28a4:	71 e0       	ldi	r23, 0x01	; 1
    28a6:	ce 01       	movw	r24, r28
    28a8:	07 96       	adiw	r24, 0x07	; 7
    28aa:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <_ZN6StringC1EPKc>
    tft.drawGFXText(30,70, s2,primary_color); //Initially  show pressure zero
    28ae:	be 01       	movw	r22, r28
    28b0:	69 5f       	subi	r22, 0xF9	; 249
    28b2:	7f 4f       	sbci	r23, 0xFF	; 255
    28b4:	ce 01       	movw	r24, r28
    28b6:	01 96       	adiw	r24, 0x01	; 1
    28b8:	0e 94 42 1c 	call	0x3884	; 0x3884 <_ZN6StringC1ERKS_>
    28bc:	0f ef       	ldi	r16, 0xFF	; 255
    28be:	1f ef       	ldi	r17, 0xFF	; 255
    28c0:	9e 01       	movw	r18, r28
    28c2:	2f 5f       	subi	r18, 0xFF	; 255
    28c4:	3f 4f       	sbci	r19, 0xFF	; 255
    28c6:	46 e4       	ldi	r20, 0x46	; 70
    28c8:	50 e0       	ldi	r21, 0x00	; 0
    28ca:	6e e1       	ldi	r22, 0x1E	; 30
    28cc:	70 e0       	ldi	r23, 0x00	; 0
    28ce:	88 e2       	ldi	r24, 0x28	; 40
    28d0:	93 e0       	ldi	r25, 0x03	; 3
    28d2:	0e 94 a7 29 	call	0x534e	; 0x534e <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj>
    28d6:	ce 01       	movw	r24, r28
    28d8:	01 96       	adiw	r24, 0x01	; 1
    28da:	0e 94 68 1b 	call	0x36d0	; 0x36d0 <_ZN6StringD1Ev>
    tft.setGFXFont(&FreeSerif12pt7b);
    28de:	6e e8       	ldi	r22, 0x8E	; 142
    28e0:	71 e0       	ldi	r23, 0x01	; 1
    28e2:	88 e2       	ldi	r24, 0x28	; 40
    28e4:	93 e0       	ldi	r25, 0x03	; 3
    28e6:	0e 94 03 29 	call	0x5206	; 0x5206 <_ZN14TFT_22_ILI922510setGFXFontEPK7GFXfont>
    s2="MPa";
    28ea:	6d e4       	ldi	r22, 0x4D	; 77
    28ec:	71 e0       	ldi	r23, 0x01	; 1
    28ee:	ce 01       	movw	r24, r28
    28f0:	07 96       	adiw	r24, 0x07	; 7
    28f2:	0e 94 57 1c 	call	0x38ae	; 0x38ae <_ZN6StringaSEPKc>
    tft.drawGFXText(130,65, s2,primary_color); //Draw MPa text on screen
    28f6:	be 01       	movw	r22, r28
    28f8:	69 5f       	subi	r22, 0xF9	; 249
    28fa:	7f 4f       	sbci	r23, 0xFF	; 255
    28fc:	ce 01       	movw	r24, r28
    28fe:	01 96       	adiw	r24, 0x01	; 1
    2900:	0e 94 42 1c 	call	0x3884	; 0x3884 <_ZN6StringC1ERKS_>
    2904:	9e 01       	movw	r18, r28
    2906:	2f 5f       	subi	r18, 0xFF	; 255
    2908:	3f 4f       	sbci	r19, 0xFF	; 255
    290a:	41 e4       	ldi	r20, 0x41	; 65
    290c:	50 e0       	ldi	r21, 0x00	; 0
    290e:	62 e8       	ldi	r22, 0x82	; 130
    2910:	70 e0       	ldi	r23, 0x00	; 0
    2912:	88 e2       	ldi	r24, 0x28	; 40
    2914:	93 e0       	ldi	r25, 0x03	; 3
    2916:	0e 94 a7 29 	call	0x534e	; 0x534e <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj>
    291a:	ce 01       	movw	r24, r28
    291c:	01 96       	adiw	r24, 0x01	; 1
    291e:	0e 94 68 1b 	call	0x36d0	; 0x36d0 <_ZN6StringD1Ev>
    tft.setGFXFont(&FreeSerif18pt7b);
    2922:	6d e5       	ldi	r22, 0x5D	; 93
    2924:	7b e0       	ldi	r23, 0x0B	; 11
    2926:	88 e2       	ldi	r24, 0x28	; 40
    2928:	93 e0       	ldi	r25, 0x03	; 3
    292a:	0e 94 03 29 	call	0x5206	; 0x5206 <_ZN14TFT_22_ILI922510setGFXFontEPK7GFXfont>
   //tft.drawBitmap(170, 10, batt3, 30, 20, primary_color); //Battery icon
    draw_scale();
    292e:	0e 94 90 12 	call	0x2520	; 0x2520 <_Z10draw_scalev>
    tft.drawRectangle(30, 100, 190, 140,primary_color);  //Draw rectangle to show pressure display
    tft.drawRectangle(28, 98, 192, 142, primary_color);
    tft.drawRectangle(27, 97, 193, 143, primary_color);	
    tft.setGFXFont(&FreeSerif18pt7b);
 
    String s2="0.000";
    2932:	ce 01       	movw	r24, r28
    2934:	07 96       	adiw	r24, 0x07	; 7
    2936:	0e 94 68 1b 	call	0x36d0	; 0x36d0 <_ZN6StringD1Ev>
    s2="MPa";
    tft.drawGFXText(130,65, s2,primary_color); //Draw MPa text on screen
    tft.setGFXFont(&FreeSerif18pt7b);
   //tft.drawBitmap(170, 10, batt3, 30, 20, primary_color); //Battery icon
    draw_scale();
}
    293a:	2c 96       	adiw	r28, 0x0c	; 12
    293c:	0f b6       	in	r0, 0x3f	; 63
    293e:	f8 94       	cli
    2940:	de bf       	out	0x3e, r29	; 62
    2942:	0f be       	out	0x3f, r0	; 63
    2944:	cd bf       	out	0x3d, r28	; 61
    2946:	df 91       	pop	r29
    2948:	cf 91       	pop	r28
    294a:	1f 91       	pop	r17
    294c:	0f 91       	pop	r16
    294e:	ff 90       	pop	r15
    2950:	ef 90       	pop	r14
    2952:	08 95       	ret

00002954 <setup>:
  public:
    inline HardwareSerial(
      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
      volatile uint8_t *ucsrc, volatile uint8_t *udr);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
    2954:	26 e0       	ldi	r18, 0x06	; 6
    2956:	40 e8       	ldi	r20, 0x80	; 128
    2958:	55 e2       	ldi	r21, 0x25	; 37
    295a:	60 e0       	ldi	r22, 0x00	; 0
    295c:	70 e0       	ldi	r23, 0x00	; 0
    295e:	85 e8       	ldi	r24, 0x85	; 133
    2960:	93 e0       	ldi	r25, 0x03	; 3
    2962:	0e 94 a2 17 	call	0x2f44	; 0x2f44 <_ZN14HardwareSerial5beginEmh>

/***************************************************************************************/

void setup() {
  Serial.begin(9600);
  tft.begin();  //Tft initialize 
    2966:	88 e2       	ldi	r24, 0x28	; 40
    2968:	93 e0       	ldi	r25, 0x03	; 3
    296a:	0e 94 3f 24 	call	0x487e	; 0x487e <_ZN14TFT_22_ILI92255beginEv>
  tft.setOrientation(3);  //Set tft Orientation
    296e:	63 e0       	ldi	r22, 0x03	; 3
    2970:	88 e2       	ldi	r24, 0x28	; 40
    2972:	93 e0       	ldi	r25, 0x03	; 3
    2974:	0e 94 c9 20 	call	0x4192	; 0x4192 <_ZN14TFT_22_ILI922514setOrientationEh>
  tft.setBacklight(HIGH); //Set back light high
    2978:	61 e0       	ldi	r22, 0x01	; 1
    297a:	88 e2       	ldi	r24, 0x28	; 40
    297c:	93 e0       	ldi	r25, 0x03	; 3
    297e:	0e 94 ba 20 	call	0x4174	; 0x4174 <_ZN14TFT_22_ILI922512setBacklightEb>
  tft.setFont(Terminal6x8);
    2982:	40 e0       	ldi	r20, 0x00	; 0
    2984:	6b e2       	ldi	r22, 0x2B	; 43
    2986:	7d e1       	ldi	r23, 0x1D	; 29
    2988:	88 e2       	ldi	r24, 0x28	; 40
    298a:	93 e0       	ldi	r25, 0x03	; 3
    298c:	0e 94 ad 21 	call	0x435a	; 0x435a <_ZN14TFT_22_ILI92257setFontEPhb>
  //Printing AgVa logo on screen
  AgVa_logo();
    2990:	0e 94 54 13 	call	0x26a8	; 0x26a8 <_Z9AgVa_logov>
  main_screen();
    2994:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <_Z11main_screenv>
  while(!Serial){}
  if (dPress.begin() < 0) 
    2998:	8e e3       	ldi	r24, 0x3E	; 62
    299a:	92 e0       	ldi	r25, 0x02	; 2
    299c:	0e 94 67 1f 	call	0x3ece	; 0x3ece <_ZN7AMS58125beginEv>
    29a0:	97 ff       	sbrs	r25, 7
    29a2:	07 c0       	rjmp	.+14     	; 0x29b2 <setup+0x5e>
  {
    Serial.println("Error communicating with sensor, check wiring and I2C address");
    29a4:	61 e5       	ldi	r22, 0x51	; 81
    29a6:	71 e0       	ldi	r23, 0x01	; 1
    29a8:	85 e8       	ldi	r24, 0x85	; 133
    29aa:	93 e0       	ldi	r25, 0x03	; 3
    29ac:	0e 94 f5 18 	call	0x31ea	; 0x31ea <_ZN5Print7printlnEPKc>
    29b0:	ff cf       	rjmp	.-2      	; 0x29b0 <setup+0x5c>
    29b2:	08 95       	ret

000029b4 <_GLOBAL__sub_I_pressure>:
    s2="MPa";
    tft.drawGFXText(130,65, s2,primary_color); //Draw MPa text on screen
    tft.setGFXFont(&FreeSerif18pt7b);
   //tft.drawBitmap(170, 10, batt3, 30, 20, primary_color); //Battery icon
    draw_scale();
}
    29b4:	ef 92       	push	r14
    29b6:	0f 93       	push	r16
float Current_Pressure = 0;
int Previous_Area = 0;
int Current_Area = 0;
int w = 10;
int h = 15;
String stringTwo;
    29b8:	69 e2       	ldi	r22, 0x29	; 41
    29ba:	71 e0       	ldi	r23, 0x01	; 1
    29bc:	8f e6       	ldi	r24, 0x6F	; 111
    29be:	93 e0       	ldi	r25, 0x03	; 3
    29c0:	0e 94 d9 1b 	call	0x37b2	; 0x37b2 <_ZN6StringC1EPKc>
char second_digit = 0;
char third_digit = 0;

/************************************************/

TFT_22_ILI9225 tft = TFT_22_ILI9225(TFT_RST, TFT_RS, TFT_CS, TFT_LED, TFT_BRIGHTNESS);
    29c4:	ee 24       	eor	r14, r14
    29c6:	ea 94       	dec	r14
    29c8:	03 e0       	ldi	r16, 0x03	; 3
    29ca:	2a e0       	ldi	r18, 0x0A	; 10
    29cc:	49 e0       	ldi	r20, 0x09	; 9
    29ce:	68 e0       	ldi	r22, 0x08	; 8
    29d0:	88 e2       	ldi	r24, 0x28	; 40
    29d2:	93 e0       	ldi	r25, 0x03	; 3
    29d4:	0e 94 50 20 	call	0x40a0	; 0x40a0 <_ZN14TFT_22_ILI9225C1Eaaaah>
AMS5812 dPress(Wire,0x10,AMS5812::AMS5812_1000_D);
    29d8:	2f e0       	ldi	r18, 0x0F	; 15
    29da:	40 e1       	ldi	r20, 0x10	; 16
    29dc:	6c e2       	ldi	r22, 0x2C	; 44
    29de:	74 e0       	ldi	r23, 0x04	; 4
    29e0:	8e e3       	ldi	r24, 0x3E	; 62
    29e2:	92 e0       	ldi	r25, 0x02	; 2
    s2="MPa";
    tft.drawGFXText(130,65, s2,primary_color); //Draw MPa text on screen
    tft.setGFXFont(&FreeSerif18pt7b);
   //tft.drawBitmap(170, 10, batt3, 30, 20, primary_color); //Battery icon
    draw_scale();
}
    29e4:	0f 91       	pop	r16
    29e6:	ef 90       	pop	r14
char third_digit = 0;

/************************************************/

TFT_22_ILI9225 tft = TFT_22_ILI9225(TFT_RST, TFT_RS, TFT_CS, TFT_LED, TFT_BRIGHTNESS);
AMS5812 dPress(Wire,0x10,AMS5812::AMS5812_1000_D);
    29e8:	0c 94 c3 1c 	jmp	0x3986	; 0x3986 <_ZN7AMS5812C1ER7TwoWirehNS_10TransducerE>

000029ec <_GLOBAL__sub_D_pressure>:
float Current_Pressure = 0;
int Previous_Area = 0;
int Current_Area = 0;
int w = 10;
int h = 15;
String stringTwo;
    29ec:	8f e6       	ldi	r24, 0x6F	; 111
    29ee:	93 e0       	ldi	r25, 0x03	; 3
    29f0:	0c 94 68 1b 	jmp	0x36d0	; 0x36d0 <_ZN6StringD1Ev>

000029f4 <__subsf3>:
    29f4:	50 58       	subi	r21, 0x80	; 128

000029f6 <__addsf3>:
    29f6:	bb 27       	eor	r27, r27
    29f8:	aa 27       	eor	r26, r26
    29fa:	0e 94 12 15 	call	0x2a24	; 0x2a24 <__addsf3x>
    29fe:	0c 94 63 16 	jmp	0x2cc6	; 0x2cc6 <__fp_round>
    2a02:	0e 94 55 16 	call	0x2caa	; 0x2caa <__fp_pscA>
    2a06:	38 f0       	brcs	.+14     	; 0x2a16 <__addsf3+0x20>
    2a08:	0e 94 5c 16 	call	0x2cb8	; 0x2cb8 <__fp_pscB>
    2a0c:	20 f0       	brcs	.+8      	; 0x2a16 <__addsf3+0x20>
    2a0e:	39 f4       	brne	.+14     	; 0x2a1e <__addsf3+0x28>
    2a10:	9f 3f       	cpi	r25, 0xFF	; 255
    2a12:	19 f4       	brne	.+6      	; 0x2a1a <__addsf3+0x24>
    2a14:	26 f4       	brtc	.+8      	; 0x2a1e <__addsf3+0x28>
    2a16:	0c 94 52 16 	jmp	0x2ca4	; 0x2ca4 <__fp_nan>
    2a1a:	0e f4       	brtc	.+2      	; 0x2a1e <__addsf3+0x28>
    2a1c:	e0 95       	com	r30
    2a1e:	e7 fb       	bst	r30, 7
    2a20:	0c 94 4c 16 	jmp	0x2c98	; 0x2c98 <__fp_inf>

00002a24 <__addsf3x>:
    2a24:	e9 2f       	mov	r30, r25
    2a26:	0e 94 74 16 	call	0x2ce8	; 0x2ce8 <__fp_split3>
    2a2a:	58 f3       	brcs	.-42     	; 0x2a02 <__addsf3+0xc>
    2a2c:	ba 17       	cp	r27, r26
    2a2e:	62 07       	cpc	r22, r18
    2a30:	73 07       	cpc	r23, r19
    2a32:	84 07       	cpc	r24, r20
    2a34:	95 07       	cpc	r25, r21
    2a36:	20 f0       	brcs	.+8      	; 0x2a40 <__addsf3x+0x1c>
    2a38:	79 f4       	brne	.+30     	; 0x2a58 <__addsf3x+0x34>
    2a3a:	a6 f5       	brtc	.+104    	; 0x2aa4 <__addsf3x+0x80>
    2a3c:	0c 94 96 16 	jmp	0x2d2c	; 0x2d2c <__fp_zero>
    2a40:	0e f4       	brtc	.+2      	; 0x2a44 <__addsf3x+0x20>
    2a42:	e0 95       	com	r30
    2a44:	0b 2e       	mov	r0, r27
    2a46:	ba 2f       	mov	r27, r26
    2a48:	a0 2d       	mov	r26, r0
    2a4a:	0b 01       	movw	r0, r22
    2a4c:	b9 01       	movw	r22, r18
    2a4e:	90 01       	movw	r18, r0
    2a50:	0c 01       	movw	r0, r24
    2a52:	ca 01       	movw	r24, r20
    2a54:	a0 01       	movw	r20, r0
    2a56:	11 24       	eor	r1, r1
    2a58:	ff 27       	eor	r31, r31
    2a5a:	59 1b       	sub	r21, r25
    2a5c:	99 f0       	breq	.+38     	; 0x2a84 <__addsf3x+0x60>
    2a5e:	59 3f       	cpi	r21, 0xF9	; 249
    2a60:	50 f4       	brcc	.+20     	; 0x2a76 <__addsf3x+0x52>
    2a62:	50 3e       	cpi	r21, 0xE0	; 224
    2a64:	68 f1       	brcs	.+90     	; 0x2ac0 <__addsf3x+0x9c>
    2a66:	1a 16       	cp	r1, r26
    2a68:	f0 40       	sbci	r31, 0x00	; 0
    2a6a:	a2 2f       	mov	r26, r18
    2a6c:	23 2f       	mov	r18, r19
    2a6e:	34 2f       	mov	r19, r20
    2a70:	44 27       	eor	r20, r20
    2a72:	58 5f       	subi	r21, 0xF8	; 248
    2a74:	f3 cf       	rjmp	.-26     	; 0x2a5c <__addsf3x+0x38>
    2a76:	46 95       	lsr	r20
    2a78:	37 95       	ror	r19
    2a7a:	27 95       	ror	r18
    2a7c:	a7 95       	ror	r26
    2a7e:	f0 40       	sbci	r31, 0x00	; 0
    2a80:	53 95       	inc	r21
    2a82:	c9 f7       	brne	.-14     	; 0x2a76 <__addsf3x+0x52>
    2a84:	7e f4       	brtc	.+30     	; 0x2aa4 <__addsf3x+0x80>
    2a86:	1f 16       	cp	r1, r31
    2a88:	ba 0b       	sbc	r27, r26
    2a8a:	62 0b       	sbc	r22, r18
    2a8c:	73 0b       	sbc	r23, r19
    2a8e:	84 0b       	sbc	r24, r20
    2a90:	ba f0       	brmi	.+46     	; 0x2ac0 <__addsf3x+0x9c>
    2a92:	91 50       	subi	r25, 0x01	; 1
    2a94:	a1 f0       	breq	.+40     	; 0x2abe <__addsf3x+0x9a>
    2a96:	ff 0f       	add	r31, r31
    2a98:	bb 1f       	adc	r27, r27
    2a9a:	66 1f       	adc	r22, r22
    2a9c:	77 1f       	adc	r23, r23
    2a9e:	88 1f       	adc	r24, r24
    2aa0:	c2 f7       	brpl	.-16     	; 0x2a92 <__addsf3x+0x6e>
    2aa2:	0e c0       	rjmp	.+28     	; 0x2ac0 <__addsf3x+0x9c>
    2aa4:	ba 0f       	add	r27, r26
    2aa6:	62 1f       	adc	r22, r18
    2aa8:	73 1f       	adc	r23, r19
    2aaa:	84 1f       	adc	r24, r20
    2aac:	48 f4       	brcc	.+18     	; 0x2ac0 <__addsf3x+0x9c>
    2aae:	87 95       	ror	r24
    2ab0:	77 95       	ror	r23
    2ab2:	67 95       	ror	r22
    2ab4:	b7 95       	ror	r27
    2ab6:	f7 95       	ror	r31
    2ab8:	9e 3f       	cpi	r25, 0xFE	; 254
    2aba:	08 f0       	brcs	.+2      	; 0x2abe <__addsf3x+0x9a>
    2abc:	b0 cf       	rjmp	.-160    	; 0x2a1e <__addsf3+0x28>
    2abe:	93 95       	inc	r25
    2ac0:	88 0f       	add	r24, r24
    2ac2:	08 f0       	brcs	.+2      	; 0x2ac6 <__addsf3x+0xa2>
    2ac4:	99 27       	eor	r25, r25
    2ac6:	ee 0f       	add	r30, r30
    2ac8:	97 95       	ror	r25
    2aca:	87 95       	ror	r24
    2acc:	08 95       	ret

00002ace <__divsf3>:
    2ace:	0e 94 7b 15 	call	0x2af6	; 0x2af6 <__divsf3x>
    2ad2:	0c 94 63 16 	jmp	0x2cc6	; 0x2cc6 <__fp_round>
    2ad6:	0e 94 5c 16 	call	0x2cb8	; 0x2cb8 <__fp_pscB>
    2ada:	58 f0       	brcs	.+22     	; 0x2af2 <__divsf3+0x24>
    2adc:	0e 94 55 16 	call	0x2caa	; 0x2caa <__fp_pscA>
    2ae0:	40 f0       	brcs	.+16     	; 0x2af2 <__divsf3+0x24>
    2ae2:	29 f4       	brne	.+10     	; 0x2aee <__divsf3+0x20>
    2ae4:	5f 3f       	cpi	r21, 0xFF	; 255
    2ae6:	29 f0       	breq	.+10     	; 0x2af2 <__divsf3+0x24>
    2ae8:	0c 94 4c 16 	jmp	0x2c98	; 0x2c98 <__fp_inf>
    2aec:	51 11       	cpse	r21, r1
    2aee:	0c 94 97 16 	jmp	0x2d2e	; 0x2d2e <__fp_szero>
    2af2:	0c 94 52 16 	jmp	0x2ca4	; 0x2ca4 <__fp_nan>

00002af6 <__divsf3x>:
    2af6:	0e 94 74 16 	call	0x2ce8	; 0x2ce8 <__fp_split3>
    2afa:	68 f3       	brcs	.-38     	; 0x2ad6 <__divsf3+0x8>

00002afc <__divsf3_pse>:
    2afc:	99 23       	and	r25, r25
    2afe:	b1 f3       	breq	.-20     	; 0x2aec <__divsf3+0x1e>
    2b00:	55 23       	and	r21, r21
    2b02:	91 f3       	breq	.-28     	; 0x2ae8 <__divsf3+0x1a>
    2b04:	95 1b       	sub	r25, r21
    2b06:	55 0b       	sbc	r21, r21
    2b08:	bb 27       	eor	r27, r27
    2b0a:	aa 27       	eor	r26, r26
    2b0c:	62 17       	cp	r22, r18
    2b0e:	73 07       	cpc	r23, r19
    2b10:	84 07       	cpc	r24, r20
    2b12:	38 f0       	brcs	.+14     	; 0x2b22 <__divsf3_pse+0x26>
    2b14:	9f 5f       	subi	r25, 0xFF	; 255
    2b16:	5f 4f       	sbci	r21, 0xFF	; 255
    2b18:	22 0f       	add	r18, r18
    2b1a:	33 1f       	adc	r19, r19
    2b1c:	44 1f       	adc	r20, r20
    2b1e:	aa 1f       	adc	r26, r26
    2b20:	a9 f3       	breq	.-22     	; 0x2b0c <__divsf3_pse+0x10>
    2b22:	35 d0       	rcall	.+106    	; 0x2b8e <__divsf3_pse+0x92>
    2b24:	0e 2e       	mov	r0, r30
    2b26:	3a f0       	brmi	.+14     	; 0x2b36 <__divsf3_pse+0x3a>
    2b28:	e0 e8       	ldi	r30, 0x80	; 128
    2b2a:	32 d0       	rcall	.+100    	; 0x2b90 <__divsf3_pse+0x94>
    2b2c:	91 50       	subi	r25, 0x01	; 1
    2b2e:	50 40       	sbci	r21, 0x00	; 0
    2b30:	e6 95       	lsr	r30
    2b32:	00 1c       	adc	r0, r0
    2b34:	ca f7       	brpl	.-14     	; 0x2b28 <__divsf3_pse+0x2c>
    2b36:	2b d0       	rcall	.+86     	; 0x2b8e <__divsf3_pse+0x92>
    2b38:	fe 2f       	mov	r31, r30
    2b3a:	29 d0       	rcall	.+82     	; 0x2b8e <__divsf3_pse+0x92>
    2b3c:	66 0f       	add	r22, r22
    2b3e:	77 1f       	adc	r23, r23
    2b40:	88 1f       	adc	r24, r24
    2b42:	bb 1f       	adc	r27, r27
    2b44:	26 17       	cp	r18, r22
    2b46:	37 07       	cpc	r19, r23
    2b48:	48 07       	cpc	r20, r24
    2b4a:	ab 07       	cpc	r26, r27
    2b4c:	b0 e8       	ldi	r27, 0x80	; 128
    2b4e:	09 f0       	breq	.+2      	; 0x2b52 <__divsf3_pse+0x56>
    2b50:	bb 0b       	sbc	r27, r27
    2b52:	80 2d       	mov	r24, r0
    2b54:	bf 01       	movw	r22, r30
    2b56:	ff 27       	eor	r31, r31
    2b58:	93 58       	subi	r25, 0x83	; 131
    2b5a:	5f 4f       	sbci	r21, 0xFF	; 255
    2b5c:	3a f0       	brmi	.+14     	; 0x2b6c <__divsf3_pse+0x70>
    2b5e:	9e 3f       	cpi	r25, 0xFE	; 254
    2b60:	51 05       	cpc	r21, r1
    2b62:	78 f0       	brcs	.+30     	; 0x2b82 <__divsf3_pse+0x86>
    2b64:	0c 94 4c 16 	jmp	0x2c98	; 0x2c98 <__fp_inf>
    2b68:	0c 94 97 16 	jmp	0x2d2e	; 0x2d2e <__fp_szero>
    2b6c:	5f 3f       	cpi	r21, 0xFF	; 255
    2b6e:	e4 f3       	brlt	.-8      	; 0x2b68 <__divsf3_pse+0x6c>
    2b70:	98 3e       	cpi	r25, 0xE8	; 232
    2b72:	d4 f3       	brlt	.-12     	; 0x2b68 <__divsf3_pse+0x6c>
    2b74:	86 95       	lsr	r24
    2b76:	77 95       	ror	r23
    2b78:	67 95       	ror	r22
    2b7a:	b7 95       	ror	r27
    2b7c:	f7 95       	ror	r31
    2b7e:	9f 5f       	subi	r25, 0xFF	; 255
    2b80:	c9 f7       	brne	.-14     	; 0x2b74 <__divsf3_pse+0x78>
    2b82:	88 0f       	add	r24, r24
    2b84:	91 1d       	adc	r25, r1
    2b86:	96 95       	lsr	r25
    2b88:	87 95       	ror	r24
    2b8a:	97 f9       	bld	r25, 7
    2b8c:	08 95       	ret
    2b8e:	e1 e0       	ldi	r30, 0x01	; 1
    2b90:	66 0f       	add	r22, r22
    2b92:	77 1f       	adc	r23, r23
    2b94:	88 1f       	adc	r24, r24
    2b96:	bb 1f       	adc	r27, r27
    2b98:	62 17       	cp	r22, r18
    2b9a:	73 07       	cpc	r23, r19
    2b9c:	84 07       	cpc	r24, r20
    2b9e:	ba 07       	cpc	r27, r26
    2ba0:	20 f0       	brcs	.+8      	; 0x2baa <__divsf3_pse+0xae>
    2ba2:	62 1b       	sub	r22, r18
    2ba4:	73 0b       	sbc	r23, r19
    2ba6:	84 0b       	sbc	r24, r20
    2ba8:	ba 0b       	sbc	r27, r26
    2baa:	ee 1f       	adc	r30, r30
    2bac:	88 f7       	brcc	.-30     	; 0x2b90 <__divsf3_pse+0x94>
    2bae:	e0 95       	com	r30
    2bb0:	08 95       	ret

00002bb2 <__fixsfsi>:
    2bb2:	0e 94 e0 15 	call	0x2bc0	; 0x2bc0 <__fixunssfsi>
    2bb6:	68 94       	set
    2bb8:	b1 11       	cpse	r27, r1
    2bba:	0c 94 97 16 	jmp	0x2d2e	; 0x2d2e <__fp_szero>
    2bbe:	08 95       	ret

00002bc0 <__fixunssfsi>:
    2bc0:	0e 94 7c 16 	call	0x2cf8	; 0x2cf8 <__fp_splitA>
    2bc4:	88 f0       	brcs	.+34     	; 0x2be8 <__fixunssfsi+0x28>
    2bc6:	9f 57       	subi	r25, 0x7F	; 127
    2bc8:	98 f0       	brcs	.+38     	; 0x2bf0 <__fixunssfsi+0x30>
    2bca:	b9 2f       	mov	r27, r25
    2bcc:	99 27       	eor	r25, r25
    2bce:	b7 51       	subi	r27, 0x17	; 23
    2bd0:	b0 f0       	brcs	.+44     	; 0x2bfe <__fixunssfsi+0x3e>
    2bd2:	e1 f0       	breq	.+56     	; 0x2c0c <__fixunssfsi+0x4c>
    2bd4:	66 0f       	add	r22, r22
    2bd6:	77 1f       	adc	r23, r23
    2bd8:	88 1f       	adc	r24, r24
    2bda:	99 1f       	adc	r25, r25
    2bdc:	1a f0       	brmi	.+6      	; 0x2be4 <__fixunssfsi+0x24>
    2bde:	ba 95       	dec	r27
    2be0:	c9 f7       	brne	.-14     	; 0x2bd4 <__fixunssfsi+0x14>
    2be2:	14 c0       	rjmp	.+40     	; 0x2c0c <__fixunssfsi+0x4c>
    2be4:	b1 30       	cpi	r27, 0x01	; 1
    2be6:	91 f0       	breq	.+36     	; 0x2c0c <__fixunssfsi+0x4c>
    2be8:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__fp_zero>
    2bec:	b1 e0       	ldi	r27, 0x01	; 1
    2bee:	08 95       	ret
    2bf0:	0c 94 96 16 	jmp	0x2d2c	; 0x2d2c <__fp_zero>
    2bf4:	67 2f       	mov	r22, r23
    2bf6:	78 2f       	mov	r23, r24
    2bf8:	88 27       	eor	r24, r24
    2bfa:	b8 5f       	subi	r27, 0xF8	; 248
    2bfc:	39 f0       	breq	.+14     	; 0x2c0c <__fixunssfsi+0x4c>
    2bfe:	b9 3f       	cpi	r27, 0xF9	; 249
    2c00:	cc f3       	brlt	.-14     	; 0x2bf4 <__fixunssfsi+0x34>
    2c02:	86 95       	lsr	r24
    2c04:	77 95       	ror	r23
    2c06:	67 95       	ror	r22
    2c08:	b3 95       	inc	r27
    2c0a:	d9 f7       	brne	.-10     	; 0x2c02 <__fixunssfsi+0x42>
    2c0c:	3e f4       	brtc	.+14     	; 0x2c1c <__fixunssfsi+0x5c>
    2c0e:	90 95       	com	r25
    2c10:	80 95       	com	r24
    2c12:	70 95       	com	r23
    2c14:	61 95       	neg	r22
    2c16:	7f 4f       	sbci	r23, 0xFF	; 255
    2c18:	8f 4f       	sbci	r24, 0xFF	; 255
    2c1a:	9f 4f       	sbci	r25, 0xFF	; 255
    2c1c:	08 95       	ret

00002c1e <__floatunsisf>:
    2c1e:	e8 94       	clt
    2c20:	09 c0       	rjmp	.+18     	; 0x2c34 <__floatsisf+0x12>

00002c22 <__floatsisf>:
    2c22:	97 fb       	bst	r25, 7
    2c24:	3e f4       	brtc	.+14     	; 0x2c34 <__floatsisf+0x12>
    2c26:	90 95       	com	r25
    2c28:	80 95       	com	r24
    2c2a:	70 95       	com	r23
    2c2c:	61 95       	neg	r22
    2c2e:	7f 4f       	sbci	r23, 0xFF	; 255
    2c30:	8f 4f       	sbci	r24, 0xFF	; 255
    2c32:	9f 4f       	sbci	r25, 0xFF	; 255
    2c34:	99 23       	and	r25, r25
    2c36:	a9 f0       	breq	.+42     	; 0x2c62 <__floatsisf+0x40>
    2c38:	f9 2f       	mov	r31, r25
    2c3a:	96 e9       	ldi	r25, 0x96	; 150
    2c3c:	bb 27       	eor	r27, r27
    2c3e:	93 95       	inc	r25
    2c40:	f6 95       	lsr	r31
    2c42:	87 95       	ror	r24
    2c44:	77 95       	ror	r23
    2c46:	67 95       	ror	r22
    2c48:	b7 95       	ror	r27
    2c4a:	f1 11       	cpse	r31, r1
    2c4c:	f8 cf       	rjmp	.-16     	; 0x2c3e <__floatsisf+0x1c>
    2c4e:	fa f4       	brpl	.+62     	; 0x2c8e <__floatsisf+0x6c>
    2c50:	bb 0f       	add	r27, r27
    2c52:	11 f4       	brne	.+4      	; 0x2c58 <__floatsisf+0x36>
    2c54:	60 ff       	sbrs	r22, 0
    2c56:	1b c0       	rjmp	.+54     	; 0x2c8e <__floatsisf+0x6c>
    2c58:	6f 5f       	subi	r22, 0xFF	; 255
    2c5a:	7f 4f       	sbci	r23, 0xFF	; 255
    2c5c:	8f 4f       	sbci	r24, 0xFF	; 255
    2c5e:	9f 4f       	sbci	r25, 0xFF	; 255
    2c60:	16 c0       	rjmp	.+44     	; 0x2c8e <__floatsisf+0x6c>
    2c62:	88 23       	and	r24, r24
    2c64:	11 f0       	breq	.+4      	; 0x2c6a <__floatsisf+0x48>
    2c66:	96 e9       	ldi	r25, 0x96	; 150
    2c68:	11 c0       	rjmp	.+34     	; 0x2c8c <__floatsisf+0x6a>
    2c6a:	77 23       	and	r23, r23
    2c6c:	21 f0       	breq	.+8      	; 0x2c76 <__floatsisf+0x54>
    2c6e:	9e e8       	ldi	r25, 0x8E	; 142
    2c70:	87 2f       	mov	r24, r23
    2c72:	76 2f       	mov	r23, r22
    2c74:	05 c0       	rjmp	.+10     	; 0x2c80 <__floatsisf+0x5e>
    2c76:	66 23       	and	r22, r22
    2c78:	71 f0       	breq	.+28     	; 0x2c96 <__floatsisf+0x74>
    2c7a:	96 e8       	ldi	r25, 0x86	; 134
    2c7c:	86 2f       	mov	r24, r22
    2c7e:	70 e0       	ldi	r23, 0x00	; 0
    2c80:	60 e0       	ldi	r22, 0x00	; 0
    2c82:	2a f0       	brmi	.+10     	; 0x2c8e <__floatsisf+0x6c>
    2c84:	9a 95       	dec	r25
    2c86:	66 0f       	add	r22, r22
    2c88:	77 1f       	adc	r23, r23
    2c8a:	88 1f       	adc	r24, r24
    2c8c:	da f7       	brpl	.-10     	; 0x2c84 <__floatsisf+0x62>
    2c8e:	88 0f       	add	r24, r24
    2c90:	96 95       	lsr	r25
    2c92:	87 95       	ror	r24
    2c94:	97 f9       	bld	r25, 7
    2c96:	08 95       	ret

00002c98 <__fp_inf>:
    2c98:	97 f9       	bld	r25, 7
    2c9a:	9f 67       	ori	r25, 0x7F	; 127
    2c9c:	80 e8       	ldi	r24, 0x80	; 128
    2c9e:	70 e0       	ldi	r23, 0x00	; 0
    2ca0:	60 e0       	ldi	r22, 0x00	; 0
    2ca2:	08 95       	ret

00002ca4 <__fp_nan>:
    2ca4:	9f ef       	ldi	r25, 0xFF	; 255
    2ca6:	80 ec       	ldi	r24, 0xC0	; 192
    2ca8:	08 95       	ret

00002caa <__fp_pscA>:
    2caa:	00 24       	eor	r0, r0
    2cac:	0a 94       	dec	r0
    2cae:	16 16       	cp	r1, r22
    2cb0:	17 06       	cpc	r1, r23
    2cb2:	18 06       	cpc	r1, r24
    2cb4:	09 06       	cpc	r0, r25
    2cb6:	08 95       	ret

00002cb8 <__fp_pscB>:
    2cb8:	00 24       	eor	r0, r0
    2cba:	0a 94       	dec	r0
    2cbc:	12 16       	cp	r1, r18
    2cbe:	13 06       	cpc	r1, r19
    2cc0:	14 06       	cpc	r1, r20
    2cc2:	05 06       	cpc	r0, r21
    2cc4:	08 95       	ret

00002cc6 <__fp_round>:
    2cc6:	09 2e       	mov	r0, r25
    2cc8:	03 94       	inc	r0
    2cca:	00 0c       	add	r0, r0
    2ccc:	11 f4       	brne	.+4      	; 0x2cd2 <__fp_round+0xc>
    2cce:	88 23       	and	r24, r24
    2cd0:	52 f0       	brmi	.+20     	; 0x2ce6 <__fp_round+0x20>
    2cd2:	bb 0f       	add	r27, r27
    2cd4:	40 f4       	brcc	.+16     	; 0x2ce6 <__fp_round+0x20>
    2cd6:	bf 2b       	or	r27, r31
    2cd8:	11 f4       	brne	.+4      	; 0x2cde <__fp_round+0x18>
    2cda:	60 ff       	sbrs	r22, 0
    2cdc:	04 c0       	rjmp	.+8      	; 0x2ce6 <__fp_round+0x20>
    2cde:	6f 5f       	subi	r22, 0xFF	; 255
    2ce0:	7f 4f       	sbci	r23, 0xFF	; 255
    2ce2:	8f 4f       	sbci	r24, 0xFF	; 255
    2ce4:	9f 4f       	sbci	r25, 0xFF	; 255
    2ce6:	08 95       	ret

00002ce8 <__fp_split3>:
    2ce8:	57 fd       	sbrc	r21, 7
    2cea:	90 58       	subi	r25, 0x80	; 128
    2cec:	44 0f       	add	r20, r20
    2cee:	55 1f       	adc	r21, r21
    2cf0:	59 f0       	breq	.+22     	; 0x2d08 <__fp_splitA+0x10>
    2cf2:	5f 3f       	cpi	r21, 0xFF	; 255
    2cf4:	71 f0       	breq	.+28     	; 0x2d12 <__fp_splitA+0x1a>
    2cf6:	47 95       	ror	r20

00002cf8 <__fp_splitA>:
    2cf8:	88 0f       	add	r24, r24
    2cfa:	97 fb       	bst	r25, 7
    2cfc:	99 1f       	adc	r25, r25
    2cfe:	61 f0       	breq	.+24     	; 0x2d18 <__fp_splitA+0x20>
    2d00:	9f 3f       	cpi	r25, 0xFF	; 255
    2d02:	79 f0       	breq	.+30     	; 0x2d22 <__fp_splitA+0x2a>
    2d04:	87 95       	ror	r24
    2d06:	08 95       	ret
    2d08:	12 16       	cp	r1, r18
    2d0a:	13 06       	cpc	r1, r19
    2d0c:	14 06       	cpc	r1, r20
    2d0e:	55 1f       	adc	r21, r21
    2d10:	f2 cf       	rjmp	.-28     	; 0x2cf6 <__fp_split3+0xe>
    2d12:	46 95       	lsr	r20
    2d14:	f1 df       	rcall	.-30     	; 0x2cf8 <__fp_splitA>
    2d16:	08 c0       	rjmp	.+16     	; 0x2d28 <__fp_splitA+0x30>
    2d18:	16 16       	cp	r1, r22
    2d1a:	17 06       	cpc	r1, r23
    2d1c:	18 06       	cpc	r1, r24
    2d1e:	99 1f       	adc	r25, r25
    2d20:	f1 cf       	rjmp	.-30     	; 0x2d04 <__fp_splitA+0xc>
    2d22:	86 95       	lsr	r24
    2d24:	71 05       	cpc	r23, r1
    2d26:	61 05       	cpc	r22, r1
    2d28:	08 94       	sec
    2d2a:	08 95       	ret

00002d2c <__fp_zero>:
    2d2c:	e8 94       	clt

00002d2e <__fp_szero>:
    2d2e:	bb 27       	eor	r27, r27
    2d30:	66 27       	eor	r22, r22
    2d32:	77 27       	eor	r23, r23
    2d34:	cb 01       	movw	r24, r22
    2d36:	97 f9       	bld	r25, 7
    2d38:	08 95       	ret

00002d3a <__gesf2>:
    2d3a:	0e 94 a2 16 	call	0x2d44	; 0x2d44 <__fp_cmp>
    2d3e:	08 f4       	brcc	.+2      	; 0x2d42 <__gesf2+0x8>
    2d40:	8f ef       	ldi	r24, 0xFF	; 255
    2d42:	08 95       	ret

00002d44 <__fp_cmp>:
    2d44:	99 0f       	add	r25, r25
    2d46:	00 08       	sbc	r0, r0
    2d48:	55 0f       	add	r21, r21
    2d4a:	aa 0b       	sbc	r26, r26
    2d4c:	e0 e8       	ldi	r30, 0x80	; 128
    2d4e:	fe ef       	ldi	r31, 0xFE	; 254
    2d50:	16 16       	cp	r1, r22
    2d52:	17 06       	cpc	r1, r23
    2d54:	e8 07       	cpc	r30, r24
    2d56:	f9 07       	cpc	r31, r25
    2d58:	c0 f0       	brcs	.+48     	; 0x2d8a <__fp_cmp+0x46>
    2d5a:	12 16       	cp	r1, r18
    2d5c:	13 06       	cpc	r1, r19
    2d5e:	e4 07       	cpc	r30, r20
    2d60:	f5 07       	cpc	r31, r21
    2d62:	98 f0       	brcs	.+38     	; 0x2d8a <__fp_cmp+0x46>
    2d64:	62 1b       	sub	r22, r18
    2d66:	73 0b       	sbc	r23, r19
    2d68:	84 0b       	sbc	r24, r20
    2d6a:	95 0b       	sbc	r25, r21
    2d6c:	39 f4       	brne	.+14     	; 0x2d7c <__fp_cmp+0x38>
    2d6e:	0a 26       	eor	r0, r26
    2d70:	61 f0       	breq	.+24     	; 0x2d8a <__fp_cmp+0x46>
    2d72:	23 2b       	or	r18, r19
    2d74:	24 2b       	or	r18, r20
    2d76:	25 2b       	or	r18, r21
    2d78:	21 f4       	brne	.+8      	; 0x2d82 <__fp_cmp+0x3e>
    2d7a:	08 95       	ret
    2d7c:	0a 26       	eor	r0, r26
    2d7e:	09 f4       	brne	.+2      	; 0x2d82 <__fp_cmp+0x3e>
    2d80:	a1 40       	sbci	r26, 0x01	; 1
    2d82:	a6 95       	lsr	r26
    2d84:	8f ef       	ldi	r24, 0xFF	; 255
    2d86:	81 1d       	adc	r24, r1
    2d88:	81 1d       	adc	r24, r1
    2d8a:	08 95       	ret

00002d8c <_ZN14HardwareSerial9availableEv>:
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    2d8c:	fc 01       	movw	r30, r24
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    2d8e:	91 8d       	ldd	r25, Z+25	; 0x19
    2d90:	22 8d       	ldd	r18, Z+26	; 0x1a
    2d92:	89 2f       	mov	r24, r25
    2d94:	90 e0       	ldi	r25, 0x00	; 0
    2d96:	80 5c       	subi	r24, 0xC0	; 192
    2d98:	9f 4f       	sbci	r25, 0xFF	; 255
    2d9a:	82 1b       	sub	r24, r18
    2d9c:	91 09       	sbc	r25, r1
}
    2d9e:	8f 73       	andi	r24, 0x3F	; 63
    2da0:	99 27       	eor	r25, r25
    2da2:	08 95       	ret

00002da4 <_ZN14HardwareSerial4peekEv>:

int HardwareSerial::peek(void)
{
    2da4:	fc 01       	movw	r30, r24
  if (_rx_buffer_head == _rx_buffer_tail) {
    2da6:	91 8d       	ldd	r25, Z+25	; 0x19
    2da8:	82 8d       	ldd	r24, Z+26	; 0x1a
    2daa:	98 17       	cp	r25, r24
    2dac:	31 f0       	breq	.+12     	; 0x2dba <_ZN14HardwareSerial4peekEv+0x16>
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    2dae:	82 8d       	ldd	r24, Z+26	; 0x1a
    2db0:	e8 0f       	add	r30, r24
    2db2:	f1 1d       	adc	r31, r1
    2db4:	85 8d       	ldd	r24, Z+29	; 0x1d
    2db6:	90 e0       	ldi	r25, 0x00	; 0
    2db8:	08 95       	ret
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    2dba:	8f ef       	ldi	r24, 0xFF	; 255
    2dbc:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    2dbe:	08 95       	ret

00002dc0 <_ZN14HardwareSerial4readEv>:

int HardwareSerial::read(void)
{
    2dc0:	fc 01       	movw	r30, r24
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    2dc2:	91 8d       	ldd	r25, Z+25	; 0x19
    2dc4:	82 8d       	ldd	r24, Z+26	; 0x1a
    2dc6:	98 17       	cp	r25, r24
    2dc8:	61 f0       	breq	.+24     	; 0x2de2 <_ZN14HardwareSerial4readEv+0x22>
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    2dca:	82 8d       	ldd	r24, Z+26	; 0x1a
    2dcc:	df 01       	movw	r26, r30
    2dce:	a8 0f       	add	r26, r24
    2dd0:	b1 1d       	adc	r27, r1
    2dd2:	5d 96       	adiw	r26, 0x1d	; 29
    2dd4:	8c 91       	ld	r24, X
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    2dd6:	92 8d       	ldd	r25, Z+26	; 0x1a
    2dd8:	9f 5f       	subi	r25, 0xFF	; 255
    2dda:	9f 73       	andi	r25, 0x3F	; 63
    2ddc:	92 8f       	std	Z+26, r25	; 0x1a
    return c;
    2dde:	90 e0       	ldi	r25, 0x00	; 0
    2de0:	08 95       	ret

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    2de2:	8f ef       	ldi	r24, 0xFF	; 255
    2de4:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    2de6:	08 95       	ret

00002de8 <_ZN14HardwareSerial17availableForWriteEv>:
{
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC {
    head = _tx_buffer_head;
    2de8:	fc 01       	movw	r30, r24
    2dea:	53 8d       	ldd	r21, Z+27	; 0x1b
    tail = _tx_buffer_tail;
    2dec:	44 8d       	ldd	r20, Z+28	; 0x1c
    2dee:	25 2f       	mov	r18, r21
    2df0:	30 e0       	ldi	r19, 0x00	; 0
    2df2:	84 2f       	mov	r24, r20
    2df4:	90 e0       	ldi	r25, 0x00	; 0
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
    2df6:	82 1b       	sub	r24, r18
    2df8:	93 0b       	sbc	r25, r19
    2dfa:	54 17       	cp	r21, r20
    2dfc:	10 f0       	brcs	.+4      	; 0x2e02 <_ZN14HardwareSerial17availableForWriteEv+0x1a>
    2dfe:	cf 96       	adiw	r24, 0x3f	; 63
    2e00:	08 95       	ret
  return tail - head - 1;
    2e02:	01 97       	sbiw	r24, 0x01	; 1
}
    2e04:	08 95       	ret

00002e06 <_Z14serialEventRunv>:
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    2e06:	82 e6       	ldi	r24, 0x62	; 98
    2e08:	98 e1       	ldi	r25, 0x18	; 24
    2e0a:	89 2b       	or	r24, r25
    2e0c:	49 f0       	breq	.+18     	; 0x2e20 <_Z14serialEventRunv+0x1a>
    2e0e:	80 e0       	ldi	r24, 0x00	; 0
    2e10:	90 e0       	ldi	r25, 0x00	; 0
    2e12:	89 2b       	or	r24, r25
    2e14:	29 f0       	breq	.+10     	; 0x2e20 <_Z14serialEventRunv+0x1a>
    2e16:	0e 94 62 18 	call	0x30c4	; 0x30c4 <_Z17Serial0_availablev>
    2e1a:	81 11       	cpse	r24, r1
    2e1c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    2e20:	08 95       	ret

00002e22 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    2e22:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    2e24:	84 8d       	ldd	r24, Z+28	; 0x1c
    2e26:	df 01       	movw	r26, r30
    2e28:	a8 0f       	add	r26, r24
    2e2a:	b1 1d       	adc	r27, r1
    2e2c:	a3 5a       	subi	r26, 0xA3	; 163
    2e2e:	bf 4f       	sbci	r27, 0xFF	; 255
    2e30:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    2e32:	84 8d       	ldd	r24, Z+28	; 0x1c
    2e34:	90 e0       	ldi	r25, 0x00	; 0
    2e36:	01 96       	adiw	r24, 0x01	; 1
    2e38:	8f 73       	andi	r24, 0x3F	; 63
    2e3a:	99 27       	eor	r25, r25
    2e3c:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
    2e3e:	a6 89       	ldd	r26, Z+22	; 0x16
    2e40:	b7 89       	ldd	r27, Z+23	; 0x17
    2e42:	2c 93       	st	X, r18
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

#ifdef MPCM0
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    2e44:	a0 89       	ldd	r26, Z+16	; 0x10
    2e46:	b1 89       	ldd	r27, Z+17	; 0x11
    2e48:	8c 91       	ld	r24, X
    2e4a:	83 70       	andi	r24, 0x03	; 3
    2e4c:	80 64       	ori	r24, 0x40	; 64
    2e4e:	8c 93       	st	X, r24
#else
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif

  if (_tx_buffer_head == _tx_buffer_tail) {
    2e50:	93 8d       	ldd	r25, Z+27	; 0x1b
    2e52:	84 8d       	ldd	r24, Z+28	; 0x1c
    2e54:	98 13       	cpse	r25, r24
    2e56:	06 c0       	rjmp	.+12     	; 0x2e64 <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x42>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
    2e58:	02 88       	ldd	r0, Z+18	; 0x12
    2e5a:	f3 89       	ldd	r31, Z+19	; 0x13
    2e5c:	e0 2d       	mov	r30, r0
    2e5e:	80 81       	ld	r24, Z
    2e60:	8f 7d       	andi	r24, 0xDF	; 223
    2e62:	80 83       	st	Z, r24
    2e64:	08 95       	ret

00002e66 <_ZN14HardwareSerial5writeEh>:
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
    2e66:	ef 92       	push	r14
    2e68:	ff 92       	push	r15
    2e6a:	0f 93       	push	r16
    2e6c:	1f 93       	push	r17
    2e6e:	cf 93       	push	r28
    2e70:	df 93       	push	r29
    2e72:	ec 01       	movw	r28, r24
  _written = true;
    2e74:	81 e0       	ldi	r24, 0x01	; 1
    2e76:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    2e78:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2e7a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2e7c:	98 13       	cpse	r25, r24
    2e7e:	05 c0       	rjmp	.+10     	; 0x2e8a <_ZN14HardwareSerial5writeEh+0x24>
    2e80:	e8 89       	ldd	r30, Y+16	; 0x10
    2e82:	f9 89       	ldd	r31, Y+17	; 0x11
    2e84:	80 81       	ld	r24, Z
    2e86:	85 fd       	sbrc	r24, 5
    2e88:	26 c0       	rjmp	.+76     	; 0x2ed6 <_ZN14HardwareSerial5writeEh+0x70>
    2e8a:	f6 2e       	mov	r15, r22
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    2e8c:	0b 8d       	ldd	r16, Y+27	; 0x1b
    2e8e:	10 e0       	ldi	r17, 0x00	; 0
    2e90:	0f 5f       	subi	r16, 0xFF	; 255
    2e92:	1f 4f       	sbci	r17, 0xFF	; 255
    2e94:	0f 73       	andi	r16, 0x3F	; 63
    2e96:	11 27       	eor	r17, r17
    2e98:	e0 2e       	mov	r14, r16
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    2e9a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2e9c:	e8 12       	cpse	r14, r24
    2e9e:	0c c0       	rjmp	.+24     	; 0x2eb8 <_ZN14HardwareSerial5writeEh+0x52>
    if (bit_is_clear(SREG, SREG_I)) {
    2ea0:	0f b6       	in	r0, 0x3f	; 63
    2ea2:	07 fc       	sbrc	r0, 7
    2ea4:	fa cf       	rjmp	.-12     	; 0x2e9a <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    2ea6:	e8 89       	ldd	r30, Y+16	; 0x10
    2ea8:	f9 89       	ldd	r31, Y+17	; 0x11
    2eaa:	80 81       	ld	r24, Z
    2eac:	85 ff       	sbrs	r24, 5
    2eae:	f5 cf       	rjmp	.-22     	; 0x2e9a <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
    2eb0:	ce 01       	movw	r24, r28
    2eb2:	0e 94 11 17 	call	0x2e22	; 0x2e22 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    2eb6:	f1 cf       	rjmp	.-30     	; 0x2e9a <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    2eb8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2eba:	fe 01       	movw	r30, r28
    2ebc:	e8 0f       	add	r30, r24
    2ebe:	f1 1d       	adc	r31, r1
    2ec0:	e3 5a       	subi	r30, 0xA3	; 163
    2ec2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ec4:	f0 82       	st	Z, r15

  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    2ec6:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    2ec8:	f8 94       	cli
    _tx_buffer_head = i;
    2eca:	0b 8f       	std	Y+27, r16	; 0x1b
    sbi(*_ucsrb, UDRIE0);
    2ecc:	ea 89       	ldd	r30, Y+18	; 0x12
    2ece:	fb 89       	ldd	r31, Y+19	; 0x13
    2ed0:	80 81       	ld	r24, Z
    2ed2:	80 62       	ori	r24, 0x20	; 32
    2ed4:	0a c0       	rjmp	.+20     	; 0x2eea <_ZN14HardwareSerial5writeEh+0x84>
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    2ed6:	9f b7       	in	r25, 0x3f	; 63
    2ed8:	f8 94       	cli
      *_udr = c;
    2eda:	ee 89       	ldd	r30, Y+22	; 0x16
    2edc:	ff 89       	ldd	r31, Y+23	; 0x17
    2ede:	60 83       	st	Z, r22
#ifdef MPCM0
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    2ee0:	e8 89       	ldd	r30, Y+16	; 0x10
    2ee2:	f9 89       	ldd	r31, Y+17	; 0x11
    2ee4:	80 81       	ld	r24, Z
    2ee6:	83 70       	andi	r24, 0x03	; 3
    2ee8:	80 64       	ori	r24, 0x40	; 64
    2eea:	80 83       	st	Z, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    2eec:	9f bf       	out	0x3f, r25	; 63
    _tx_buffer_head = i;
    sbi(*_ucsrb, UDRIE0);
  }
  
  return 1;
}
    2eee:	81 e0       	ldi	r24, 0x01	; 1
    2ef0:	90 e0       	ldi	r25, 0x00	; 0
    2ef2:	df 91       	pop	r29
    2ef4:	cf 91       	pop	r28
    2ef6:	1f 91       	pop	r17
    2ef8:	0f 91       	pop	r16
    2efa:	ff 90       	pop	r15
    2efc:	ef 90       	pop	r14
    2efe:	08 95       	ret

00002f00 <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    2f00:	cf 93       	push	r28
    2f02:	df 93       	push	r29
    2f04:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    2f06:	88 8d       	ldd	r24, Y+24	; 0x18
    2f08:	88 23       	and	r24, r24
    2f0a:	c9 f0       	breq	.+50     	; 0x2f3e <_ZN14HardwareSerial5flushEv+0x3e>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    2f0c:	ea 89       	ldd	r30, Y+18	; 0x12
    2f0e:	fb 89       	ldd	r31, Y+19	; 0x13
    2f10:	80 81       	ld	r24, Z
    2f12:	85 fd       	sbrc	r24, 5
    2f14:	05 c0       	rjmp	.+10     	; 0x2f20 <_ZN14HardwareSerial5flushEv+0x20>
    2f16:	a8 89       	ldd	r26, Y+16	; 0x10
    2f18:	b9 89       	ldd	r27, Y+17	; 0x11
    2f1a:	8c 91       	ld	r24, X
    2f1c:	86 fd       	sbrc	r24, 6
    2f1e:	0f c0       	rjmp	.+30     	; 0x2f3e <_ZN14HardwareSerial5flushEv+0x3e>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    2f20:	0f b6       	in	r0, 0x3f	; 63
    2f22:	07 fc       	sbrc	r0, 7
    2f24:	f5 cf       	rjmp	.-22     	; 0x2f10 <_ZN14HardwareSerial5flushEv+0x10>
    2f26:	80 81       	ld	r24, Z
    2f28:	85 ff       	sbrs	r24, 5
    2f2a:	f2 cf       	rjmp	.-28     	; 0x2f10 <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
    2f2c:	a8 89       	ldd	r26, Y+16	; 0x10
    2f2e:	b9 89       	ldd	r27, Y+17	; 0x11
    2f30:	8c 91       	ld	r24, X
    2f32:	85 ff       	sbrs	r24, 5
    2f34:	ed cf       	rjmp	.-38     	; 0x2f10 <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
    2f36:	ce 01       	movw	r24, r28
    2f38:	0e 94 11 17 	call	0x2e22	; 0x2e22 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    2f3c:	e7 cf       	rjmp	.-50     	; 0x2f0c <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    2f3e:	df 91       	pop	r29
    2f40:	cf 91       	pop	r28
    2f42:	08 95       	ret

00002f44 <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
    2f44:	cf 92       	push	r12
    2f46:	df 92       	push	r13
    2f48:	ef 92       	push	r14
    2f4a:	ff 92       	push	r15
    2f4c:	1f 93       	push	r17
    2f4e:	cf 93       	push	r28
    2f50:	df 93       	push	r29
    2f52:	ec 01       	movw	r28, r24
    2f54:	6a 01       	movw	r12, r20
    2f56:	7b 01       	movw	r14, r22
    2f58:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    2f5a:	e8 89       	ldd	r30, Y+16	; 0x10
    2f5c:	f9 89       	ldd	r31, Y+17	; 0x11
    2f5e:	82 e0       	ldi	r24, 0x02	; 2
    2f60:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    2f62:	41 15       	cp	r20, r1
    2f64:	51 4e       	sbci	r21, 0xE1	; 225
    2f66:	61 05       	cpc	r22, r1
    2f68:	71 05       	cpc	r23, r1
    2f6a:	b1 f0       	breq	.+44     	; 0x2f98 <_ZN14HardwareSerial5beginEmh+0x54>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
    2f6c:	60 e0       	ldi	r22, 0x00	; 0
    2f6e:	79 e0       	ldi	r23, 0x09	; 9
    2f70:	8d e3       	ldi	r24, 0x3D	; 61
    2f72:	90 e0       	ldi	r25, 0x00	; 0
    2f74:	a7 01       	movw	r20, r14
    2f76:	96 01       	movw	r18, r12
    2f78:	0e 94 e2 30 	call	0x61c4	; 0x61c4 <__udivmodsi4>
    2f7c:	da 01       	movw	r26, r20
    2f7e:	c9 01       	movw	r24, r18
    2f80:	01 97       	sbiw	r24, 0x01	; 1
    2f82:	a1 09       	sbc	r26, r1
    2f84:	b1 09       	sbc	r27, r1
    2f86:	b6 95       	lsr	r27
    2f88:	a7 95       	ror	r26
    2f8a:	97 95       	ror	r25
    2f8c:	87 95       	ror	r24
    2f8e:	9c 01       	movw	r18, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    2f90:	21 15       	cp	r18, r1
    2f92:	80 e1       	ldi	r24, 0x10	; 16
    2f94:	38 07       	cpc	r19, r24
    2f96:	a8 f0       	brcs	.+42     	; 0x2fc2 <_ZN14HardwareSerial5beginEmh+0x7e>
  {
    *_ucsra = 0;
    2f98:	e8 89       	ldd	r30, Y+16	; 0x10
    2f9a:	f9 89       	ldd	r31, Y+17	; 0x11
    2f9c:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
    2f9e:	60 e8       	ldi	r22, 0x80	; 128
    2fa0:	74 e8       	ldi	r23, 0x84	; 132
    2fa2:	8e e1       	ldi	r24, 0x1E	; 30
    2fa4:	90 e0       	ldi	r25, 0x00	; 0
    2fa6:	a7 01       	movw	r20, r14
    2fa8:	96 01       	movw	r18, r12
    2faa:	0e 94 e2 30 	call	0x61c4	; 0x61c4 <__udivmodsi4>
    2fae:	da 01       	movw	r26, r20
    2fb0:	c9 01       	movw	r24, r18
    2fb2:	01 97       	sbiw	r24, 0x01	; 1
    2fb4:	a1 09       	sbc	r26, r1
    2fb6:	b1 09       	sbc	r27, r1
    2fb8:	b6 95       	lsr	r27
    2fba:	a7 95       	ror	r26
    2fbc:	97 95       	ror	r25
    2fbe:	87 95       	ror	r24
    2fc0:	9c 01       	movw	r18, r24
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    2fc2:	ec 85       	ldd	r30, Y+12	; 0x0c
    2fc4:	fd 85       	ldd	r31, Y+13	; 0x0d
    2fc6:	30 83       	st	Z, r19
  *_ubrrl = baud_setting;
    2fc8:	ee 85       	ldd	r30, Y+14	; 0x0e
    2fca:	ff 85       	ldd	r31, Y+15	; 0x0f
    2fcc:	20 83       	st	Z, r18

  _written = false;
    2fce:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    2fd0:	ec 89       	ldd	r30, Y+20	; 0x14
    2fd2:	fd 89       	ldd	r31, Y+21	; 0x15
    2fd4:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
    2fd6:	ea 89       	ldd	r30, Y+18	; 0x12
    2fd8:	fb 89       	ldd	r31, Y+19	; 0x13
    2fda:	80 81       	ld	r24, Z
    2fdc:	80 61       	ori	r24, 0x10	; 16
    2fde:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
    2fe0:	ea 89       	ldd	r30, Y+18	; 0x12
    2fe2:	fb 89       	ldd	r31, Y+19	; 0x13
    2fe4:	80 81       	ld	r24, Z
    2fe6:	88 60       	ori	r24, 0x08	; 8
    2fe8:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
    2fea:	ea 89       	ldd	r30, Y+18	; 0x12
    2fec:	fb 89       	ldd	r31, Y+19	; 0x13
    2fee:	80 81       	ld	r24, Z
    2ff0:	80 68       	ori	r24, 0x80	; 128
    2ff2:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
    2ff4:	ea 89       	ldd	r30, Y+18	; 0x12
    2ff6:	fb 89       	ldd	r31, Y+19	; 0x13
    2ff8:	80 81       	ld	r24, Z
    2ffa:	8f 7d       	andi	r24, 0xDF	; 223
    2ffc:	80 83       	st	Z, r24
}
    2ffe:	df 91       	pop	r29
    3000:	cf 91       	pop	r28
    3002:	1f 91       	pop	r17
    3004:	ff 90       	pop	r15
    3006:	ef 90       	pop	r14
    3008:	df 90       	pop	r13
    300a:	cf 90       	pop	r12
    300c:	08 95       	ret

0000300e <_ZN5Print17availableForWriteEv>:
    size_t println(unsigned long, int = DEC);
    size_t println(double, int = 2);
    size_t println(const Printable&);
    size_t println(void);

    virtual void flush() { /* Empty implementation for backward compatibility */ }
    300e:	80 e0       	ldi	r24, 0x00	; 0
    3010:	90 e0       	ldi	r25, 0x00	; 0
    3012:	08 95       	ret

00003014 <__vector_18>:
#elif defined(USART_RXC_vect)
  ISR(USART_RXC_vect) // ATmega8
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    3014:	1f 92       	push	r1
    3016:	0f 92       	push	r0
    3018:	0f b6       	in	r0, 0x3f	; 63
    301a:	0f 92       	push	r0
    301c:	11 24       	eor	r1, r1
    301e:	2f 93       	push	r18
    3020:	8f 93       	push	r24
    3022:	9f 93       	push	r25
    3024:	ef 93       	push	r30
    3026:	ff 93       	push	r31

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    3028:	e0 91 95 03 	lds	r30, 0x0395	; 0x800395 <Serial+0x10>
    302c:	f0 91 96 03 	lds	r31, 0x0396	; 0x800396 <Serial+0x11>
    3030:	80 81       	ld	r24, Z
    3032:	e0 91 9b 03 	lds	r30, 0x039B	; 0x80039b <Serial+0x16>
    3036:	f0 91 9c 03 	lds	r31, 0x039C	; 0x80039c <Serial+0x17>
    303a:	82 fd       	sbrc	r24, 2
    303c:	12 c0       	rjmp	.+36     	; 0x3062 <__vector_18+0x4e>
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    303e:	90 81       	ld	r25, Z
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    3040:	80 91 9e 03 	lds	r24, 0x039E	; 0x80039e <Serial+0x19>
    3044:	8f 5f       	subi	r24, 0xFF	; 255
    3046:	8f 73       	andi	r24, 0x3F	; 63

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    3048:	20 91 9f 03 	lds	r18, 0x039F	; 0x80039f <Serial+0x1a>
    304c:	82 17       	cp	r24, r18
    304e:	51 f0       	breq	.+20     	; 0x3064 <__vector_18+0x50>
      _rx_buffer[_rx_buffer_head] = c;
    3050:	e0 91 9e 03 	lds	r30, 0x039E	; 0x80039e <Serial+0x19>
    3054:	f0 e0       	ldi	r31, 0x00	; 0
    3056:	eb 57       	subi	r30, 0x7B	; 123
    3058:	fc 4f       	sbci	r31, 0xFC	; 252
    305a:	95 8f       	std	Z+29, r25	; 0x1d
      _rx_buffer_head = i;
    305c:	80 93 9e 03 	sts	0x039E, r24	; 0x80039e <Serial+0x19>
    3060:	01 c0       	rjmp	.+2      	; 0x3064 <__vector_18+0x50>
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    3062:	80 81       	ld	r24, Z
    Serial._rx_complete_irq();
  }
    3064:	ff 91       	pop	r31
    3066:	ef 91       	pop	r30
    3068:	9f 91       	pop	r25
    306a:	8f 91       	pop	r24
    306c:	2f 91       	pop	r18
    306e:	0f 90       	pop	r0
    3070:	0f be       	out	0x3f, r0	; 63
    3072:	0f 90       	pop	r0
    3074:	1f 90       	pop	r1
    3076:	18 95       	reti

00003078 <__vector_19>:
#elif defined(USART_UDRE_vect)
ISR(USART_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    3078:	1f 92       	push	r1
    307a:	0f 92       	push	r0
    307c:	0f b6       	in	r0, 0x3f	; 63
    307e:	0f 92       	push	r0
    3080:	11 24       	eor	r1, r1
    3082:	2f 93       	push	r18
    3084:	3f 93       	push	r19
    3086:	4f 93       	push	r20
    3088:	5f 93       	push	r21
    308a:	6f 93       	push	r22
    308c:	7f 93       	push	r23
    308e:	8f 93       	push	r24
    3090:	9f 93       	push	r25
    3092:	af 93       	push	r26
    3094:	bf 93       	push	r27
    3096:	ef 93       	push	r30
    3098:	ff 93       	push	r31
  Serial._tx_udr_empty_irq();
    309a:	85 e8       	ldi	r24, 0x85	; 133
    309c:	93 e0       	ldi	r25, 0x03	; 3
    309e:	0e 94 11 17 	call	0x2e22	; 0x2e22 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
}
    30a2:	ff 91       	pop	r31
    30a4:	ef 91       	pop	r30
    30a6:	bf 91       	pop	r27
    30a8:	af 91       	pop	r26
    30aa:	9f 91       	pop	r25
    30ac:	8f 91       	pop	r24
    30ae:	7f 91       	pop	r23
    30b0:	6f 91       	pop	r22
    30b2:	5f 91       	pop	r21
    30b4:	4f 91       	pop	r20
    30b6:	3f 91       	pop	r19
    30b8:	2f 91       	pop	r18
    30ba:	0f 90       	pop	r0
    30bc:	0f be       	out	0x3f, r0	; 63
    30be:	0f 90       	pop	r0
    30c0:	1f 90       	pop	r1
    30c2:	18 95       	reti

000030c4 <_Z17Serial0_availablev>:
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
    30c4:	85 e8       	ldi	r24, 0x85	; 133
    30c6:	93 e0       	ldi	r25, 0x03	; 3
    30c8:	0e 94 c6 16 	call	0x2d8c	; 0x2d8c <_ZN14HardwareSerial9availableEv>
    30cc:	21 e0       	ldi	r18, 0x01	; 1
    30ce:	89 2b       	or	r24, r25
    30d0:	09 f4       	brne	.+2      	; 0x30d4 <_Z17Serial0_availablev+0x10>
    30d2:	20 e0       	ldi	r18, 0x00	; 0
}
    30d4:	82 2f       	mov	r24, r18
    30d6:	08 95       	ret

000030d8 <_GLOBAL__sub_I___vector_18>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    30d8:	e5 e8       	ldi	r30, 0x85	; 133
    30da:	f3 e0       	ldi	r31, 0x03	; 3
    30dc:	13 82       	std	Z+3, r1	; 0x03
    30de:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    30e0:	88 ee       	ldi	r24, 0xE8	; 232
    30e2:	93 e0       	ldi	r25, 0x03	; 3
    30e4:	a0 e0       	ldi	r26, 0x00	; 0
    30e6:	b0 e0       	ldi	r27, 0x00	; 0
    30e8:	84 83       	std	Z+4, r24	; 0x04
    30ea:	95 83       	std	Z+5, r25	; 0x05
    30ec:	a6 83       	std	Z+6, r26	; 0x06
    30ee:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    30f0:	83 e9       	ldi	r24, 0x93	; 147
    30f2:	91 e0       	ldi	r25, 0x01	; 1
    30f4:	91 83       	std	Z+1, r25	; 0x01
    30f6:	80 83       	st	Z, r24
    30f8:	85 ec       	ldi	r24, 0xC5	; 197
    30fa:	90 e0       	ldi	r25, 0x00	; 0
    30fc:	95 87       	std	Z+13, r25	; 0x0d
    30fe:	84 87       	std	Z+12, r24	; 0x0c
    3100:	84 ec       	ldi	r24, 0xC4	; 196
    3102:	90 e0       	ldi	r25, 0x00	; 0
    3104:	97 87       	std	Z+15, r25	; 0x0f
    3106:	86 87       	std	Z+14, r24	; 0x0e
    3108:	80 ec       	ldi	r24, 0xC0	; 192
    310a:	90 e0       	ldi	r25, 0x00	; 0
    310c:	91 8b       	std	Z+17, r25	; 0x11
    310e:	80 8b       	std	Z+16, r24	; 0x10
    3110:	81 ec       	ldi	r24, 0xC1	; 193
    3112:	90 e0       	ldi	r25, 0x00	; 0
    3114:	93 8b       	std	Z+19, r25	; 0x13
    3116:	82 8b       	std	Z+18, r24	; 0x12
    3118:	82 ec       	ldi	r24, 0xC2	; 194
    311a:	90 e0       	ldi	r25, 0x00	; 0
    311c:	95 8b       	std	Z+21, r25	; 0x15
    311e:	84 8b       	std	Z+20, r24	; 0x14
    3120:	86 ec       	ldi	r24, 0xC6	; 198
    3122:	90 e0       	ldi	r25, 0x00	; 0
    3124:	97 8b       	std	Z+23, r25	; 0x17
    3126:	86 8b       	std	Z+22, r24	; 0x16
    3128:	11 8e       	std	Z+25, r1	; 0x19
    312a:	12 8e       	std	Z+26, r1	; 0x1a
    312c:	13 8e       	std	Z+27, r1	; 0x1b
    312e:	14 8e       	std	Z+28, r1	; 0x1c
    3130:	08 95       	ret

00003132 <initVariant>:
    3132:	08 95       	ret

00003134 <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
    3134:	0e 94 eb 1a 	call	0x35d6	; 0x35d6 <init>

	initVariant();
    3138:	0e 94 99 18 	call	0x3132	; 0x3132 <initVariant>

#if defined(USBCON)
	USBDevice.attach();
#endif
	
	setup();
    313c:	0e 94 aa 14 	call	0x2954	; 0x2954 <setup>
    
	for (;;) {
		loop();
		if (serialEventRun) serialEventRun();
    3140:	c3 e0       	ldi	r28, 0x03	; 3
    3142:	d7 e1       	ldi	r29, 0x17	; 23
#endif
	
	setup();
    
	for (;;) {
		loop();
    3144:	0e 94 59 10 	call	0x20b2	; 0x20b2 <loop>
		if (serialEventRun) serialEventRun();
    3148:	20 97       	sbiw	r28, 0x00	; 0
    314a:	e1 f3       	breq	.-8      	; 0x3144 <main+0x10>
    314c:	0e 94 03 17 	call	0x2e06	; 0x2e06 <_Z14serialEventRunv>
    3150:	f9 cf       	rjmp	.-14     	; 0x3144 <main+0x10>

00003152 <_ZN5Print5writeEPKhj>:
size_t Print::println(long num, int base)
{
  size_t n = print(num, base);
  n += println();
  return n;
}
    3152:	cf 92       	push	r12
    3154:	df 92       	push	r13
    3156:	ef 92       	push	r14
    3158:	ff 92       	push	r15
    315a:	0f 93       	push	r16
    315c:	1f 93       	push	r17
    315e:	cf 93       	push	r28
    3160:	df 93       	push	r29
    3162:	6c 01       	movw	r12, r24
    3164:	7a 01       	movw	r14, r20
    3166:	8b 01       	movw	r16, r22
    3168:	c0 e0       	ldi	r28, 0x00	; 0
    316a:	d0 e0       	ldi	r29, 0x00	; 0
    316c:	ce 15       	cp	r28, r14
    316e:	df 05       	cpc	r29, r15
    3170:	81 f0       	breq	.+32     	; 0x3192 <_ZN5Print5writeEPKhj+0x40>
    3172:	d8 01       	movw	r26, r16
    3174:	6d 91       	ld	r22, X+
    3176:	8d 01       	movw	r16, r26
    3178:	d6 01       	movw	r26, r12
    317a:	ed 91       	ld	r30, X+
    317c:	fc 91       	ld	r31, X
    317e:	01 90       	ld	r0, Z+
    3180:	f0 81       	ld	r31, Z
    3182:	e0 2d       	mov	r30, r0
    3184:	c6 01       	movw	r24, r12
    3186:	09 95       	icall
    3188:	89 2b       	or	r24, r25
    318a:	11 f0       	breq	.+4      	; 0x3190 <_ZN5Print5writeEPKhj+0x3e>
    318c:	21 96       	adiw	r28, 0x01	; 1
    318e:	ee cf       	rjmp	.-36     	; 0x316c <_ZN5Print5writeEPKhj+0x1a>
    3190:	7e 01       	movw	r14, r28
    3192:	c7 01       	movw	r24, r14
    3194:	df 91       	pop	r29
    3196:	cf 91       	pop	r28
    3198:	1f 91       	pop	r17
    319a:	0f 91       	pop	r16
    319c:	ff 90       	pop	r15
    319e:	ef 90       	pop	r14
    31a0:	df 90       	pop	r13
    31a2:	cf 90       	pop	r12
    31a4:	08 95       	ret

000031a6 <_ZN5Print5writeEPKc>:
    31a6:	61 15       	cp	r22, r1
    31a8:	71 05       	cpc	r23, r1
    31aa:	79 f0       	breq	.+30     	; 0x31ca <_ZN5Print5writeEPKc+0x24>
    31ac:	fb 01       	movw	r30, r22
    31ae:	01 90       	ld	r0, Z+
    31b0:	00 20       	and	r0, r0
    31b2:	e9 f7       	brne	.-6      	; 0x31ae <_ZN5Print5writeEPKc+0x8>
    31b4:	31 97       	sbiw	r30, 0x01	; 1
    31b6:	af 01       	movw	r20, r30
    31b8:	46 1b       	sub	r20, r22
    31ba:	57 0b       	sbc	r21, r23
    31bc:	dc 01       	movw	r26, r24
    31be:	ed 91       	ld	r30, X+
    31c0:	fc 91       	ld	r31, X
    31c2:	02 80       	ldd	r0, Z+2	; 0x02
    31c4:	f3 81       	ldd	r31, Z+3	; 0x03
    31c6:	e0 2d       	mov	r30, r0
    31c8:	09 94       	ijmp
    31ca:	80 e0       	ldi	r24, 0x00	; 0
    31cc:	90 e0       	ldi	r25, 0x00	; 0
    31ce:	08 95       	ret

000031d0 <_ZN5Print5printEPKc>:
    31d0:	0c 94 d3 18 	jmp	0x31a6	; 0x31a6 <_ZN5Print5writeEPKc>

000031d4 <_ZN5Print5printEc>:
    31d4:	dc 01       	movw	r26, r24
    31d6:	ed 91       	ld	r30, X+
    31d8:	fc 91       	ld	r31, X
    31da:	01 90       	ld	r0, Z+
    31dc:	f0 81       	ld	r31, Z
    31de:	e0 2d       	mov	r30, r0
    31e0:	09 94       	ijmp

000031e2 <_ZN5Print7printlnEv>:
    31e2:	61 ea       	ldi	r22, 0xA1	; 161
    31e4:	71 e0       	ldi	r23, 0x01	; 1
    31e6:	0c 94 d3 18 	jmp	0x31a6	; 0x31a6 <_ZN5Print5writeEPKc>

000031ea <_ZN5Print7printlnEPKc>:
    31ea:	0f 93       	push	r16
    31ec:	1f 93       	push	r17
    31ee:	cf 93       	push	r28
    31f0:	df 93       	push	r29
    31f2:	ec 01       	movw	r28, r24
    31f4:	0e 94 d3 18 	call	0x31a6	; 0x31a6 <_ZN5Print5writeEPKc>
    31f8:	8c 01       	movw	r16, r24
    31fa:	ce 01       	movw	r24, r28
    31fc:	0e 94 f1 18 	call	0x31e2	; 0x31e2 <_ZN5Print7printlnEv>
    3200:	80 0f       	add	r24, r16
    3202:	91 1f       	adc	r25, r17
    3204:	df 91       	pop	r29
    3206:	cf 91       	pop	r28
    3208:	1f 91       	pop	r17
    320a:	0f 91       	pop	r16
    320c:	08 95       	ret

0000320e <_ZN5Print11printNumberEmh>:
    320e:	8f 92       	push	r8
    3210:	9f 92       	push	r9
    3212:	af 92       	push	r10
    3214:	bf 92       	push	r11
    3216:	ef 92       	push	r14
    3218:	ff 92       	push	r15
    321a:	0f 93       	push	r16
    321c:	1f 93       	push	r17
    321e:	cf 93       	push	r28
    3220:	df 93       	push	r29
    3222:	cd b7       	in	r28, 0x3d	; 61
    3224:	de b7       	in	r29, 0x3e	; 62
    3226:	a1 97       	sbiw	r28, 0x21	; 33
    3228:	0f b6       	in	r0, 0x3f	; 63
    322a:	f8 94       	cli
    322c:	de bf       	out	0x3e, r29	; 62
    322e:	0f be       	out	0x3f, r0	; 63
    3230:	cd bf       	out	0x3d, r28	; 61
    3232:	7c 01       	movw	r14, r24
    3234:	fa 01       	movw	r30, r20
    3236:	cb 01       	movw	r24, r22
    3238:	19 a2       	std	Y+33, r1	; 0x21
    323a:	22 30       	cpi	r18, 0x02	; 2
    323c:	08 f4       	brcc	.+2      	; 0x3240 <_ZN5Print11printNumberEmh+0x32>
    323e:	2a e0       	ldi	r18, 0x0A	; 10
    3240:	8e 01       	movw	r16, r28
    3242:	0f 5d       	subi	r16, 0xDF	; 223
    3244:	1f 4f       	sbci	r17, 0xFF	; 255
    3246:	82 2e       	mov	r8, r18
    3248:	91 2c       	mov	r9, r1
    324a:	a1 2c       	mov	r10, r1
    324c:	b1 2c       	mov	r11, r1
    324e:	bf 01       	movw	r22, r30
    3250:	a5 01       	movw	r20, r10
    3252:	94 01       	movw	r18, r8
    3254:	0e 94 e2 30 	call	0x61c4	; 0x61c4 <__udivmodsi4>
    3258:	f9 01       	movw	r30, r18
    325a:	ca 01       	movw	r24, r20
    325c:	01 50       	subi	r16, 0x01	; 1
    325e:	11 09       	sbc	r17, r1
    3260:	6a 30       	cpi	r22, 0x0A	; 10
    3262:	10 f4       	brcc	.+4      	; 0x3268 <_ZN5Print11printNumberEmh+0x5a>
    3264:	60 5d       	subi	r22, 0xD0	; 208
    3266:	01 c0       	rjmp	.+2      	; 0x326a <_ZN5Print11printNumberEmh+0x5c>
    3268:	69 5c       	subi	r22, 0xC9	; 201
    326a:	d8 01       	movw	r26, r16
    326c:	6c 93       	st	X, r22
    326e:	23 2b       	or	r18, r19
    3270:	24 2b       	or	r18, r20
    3272:	25 2b       	or	r18, r21
    3274:	61 f7       	brne	.-40     	; 0x324e <_ZN5Print11printNumberEmh+0x40>
    3276:	b8 01       	movw	r22, r16
    3278:	c7 01       	movw	r24, r14
    327a:	0e 94 d3 18 	call	0x31a6	; 0x31a6 <_ZN5Print5writeEPKc>
    327e:	a1 96       	adiw	r28, 0x21	; 33
    3280:	0f b6       	in	r0, 0x3f	; 63
    3282:	f8 94       	cli
    3284:	de bf       	out	0x3e, r29	; 62
    3286:	0f be       	out	0x3f, r0	; 63
    3288:	cd bf       	out	0x3d, r28	; 61
    328a:	df 91       	pop	r29
    328c:	cf 91       	pop	r28
    328e:	1f 91       	pop	r17
    3290:	0f 91       	pop	r16
    3292:	ff 90       	pop	r15
    3294:	ef 90       	pop	r14
    3296:	bf 90       	pop	r11
    3298:	af 90       	pop	r10
    329a:	9f 90       	pop	r9
    329c:	8f 90       	pop	r8
    329e:	08 95       	ret

000032a0 <_ZN5Print5printEmi>:
    32a0:	21 15       	cp	r18, r1
    32a2:	31 05       	cpc	r19, r1
    32a4:	41 f4       	brne	.+16     	; 0x32b6 <_ZN5Print5printEmi+0x16>
    32a6:	dc 01       	movw	r26, r24
    32a8:	ed 91       	ld	r30, X+
    32aa:	fc 91       	ld	r31, X
    32ac:	01 90       	ld	r0, Z+
    32ae:	f0 81       	ld	r31, Z
    32b0:	e0 2d       	mov	r30, r0
    32b2:	64 2f       	mov	r22, r20
    32b4:	09 94       	ijmp
    32b6:	0c 94 07 19 	jmp	0x320e	; 0x320e <_ZN5Print11printNumberEmh>

000032ba <_ZN5Print5printEji>:
    32ba:	9a 01       	movw	r18, r20
    32bc:	ab 01       	movw	r20, r22
    32be:	60 e0       	ldi	r22, 0x00	; 0
    32c0:	70 e0       	ldi	r23, 0x00	; 0
    32c2:	0c 94 50 19 	jmp	0x32a0	; 0x32a0 <_ZN5Print5printEmi>

000032c6 <_ZN5Print10printFloatEdh>:

  return write(str);
}

size_t Print::printFloat(double number, uint8_t digits) 
{ 
    32c6:	7f 92       	push	r7
    32c8:	8f 92       	push	r8
    32ca:	9f 92       	push	r9
    32cc:	af 92       	push	r10
    32ce:	bf 92       	push	r11
    32d0:	cf 92       	push	r12
    32d2:	df 92       	push	r13
    32d4:	ef 92       	push	r14
    32d6:	ff 92       	push	r15
    32d8:	0f 93       	push	r16
    32da:	1f 93       	push	r17
    32dc:	cf 93       	push	r28
    32de:	df 93       	push	r29
    32e0:	8c 01       	movw	r16, r24
    32e2:	6a 01       	movw	r12, r20
    32e4:	7b 01       	movw	r14, r22
    32e6:	72 2e       	mov	r7, r18
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
    32e8:	9a 01       	movw	r18, r20
    32ea:	ab 01       	movw	r20, r22
    32ec:	c7 01       	movw	r24, r14
    32ee:	b6 01       	movw	r22, r12
    32f0:	0e 94 b9 30 	call	0x6172	; 0x6172 <__unordsf2>
    32f4:	88 23       	and	r24, r24
    32f6:	19 f0       	breq	.+6      	; 0x32fe <_ZN5Print10printFloatEdh+0x38>
  return write(s.c_str(), s.length());
}

size_t Print::print(const char str[])
{
  return write(str);
    32f8:	64 ea       	ldi	r22, 0xA4	; 164
    32fa:	71 e0       	ldi	r23, 0x01	; 1
    32fc:	27 c0       	rjmp	.+78     	; 0x334c <_ZN5Print10printFloatEdh+0x86>
size_t Print::printFloat(double number, uint8_t digits) 
{ 
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
  if (isinf(number)) return print("inf");
    32fe:	46 01       	movw	r8, r12
    3300:	57 01       	movw	r10, r14
    3302:	e8 94       	clt
    3304:	b7 f8       	bld	r11, 7
    3306:	2f ef       	ldi	r18, 0xFF	; 255
    3308:	3f ef       	ldi	r19, 0xFF	; 255
    330a:	4f e7       	ldi	r20, 0x7F	; 127
    330c:	5f e7       	ldi	r21, 0x7F	; 127
    330e:	c5 01       	movw	r24, r10
    3310:	b4 01       	movw	r22, r8
    3312:	0e 94 b9 30 	call	0x6172	; 0x6172 <__unordsf2>
    3316:	81 11       	cpse	r24, r1
    3318:	0d c0       	rjmp	.+26     	; 0x3334 <_ZN5Print10printFloatEdh+0x6e>
    331a:	2f ef       	ldi	r18, 0xFF	; 255
    331c:	3f ef       	ldi	r19, 0xFF	; 255
    331e:	4f e7       	ldi	r20, 0x7F	; 127
    3320:	5f e7       	ldi	r21, 0x7F	; 127
    3322:	c5 01       	movw	r24, r10
    3324:	b4 01       	movw	r22, r8
    3326:	0e 94 47 30 	call	0x608e	; 0x608e <__cmpsf2>
    332a:	18 16       	cp	r1, r24
    332c:	1c f4       	brge	.+6      	; 0x3334 <_ZN5Print10printFloatEdh+0x6e>
  return write(s.c_str(), s.length());
}

size_t Print::print(const char str[])
{
  return write(str);
    332e:	68 ea       	ldi	r22, 0xA8	; 168
    3330:	71 e0       	ldi	r23, 0x01	; 1
    3332:	0c c0       	rjmp	.+24     	; 0x334c <_ZN5Print10printFloatEdh+0x86>
{ 
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
  if (isinf(number)) return print("inf");
  if (number > 4294967040.0) return print ("ovf");  // constant determined empirically
    3334:	2f ef       	ldi	r18, 0xFF	; 255
    3336:	3f ef       	ldi	r19, 0xFF	; 255
    3338:	4f e7       	ldi	r20, 0x7F	; 127
    333a:	5f e4       	ldi	r21, 0x4F	; 79
    333c:	c7 01       	movw	r24, r14
    333e:	b6 01       	movw	r22, r12
    3340:	0e 94 9d 16 	call	0x2d3a	; 0x2d3a <__gesf2>
    3344:	18 16       	cp	r1, r24
    3346:	94 f4       	brge	.+36     	; 0x336c <_ZN5Print10printFloatEdh+0xa6>
  return write(s.c_str(), s.length());
}

size_t Print::print(const char str[])
{
  return write(str);
    3348:	6c ea       	ldi	r22, 0xAC	; 172
    334a:	71 e0       	ldi	r23, 0x01	; 1
    334c:	c8 01       	movw	r24, r16
    n += print(toPrint);
    remainder -= toPrint; 
  } 
  
  return n;
}
    334e:	df 91       	pop	r29
    3350:	cf 91       	pop	r28
    3352:	1f 91       	pop	r17
    3354:	0f 91       	pop	r16
    3356:	ff 90       	pop	r15
    3358:	ef 90       	pop	r14
    335a:	df 90       	pop	r13
    335c:	cf 90       	pop	r12
    335e:	bf 90       	pop	r11
    3360:	af 90       	pop	r10
    3362:	9f 90       	pop	r9
    3364:	8f 90       	pop	r8
    3366:	7f 90       	pop	r7
  return write(s.c_str(), s.length());
}

size_t Print::print(const char str[])
{
  return write(str);
    3368:	0c 94 d3 18 	jmp	0x31a6	; 0x31a6 <_ZN5Print5writeEPKc>
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
  if (isinf(number)) return print("inf");
  if (number > 4294967040.0) return print ("ovf");  // constant determined empirically
  if (number <-4294967040.0) return print ("ovf");  // constant determined empirically
    336c:	2f ef       	ldi	r18, 0xFF	; 255
    336e:	3f ef       	ldi	r19, 0xFF	; 255
    3370:	4f e7       	ldi	r20, 0x7F	; 127
    3372:	5f ec       	ldi	r21, 0xCF	; 207
    3374:	c7 01       	movw	r24, r14
    3376:	b6 01       	movw	r22, r12
    3378:	0e 94 47 30 	call	0x608e	; 0x608e <__cmpsf2>
    337c:	87 fd       	sbrc	r24, 7
    337e:	e4 cf       	rjmp	.-56     	; 0x3348 <_ZN5Print10printFloatEdh+0x82>
  
  // Handle negative numbers
  if (number < 0.0)
    3380:	20 e0       	ldi	r18, 0x00	; 0
    3382:	30 e0       	ldi	r19, 0x00	; 0
    3384:	a9 01       	movw	r20, r18
    3386:	c7 01       	movw	r24, r14
    3388:	b6 01       	movw	r22, r12
    338a:	0e 94 47 30 	call	0x608e	; 0x608e <__cmpsf2>
    338e:	87 ff       	sbrs	r24, 7
    3390:	0a c0       	rjmp	.+20     	; 0x33a6 <_ZN5Print10printFloatEdh+0xe0>
  {
     n += print('-');
    3392:	6d e2       	ldi	r22, 0x2D	; 45
    3394:	c8 01       	movw	r24, r16
    3396:	0e 94 ea 18 	call	0x31d4	; 0x31d4 <_ZN5Print5printEc>
    339a:	ec 01       	movw	r28, r24
     number = -number;
    339c:	f7 fa       	bst	r15, 7
    339e:	f0 94       	com	r15
    33a0:	f7 f8       	bld	r15, 7
    33a2:	f0 94       	com	r15
    33a4:	02 c0       	rjmp	.+4      	; 0x33aa <_ZN5Print10printFloatEdh+0xe4>
  return write(str);
}

size_t Print::printFloat(double number, uint8_t digits) 
{ 
  size_t n = 0;
    33a6:	c0 e0       	ldi	r28, 0x00	; 0
    33a8:	d0 e0       	ldi	r29, 0x00	; 0
     number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
  for (uint8_t i=0; i<digits; ++i)
    33aa:	b1 2c       	mov	r11, r1
     n += print('-');
     number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
    33ac:	60 e0       	ldi	r22, 0x00	; 0
    33ae:	70 e0       	ldi	r23, 0x00	; 0
    33b0:	80 e0       	ldi	r24, 0x00	; 0
    33b2:	9f e3       	ldi	r25, 0x3F	; 63
  for (uint8_t i=0; i<digits; ++i)
    33b4:	7b 14       	cp	r7, r11
    33b6:	41 f0       	breq	.+16     	; 0x33c8 <_ZN5Print10printFloatEdh+0x102>
    rounding /= 10.0;
    33b8:	20 e0       	ldi	r18, 0x00	; 0
    33ba:	30 e0       	ldi	r19, 0x00	; 0
    33bc:	40 e2       	ldi	r20, 0x20	; 32
    33be:	51 e4       	ldi	r21, 0x41	; 65
    33c0:	0e 94 67 15 	call	0x2ace	; 0x2ace <__divsf3>
     number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
  for (uint8_t i=0; i<digits; ++i)
    33c4:	b3 94       	inc	r11
    33c6:	f6 cf       	rjmp	.-20     	; 0x33b4 <_ZN5Print10printFloatEdh+0xee>
    rounding /= 10.0;
  
  number += rounding;
    33c8:	a7 01       	movw	r20, r14
    33ca:	96 01       	movw	r18, r12
    33cc:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <__addsf3>
    33d0:	6b 01       	movw	r12, r22
    33d2:	7c 01       	movw	r14, r24

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
    33d4:	0e 94 e0 15 	call	0x2bc0	; 0x2bc0 <__fixunssfsi>
    33d8:	4b 01       	movw	r8, r22
    33da:	5c 01       	movw	r10, r24
}

size_t Print::print(unsigned long n, int base)
{
  if (base == 0) return write(n);
  else return printNumber(n, base);
    33dc:	2a e0       	ldi	r18, 0x0A	; 10
    33de:	ab 01       	movw	r20, r22
    33e0:	bc 01       	movw	r22, r24
    33e2:	c8 01       	movw	r24, r16
    33e4:	0e 94 07 19 	call	0x320e	; 0x320e <_ZN5Print11printNumberEmh>
  number += rounding;

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
  double remainder = number - (double)int_part;
  n += print(int_part);
    33e8:	c8 0f       	add	r28, r24
    33ea:	d9 1f       	adc	r29, r25

  // Print the decimal point, but only if there are digits beyond
  if (digits > 0) {
    33ec:	77 20       	and	r7, r7
    33ee:	b9 f1       	breq	.+110    	; 0x345e <_ZN5Print10printFloatEdh+0x198>
  
  number += rounding;

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
  double remainder = number - (double)int_part;
    33f0:	c5 01       	movw	r24, r10
    33f2:	b4 01       	movw	r22, r8
    33f4:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__floatunsisf>
    33f8:	9b 01       	movw	r18, r22
    33fa:	ac 01       	movw	r20, r24
    33fc:	c7 01       	movw	r24, r14
    33fe:	b6 01       	movw	r22, r12
    3400:	0e 94 fa 14 	call	0x29f4	; 0x29f4 <__subsf3>
    3404:	6b 01       	movw	r12, r22
    3406:	7c 01       	movw	r14, r24
  n += print(int_part);

  // Print the decimal point, but only if there are digits beyond
  if (digits > 0) {
    n += print('.'); 
    3408:	6e e2       	ldi	r22, 0x2E	; 46
    340a:	c8 01       	movw	r24, r16
    340c:	0e 94 ea 18 	call	0x31d4	; 0x31d4 <_ZN5Print5printEc>
    3410:	c8 0f       	add	r28, r24
    3412:	d9 1f       	adc	r29, r25
  }

  // Extract digits from the remainder one at a time
  while (digits-- > 0)
  {
    remainder *= 10.0;
    3414:	20 e0       	ldi	r18, 0x00	; 0
    3416:	30 e0       	ldi	r19, 0x00	; 0
    3418:	40 e2       	ldi	r20, 0x20	; 32
    341a:	51 e4       	ldi	r21, 0x41	; 65
    341c:	c7 01       	movw	r24, r14
    341e:	b6 01       	movw	r22, r12
    3420:	0e 94 4c 30 	call	0x6098	; 0x6098 <__mulsf3>
    3424:	4b 01       	movw	r8, r22
    3426:	5c 01       	movw	r10, r24
    unsigned int toPrint = (unsigned int)(remainder);
    3428:	0e 94 e0 15 	call	0x2bc0	; 0x2bc0 <__fixunssfsi>
    342c:	6b 01       	movw	r12, r22
    342e:	7c 01       	movw	r14, r24
    n += print(toPrint);
    3430:	4a e0       	ldi	r20, 0x0A	; 10
    3432:	50 e0       	ldi	r21, 0x00	; 0
    3434:	c8 01       	movw	r24, r16
    3436:	0e 94 5d 19 	call	0x32ba	; 0x32ba <_ZN5Print5printEji>
    343a:	c8 0f       	add	r28, r24
    343c:	d9 1f       	adc	r29, r25
    remainder -= toPrint; 
    343e:	b6 01       	movw	r22, r12
    3440:	80 e0       	ldi	r24, 0x00	; 0
    3442:	90 e0       	ldi	r25, 0x00	; 0
    3444:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__floatunsisf>
    3448:	9b 01       	movw	r18, r22
    344a:	ac 01       	movw	r20, r24
    344c:	c5 01       	movw	r24, r10
    344e:	b4 01       	movw	r22, r8
    3450:	0e 94 fa 14 	call	0x29f4	; 0x29f4 <__subsf3>
    3454:	6b 01       	movw	r12, r22
    3456:	7c 01       	movw	r14, r24
    3458:	7a 94       	dec	r7
  if (digits > 0) {
    n += print('.'); 
  }

  // Extract digits from the remainder one at a time
  while (digits-- > 0)
    345a:	71 10       	cpse	r7, r1
    345c:	db cf       	rjmp	.-74     	; 0x3414 <_ZN5Print10printFloatEdh+0x14e>
  number += rounding;

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
  double remainder = number - (double)int_part;
  n += print(int_part);
    345e:	ce 01       	movw	r24, r28
    n += print(toPrint);
    remainder -= toPrint; 
  } 
  
  return n;
}
    3460:	df 91       	pop	r29
    3462:	cf 91       	pop	r28
    3464:	1f 91       	pop	r17
    3466:	0f 91       	pop	r16
    3468:	ff 90       	pop	r15
    346a:	ef 90       	pop	r14
    346c:	df 90       	pop	r13
    346e:	cf 90       	pop	r12
    3470:	bf 90       	pop	r11
    3472:	af 90       	pop	r10
    3474:	9f 90       	pop	r9
    3476:	8f 90       	pop	r8
    3478:	7f 90       	pop	r7
    347a:	08 95       	ret

0000347c <_ZN5Print5printEdi>:
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
    347c:	0c 94 63 19 	jmp	0x32c6	; 0x32c6 <_ZN5Print10printFloatEdh>

00003480 <__vector_16>:
	

#endif

	// busy wait
	__asm__ __volatile__ (
    3480:	1f 92       	push	r1
    3482:	0f 92       	push	r0
    3484:	0f b6       	in	r0, 0x3f	; 63
    3486:	0f 92       	push	r0
    3488:	11 24       	eor	r1, r1
    348a:	2f 93       	push	r18
    348c:	3f 93       	push	r19
    348e:	8f 93       	push	r24
    3490:	9f 93       	push	r25
    3492:	af 93       	push	r26
    3494:	bf 93       	push	r27
    3496:	80 91 23 04 	lds	r24, 0x0423	; 0x800423 <timer0_millis>
    349a:	90 91 24 04 	lds	r25, 0x0424	; 0x800424 <timer0_millis+0x1>
    349e:	a0 91 25 04 	lds	r26, 0x0425	; 0x800425 <timer0_millis+0x2>
    34a2:	b0 91 26 04 	lds	r27, 0x0426	; 0x800426 <timer0_millis+0x3>
    34a6:	30 91 22 04 	lds	r19, 0x0422	; 0x800422 <timer0_fract>
    34aa:	23 e0       	ldi	r18, 0x03	; 3
    34ac:	23 0f       	add	r18, r19
    34ae:	2d 37       	cpi	r18, 0x7D	; 125
    34b0:	20 f4       	brcc	.+8      	; 0x34ba <__vector_16+0x3a>
    34b2:	01 96       	adiw	r24, 0x01	; 1
    34b4:	a1 1d       	adc	r26, r1
    34b6:	b1 1d       	adc	r27, r1
    34b8:	05 c0       	rjmp	.+10     	; 0x34c4 <__vector_16+0x44>
    34ba:	26 e8       	ldi	r18, 0x86	; 134
    34bc:	23 0f       	add	r18, r19
    34be:	02 96       	adiw	r24, 0x02	; 2
    34c0:	a1 1d       	adc	r26, r1
    34c2:	b1 1d       	adc	r27, r1
    34c4:	20 93 22 04 	sts	0x0422, r18	; 0x800422 <timer0_fract>
    34c8:	80 93 23 04 	sts	0x0423, r24	; 0x800423 <timer0_millis>
    34cc:	90 93 24 04 	sts	0x0424, r25	; 0x800424 <timer0_millis+0x1>
    34d0:	a0 93 25 04 	sts	0x0425, r26	; 0x800425 <timer0_millis+0x2>
    34d4:	b0 93 26 04 	sts	0x0426, r27	; 0x800426 <timer0_millis+0x3>
    34d8:	80 91 27 04 	lds	r24, 0x0427	; 0x800427 <timer0_overflow_count>
    34dc:	90 91 28 04 	lds	r25, 0x0428	; 0x800428 <timer0_overflow_count+0x1>
    34e0:	a0 91 29 04 	lds	r26, 0x0429	; 0x800429 <timer0_overflow_count+0x2>
    34e4:	b0 91 2a 04 	lds	r27, 0x042A	; 0x80042a <timer0_overflow_count+0x3>
    34e8:	01 96       	adiw	r24, 0x01	; 1
    34ea:	a1 1d       	adc	r26, r1
    34ec:	b1 1d       	adc	r27, r1
    34ee:	80 93 27 04 	sts	0x0427, r24	; 0x800427 <timer0_overflow_count>
    34f2:	90 93 28 04 	sts	0x0428, r25	; 0x800428 <timer0_overflow_count+0x1>
    34f6:	a0 93 29 04 	sts	0x0429, r26	; 0x800429 <timer0_overflow_count+0x2>
    34fa:	b0 93 2a 04 	sts	0x042A, r27	; 0x80042a <timer0_overflow_count+0x3>
    34fe:	bf 91       	pop	r27
    3500:	af 91       	pop	r26
    3502:	9f 91       	pop	r25
    3504:	8f 91       	pop	r24
    3506:	3f 91       	pop	r19
    3508:	2f 91       	pop	r18
    350a:	0f 90       	pop	r0
    350c:	0f be       	out	0x3f, r0	; 63
    350e:	0f 90       	pop	r0
    3510:	1f 90       	pop	r1
    3512:	18 95       	reti

00003514 <micros>:
    3514:	3f b7       	in	r19, 0x3f	; 63
    3516:	f8 94       	cli
    3518:	80 91 27 04 	lds	r24, 0x0427	; 0x800427 <timer0_overflow_count>
    351c:	90 91 28 04 	lds	r25, 0x0428	; 0x800428 <timer0_overflow_count+0x1>
    3520:	a0 91 29 04 	lds	r26, 0x0429	; 0x800429 <timer0_overflow_count+0x2>
    3524:	b0 91 2a 04 	lds	r27, 0x042A	; 0x80042a <timer0_overflow_count+0x3>
    3528:	26 b5       	in	r18, 0x26	; 38
    352a:	a8 9b       	sbis	0x15, 0	; 21
    352c:	05 c0       	rjmp	.+10     	; 0x3538 <micros+0x24>
    352e:	2f 3f       	cpi	r18, 0xFF	; 255
    3530:	19 f0       	breq	.+6      	; 0x3538 <micros+0x24>
    3532:	01 96       	adiw	r24, 0x01	; 1
    3534:	a1 1d       	adc	r26, r1
    3536:	b1 1d       	adc	r27, r1
    3538:	3f bf       	out	0x3f, r19	; 63
    353a:	ba 2f       	mov	r27, r26
    353c:	a9 2f       	mov	r26, r25
    353e:	98 2f       	mov	r25, r24
    3540:	88 27       	eor	r24, r24
    3542:	82 0f       	add	r24, r18
    3544:	91 1d       	adc	r25, r1
    3546:	a1 1d       	adc	r26, r1
    3548:	b1 1d       	adc	r27, r1
    354a:	bc 01       	movw	r22, r24
    354c:	cd 01       	movw	r24, r26
    354e:	42 e0       	ldi	r20, 0x02	; 2
    3550:	66 0f       	add	r22, r22
    3552:	77 1f       	adc	r23, r23
    3554:	88 1f       	adc	r24, r24
    3556:	99 1f       	adc	r25, r25
    3558:	4a 95       	dec	r20
    355a:	d1 f7       	brne	.-12     	; 0x3550 <micros+0x3c>
    355c:	08 95       	ret

0000355e <delay>:
    355e:	8f 92       	push	r8
    3560:	9f 92       	push	r9
    3562:	af 92       	push	r10
    3564:	bf 92       	push	r11
    3566:	cf 92       	push	r12
    3568:	df 92       	push	r13
    356a:	ef 92       	push	r14
    356c:	ff 92       	push	r15
    356e:	6b 01       	movw	r12, r22
    3570:	7c 01       	movw	r14, r24
    3572:	0e 94 8a 1a 	call	0x3514	; 0x3514 <micros>
    3576:	4b 01       	movw	r8, r22
    3578:	5c 01       	movw	r10, r24
    357a:	c1 14       	cp	r12, r1
    357c:	d1 04       	cpc	r13, r1
    357e:	e1 04       	cpc	r14, r1
    3580:	f1 04       	cpc	r15, r1
    3582:	01 f1       	breq	.+64     	; 0x35c4 <delay+0x66>
    3584:	0e 94 52 2b 	call	0x56a4	; 0x56a4 <yield>
    3588:	0e 94 8a 1a 	call	0x3514	; 0x3514 <micros>
    358c:	dc 01       	movw	r26, r24
    358e:	cb 01       	movw	r24, r22
    3590:	88 19       	sub	r24, r8
    3592:	99 09       	sbc	r25, r9
    3594:	aa 09       	sbc	r26, r10
    3596:	bb 09       	sbc	r27, r11
    3598:	88 3e       	cpi	r24, 0xE8	; 232
    359a:	93 40       	sbci	r25, 0x03	; 3
    359c:	a1 05       	cpc	r26, r1
    359e:	b1 05       	cpc	r27, r1
    35a0:	60 f3       	brcs	.-40     	; 0x357a <delay+0x1c>
    35a2:	21 e0       	ldi	r18, 0x01	; 1
    35a4:	c2 1a       	sub	r12, r18
    35a6:	d1 08       	sbc	r13, r1
    35a8:	e1 08       	sbc	r14, r1
    35aa:	f1 08       	sbc	r15, r1
    35ac:	88 ee       	ldi	r24, 0xE8	; 232
    35ae:	88 0e       	add	r8, r24
    35b0:	83 e0       	ldi	r24, 0x03	; 3
    35b2:	98 1e       	adc	r9, r24
    35b4:	a1 1c       	adc	r10, r1
    35b6:	b1 1c       	adc	r11, r1
    35b8:	c1 14       	cp	r12, r1
    35ba:	d1 04       	cpc	r13, r1
    35bc:	e1 04       	cpc	r14, r1
    35be:	f1 04       	cpc	r15, r1
    35c0:	19 f7       	brne	.-58     	; 0x3588 <delay+0x2a>
    35c2:	db cf       	rjmp	.-74     	; 0x357a <delay+0x1c>
    35c4:	ff 90       	pop	r15
    35c6:	ef 90       	pop	r14
    35c8:	df 90       	pop	r13
    35ca:	cf 90       	pop	r12
    35cc:	bf 90       	pop	r11
    35ce:	af 90       	pop	r10
    35d0:	9f 90       	pop	r9
    35d2:	8f 90       	pop	r8
    35d4:	08 95       	ret

000035d6 <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    35d6:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    35d8:	84 b5       	in	r24, 0x24	; 36
    35da:	82 60       	ori	r24, 0x02	; 2
    35dc:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    35de:	84 b5       	in	r24, 0x24	; 36
    35e0:	81 60       	ori	r24, 0x01	; 1
    35e2:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    35e4:	85 b5       	in	r24, 0x25	; 37
    35e6:	82 60       	ori	r24, 0x02	; 2
    35e8:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    35ea:	85 b5       	in	r24, 0x25	; 37
    35ec:	81 60       	ori	r24, 0x01	; 1
    35ee:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    35f0:	ee e6       	ldi	r30, 0x6E	; 110
    35f2:	f0 e0       	ldi	r31, 0x00	; 0
    35f4:	80 81       	ld	r24, Z
    35f6:	81 60       	ori	r24, 0x01	; 1
    35f8:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    35fa:	e1 e8       	ldi	r30, 0x81	; 129
    35fc:	f0 e0       	ldi	r31, 0x00	; 0
    35fe:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    3600:	80 81       	ld	r24, Z
    3602:	82 60       	ori	r24, 0x02	; 2
    3604:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
    3606:	80 81       	ld	r24, Z
    3608:	81 60       	ori	r24, 0x01	; 1
    360a:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    360c:	e0 e8       	ldi	r30, 0x80	; 128
    360e:	f0 e0       	ldi	r31, 0x00	; 0
    3610:	80 81       	ld	r24, Z
    3612:	81 60       	ori	r24, 0x01	; 1
    3614:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
    3616:	e1 eb       	ldi	r30, 0xB1	; 177
    3618:	f0 e0       	ldi	r31, 0x00	; 0
    361a:	80 81       	ld	r24, Z
    361c:	84 60       	ori	r24, 0x04	; 4
    361e:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
    3620:	e0 eb       	ldi	r30, 0xB0	; 176
    3622:	f0 e0       	ldi	r31, 0x00	; 0
    3624:	80 81       	ld	r24, Z
    3626:	81 60       	ori	r24, 0x01	; 1
    3628:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
    362a:	ea e7       	ldi	r30, 0x7A	; 122
    362c:	f0 e0       	ldi	r31, 0x00	; 0
    362e:	80 81       	ld	r24, Z
    3630:	84 60       	ori	r24, 0x04	; 4
    3632:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
    3634:	80 81       	ld	r24, Z
    3636:	82 60       	ori	r24, 0x02	; 2
    3638:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
    363a:	80 81       	ld	r24, Z
    363c:	81 60       	ori	r24, 0x01	; 1
    363e:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    3640:	80 81       	ld	r24, Z
    3642:	80 68       	ori	r24, 0x80	; 128
    3644:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
    3646:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    364a:	08 95       	ret

0000364c <_Z3maplllll>:
  long diff = howbig - howsmall;
  return random(diff) + howsmall;
}

long map(long x, long in_min, long in_max, long out_min, long out_max)
{
    364c:	4f 92       	push	r4
    364e:	5f 92       	push	r5
    3650:	6f 92       	push	r6
    3652:	7f 92       	push	r7
    3654:	af 92       	push	r10
    3656:	bf 92       	push	r11
    3658:	cf 92       	push	r12
    365a:	df 92       	push	r13
    365c:	ef 92       	push	r14
    365e:	ff 92       	push	r15
    3660:	0f 93       	push	r16
    3662:	1f 93       	push	r17
    3664:	cf 93       	push	r28
    3666:	df 93       	push	r29
    3668:	cd b7       	in	r28, 0x3d	; 61
    366a:	de b7       	in	r29, 0x3e	; 62
    366c:	29 01       	movw	r4, r18
    366e:	3a 01       	movw	r6, r20
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
    3670:	9b 01       	movw	r18, r22
    3672:	ac 01       	movw	r20, r24
    3674:	24 19       	sub	r18, r4
    3676:	35 09       	sbc	r19, r5
    3678:	46 09       	sbc	r20, r6
    367a:	57 09       	sbc	r21, r7
    367c:	89 89       	ldd	r24, Y+17	; 0x11
    367e:	9a 89       	ldd	r25, Y+18	; 0x12
    3680:	ab 89       	ldd	r26, Y+19	; 0x13
    3682:	bc 89       	ldd	r27, Y+20	; 0x14
    3684:	bc 01       	movw	r22, r24
    3686:	cd 01       	movw	r24, r26
    3688:	6a 19       	sub	r22, r10
    368a:	7b 09       	sbc	r23, r11
    368c:	8c 09       	sbc	r24, r12
    368e:	9d 09       	sbc	r25, r13
    3690:	0e 94 be 30 	call	0x617c	; 0x617c <__mulsi3>
    3694:	a8 01       	movw	r20, r16
    3696:	97 01       	movw	r18, r14
    3698:	24 19       	sub	r18, r4
    369a:	35 09       	sbc	r19, r5
    369c:	46 09       	sbc	r20, r6
    369e:	57 09       	sbc	r21, r7
    36a0:	0e 94 04 31 	call	0x6208	; 0x6208 <__divmodsi4>
    36a4:	ca 01       	movw	r24, r20
    36a6:	b9 01       	movw	r22, r18
    36a8:	6a 0d       	add	r22, r10
    36aa:	7b 1d       	adc	r23, r11
    36ac:	8c 1d       	adc	r24, r12
    36ae:	9d 1d       	adc	r25, r13
}
    36b0:	df 91       	pop	r29
    36b2:	cf 91       	pop	r28
    36b4:	1f 91       	pop	r17
    36b6:	0f 91       	pop	r16
    36b8:	ff 90       	pop	r15
    36ba:	ef 90       	pop	r14
    36bc:	df 90       	pop	r13
    36be:	cf 90       	pop	r12
    36c0:	bf 90       	pop	r11
    36c2:	af 90       	pop	r10
    36c4:	7f 90       	pop	r7
    36c6:	6f 90       	pop	r6
    36c8:	5f 90       	pop	r5
    36ca:	4f 90       	pop	r4
    36cc:	08 95       	ret

000036ce <_ZNK6String14StringIfHelperEv>:
	return operator[](loc);
}

void String::setCharAt(unsigned int loc, char c) 
{
	if (loc < len) buffer[loc] = c;
    36ce:	08 95       	ret

000036d0 <_ZN6StringD1Ev>:
    36d0:	fc 01       	movw	r30, r24
    36d2:	80 81       	ld	r24, Z
    36d4:	91 81       	ldd	r25, Z+1	; 0x01
    36d6:	00 97       	sbiw	r24, 0x00	; 0
    36d8:	11 f0       	breq	.+4      	; 0x36de <_ZN6StringD1Ev+0xe>
    36da:	0c 94 0f 32 	jmp	0x641e	; 0x641e <free>
    36de:	08 95       	ret

000036e0 <_ZN6String10invalidateEv>:
    36e0:	cf 93       	push	r28
    36e2:	df 93       	push	r29
    36e4:	ec 01       	movw	r28, r24
    36e6:	88 81       	ld	r24, Y
    36e8:	99 81       	ldd	r25, Y+1	; 0x01
    36ea:	00 97       	sbiw	r24, 0x00	; 0
    36ec:	11 f0       	breq	.+4      	; 0x36f2 <_ZN6String10invalidateEv+0x12>
    36ee:	0e 94 0f 32 	call	0x641e	; 0x641e <free>
    36f2:	19 82       	std	Y+1, r1	; 0x01
    36f4:	18 82       	st	Y, r1
    36f6:	1d 82       	std	Y+5, r1	; 0x05
    36f8:	1c 82       	std	Y+4, r1	; 0x04
    36fa:	1b 82       	std	Y+3, r1	; 0x03
    36fc:	1a 82       	std	Y+2, r1	; 0x02
    36fe:	df 91       	pop	r29
    3700:	cf 91       	pop	r28
    3702:	08 95       	ret

00003704 <_ZN6String12changeBufferEj>:
    3704:	0f 93       	push	r16
    3706:	1f 93       	push	r17
    3708:	cf 93       	push	r28
    370a:	df 93       	push	r29
    370c:	ec 01       	movw	r28, r24
    370e:	8b 01       	movw	r16, r22
    3710:	6f 5f       	subi	r22, 0xFF	; 255
    3712:	7f 4f       	sbci	r23, 0xFF	; 255
    3714:	88 81       	ld	r24, Y
    3716:	99 81       	ldd	r25, Y+1	; 0x01
    3718:	0e 94 98 32 	call	0x6530	; 0x6530 <realloc>
    371c:	00 97       	sbiw	r24, 0x00	; 0
    371e:	31 f0       	breq	.+12     	; 0x372c <_ZN6String12changeBufferEj+0x28>
    3720:	99 83       	std	Y+1, r25	; 0x01
    3722:	88 83       	st	Y, r24
    3724:	1b 83       	std	Y+3, r17	; 0x03
    3726:	0a 83       	std	Y+2, r16	; 0x02
    3728:	81 e0       	ldi	r24, 0x01	; 1
    372a:	01 c0       	rjmp	.+2      	; 0x372e <_ZN6String12changeBufferEj+0x2a>
    372c:	80 e0       	ldi	r24, 0x00	; 0
    372e:	df 91       	pop	r29
    3730:	cf 91       	pop	r28
    3732:	1f 91       	pop	r17
    3734:	0f 91       	pop	r16
    3736:	08 95       	ret

00003738 <_ZN6String7reserveEj>:
    3738:	cf 93       	push	r28
    373a:	df 93       	push	r29
    373c:	ec 01       	movw	r28, r24
    373e:	88 81       	ld	r24, Y
    3740:	99 81       	ldd	r25, Y+1	; 0x01
    3742:	89 2b       	or	r24, r25
    3744:	29 f0       	breq	.+10     	; 0x3750 <_ZN6String7reserveEj+0x18>
    3746:	8a 81       	ldd	r24, Y+2	; 0x02
    3748:	9b 81       	ldd	r25, Y+3	; 0x03
    374a:	86 17       	cp	r24, r22
    374c:	97 07       	cpc	r25, r23
    374e:	60 f4       	brcc	.+24     	; 0x3768 <_ZN6String7reserveEj+0x30>
    3750:	ce 01       	movw	r24, r28
    3752:	0e 94 82 1b 	call	0x3704	; 0x3704 <_ZN6String12changeBufferEj>
    3756:	88 23       	and	r24, r24
    3758:	41 f0       	breq	.+16     	; 0x376a <_ZN6String7reserveEj+0x32>
    375a:	8c 81       	ldd	r24, Y+4	; 0x04
    375c:	9d 81       	ldd	r25, Y+5	; 0x05
    375e:	89 2b       	or	r24, r25
    3760:	19 f4       	brne	.+6      	; 0x3768 <_ZN6String7reserveEj+0x30>
    3762:	e8 81       	ld	r30, Y
    3764:	f9 81       	ldd	r31, Y+1	; 0x01
    3766:	10 82       	st	Z, r1
    3768:	81 e0       	ldi	r24, 0x01	; 1
    376a:	df 91       	pop	r29
    376c:	cf 91       	pop	r28
    376e:	08 95       	ret

00003770 <_ZN6String4copyEPKcj>:
    3770:	ef 92       	push	r14
    3772:	ff 92       	push	r15
    3774:	0f 93       	push	r16
    3776:	1f 93       	push	r17
    3778:	cf 93       	push	r28
    377a:	df 93       	push	r29
    377c:	ec 01       	movw	r28, r24
    377e:	7b 01       	movw	r14, r22
    3780:	8a 01       	movw	r16, r20
    3782:	ba 01       	movw	r22, r20
    3784:	0e 94 9c 1b 	call	0x3738	; 0x3738 <_ZN6String7reserveEj>
    3788:	81 11       	cpse	r24, r1
    378a:	04 c0       	rjmp	.+8      	; 0x3794 <_ZN6String4copyEPKcj+0x24>
    378c:	ce 01       	movw	r24, r28
    378e:	0e 94 70 1b 	call	0x36e0	; 0x36e0 <_ZN6String10invalidateEv>
    3792:	07 c0       	rjmp	.+14     	; 0x37a2 <_ZN6String4copyEPKcj+0x32>
    3794:	1d 83       	std	Y+5, r17	; 0x05
    3796:	0c 83       	std	Y+4, r16	; 0x04
    3798:	b7 01       	movw	r22, r14
    379a:	88 81       	ld	r24, Y
    379c:	99 81       	ldd	r25, Y+1	; 0x01
    379e:	0e 94 67 33 	call	0x66ce	; 0x66ce <strcpy>
    37a2:	ce 01       	movw	r24, r28
    37a4:	df 91       	pop	r29
    37a6:	cf 91       	pop	r28
    37a8:	1f 91       	pop	r17
    37aa:	0f 91       	pop	r16
    37ac:	ff 90       	pop	r15
    37ae:	ef 90       	pop	r14
    37b0:	08 95       	ret

000037b2 <_ZN6StringC1EPKc>:
    37b2:	fc 01       	movw	r30, r24
    37b4:	11 82       	std	Z+1, r1	; 0x01
    37b6:	10 82       	st	Z, r1
    37b8:	13 82       	std	Z+3, r1	; 0x03
    37ba:	12 82       	std	Z+2, r1	; 0x02
    37bc:	15 82       	std	Z+5, r1	; 0x05
    37be:	14 82       	std	Z+4, r1	; 0x04
    37c0:	61 15       	cp	r22, r1
    37c2:	71 05       	cpc	r23, r1
    37c4:	51 f0       	breq	.+20     	; 0x37da <_ZN6StringC1EPKc+0x28>
    37c6:	fb 01       	movw	r30, r22
    37c8:	01 90       	ld	r0, Z+
    37ca:	00 20       	and	r0, r0
    37cc:	e9 f7       	brne	.-6      	; 0x37c8 <_ZN6StringC1EPKc+0x16>
    37ce:	31 97       	sbiw	r30, 0x01	; 1
    37d0:	af 01       	movw	r20, r30
    37d2:	46 1b       	sub	r20, r22
    37d4:	57 0b       	sbc	r21, r23
    37d6:	0c 94 b8 1b 	jmp	0x3770	; 0x3770 <_ZN6String4copyEPKcj>
    37da:	08 95       	ret

000037dc <_ZN6String4moveERS_>:
    37dc:	0f 93       	push	r16
    37de:	1f 93       	push	r17
    37e0:	cf 93       	push	r28
    37e2:	df 93       	push	r29
    37e4:	8c 01       	movw	r16, r24
    37e6:	eb 01       	movw	r28, r22
    37e8:	fc 01       	movw	r30, r24
    37ea:	80 81       	ld	r24, Z
    37ec:	91 81       	ldd	r25, Z+1	; 0x01
    37ee:	00 97       	sbiw	r24, 0x00	; 0
    37f0:	d1 f0       	breq	.+52     	; 0x3826 <_ZN6String4moveERS_+0x4a>
    37f2:	68 81       	ld	r22, Y
    37f4:	79 81       	ldd	r23, Y+1	; 0x01
    37f6:	61 15       	cp	r22, r1
    37f8:	71 05       	cpc	r23, r1
    37fa:	99 f0       	breq	.+38     	; 0x3822 <_ZN6String4moveERS_+0x46>
    37fc:	27 e6       	ldi	r18, 0x67	; 103
    37fe:	3b e1       	ldi	r19, 0x1B	; 27
    3800:	23 2b       	or	r18, r19
    3802:	79 f0       	breq	.+30     	; 0x3822 <_ZN6String4moveERS_+0x46>
    3804:	42 81       	ldd	r20, Z+2	; 0x02
    3806:	53 81       	ldd	r21, Z+3	; 0x03
    3808:	2c 81       	ldd	r18, Y+4	; 0x04
    380a:	3d 81       	ldd	r19, Y+5	; 0x05
    380c:	42 17       	cp	r20, r18
    380e:	53 07       	cpc	r21, r19
    3810:	40 f0       	brcs	.+16     	; 0x3822 <_ZN6String4moveERS_+0x46>
    3812:	0e 94 67 33 	call	0x66ce	; 0x66ce <strcpy>
    3816:	8c 81       	ldd	r24, Y+4	; 0x04
    3818:	9d 81       	ldd	r25, Y+5	; 0x05
    381a:	f8 01       	movw	r30, r16
    381c:	95 83       	std	Z+5, r25	; 0x05
    381e:	84 83       	std	Z+4, r24	; 0x04
    3820:	13 c0       	rjmp	.+38     	; 0x3848 <_ZN6String4moveERS_+0x6c>
    3822:	0e 94 0f 32 	call	0x641e	; 0x641e <free>
    3826:	88 81       	ld	r24, Y
    3828:	99 81       	ldd	r25, Y+1	; 0x01
    382a:	f8 01       	movw	r30, r16
    382c:	91 83       	std	Z+1, r25	; 0x01
    382e:	80 83       	st	Z, r24
    3830:	8a 81       	ldd	r24, Y+2	; 0x02
    3832:	9b 81       	ldd	r25, Y+3	; 0x03
    3834:	93 83       	std	Z+3, r25	; 0x03
    3836:	82 83       	std	Z+2, r24	; 0x02
    3838:	8c 81       	ldd	r24, Y+4	; 0x04
    383a:	9d 81       	ldd	r25, Y+5	; 0x05
    383c:	95 83       	std	Z+5, r25	; 0x05
    383e:	84 83       	std	Z+4, r24	; 0x04
    3840:	19 82       	std	Y+1, r1	; 0x01
    3842:	18 82       	st	Y, r1
    3844:	1b 82       	std	Y+3, r1	; 0x03
    3846:	1a 82       	std	Y+2, r1	; 0x02
    3848:	1d 82       	std	Y+5, r1	; 0x05
    384a:	1c 82       	std	Y+4, r1	; 0x04
    384c:	df 91       	pop	r29
    384e:	cf 91       	pop	r28
    3850:	1f 91       	pop	r17
    3852:	0f 91       	pop	r16
    3854:	08 95       	ret

00003856 <_ZN6StringaSERKS_>:
    3856:	cf 93       	push	r28
    3858:	df 93       	push	r29
    385a:	ec 01       	movw	r28, r24
    385c:	fb 01       	movw	r30, r22
    385e:	86 17       	cp	r24, r22
    3860:	97 07       	cpc	r25, r23
    3862:	61 f0       	breq	.+24     	; 0x387c <_ZN6StringaSERKS_+0x26>
    3864:	60 81       	ld	r22, Z
    3866:	71 81       	ldd	r23, Z+1	; 0x01
    3868:	61 15       	cp	r22, r1
    386a:	71 05       	cpc	r23, r1
    386c:	29 f0       	breq	.+10     	; 0x3878 <_ZN6StringaSERKS_+0x22>
    386e:	44 81       	ldd	r20, Z+4	; 0x04
    3870:	55 81       	ldd	r21, Z+5	; 0x05
    3872:	0e 94 b8 1b 	call	0x3770	; 0x3770 <_ZN6String4copyEPKcj>
    3876:	02 c0       	rjmp	.+4      	; 0x387c <_ZN6StringaSERKS_+0x26>
    3878:	0e 94 70 1b 	call	0x36e0	; 0x36e0 <_ZN6String10invalidateEv>
    387c:	ce 01       	movw	r24, r28
    387e:	df 91       	pop	r29
    3880:	cf 91       	pop	r28
    3882:	08 95       	ret

00003884 <_ZN6StringC1ERKS_>:
    3884:	fc 01       	movw	r30, r24
    3886:	11 82       	std	Z+1, r1	; 0x01
    3888:	10 82       	st	Z, r1
    388a:	13 82       	std	Z+3, r1	; 0x03
    388c:	12 82       	std	Z+2, r1	; 0x02
    388e:	15 82       	std	Z+5, r1	; 0x05
    3890:	14 82       	std	Z+4, r1	; 0x04
    3892:	0c 94 2b 1c 	jmp	0x3856	; 0x3856 <_ZN6StringaSERKS_>

00003896 <_ZN6StringaSEOS_>:
    3896:	cf 93       	push	r28
    3898:	df 93       	push	r29
    389a:	ec 01       	movw	r28, r24
    389c:	86 17       	cp	r24, r22
    389e:	97 07       	cpc	r25, r23
    38a0:	11 f0       	breq	.+4      	; 0x38a6 <_ZN6StringaSEOS_+0x10>
    38a2:	0e 94 ee 1b 	call	0x37dc	; 0x37dc <_ZN6String4moveERS_>
    38a6:	ce 01       	movw	r24, r28
    38a8:	df 91       	pop	r29
    38aa:	cf 91       	pop	r28
    38ac:	08 95       	ret

000038ae <_ZN6StringaSEPKc>:
    38ae:	cf 93       	push	r28
    38b0:	df 93       	push	r29
    38b2:	ec 01       	movw	r28, r24
    38b4:	61 15       	cp	r22, r1
    38b6:	71 05       	cpc	r23, r1
    38b8:	59 f0       	breq	.+22     	; 0x38d0 <_ZN6StringaSEPKc+0x22>
    38ba:	fb 01       	movw	r30, r22
    38bc:	01 90       	ld	r0, Z+
    38be:	00 20       	and	r0, r0
    38c0:	e9 f7       	brne	.-6      	; 0x38bc <_ZN6StringaSEPKc+0xe>
    38c2:	31 97       	sbiw	r30, 0x01	; 1
    38c4:	af 01       	movw	r20, r30
    38c6:	46 1b       	sub	r20, r22
    38c8:	57 0b       	sbc	r21, r23
    38ca:	0e 94 b8 1b 	call	0x3770	; 0x3770 <_ZN6String4copyEPKcj>
    38ce:	02 c0       	rjmp	.+4      	; 0x38d4 <_ZN6StringaSEPKc+0x26>
    38d0:	0e 94 70 1b 	call	0x36e0	; 0x36e0 <_ZN6String10invalidateEv>
    38d4:	ce 01       	movw	r24, r28
    38d6:	df 91       	pop	r29
    38d8:	cf 91       	pop	r28
    38da:	08 95       	ret

000038dc <_ZN6StringC1Efh>:
    38dc:	ef 92       	push	r14
    38de:	ff 92       	push	r15
    38e0:	0f 93       	push	r16
    38e2:	1f 93       	push	r17
    38e4:	cf 93       	push	r28
    38e6:	df 93       	push	r29
    38e8:	cd b7       	in	r28, 0x3d	; 61
    38ea:	de b7       	in	r29, 0x3e	; 62
    38ec:	a1 97       	sbiw	r28, 0x21	; 33
    38ee:	0f b6       	in	r0, 0x3f	; 63
    38f0:	f8 94       	cli
    38f2:	de bf       	out	0x3e, r29	; 62
    38f4:	0f be       	out	0x3f, r0	; 63
    38f6:	cd bf       	out	0x3d, r28	; 61
    38f8:	7c 01       	movw	r14, r24
    38fa:	cb 01       	movw	r24, r22
    38fc:	ba 01       	movw	r22, r20
    38fe:	f7 01       	movw	r30, r14
    3900:	11 82       	std	Z+1, r1	; 0x01
    3902:	10 82       	st	Z, r1
    3904:	13 82       	std	Z+3, r1	; 0x03
    3906:	12 82       	std	Z+2, r1	; 0x02
    3908:	15 82       	std	Z+5, r1	; 0x05
    390a:	14 82       	std	Z+4, r1	; 0x04
    390c:	42 e0       	ldi	r20, 0x02	; 2
    390e:	42 0f       	add	r20, r18
    3910:	8e 01       	movw	r16, r28
    3912:	0f 5f       	subi	r16, 0xFF	; 255
    3914:	1f 4f       	sbci	r17, 0xFF	; 255
    3916:	0e 94 57 31 	call	0x62ae	; 0x62ae <dtostrf>
    391a:	bc 01       	movw	r22, r24
    391c:	c7 01       	movw	r24, r14
    391e:	0e 94 57 1c 	call	0x38ae	; 0x38ae <_ZN6StringaSEPKc>
    3922:	a1 96       	adiw	r28, 0x21	; 33
    3924:	0f b6       	in	r0, 0x3f	; 63
    3926:	f8 94       	cli
    3928:	de bf       	out	0x3e, r29	; 62
    392a:	0f be       	out	0x3f, r0	; 63
    392c:	cd bf       	out	0x3d, r28	; 61
    392e:	df 91       	pop	r29
    3930:	cf 91       	pop	r28
    3932:	1f 91       	pop	r17
    3934:	0f 91       	pop	r16
    3936:	ff 90       	pop	r15
    3938:	ef 90       	pop	r14
    393a:	08 95       	ret

0000393c <_ZN6StringixEj>:
}

char & String::operator[](unsigned int index)
{
	static char dummy_writable_char;
	if (index >= len || !buffer) {
    393c:	fc 01       	movw	r30, r24
    393e:	24 81       	ldd	r18, Z+4	; 0x04
    3940:	35 81       	ldd	r19, Z+5	; 0x05
    3942:	62 17       	cp	r22, r18
    3944:	73 07       	cpc	r23, r19
    3946:	20 f4       	brcc	.+8      	; 0x3950 <_ZN6StringixEj+0x14>
    3948:	80 81       	ld	r24, Z
    394a:	91 81       	ldd	r25, Z+1	; 0x01
    394c:	00 97       	sbiw	r24, 0x00	; 0
    394e:	29 f4       	brne	.+10     	; 0x395a <_ZN6StringixEj+0x1e>
		dummy_writable_char = 0;
    3950:	10 92 2b 04 	sts	0x042B, r1	; 0x80042b <_ZZN6StringixEjE19dummy_writable_char>
		return dummy_writable_char;
    3954:	8b e2       	ldi	r24, 0x2B	; 43
    3956:	94 e0       	ldi	r25, 0x04	; 4
    3958:	08 95       	ret
	}
	return buffer[index];
    395a:	86 0f       	add	r24, r22
    395c:	97 1f       	adc	r25, r23
}
    395e:	08 95       	ret

00003960 <_ZNK6StringixEj>:

char String::operator[]( unsigned int index ) const
{
	if (index >= len || !buffer) return 0;
    3960:	fc 01       	movw	r30, r24
    3962:	24 81       	ldd	r18, Z+4	; 0x04
    3964:	35 81       	ldd	r19, Z+5	; 0x05
    3966:	62 17       	cp	r22, r18
    3968:	73 07       	cpc	r23, r19
    396a:	48 f4       	brcc	.+18     	; 0x397e <_ZNK6StringixEj+0x1e>
    396c:	80 81       	ld	r24, Z
    396e:	91 81       	ldd	r25, Z+1	; 0x01
    3970:	00 97       	sbiw	r24, 0x00	; 0
    3972:	29 f0       	breq	.+10     	; 0x397e <_ZNK6StringixEj+0x1e>
	return buffer[index];
    3974:	fc 01       	movw	r30, r24
    3976:	e6 0f       	add	r30, r22
    3978:	f7 1f       	adc	r31, r23
    397a:	80 81       	ld	r24, Z
    397c:	08 95       	ret
	return buffer[index];
}

char String::operator[]( unsigned int index ) const
{
	if (index >= len || !buffer) return 0;
    397e:	80 e0       	ldi	r24, 0x00	; 0
	return buffer[index];
}
    3980:	08 95       	ret

00003982 <_ZNK6String6charAtEj>:
/*  Character Access                         */
/*********************************************/

char String::charAt(unsigned int loc) const
{
	return operator[](loc);
    3982:	0c 94 b0 1c 	jmp	0x3960	; 0x3960 <_ZNK6StringixEj>

00003986 <_ZN7AMS5812C1ER7TwoWirehNS_10TransducerE>:
}

/* returns the temperature value, C */
float AMS5812::getTemperature_C(){
  return _data.Temp_C;
}
    3986:	4f 92       	push	r4
    3988:	5f 92       	push	r5
    398a:	6f 92       	push	r6
    398c:	7f 92       	push	r7
    398e:	8f 92       	push	r8
    3990:	9f 92       	push	r9
    3992:	af 92       	push	r10
    3994:	bf 92       	push	r11
    3996:	cf 92       	push	r12
    3998:	df 92       	push	r13
    399a:	ef 92       	push	r14
    399c:	ff 92       	push	r15
    399e:	0f 93       	push	r16
    39a0:	1f 93       	push	r17
    39a2:	cf 93       	push	r28
    39a4:	df 93       	push	r29
    39a6:	fc 01       	movw	r30, r24
    39a8:	5b 01       	movw	r10, r22
    39aa:	94 2e       	mov	r9, r20
    39ac:	82 2e       	mov	r8, r18
    39ae:	8a e0       	ldi	r24, 0x0A	; 10
    39b0:	90 e0       	ldi	r25, 0x00	; 0
    39b2:	93 8b       	std	Z+19, r25	; 0x13
    39b4:	82 8b       	std	Z+18, r24	; 0x12
    39b6:	80 e8       	ldi	r24, 0x80	; 128
    39b8:	9a e1       	ldi	r25, 0x1A	; 26
    39ba:	a6 e0       	ldi	r26, 0x06	; 6
    39bc:	b0 e0       	ldi	r27, 0x00	; 0
    39be:	82 a3       	std	Z+34, r24	; 0x22
    39c0:	93 a3       	std	Z+35, r25	; 0x23
    39c2:	a4 a3       	std	Z+36, r26	; 0x24
    39c4:	b5 a3       	std	Z+37, r27	; 0x25
    39c6:	80 e1       	ldi	r24, 0x10	; 16
    39c8:	96 e7       	ldi	r25, 0x76	; 118
    39ca:	a7 ed       	ldi	r26, 0xD7	; 215
    39cc:	b5 e4       	ldi	r27, 0x45	; 69
    39ce:	86 a3       	std	Z+38, r24	; 0x26
    39d0:	97 a3       	std	Z+39, r25	; 0x27
    39d2:	a0 a7       	std	Z+40, r26	; 0x28
    39d4:	b1 a7       	std	Z+41, r27	; 0x29
    39d6:	2d ec       	ldi	r18, 0xCD	; 205
    39d8:	3c e0       	ldi	r19, 0x0C	; 12
    39da:	33 a7       	std	Z+43, r19	; 0x2b
    39dc:	22 a7       	std	Z+42, r18	; 0x2a
    39de:	83 e3       	ldi	r24, 0x33	; 51
    39e0:	93 e7       	ldi	r25, 0x73	; 115
    39e2:	95 a7       	std	Z+45, r25	; 0x2d
    39e4:	84 a7       	std	Z+44, r24	; 0x2c
    39e6:	37 a7       	std	Z+47, r19	; 0x2f
    39e8:	26 a7       	std	Z+46, r18	; 0x2e
    39ea:	91 ab       	std	Z+49, r25	; 0x31
    39ec:	80 ab       	std	Z+48, r24	; 0x30
    39ee:	80 e0       	ldi	r24, 0x00	; 0
    39f0:	90 e0       	ldi	r25, 0x00	; 0
    39f2:	a8 ec       	ldi	r26, 0xC8	; 200
    39f4:	b1 ec       	ldi	r27, 0xC1	; 193
    39f6:	82 ab       	std	Z+50, r24	; 0x32
    39f8:	93 ab       	std	Z+51, r25	; 0x33
    39fa:	a4 ab       	std	Z+52, r26	; 0x34
    39fc:	b5 ab       	std	Z+53, r27	; 0x35
    39fe:	80 e0       	ldi	r24, 0x00	; 0
    3a00:	90 e0       	ldi	r25, 0x00	; 0
    3a02:	aa ea       	ldi	r26, 0xAA	; 170
    3a04:	b2 e4       	ldi	r27, 0x42	; 66
    3a06:	86 ab       	std	Z+54, r24	; 0x36
    3a08:	97 ab       	std	Z+55, r25	; 0x37
    3a0a:	a0 af       	std	Z+56, r26	; 0x38
    3a0c:	b1 af       	std	Z+57, r27	; 0x39
    3a0e:	12 ae       	std	Z+58, r1	; 0x3a
    3a10:	13 ae       	std	Z+59, r1	; 0x3b
    3a12:	14 ae       	std	Z+60, r1	; 0x3c
    3a14:	15 ae       	std	Z+61, r1	; 0x3d
    3a16:	df 01       	movw	r26, r30
    3a18:	de 96       	adiw	r26, 0x3e	; 62
    3a1a:	4a e9       	ldi	r20, 0x9A	; 154
    3a1c:	59 e9       	ldi	r21, 0x99	; 153
    3a1e:	69 e9       	ldi	r22, 0x99	; 153
    3a20:	7d e3       	ldi	r23, 0x3D	; 61
    3a22:	4d 93       	st	X+, r20
    3a24:	5d 93       	st	X+, r21
    3a26:	6d 93       	st	X+, r22
    3a28:	7c 93       	st	X, r23
    3a2a:	13 97       	sbiw	r26, 0x03	; 3
    3a2c:	14 96       	adiw	r26, 0x04	; 4
    3a2e:	1d 92       	st	X+, r1
    3a30:	1d 92       	st	X+, r1
    3a32:	1d 92       	st	X+, r1
    3a34:	1c 92       	st	X, r1
    3a36:	13 97       	sbiw	r26, 0x03	; 3
    3a38:	ef 01       	movw	r28, r30
    3a3a:	ca 5b       	subi	r28, 0xBA	; 186
    3a3c:	df 4f       	sbci	r29, 0xFF	; 255
    3a3e:	8a e9       	ldi	r24, 0x9A	; 154
    3a40:	99 e9       	ldi	r25, 0x99	; 153
    3a42:	a9 e1       	ldi	r26, 0x19	; 25
    3a44:	be e3       	ldi	r27, 0x3E	; 62
    3a46:	88 83       	st	Y, r24
    3a48:	99 83       	std	Y+1, r25	; 0x01
    3a4a:	aa 83       	std	Y+2, r26	; 0x02
    3a4c:	bb 83       	std	Y+3, r27	; 0x03
    3a4e:	24 96       	adiw	r28, 0x04	; 4
    3a50:	0a e9       	ldi	r16, 0x9A	; 154
    3a52:	19 e9       	ldi	r17, 0x99	; 153
    3a54:	29 e9       	ldi	r18, 0x99	; 153
    3a56:	3d eb       	ldi	r19, 0xBD	; 189
    3a58:	08 83       	st	Y, r16
    3a5a:	19 83       	std	Y+1, r17	; 0x01
    3a5c:	2a 83       	std	Y+2, r18	; 0x02
    3a5e:	3b 83       	std	Y+3, r19	; 0x03
    3a60:	24 96       	adiw	r28, 0x04	; 4
    3a62:	48 83       	st	Y, r20
    3a64:	59 83       	std	Y+1, r21	; 0x01
    3a66:	6a 83       	std	Y+2, r22	; 0x02
    3a68:	7b 83       	std	Y+3, r23	; 0x03
    3a6a:	24 96       	adiw	r28, 0x04	; 4
    3a6c:	4a e9       	ldi	r20, 0x9A	; 154
    3a6e:	59 e9       	ldi	r21, 0x99	; 153
    3a70:	69 e1       	ldi	r22, 0x19	; 25
    3a72:	7e eb       	ldi	r23, 0xBE	; 190
    3a74:	48 83       	st	Y, r20
    3a76:	59 83       	std	Y+1, r21	; 0x01
    3a78:	6a 83       	std	Y+2, r22	; 0x02
    3a7a:	7b 83       	std	Y+3, r23	; 0x03
    3a7c:	24 96       	adiw	r28, 0x04	; 4
    3a7e:	88 83       	st	Y, r24
    3a80:	99 83       	std	Y+1, r25	; 0x01
    3a82:	aa 83       	std	Y+2, r26	; 0x02
    3a84:	bb 83       	std	Y+3, r27	; 0x03
    3a86:	df 01       	movw	r26, r30
    3a88:	a6 5a       	subi	r26, 0xA6	; 166
    3a8a:	bf 4f       	sbci	r27, 0xFF	; 255
    3a8c:	1d 92       	st	X+, r1
    3a8e:	1d 92       	st	X+, r1
    3a90:	1d 92       	st	X+, r1
    3a92:	1c 92       	st	X, r1
    3a94:	13 97       	sbiw	r26, 0x03	; 3
    3a96:	14 96       	adiw	r26, 0x04	; 4
    3a98:	0a e9       	ldi	r16, 0x9A	; 154
    3a9a:	19 e9       	ldi	r17, 0x99	; 153
    3a9c:	29 e9       	ldi	r18, 0x99	; 153
    3a9e:	3e e3       	ldi	r19, 0x3E	; 62
    3aa0:	0d 93       	st	X+, r16
    3aa2:	1d 93       	st	X+, r17
    3aa4:	2d 93       	st	X+, r18
    3aa6:	3c 93       	st	X, r19
    3aa8:	13 97       	sbiw	r26, 0x03	; 3
    3aaa:	14 96       	adiw	r26, 0x04	; 4
    3aac:	1d 92       	st	X+, r1
    3aae:	1d 92       	st	X+, r1
    3ab0:	1d 92       	st	X+, r1
    3ab2:	1c 92       	st	X, r1
    3ab4:	13 97       	sbiw	r26, 0x03	; 3
    3ab6:	14 96       	adiw	r26, 0x04	; 4
    3ab8:	4d ec       	ldi	r20, 0xCD	; 205
    3aba:	5c ec       	ldi	r21, 0xCC	; 204
    3abc:	6c e4       	ldi	r22, 0x4C	; 76
    3abe:	7f e3       	ldi	r23, 0x3F	; 63
    3ac0:	4d 93       	st	X+, r20
    3ac2:	5d 93       	st	X+, r21
    3ac4:	6d 93       	st	X+, r22
    3ac6:	7c 93       	st	X, r23
    3ac8:	13 97       	sbiw	r26, 0x03	; 3
    3aca:	14 96       	adiw	r26, 0x04	; 4
    3acc:	1d 92       	st	X+, r1
    3ace:	1d 92       	st	X+, r1
    3ad0:	1d 92       	st	X+, r1
    3ad2:	1c 92       	st	X, r1
    3ad4:	13 97       	sbiw	r26, 0x03	; 3
    3ad6:	68 96       	adiw	r28, 0x18	; 24
    3ad8:	80 e0       	ldi	r24, 0x00	; 0
    3ada:	90 e0       	ldi	r25, 0x00	; 0
    3adc:	a0 ec       	ldi	r26, 0xC0	; 192
    3ade:	bf e3       	ldi	r27, 0x3F	; 63
    3ae0:	88 83       	st	Y, r24
    3ae2:	99 83       	std	Y+1, r25	; 0x01
    3ae4:	aa 83       	std	Y+2, r26	; 0x02
    3ae6:	bb 83       	std	Y+3, r27	; 0x03
    3ae8:	24 96       	adiw	r28, 0x04	; 4
    3aea:	0f 2e       	mov	r0, r31
    3aec:	fa e9       	ldi	r31, 0x9A	; 154
    3aee:	cf 2e       	mov	r12, r31
    3af0:	f9 e9       	ldi	r31, 0x99	; 153
    3af2:	df 2e       	mov	r13, r31
    3af4:	ed 2c       	mov	r14, r13
    3af6:	fe eb       	ldi	r31, 0xBE	; 190
    3af8:	ff 2e       	mov	r15, r31
    3afa:	f0 2d       	mov	r31, r0
    3afc:	c8 82       	st	Y, r12
    3afe:	d9 82       	std	Y+1, r13	; 0x01
    3b00:	ea 82       	std	Y+2, r14	; 0x02
    3b02:	fb 82       	std	Y+3, r15	; 0x03
    3b04:	24 96       	adiw	r28, 0x04	; 4
    3b06:	08 83       	st	Y, r16
    3b08:	19 83       	std	Y+1, r17	; 0x01
    3b0a:	2a 83       	std	Y+2, r18	; 0x02
    3b0c:	3b 83       	std	Y+3, r19	; 0x03
    3b0e:	24 96       	adiw	r28, 0x04	; 4
    3b10:	0d ec       	ldi	r16, 0xCD	; 205
    3b12:	1c ec       	ldi	r17, 0xCC	; 204
    3b14:	2c e4       	ldi	r18, 0x4C	; 76
    3b16:	3f eb       	ldi	r19, 0xBF	; 191
    3b18:	08 83       	st	Y, r16
    3b1a:	19 83       	std	Y+1, r17	; 0x01
    3b1c:	2a 83       	std	Y+2, r18	; 0x02
    3b1e:	3b 83       	std	Y+3, r19	; 0x03
    3b20:	24 96       	adiw	r28, 0x04	; 4
    3b22:	48 83       	st	Y, r20
    3b24:	59 83       	std	Y+1, r21	; 0x01
    3b26:	6a 83       	std	Y+2, r22	; 0x02
    3b28:	7b 83       	std	Y+3, r23	; 0x03
    3b2a:	24 96       	adiw	r28, 0x04	; 4
    3b2c:	40 e0       	ldi	r20, 0x00	; 0
    3b2e:	50 e0       	ldi	r21, 0x00	; 0
    3b30:	60 ec       	ldi	r22, 0xC0	; 192
    3b32:	7f eb       	ldi	r23, 0xBF	; 191
    3b34:	48 83       	st	Y, r20
    3b36:	59 83       	std	Y+1, r21	; 0x01
    3b38:	6a 83       	std	Y+2, r22	; 0x02
    3b3a:	7b 83       	std	Y+3, r23	; 0x03
    3b3c:	24 96       	adiw	r28, 0x04	; 4
    3b3e:	88 83       	st	Y, r24
    3b40:	99 83       	std	Y+1, r25	; 0x01
    3b42:	aa 83       	std	Y+2, r26	; 0x02
    3b44:	bb 83       	std	Y+3, r27	; 0x03
    3b46:	df 01       	movw	r26, r30
    3b48:	a6 57       	subi	r26, 0x76	; 118
    3b4a:	bf 4f       	sbci	r27, 0xFF	; 255
    3b4c:	1d 92       	st	X+, r1
    3b4e:	1d 92       	st	X+, r1
    3b50:	1d 92       	st	X+, r1
    3b52:	1c 92       	st	X, r1
    3b54:	13 97       	sbiw	r26, 0x03	; 3
    3b56:	14 96       	adiw	r26, 0x04	; 4
    3b58:	00 e0       	ldi	r16, 0x00	; 0
    3b5a:	10 e0       	ldi	r17, 0x00	; 0
    3b5c:	20 e4       	ldi	r18, 0x40	; 64
    3b5e:	30 e4       	ldi	r19, 0x40	; 64
    3b60:	0d 93       	st	X+, r16
    3b62:	1d 93       	st	X+, r17
    3b64:	2d 93       	st	X+, r18
    3b66:	3c 93       	st	X, r19
    3b68:	13 97       	sbiw	r26, 0x03	; 3
    3b6a:	14 96       	adiw	r26, 0x04	; 4
    3b6c:	1d 92       	st	X+, r1
    3b6e:	1d 92       	st	X+, r1
    3b70:	1d 92       	st	X+, r1
    3b72:	1c 92       	st	X, r1
    3b74:	13 97       	sbiw	r26, 0x03	; 3
    3b76:	14 96       	adiw	r26, 0x04	; 4
    3b78:	40 e0       	ldi	r20, 0x00	; 0
    3b7a:	50 e0       	ldi	r21, 0x00	; 0
    3b7c:	60 ea       	ldi	r22, 0xA0	; 160
    3b7e:	70 e4       	ldi	r23, 0x40	; 64
    3b80:	4d 93       	st	X+, r20
    3b82:	5d 93       	st	X+, r21
    3b84:	6d 93       	st	X+, r22
    3b86:	7c 93       	st	X, r23
    3b88:	13 97       	sbiw	r26, 0x03	; 3
    3b8a:	14 96       	adiw	r26, 0x04	; 4
    3b8c:	1d 92       	st	X+, r1
    3b8e:	1d 92       	st	X+, r1
    3b90:	1d 92       	st	X+, r1
    3b92:	1c 92       	st	X, r1
    3b94:	13 97       	sbiw	r26, 0x03	; 3
    3b96:	68 96       	adiw	r28, 0x18	; 24
    3b98:	80 e0       	ldi	r24, 0x00	; 0
    3b9a:	90 e0       	ldi	r25, 0x00	; 0
    3b9c:	a0 e7       	ldi	r26, 0x70	; 112
    3b9e:	b1 e4       	ldi	r27, 0x41	; 65
    3ba0:	88 83       	st	Y, r24
    3ba2:	99 83       	std	Y+1, r25	; 0x01
    3ba4:	aa 83       	std	Y+2, r26	; 0x02
    3ba6:	bb 83       	std	Y+3, r27	; 0x03
    3ba8:	24 96       	adiw	r28, 0x04	; 4
    3baa:	18 82       	st	Y, r1
    3bac:	19 82       	std	Y+1, r1	; 0x01
    3bae:	1a 82       	std	Y+2, r1	; 0x02
    3bb0:	1b 82       	std	Y+3, r1	; 0x03
    3bb2:	24 96       	adiw	r28, 0x04	; 4
    3bb4:	0f 2e       	mov	r0, r31
    3bb6:	c1 2c       	mov	r12, r1
    3bb8:	d1 2c       	mov	r13, r1
    3bba:	f0 ef       	ldi	r31, 0xF0	; 240
    3bbc:	ef 2e       	mov	r14, r31
    3bbe:	f1 e4       	ldi	r31, 0x41	; 65
    3bc0:	ff 2e       	mov	r15, r31
    3bc2:	f0 2d       	mov	r31, r0
    3bc4:	c8 82       	st	Y, r12
    3bc6:	d9 82       	std	Y+1, r13	; 0x01
    3bc8:	ea 82       	std	Y+2, r14	; 0x02
    3bca:	fb 82       	std	Y+3, r15	; 0x03
    3bcc:	24 96       	adiw	r28, 0x04	; 4
    3bce:	18 82       	st	Y, r1
    3bd0:	19 82       	std	Y+1, r1	; 0x01
    3bd2:	1a 82       	std	Y+2, r1	; 0x02
    3bd4:	1b 82       	std	Y+3, r1	; 0x03
    3bd6:	24 96       	adiw	r28, 0x04	; 4
    3bd8:	0f 2e       	mov	r0, r31
    3bda:	41 2c       	mov	r4, r1
    3bdc:	51 2c       	mov	r5, r1
    3bde:	f0 e7       	ldi	r31, 0x70	; 112
    3be0:	6f 2e       	mov	r6, r31
    3be2:	f2 e4       	ldi	r31, 0x42	; 66
    3be4:	7f 2e       	mov	r7, r31
    3be6:	f0 2d       	mov	r31, r0
    3be8:	48 82       	st	Y, r4
    3bea:	59 82       	std	Y+1, r5	; 0x01
    3bec:	6a 82       	std	Y+2, r6	; 0x02
    3bee:	7b 82       	std	Y+3, r7	; 0x03
    3bf0:	24 96       	adiw	r28, 0x04	; 4
    3bf2:	18 82       	st	Y, r1
    3bf4:	19 82       	std	Y+1, r1	; 0x01
    3bf6:	1a 82       	std	Y+2, r1	; 0x02
    3bf8:	1b 82       	std	Y+3, r1	; 0x03
    3bfa:	24 96       	adiw	r28, 0x04	; 4
    3bfc:	0f 2e       	mov	r0, r31
    3bfe:	41 2c       	mov	r4, r1
    3c00:	51 2c       	mov	r5, r1
    3c02:	f8 ec       	ldi	r31, 0xC8	; 200
    3c04:	6f 2e       	mov	r6, r31
    3c06:	f2 e4       	ldi	r31, 0x42	; 66
    3c08:	7f 2e       	mov	r7, r31
    3c0a:	f0 2d       	mov	r31, r0
    3c0c:	48 82       	st	Y, r4
    3c0e:	59 82       	std	Y+1, r5	; 0x01
    3c10:	6a 82       	std	Y+2, r6	; 0x02
    3c12:	7b 82       	std	Y+3, r7	; 0x03
    3c14:	24 96       	adiw	r28, 0x04	; 4
    3c16:	0f 2e       	mov	r0, r31
    3c18:	41 2c       	mov	r4, r1
    3c1a:	51 2c       	mov	r5, r1
    3c1c:	f0 e4       	ldi	r31, 0x40	; 64
    3c1e:	6f 2e       	mov	r6, r31
    3c20:	f0 ec       	ldi	r31, 0xC0	; 192
    3c22:	7f 2e       	mov	r7, r31
    3c24:	f0 2d       	mov	r31, r0
    3c26:	48 82       	st	Y, r4
    3c28:	59 82       	std	Y+1, r5	; 0x01
    3c2a:	6a 82       	std	Y+2, r6	; 0x02
    3c2c:	7b 82       	std	Y+3, r7	; 0x03
    3c2e:	24 96       	adiw	r28, 0x04	; 4
    3c30:	08 83       	st	Y, r16
    3c32:	19 83       	std	Y+1, r17	; 0x01
    3c34:	2a 83       	std	Y+2, r18	; 0x02
    3c36:	3b 83       	std	Y+3, r19	; 0x03
    3c38:	24 96       	adiw	r28, 0x04	; 4
    3c3a:	00 e0       	ldi	r16, 0x00	; 0
    3c3c:	10 e0       	ldi	r17, 0x00	; 0
    3c3e:	20 ea       	ldi	r18, 0xA0	; 160
    3c40:	30 ec       	ldi	r19, 0xC0	; 192
    3c42:	08 83       	st	Y, r16
    3c44:	19 83       	std	Y+1, r17	; 0x01
    3c46:	2a 83       	std	Y+2, r18	; 0x02
    3c48:	3b 83       	std	Y+3, r19	; 0x03
    3c4a:	24 96       	adiw	r28, 0x04	; 4
    3c4c:	48 83       	st	Y, r20
    3c4e:	59 83       	std	Y+1, r21	; 0x01
    3c50:	6a 83       	std	Y+2, r22	; 0x02
    3c52:	7b 83       	std	Y+3, r23	; 0x03
    3c54:	24 96       	adiw	r28, 0x04	; 4
    3c56:	40 e0       	ldi	r20, 0x00	; 0
    3c58:	50 e0       	ldi	r21, 0x00	; 0
    3c5a:	60 e7       	ldi	r22, 0x70	; 112
    3c5c:	71 ec       	ldi	r23, 0xC1	; 193
    3c5e:	48 83       	st	Y, r20
    3c60:	59 83       	std	Y+1, r21	; 0x01
    3c62:	6a 83       	std	Y+2, r22	; 0x02
    3c64:	7b 83       	std	Y+3, r23	; 0x03
    3c66:	24 96       	adiw	r28, 0x04	; 4
    3c68:	88 83       	st	Y, r24
    3c6a:	99 83       	std	Y+1, r25	; 0x01
    3c6c:	aa 83       	std	Y+2, r26	; 0x02
    3c6e:	bb 83       	std	Y+3, r27	; 0x03
    3c70:	24 96       	adiw	r28, 0x04	; 4
    3c72:	40 e0       	ldi	r20, 0x00	; 0
    3c74:	50 e0       	ldi	r21, 0x00	; 0
    3c76:	60 e3       	ldi	r22, 0x30	; 48
    3c78:	71 e4       	ldi	r23, 0x41	; 65
    3c7a:	48 83       	st	Y, r20
    3c7c:	59 83       	std	Y+1, r21	; 0x01
    3c7e:	6a 83       	std	Y+2, r22	; 0x02
    3c80:	7b 83       	std	Y+3, r23	; 0x03
    3c82:	24 96       	adiw	r28, 0x04	; 4
    3c84:	40 e0       	ldi	r20, 0x00	; 0
    3c86:	50 e0       	ldi	r21, 0x00	; 0
    3c88:	6c e8       	ldi	r22, 0x8C	; 140
    3c8a:	71 e4       	ldi	r23, 0x41	; 65
    3c8c:	48 83       	st	Y, r20
    3c8e:	59 83       	std	Y+1, r21	; 0x01
    3c90:	6a 83       	std	Y+2, r22	; 0x02
    3c92:	7b 83       	std	Y+3, r23	; 0x03
    3c94:	24 96       	adiw	r28, 0x04	; 4
    3c96:	18 82       	st	Y, r1
    3c98:	19 82       	std	Y+1, r1	; 0x01
    3c9a:	1a 82       	std	Y+2, r1	; 0x02
    3c9c:	1b 82       	std	Y+3, r1	; 0x03
    3c9e:	24 96       	adiw	r28, 0x04	; 4
    3ca0:	88 83       	st	Y, r24
    3ca2:	99 83       	std	Y+1, r25	; 0x01
    3ca4:	aa 83       	std	Y+2, r26	; 0x02
    3ca6:	bb 83       	std	Y+3, r27	; 0x03
    3ca8:	df 01       	movw	r26, r30
    3caa:	ae 51       	subi	r26, 0x1E	; 30
    3cac:	bf 4f       	sbci	r27, 0xFF	; 255
    3cae:	1d 92       	st	X+, r1
    3cb0:	1d 92       	st	X+, r1
    3cb2:	1d 92       	st	X+, r1
    3cb4:	1c 92       	st	X, r1
    3cb6:	13 97       	sbiw	r26, 0x03	; 3
    3cb8:	14 96       	adiw	r26, 0x04	; 4
    3cba:	cd 92       	st	X+, r12
    3cbc:	dd 92       	st	X+, r13
    3cbe:	ed 92       	st	X+, r14
    3cc0:	fc 92       	st	X, r15
    3cc2:	13 97       	sbiw	r26, 0x03	; 3
    3cc4:	b1 86       	std	Z+9, r11	; 0x09
    3cc6:	a0 86       	std	Z+8, r10	; 0x08
    3cc8:	92 86       	std	Z+10, r9	; 0x0a
    3cca:	83 86       	std	Z+11, r8	; 0x0b
    3ccc:	df 91       	pop	r29
    3cce:	cf 91       	pop	r28
    3cd0:	1f 91       	pop	r17
    3cd2:	0f 91       	pop	r16
    3cd4:	ff 90       	pop	r15
    3cd6:	ef 90       	pop	r14
    3cd8:	df 90       	pop	r13
    3cda:	cf 90       	pop	r12
    3cdc:	bf 90       	pop	r11
    3cde:	af 90       	pop	r10
    3ce0:	9f 90       	pop	r9
    3ce2:	8f 90       	pop	r8
    3ce4:	7f 90       	pop	r7
    3ce6:	6f 90       	pop	r6
    3ce8:	5f 90       	pop	r5
    3cea:	4f 90       	pop	r4
    3cec:	08 95       	ret

00003cee <_ZN7AMS581214getPressure_PaEv>:
    3cee:	fc 01       	movw	r30, r24
    3cf0:	60 81       	ld	r22, Z
    3cf2:	71 81       	ldd	r23, Z+1	; 0x01
    3cf4:	82 81       	ldd	r24, Z+2	; 0x02
    3cf6:	93 81       	ldd	r25, Z+3	; 0x03
    3cf8:	08 95       	ret

00003cfa <_ZN7AMS581213getTransducerEv>:

/* sets the pressure and temperature range based on the chip */
void AMS5812::getTransducer(){
    3cfa:	dc 01       	movw	r26, r24
  // setting the min and max pressures based on which transducer it is
  switch(_type) {
    3cfc:	1b 96       	adiw	r26, 0x0b	; 11
    3cfe:	ec 91       	ld	r30, X
    3d00:	1b 97       	sbiw	r26, 0x0b	; 11
    3d02:	4e 2f       	mov	r20, r30
    3d04:	50 e0       	ldi	r21, 0x00	; 0
    3d06:	46 31       	cpi	r20, 0x16	; 22
    3d08:	51 05       	cpc	r21, r1
    3d0a:	08 f0       	brcs	.+2      	; 0x3d0e <_ZN7AMS581213getTransducerEv+0x14>
    3d0c:	7c c0       	rjmp	.+248    	; 0x3e06 <_ZN7AMS581213getTransducerEv+0x10c>
    3d0e:	fa 01       	movw	r30, r20
    3d10:	ec 5c       	subi	r30, 0xCC	; 204
    3d12:	ff 4f       	sbci	r31, 0xFF	; 255
    3d14:	0c 94 23 31 	jmp	0x6246	; 0x6246 <__tablejump2__>
    case AMS5812_0000_D:
      _pMin = AMS5812_0000_D_P_MIN;
    3d18:	da 96       	adiw	r26, 0x3a	; 58
    3d1a:	4d 91       	ld	r20, X+
    3d1c:	5d 91       	ld	r21, X+
    3d1e:	6d 91       	ld	r22, X+
    3d20:	7c 91       	ld	r23, X
    3d22:	dd 97       	sbiw	r26, 0x3d	; 61
    3d24:	5a 96       	adiw	r26, 0x1a	; 26
    3d26:	4d 93       	st	X+, r20
    3d28:	5d 93       	st	X+, r21
    3d2a:	6d 93       	st	X+, r22
    3d2c:	7c 93       	st	X, r23
    3d2e:	5d 97       	sbiw	r26, 0x1d	; 29
      _pMax = AMS5812_0000_D_P_MAX;
    3d30:	fc 01       	movw	r30, r24
    3d32:	fe 96       	adiw	r30, 0x3e	; 62
    3d34:	5e c0       	rjmp	.+188    	; 0x3df2 <_ZN7AMS581213getTransducerEv+0xf8>
      break;
    case AMS5812_0001_D:  
      _pMin = AMS5812_0001_D_P_MIN;
    3d36:	fc 01       	movw	r30, r24
    3d38:	ee 5b       	subi	r30, 0xBE	; 190
    3d3a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d3c:	4f c0       	rjmp	.+158    	; 0x3ddc <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0001_D_P_MAX;
      break;
    case AMS5812_0000_D_B:
      _pMin = AMS5812_0000_D_B_P_MIN;
    3d3e:	fc 01       	movw	r30, r24
    3d40:	e6 5b       	subi	r30, 0xB6	; 182
    3d42:	ff 4f       	sbci	r31, 0xFF	; 255
    3d44:	4b c0       	rjmp	.+150    	; 0x3ddc <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0000_D_B_P_MAX;
      break;
    case AMS5812_0001_D_B:
      _pMin = AMS5812_0001_D_B_P_MIN;
    3d46:	fc 01       	movw	r30, r24
    3d48:	ee 5a       	subi	r30, 0xAE	; 174
    3d4a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d4c:	47 c0       	rjmp	.+142    	; 0x3ddc <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0001_D_B_P_MAX;
      break;
    case AMS5812_0003_D:
      _pMin = AMS5812_0003_D_P_MIN;
    3d4e:	fc 01       	movw	r30, r24
    3d50:	e6 5a       	subi	r30, 0xA6	; 166
    3d52:	ff 4f       	sbci	r31, 0xFF	; 255
    3d54:	43 c0       	rjmp	.+134    	; 0x3ddc <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0003_D_P_MAX;
      break;
    case AMS5812_0008_D:
      _pMin = AMS5812_0008_D_P_MIN;
    3d56:	fc 01       	movw	r30, r24
    3d58:	ee 59       	subi	r30, 0x9E	; 158
    3d5a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d5c:	3f c0       	rjmp	.+126    	; 0x3ddc <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0008_D_P_MAX;
      break;
    case AMS5812_0015_D:
      _pMin = AMS5812_0015_D_P_MIN;
    3d5e:	fc 01       	movw	r30, r24
    3d60:	e6 59       	subi	r30, 0x96	; 150
    3d62:	ff 4f       	sbci	r31, 0xFF	; 255
    3d64:	3b c0       	rjmp	.+118    	; 0x3ddc <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0015_D_P_MAX;
      break;
    case AMS5812_0003_D_B:
      _pMin = AMS5812_0003_D_B_P_MIN;
    3d66:	fc 01       	movw	r30, r24
    3d68:	ee 58       	subi	r30, 0x8E	; 142
    3d6a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d6c:	37 c0       	rjmp	.+110    	; 0x3ddc <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0003_D_B_P_MAX;
      break;
    case AMS5812_0008_D_B:
      _pMin = AMS5812_0008_D_B_P_MIN;
    3d6e:	fc 01       	movw	r30, r24
    3d70:	e6 58       	subi	r30, 0x86	; 134
    3d72:	ff 4f       	sbci	r31, 0xFF	; 255
    3d74:	33 c0       	rjmp	.+102    	; 0x3ddc <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0008_D_B_P_MAX;
      break;
    case AMS5812_0015_D_B:
      _pMin = AMS5812_0015_D_B_P_MIN;
    3d76:	fc 01       	movw	r30, r24
    3d78:	ee 57       	subi	r30, 0x7E	; 126
    3d7a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d7c:	2f c0       	rjmp	.+94     	; 0x3ddc <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0015_D_B_P_MAX;
      break;
    case AMS5812_0030_D:
      _pMin = AMS5812_0030_D_P_MIN;
    3d7e:	fc 01       	movw	r30, r24
    3d80:	e6 57       	subi	r30, 0x76	; 118
    3d82:	ff 4f       	sbci	r31, 0xFF	; 255
    3d84:	2b c0       	rjmp	.+86     	; 0x3ddc <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0030_D_P_MAX;
      break;
    case AMS5812_0050_D:
      _pMin = AMS5812_0050_D_P_MIN;
    3d86:	fc 01       	movw	r30, r24
    3d88:	ee 56       	subi	r30, 0x6E	; 110
    3d8a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d8c:	27 c0       	rjmp	.+78     	; 0x3ddc <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0050_D_P_MAX;
      break;
    case AMS5812_0150_D:
      _pMin = AMS5812_0150_D_P_MIN;
    3d8e:	fc 01       	movw	r30, r24
    3d90:	e6 56       	subi	r30, 0x66	; 102
    3d92:	ff 4f       	sbci	r31, 0xFF	; 255
    3d94:	23 c0       	rjmp	.+70     	; 0x3ddc <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0150_D_P_MAX;
      break;
    case AMS5812_0300_D:
      _pMin = AMS5812_0300_D_P_MIN;
    3d96:	fc 01       	movw	r30, r24
    3d98:	ee 55       	subi	r30, 0x5E	; 94
    3d9a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d9c:	1f c0       	rjmp	.+62     	; 0x3ddc <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0300_D_P_MAX;
      break;
    case AMS5812_0600_D:
      _pMin = AMS5812_0600_D_P_MIN;
    3d9e:	fc 01       	movw	r30, r24
    3da0:	e6 55       	subi	r30, 0x56	; 86
    3da2:	ff 4f       	sbci	r31, 0xFF	; 255
    3da4:	1b c0       	rjmp	.+54     	; 0x3ddc <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0600_D_P_MAX;
      break;
    case AMS5812_1000_D:
      _pMin = AMS5812_1000_D_P_MIN;
    3da6:	fc 01       	movw	r30, r24
    3da8:	ee 54       	subi	r30, 0x4E	; 78
    3daa:	ff 4f       	sbci	r31, 0xFF	; 255
    3dac:	17 c0       	rjmp	.+46     	; 0x3ddc <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_1000_D_P_MAX;
      break;
    case AMS5812_0030_D_B:
      _pMin = AMS5812_0030_D_B_P_MIN;
    3dae:	fc 01       	movw	r30, r24
    3db0:	e6 54       	subi	r30, 0x46	; 70
    3db2:	ff 4f       	sbci	r31, 0xFF	; 255
    3db4:	13 c0       	rjmp	.+38     	; 0x3ddc <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0030_D_B_P_MAX;
      break;
    case AMS5812_0050_D_B:
      _pMin = AMS5812_0050_D_B_P_MIN;
    3db6:	fc 01       	movw	r30, r24
    3db8:	ee 53       	subi	r30, 0x3E	; 62
    3dba:	ff 4f       	sbci	r31, 0xFF	; 255
    3dbc:	0f c0       	rjmp	.+30     	; 0x3ddc <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0050_D_B_P_MAX;
      break;
    case AMS5812_0150_D_B:
      _pMin = AMS5812_0150_D_B_P_MIN;
    3dbe:	fc 01       	movw	r30, r24
    3dc0:	e6 53       	subi	r30, 0x36	; 54
    3dc2:	ff 4f       	sbci	r31, 0xFF	; 255
    3dc4:	0b c0       	rjmp	.+22     	; 0x3ddc <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0150_D_B_P_MAX;
      break;
    case AMS5812_0150_B:
      _pMin = AMS5812_0150_B_P_MIN;
    3dc6:	fc 01       	movw	r30, r24
    3dc8:	ee 52       	subi	r30, 0x2E	; 46
    3dca:	ff 4f       	sbci	r31, 0xFF	; 255
    3dcc:	07 c0       	rjmp	.+14     	; 0x3ddc <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0150_B_P_MAX;
      break;
    case AMS5812_0150_A:
      _pMin = AMS5812_0150_A_P_MIN;
    3dce:	fc 01       	movw	r30, r24
    3dd0:	e6 52       	subi	r30, 0x26	; 38
    3dd2:	ff 4f       	sbci	r31, 0xFF	; 255
    3dd4:	03 c0       	rjmp	.+6      	; 0x3ddc <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0150_A_P_MAX;
      break;
    case AMS5812_0300_A:
      _pMin = AMS5812_0300_A_P_MIN;
    3dd6:	fc 01       	movw	r30, r24
    3dd8:	ee 51       	subi	r30, 0x1E	; 30
    3dda:	ff 4f       	sbci	r31, 0xFF	; 255
    3ddc:	40 81       	ld	r20, Z
    3dde:	51 81       	ldd	r21, Z+1	; 0x01
    3de0:	62 81       	ldd	r22, Z+2	; 0x02
    3de2:	73 81       	ldd	r23, Z+3	; 0x03
    3de4:	5a 96       	adiw	r26, 0x1a	; 26
    3de6:	4d 93       	st	X+, r20
    3de8:	5d 93       	st	X+, r21
    3dea:	6d 93       	st	X+, r22
    3dec:	7c 93       	st	X, r23
    3dee:	5d 97       	sbiw	r26, 0x1d	; 29
      _pMax = AMS5812_0300_A_P_MAX;
    3df0:	34 96       	adiw	r30, 0x04	; 4
    3df2:	40 81       	ld	r20, Z
    3df4:	51 81       	ldd	r21, Z+1	; 0x01
    3df6:	62 81       	ldd	r22, Z+2	; 0x02
    3df8:	73 81       	ldd	r23, Z+3	; 0x03
    3dfa:	5e 96       	adiw	r26, 0x1e	; 30
    3dfc:	4d 93       	st	X+, r20
    3dfe:	5d 93       	st	X+, r21
    3e00:	6d 93       	st	X+, r22
    3e02:	7c 93       	st	X, r23
    3e04:	91 97       	sbiw	r26, 0x21	; 33
    3e06:	08 95       	ret

00003e08 <_ZN7AMS58129readBytesEPjS0_>:
      break;
  }
}

/* reads pressure and temperature and returns values in counts */
int AMS5812::readBytes(uint16_t* pressureCounts, uint16_t* temperatureCounts){
    3e08:	ef 92       	push	r14
    3e0a:	ff 92       	push	r15
    3e0c:	0f 93       	push	r16
    3e0e:	1f 93       	push	r17
    3e10:	cf 93       	push	r28
    3e12:	df 93       	push	r29
    3e14:	ec 01       	movw	r28, r24
    3e16:	7b 01       	movw	r14, r22
    3e18:	8a 01       	movw	r16, r20
  // read from sensor
  _numBytes = _bus->requestFrom(_address,sizeof(_buffer));
    3e1a:	44 e0       	ldi	r20, 0x04	; 4
    3e1c:	6a 85       	ldd	r22, Y+10	; 0x0a
    3e1e:	88 85       	ldd	r24, Y+8	; 0x08
    3e20:	99 85       	ldd	r25, Y+9	; 0x09
    3e22:	0e 94 4b 2b 	call	0x5696	; 0x5696 <_ZN7TwoWire11requestFromEhh>
    3e26:	90 e0       	ldi	r25, 0x00	; 0
    3e28:	99 8b       	std	Y+17, r25	; 0x11
    3e2a:	88 8b       	std	Y+16, r24	; 0x10
  // put the data in buffer
  if (_numBytes == sizeof(_buffer)) {
    3e2c:	04 97       	sbiw	r24, 0x04	; 4
    3e2e:	09 f0       	breq	.+2      	; 0x3e32 <_ZN7AMS58129readBytesEPjS0_+0x2a>
    3e30:	41 c0       	rjmp	.+130    	; 0x3eb4 <_ZN7AMS58129readBytesEPjS0_+0xac>
    _buffer[0] = _bus->read(); 
    3e32:	88 85       	ldd	r24, Y+8	; 0x08
    3e34:	99 85       	ldd	r25, Y+9	; 0x09
    3e36:	dc 01       	movw	r26, r24
    3e38:	ed 91       	ld	r30, X+
    3e3a:	fc 91       	ld	r31, X
    3e3c:	02 84       	ldd	r0, Z+10	; 0x0a
    3e3e:	f3 85       	ldd	r31, Z+11	; 0x0b
    3e40:	e0 2d       	mov	r30, r0
    3e42:	09 95       	icall
    3e44:	8c 87       	std	Y+12, r24	; 0x0c
    _buffer[1] = _bus->read();
    3e46:	88 85       	ldd	r24, Y+8	; 0x08
    3e48:	99 85       	ldd	r25, Y+9	; 0x09
    3e4a:	dc 01       	movw	r26, r24
    3e4c:	ed 91       	ld	r30, X+
    3e4e:	fc 91       	ld	r31, X
    3e50:	02 84       	ldd	r0, Z+10	; 0x0a
    3e52:	f3 85       	ldd	r31, Z+11	; 0x0b
    3e54:	e0 2d       	mov	r30, r0
    3e56:	09 95       	icall
    3e58:	8d 87       	std	Y+13, r24	; 0x0d
    _buffer[2] = _bus->read();
    3e5a:	88 85       	ldd	r24, Y+8	; 0x08
    3e5c:	99 85       	ldd	r25, Y+9	; 0x09
    3e5e:	dc 01       	movw	r26, r24
    3e60:	ed 91       	ld	r30, X+
    3e62:	fc 91       	ld	r31, X
    3e64:	02 84       	ldd	r0, Z+10	; 0x0a
    3e66:	f3 85       	ldd	r31, Z+11	; 0x0b
    3e68:	e0 2d       	mov	r30, r0
    3e6a:	09 95       	icall
    3e6c:	8e 87       	std	Y+14, r24	; 0x0e
    _buffer[3] = _bus->read();
    3e6e:	88 85       	ldd	r24, Y+8	; 0x08
    3e70:	99 85       	ldd	r25, Y+9	; 0x09
    3e72:	dc 01       	movw	r26, r24
    3e74:	ed 91       	ld	r30, X+
    3e76:	fc 91       	ld	r31, X
    3e78:	02 84       	ldd	r0, Z+10	; 0x0a
    3e7a:	f3 85       	ldd	r31, Z+11	; 0x0b
    3e7c:	e0 2d       	mov	r30, r0
    3e7e:	09 95       	icall
    3e80:	8f 87       	std	Y+15, r24	; 0x0f
    // assemble into a uint16_t
    *pressureCounts = (((uint16_t) (_buffer[0]&0x7F)) <<8) + (((uint16_t) _buffer[1]));
    3e82:	8c 85       	ldd	r24, Y+12	; 0x0c
    3e84:	8f 77       	andi	r24, 0x7F	; 127
    3e86:	90 e0       	ldi	r25, 0x00	; 0
    3e88:	98 2f       	mov	r25, r24
    3e8a:	88 27       	eor	r24, r24
    3e8c:	2d 85       	ldd	r18, Y+13	; 0x0d
    3e8e:	82 0f       	add	r24, r18
    3e90:	91 1d       	adc	r25, r1
    3e92:	f7 01       	movw	r30, r14
    3e94:	91 83       	std	Z+1, r25	; 0x01
    3e96:	80 83       	st	Z, r24
    *temperatureCounts = (((uint16_t) (_buffer[2]&0x7F)) <<8) + (((uint16_t) _buffer[3]));
    3e98:	8e 85       	ldd	r24, Y+14	; 0x0e
    3e9a:	8f 77       	andi	r24, 0x7F	; 127
    3e9c:	90 e0       	ldi	r25, 0x00	; 0
    3e9e:	98 2f       	mov	r25, r24
    3ea0:	88 27       	eor	r24, r24
    3ea2:	2f 85       	ldd	r18, Y+15	; 0x0f
    3ea4:	82 0f       	add	r24, r18
    3ea6:	91 1d       	adc	r25, r1
    3ea8:	d8 01       	movw	r26, r16
    3eaa:	8d 93       	st	X+, r24
    3eac:	9c 93       	st	X, r25
    _status = 1;
    3eae:	81 e0       	ldi	r24, 0x01	; 1
    3eb0:	90 e0       	ldi	r25, 0x00	; 0
    3eb2:	02 c0       	rjmp	.+4      	; 0x3eb8 <_ZN7AMS58129readBytesEPjS0_+0xb0>
  } else {
    _status = -1;
    3eb4:	8f ef       	ldi	r24, 0xFF	; 255
    3eb6:	9f ef       	ldi	r25, 0xFF	; 255
    3eb8:	9d 8b       	std	Y+21, r25	; 0x15
    3eba:	8c 8b       	std	Y+20, r24	; 0x14
  }
  return _status;
}
    3ebc:	8c 89       	ldd	r24, Y+20	; 0x14
    3ebe:	9d 89       	ldd	r25, Y+21	; 0x15
    3ec0:	df 91       	pop	r29
    3ec2:	cf 91       	pop	r28
    3ec4:	1f 91       	pop	r17
    3ec6:	0f 91       	pop	r16
    3ec8:	ff 90       	pop	r15
    3eca:	ef 90       	pop	r14
    3ecc:	08 95       	ret

00003ece <_ZN7AMS58125beginEv>:
  // transducer type
  _type = type; 
}

/* starts the I2C communication and sets the pressure and temperature ranges using getTransducer */
int AMS5812::begin(){
    3ece:	cf 92       	push	r12
    3ed0:	df 92       	push	r13
    3ed2:	ef 92       	push	r14
    3ed4:	ff 92       	push	r15
    3ed6:	0f 93       	push	r16
    3ed8:	1f 93       	push	r17
    3eda:	cf 93       	push	r28
    3edc:	df 93       	push	r29
    3ede:	ec 01       	movw	r28, r24
  // starting the I2C bus
  _bus->begin();
    3ee0:	88 85       	ldd	r24, Y+8	; 0x08
    3ee2:	99 85       	ldd	r25, Y+9	; 0x09
    3ee4:	0e 94 b4 2a 	call	0x5568	; 0x5568 <_ZN7TwoWire5beginEv>
  // setting the I2C clock
  _bus->setClock(_i2cRate);
    3ee8:	4a a1       	ldd	r20, Y+34	; 0x22
    3eea:	5b a1       	ldd	r21, Y+35	; 0x23
    3eec:	6c a1       	ldd	r22, Y+36	; 0x24
    3eee:	7d a1       	ldd	r23, Y+37	; 0x25
    3ef0:	88 85       	ldd	r24, Y+8	; 0x08
    3ef2:	99 85       	ldd	r25, Y+9	; 0x09
    3ef4:	0e 94 c6 2a 	call	0x558c	; 0x558c <_ZN7TwoWire8setClockEm>
  // setting the min and max pressure based on the chip
  getTransducer();
    3ef8:	ce 01       	movw	r24, r28
    3efa:	0e 94 7d 1e 	call	0x3cfa	; 0x3cfa <_ZN7AMS581213getTransducerEv>
  // checking to see if we can talk with the sensor
  for (size_t i=0; i < _maxAttempts; i++) {
    3efe:	00 e0       	ldi	r16, 0x00	; 0
    3f00:	10 e0       	ldi	r17, 0x00	; 0
    _status = readBytes(&_pressureCounts,&_temperatureCounts);
    3f02:	7e 01       	movw	r14, r28
    3f04:	88 e1       	ldi	r24, 0x18	; 24
    3f06:	e8 0e       	add	r14, r24
    3f08:	f1 1c       	adc	r15, r1
    3f0a:	6e 01       	movw	r12, r28
    3f0c:	86 e1       	ldi	r24, 0x16	; 22
    3f0e:	c8 0e       	add	r12, r24
    3f10:	d1 1c       	adc	r13, r1
  // setting the I2C clock
  _bus->setClock(_i2cRate);
  // setting the min and max pressure based on the chip
  getTransducer();
  // checking to see if we can talk with the sensor
  for (size_t i=0; i < _maxAttempts; i++) {
    3f12:	8a 89       	ldd	r24, Y+18	; 0x12
    3f14:	9b 89       	ldd	r25, Y+19	; 0x13
    3f16:	08 17       	cp	r16, r24
    3f18:	19 07       	cpc	r17, r25
    3f1a:	98 f4       	brcc	.+38     	; 0x3f42 <_ZN7AMS58125beginEv+0x74>
    _status = readBytes(&_pressureCounts,&_temperatureCounts);
    3f1c:	a7 01       	movw	r20, r14
    3f1e:	b6 01       	movw	r22, r12
    3f20:	ce 01       	movw	r24, r28
    3f22:	0e 94 04 1f 	call	0x3e08	; 0x3e08 <_ZN7AMS58129readBytesEPjS0_>
    3f26:	9d 8b       	std	Y+21, r25	; 0x15
    3f28:	8c 8b       	std	Y+20, r24	; 0x14
    if (_status > 0) {break;}
    3f2a:	18 16       	cp	r1, r24
    3f2c:	19 06       	cpc	r1, r25
    3f2e:	4c f0       	brlt	.+18     	; 0x3f42 <_ZN7AMS58125beginEv+0x74>
    delay(10);
    3f30:	6a e0       	ldi	r22, 0x0A	; 10
    3f32:	70 e0       	ldi	r23, 0x00	; 0
    3f34:	80 e0       	ldi	r24, 0x00	; 0
    3f36:	90 e0       	ldi	r25, 0x00	; 0
    3f38:	0e 94 af 1a 	call	0x355e	; 0x355e <delay>
  // setting the I2C clock
  _bus->setClock(_i2cRate);
  // setting the min and max pressure based on the chip
  getTransducer();
  // checking to see if we can talk with the sensor
  for (size_t i=0; i < _maxAttempts; i++) {
    3f3c:	0f 5f       	subi	r16, 0xFF	; 255
    3f3e:	1f 4f       	sbci	r17, 0xFF	; 255
    3f40:	e8 cf       	rjmp	.-48     	; 0x3f12 <_ZN7AMS58125beginEv+0x44>
    _status = readBytes(&_pressureCounts,&_temperatureCounts);
    if (_status > 0) {break;}
    delay(10);
  }
  return _status;
}
    3f42:	8c 89       	ldd	r24, Y+20	; 0x14
    3f44:	9d 89       	ldd	r25, Y+21	; 0x15
    3f46:	df 91       	pop	r29
    3f48:	cf 91       	pop	r28
    3f4a:	1f 91       	pop	r17
    3f4c:	0f 91       	pop	r16
    3f4e:	ff 90       	pop	r15
    3f50:	ef 90       	pop	r14
    3f52:	df 90       	pop	r13
    3f54:	cf 90       	pop	r12
    3f56:	08 95       	ret

00003f58 <_ZN7AMS581210readSensorEv>:

/* reads data from the sensor */
int AMS5812::readSensor(){
    3f58:	4f 92       	push	r4
    3f5a:	5f 92       	push	r5
    3f5c:	6f 92       	push	r6
    3f5e:	7f 92       	push	r7
    3f60:	8f 92       	push	r8
    3f62:	9f 92       	push	r9
    3f64:	af 92       	push	r10
    3f66:	bf 92       	push	r11
    3f68:	cf 92       	push	r12
    3f6a:	df 92       	push	r13
    3f6c:	ef 92       	push	r14
    3f6e:	ff 92       	push	r15
    3f70:	0f 93       	push	r16
    3f72:	1f 93       	push	r17
    3f74:	cf 93       	push	r28
    3f76:	df 93       	push	r29
    3f78:	ec 01       	movw	r28, r24
  // get pressure and temperature off transducer
  _status = readBytes(&_pressureCounts, &_temperatureCounts);
    3f7a:	ac 01       	movw	r20, r24
    3f7c:	48 5e       	subi	r20, 0xE8	; 232
    3f7e:	5f 4f       	sbci	r21, 0xFF	; 255
    3f80:	bc 01       	movw	r22, r24
    3f82:	6a 5e       	subi	r22, 0xEA	; 234
    3f84:	7f 4f       	sbci	r23, 0xFF	; 255
    3f86:	0e 94 04 1f 	call	0x3e08	; 0x3e08 <_ZN7AMS58129readBytesEPjS0_>
    3f8a:	8c 01       	movw	r16, r24
    3f8c:	9d 8b       	std	Y+21, r25	; 0x15
    3f8e:	8c 8b       	std	Y+20, r24	; 0x14
  // convert counts to pressure, PA
  _data.Pressure_Pa = ((_pressureCounts - _digOutPmin)/((_digOutPmax - _digOutPmin)/(_pMax - _pMin)) + _pMin) * _psi2pa;
    3f90:	6a a4       	ldd	r6, Y+42	; 0x2a
    3f92:	7b a4       	ldd	r7, Y+43	; 0x2b
    3f94:	ca 8c       	ldd	r12, Y+26	; 0x1a
    3f96:	db 8c       	ldd	r13, Y+27	; 0x1b
    3f98:	ec 8c       	ldd	r14, Y+28	; 0x1c
    3f9a:	fd 8c       	ldd	r15, Y+29	; 0x1d
    3f9c:	6e 89       	ldd	r22, Y+22	; 0x16
    3f9e:	7f 89       	ldd	r23, Y+23	; 0x17
    3fa0:	66 19       	sub	r22, r6
    3fa2:	77 09       	sbc	r23, r7
    3fa4:	80 e0       	ldi	r24, 0x00	; 0
    3fa6:	90 e0       	ldi	r25, 0x00	; 0
    3fa8:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__floatunsisf>
    3fac:	4b 01       	movw	r8, r22
    3fae:	5c 01       	movw	r10, r24
    3fb0:	6c a5       	ldd	r22, Y+44	; 0x2c
    3fb2:	7d a5       	ldd	r23, Y+45	; 0x2d
    3fb4:	66 19       	sub	r22, r6
    3fb6:	77 09       	sbc	r23, r7
    3fb8:	07 2e       	mov	r0, r23
    3fba:	00 0c       	add	r0, r0
    3fbc:	88 0b       	sbc	r24, r24
    3fbe:	99 0b       	sbc	r25, r25
    3fc0:	0e 94 11 16 	call	0x2c22	; 0x2c22 <__floatsisf>
    3fc4:	2b 01       	movw	r4, r22
    3fc6:	3c 01       	movw	r6, r24
    3fc8:	a7 01       	movw	r20, r14
    3fca:	96 01       	movw	r18, r12
    3fcc:	6e 8d       	ldd	r22, Y+30	; 0x1e
    3fce:	7f 8d       	ldd	r23, Y+31	; 0x1f
    3fd0:	88 a1       	ldd	r24, Y+32	; 0x20
    3fd2:	99 a1       	ldd	r25, Y+33	; 0x21
    3fd4:	0e 94 fa 14 	call	0x29f4	; 0x29f4 <__subsf3>
    3fd8:	9b 01       	movw	r18, r22
    3fda:	ac 01       	movw	r20, r24
    3fdc:	c3 01       	movw	r24, r6
    3fde:	b2 01       	movw	r22, r4
    3fe0:	0e 94 67 15 	call	0x2ace	; 0x2ace <__divsf3>
    3fe4:	9b 01       	movw	r18, r22
    3fe6:	ac 01       	movw	r20, r24
    3fe8:	c5 01       	movw	r24, r10
    3fea:	b4 01       	movw	r22, r8
    3fec:	0e 94 67 15 	call	0x2ace	; 0x2ace <__divsf3>
    3ff0:	a7 01       	movw	r20, r14
    3ff2:	96 01       	movw	r18, r12
    3ff4:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <__addsf3>
    3ff8:	2e a1       	ldd	r18, Y+38	; 0x26
    3ffa:	3f a1       	ldd	r19, Y+39	; 0x27
    3ffc:	48 a5       	ldd	r20, Y+40	; 0x28
    3ffe:	59 a5       	ldd	r21, Y+41	; 0x29
    4000:	0e 94 4c 30 	call	0x6098	; 0x6098 <__mulsf3>
    4004:	68 83       	st	Y, r22
    4006:	79 83       	std	Y+1, r23	; 0x01
    4008:	8a 83       	std	Y+2, r24	; 0x02
    400a:	9b 83       	std	Y+3, r25	; 0x03
  // convert counts to temperature, C
  _data.Temp_C = ((_temperatureCounts - _digOutTmin)/((_digOutTmax - _digOutTmin)/(_tMax - _tMin)) + _tMin);
    400c:	6e a4       	ldd	r6, Y+46	; 0x2e
    400e:	7f a4       	ldd	r7, Y+47	; 0x2f
    4010:	ca a8       	ldd	r12, Y+50	; 0x32
    4012:	db a8       	ldd	r13, Y+51	; 0x33
    4014:	ec a8       	ldd	r14, Y+52	; 0x34
    4016:	fd a8       	ldd	r15, Y+53	; 0x35
    4018:	68 8d       	ldd	r22, Y+24	; 0x18
    401a:	79 8d       	ldd	r23, Y+25	; 0x19
    401c:	66 19       	sub	r22, r6
    401e:	77 09       	sbc	r23, r7
    4020:	80 e0       	ldi	r24, 0x00	; 0
    4022:	90 e0       	ldi	r25, 0x00	; 0
    4024:	0e 94 0f 16 	call	0x2c1e	; 0x2c1e <__floatunsisf>
    4028:	4b 01       	movw	r8, r22
    402a:	5c 01       	movw	r10, r24
    402c:	68 a9       	ldd	r22, Y+48	; 0x30
    402e:	79 a9       	ldd	r23, Y+49	; 0x31
    4030:	66 19       	sub	r22, r6
    4032:	77 09       	sbc	r23, r7
    4034:	07 2e       	mov	r0, r23
    4036:	00 0c       	add	r0, r0
    4038:	88 0b       	sbc	r24, r24
    403a:	99 0b       	sbc	r25, r25
    403c:	0e 94 11 16 	call	0x2c22	; 0x2c22 <__floatsisf>
    4040:	2b 01       	movw	r4, r22
    4042:	3c 01       	movw	r6, r24
    4044:	a7 01       	movw	r20, r14
    4046:	96 01       	movw	r18, r12
    4048:	6e a9       	ldd	r22, Y+54	; 0x36
    404a:	7f a9       	ldd	r23, Y+55	; 0x37
    404c:	88 ad       	ldd	r24, Y+56	; 0x38
    404e:	99 ad       	ldd	r25, Y+57	; 0x39
    4050:	0e 94 fa 14 	call	0x29f4	; 0x29f4 <__subsf3>
    4054:	9b 01       	movw	r18, r22
    4056:	ac 01       	movw	r20, r24
    4058:	c3 01       	movw	r24, r6
    405a:	b2 01       	movw	r22, r4
    405c:	0e 94 67 15 	call	0x2ace	; 0x2ace <__divsf3>
    4060:	9b 01       	movw	r18, r22
    4062:	ac 01       	movw	r20, r24
    4064:	c5 01       	movw	r24, r10
    4066:	b4 01       	movw	r22, r8
    4068:	0e 94 67 15 	call	0x2ace	; 0x2ace <__divsf3>
    406c:	a7 01       	movw	r20, r14
    406e:	96 01       	movw	r18, r12
    4070:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <__addsf3>
    4074:	6c 83       	std	Y+4, r22	; 0x04
    4076:	7d 83       	std	Y+5, r23	; 0x05
    4078:	8e 83       	std	Y+6, r24	; 0x06
    407a:	9f 83       	std	Y+7, r25	; 0x07
  return _status;
}
    407c:	c8 01       	movw	r24, r16
    407e:	df 91       	pop	r29
    4080:	cf 91       	pop	r28
    4082:	1f 91       	pop	r17
    4084:	0f 91       	pop	r16
    4086:	ff 90       	pop	r15
    4088:	ef 90       	pop	r14
    408a:	df 90       	pop	r13
    408c:	cf 90       	pop	r12
    408e:	bf 90       	pop	r11
    4090:	af 90       	pop	r10
    4092:	9f 90       	pop	r9
    4094:	8f 90       	pop	r8
    4096:	7f 90       	pop	r7
    4098:	6f 90       	pop	r6
    409a:	5f 90       	pop	r5
    409c:	4f 90       	pop	r4
    409e:	08 95       	ret

000040a0 <_ZN14TFT_22_ILI9225C1Eaaaah>:
#endif
    for (uint16_t i = 0; i < h * w; ++i) {
        _spiWrite16(bitmap[i]);
    }
    SPI_CS_HIGH();
    endWrite();
    40a0:	ef 92       	push	r14
    40a2:	0f 93       	push	r16
    40a4:	cf 93       	push	r28
    40a6:	df 93       	push	r29
    40a8:	ec 01       	movw	r28, r24
    40aa:	88 e1       	ldi	r24, 0x18	; 24
    40ac:	e6 e0       	ldi	r30, 0x06	; 6
    40ae:	f1 e0       	ldi	r31, 0x01	; 1
    40b0:	de 01       	movw	r26, r28
    40b2:	5c 96       	adiw	r26, 0x1c	; 28
    40b4:	01 90       	ld	r0, Z+
    40b6:	0d 92       	st	X+, r0
    40b8:	8a 95       	dec	r24
    40ba:	e1 f7       	brne	.-8      	; 0x40b4 <_ZN14TFT_22_ILI9225C1Eaaaah+0x14>
    40bc:	6e 83       	std	Y+6, r22	; 0x06
    40be:	4f 83       	std	Y+7, r20	; 0x07
    40c0:	28 87       	std	Y+8, r18	; 0x08
    40c2:	8f ef       	ldi	r24, 0xFF	; 255
    40c4:	8a 87       	std	Y+10, r24	; 0x0a
    40c6:	89 87       	std	Y+9, r24	; 0x09
    40c8:	0b 87       	std	Y+11, r16	; 0x0b
    40ca:	eb 8e       	std	Y+27, r14	; 0x1b
    40cc:	81 e0       	ldi	r24, 0x01	; 1
    40ce:	8c ab       	std	Y+52, r24	; 0x34
    40d0:	fe 01       	movw	r30, r28
    40d2:	fe 96       	adiw	r30, 0x3e	; 62
    40d4:	10 82       	st	Z, r1
    40d6:	11 82       	std	Z+1, r1	; 0x01
    40d8:	12 82       	std	Z+2, r1	; 0x02
    40da:	13 82       	std	Z+3, r1	; 0x03
    40dc:	ce 5b       	subi	r28, 0xBE	; 190
    40de:	df 4f       	sbci	r29, 0xFF	; 255
    40e0:	19 82       	std	Y+1, r1	; 0x01
    40e2:	18 82       	st	Y, r1
    40e4:	df 91       	pop	r29
    40e6:	cf 91       	pop	r28
    40e8:	0f 91       	pop	r16
    40ea:	ef 90       	pop	r14
    40ec:	08 95       	ret

000040ee <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_>:
    40ee:	cf 93       	push	r28
    40f0:	df 93       	push	r29
    40f2:	ec 01       	movw	r28, r24
    40f4:	db 01       	movw	r26, r22
    40f6:	fa 01       	movw	r30, r20
    40f8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    40fa:	82 30       	cpi	r24, 0x02	; 2
    40fc:	a9 f0       	breq	.+42     	; 0x4128 <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_+0x3a>
    40fe:	83 30       	cpi	r24, 0x03	; 3
    4100:	29 f1       	breq	.+74     	; 0x414c <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_+0x5e>
    4102:	81 30       	cpi	r24, 0x01	; 1
    4104:	a1 f5       	brne	.+104    	; 0x416e <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_+0x80>
    4106:	8a 81       	ldd	r24, Y+2	; 0x02
    4108:	9b 81       	ldd	r25, Y+3	; 0x03
    410a:	01 97       	sbiw	r24, 0x01	; 1
    410c:	20 81       	ld	r18, Z
    410e:	31 81       	ldd	r19, Z+1	; 0x01
    4110:	82 1b       	sub	r24, r18
    4112:	93 0b       	sbc	r25, r19
    4114:	91 83       	std	Z+1, r25	; 0x01
    4116:	80 83       	st	Z, r24
    4118:	2d 91       	ld	r18, X+
    411a:	3c 91       	ld	r19, X
    411c:	11 97       	sbiw	r26, 0x01	; 1
    411e:	8d 93       	st	X+, r24
    4120:	9c 93       	st	X, r25
    4122:	31 83       	std	Z+1, r19	; 0x01
    4124:	20 83       	st	Z, r18
    4126:	23 c0       	rjmp	.+70     	; 0x416e <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_+0x80>
    4128:	88 81       	ld	r24, Y
    412a:	99 81       	ldd	r25, Y+1	; 0x01
    412c:	01 97       	sbiw	r24, 0x01	; 1
    412e:	2d 91       	ld	r18, X+
    4130:	3c 91       	ld	r19, X
    4132:	11 97       	sbiw	r26, 0x01	; 1
    4134:	82 1b       	sub	r24, r18
    4136:	93 0b       	sbc	r25, r19
    4138:	8d 93       	st	X+, r24
    413a:	9c 93       	st	X, r25
    413c:	8a 81       	ldd	r24, Y+2	; 0x02
    413e:	9b 81       	ldd	r25, Y+3	; 0x03
    4140:	01 97       	sbiw	r24, 0x01	; 1
    4142:	20 81       	ld	r18, Z
    4144:	31 81       	ldd	r19, Z+1	; 0x01
    4146:	82 1b       	sub	r24, r18
    4148:	93 0b       	sbc	r25, r19
    414a:	0f c0       	rjmp	.+30     	; 0x416a <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_+0x7c>
    414c:	88 81       	ld	r24, Y
    414e:	99 81       	ldd	r25, Y+1	; 0x01
    4150:	01 97       	sbiw	r24, 0x01	; 1
    4152:	2d 91       	ld	r18, X+
    4154:	3c 91       	ld	r19, X
    4156:	11 97       	sbiw	r26, 0x01	; 1
    4158:	82 1b       	sub	r24, r18
    415a:	93 0b       	sbc	r25, r19
    415c:	11 96       	adiw	r26, 0x01	; 1
    415e:	9c 93       	st	X, r25
    4160:	8e 93       	st	-X, r24
    4162:	20 81       	ld	r18, Z
    4164:	31 81       	ldd	r19, Z+1	; 0x01
    4166:	2d 93       	st	X+, r18
    4168:	3c 93       	st	X, r19
    416a:	91 83       	std	Z+1, r25	; 0x01
    416c:	80 83       	st	Z, r24
    416e:	df 91       	pop	r29
    4170:	cf 91       	pop	r28
    4172:	08 95       	ret

00004174 <_ZN14TFT_22_ILI922512setBacklightEb>:
    4174:	fc 01       	movw	r30, r24
    4176:	65 ab       	std	Z+53, r22	; 0x35
    4178:	83 85       	ldd	r24, Z+11	; 0x0b
    417a:	88 23       	and	r24, r24
    417c:	49 f0       	breq	.+18     	; 0x4190 <_ZN14TFT_22_ILI922512setBacklightEb+0x1c>
    417e:	66 23       	and	r22, r22
    4180:	19 f0       	breq	.+6      	; 0x4188 <_ZN14TFT_22_ILI922512setBacklightEb+0x14>
    4182:	63 8d       	ldd	r22, Z+27	; 0x1b
    4184:	70 e0       	ldi	r23, 0x00	; 0
    4186:	02 c0       	rjmp	.+4      	; 0x418c <_ZN14TFT_22_ILI922512setBacklightEb+0x18>
    4188:	60 e0       	ldi	r22, 0x00	; 0
    418a:	70 e0       	ldi	r23, 0x00	; 0
    418c:	0c 94 53 2b 	jmp	0x56a6	; 0x56a6 <analogWrite>
    4190:	08 95       	ret

00004192 <_ZN14TFT_22_ILI922514setOrientationEh>:
    4192:	fc 01       	movw	r30, r24
    4194:	63 70       	andi	r22, 0x03	; 3
    4196:	62 8f       	std	Z+26, r22	; 0x1a
    4198:	62 30       	cpi	r22, 0x02	; 2
    419a:	21 f0       	breq	.+8      	; 0x41a4 <_ZN14TFT_22_ILI922514setOrientationEh+0x12>
    419c:	63 30       	cpi	r22, 0x03	; 3
    419e:	49 f0       	breq	.+18     	; 0x41b2 <_ZN14TFT_22_ILI922514setOrientationEh+0x20>
    41a0:	61 30       	cpi	r22, 0x01	; 1
    41a2:	39 f0       	breq	.+14     	; 0x41b2 <_ZN14TFT_22_ILI922514setOrientationEh+0x20>
    41a4:	80 eb       	ldi	r24, 0xB0	; 176
    41a6:	90 e0       	ldi	r25, 0x00	; 0
    41a8:	91 83       	std	Z+1, r25	; 0x01
    41aa:	80 83       	st	Z, r24
    41ac:	8c ed       	ldi	r24, 0xDC	; 220
    41ae:	90 e0       	ldi	r25, 0x00	; 0
    41b0:	06 c0       	rjmp	.+12     	; 0x41be <_ZN14TFT_22_ILI922514setOrientationEh+0x2c>
    41b2:	8c ed       	ldi	r24, 0xDC	; 220
    41b4:	90 e0       	ldi	r25, 0x00	; 0
    41b6:	91 83       	std	Z+1, r25	; 0x01
    41b8:	80 83       	st	Z, r24
    41ba:	80 eb       	ldi	r24, 0xB0	; 176
    41bc:	90 e0       	ldi	r25, 0x00	; 0
    41be:	93 83       	std	Z+3, r25	; 0x03
    41c0:	82 83       	std	Z+2, r24	; 0x02
    41c2:	08 95       	ret

000041c4 <_ZN14TFT_22_ILI92254maxXEv>:
    41c4:	fc 01       	movw	r30, r24
    41c6:	80 81       	ld	r24, Z
    41c8:	91 81       	ldd	r25, Z+1	; 0x01
    41ca:	08 95       	ret

000041cc <_ZN14TFT_22_ILI92254maxYEv>:
    41cc:	fc 01       	movw	r30, r24
    41ce:	82 81       	ldd	r24, Z+2	; 0x02
    41d0:	93 81       	ldd	r25, Z+3	; 0x03
    41d2:	08 95       	ret

000041d4 <_ZN14TFT_22_ILI922515_writeCommand16Ej>:
    41d4:	cf 93       	push	r28
    41d6:	df 93       	push	r29
    41d8:	fc 01       	movw	r30, r24
    41da:	a0 89       	ldd	r26, Z+16	; 0x10
    41dc:	b1 89       	ldd	r27, Z+17	; 0x11
    41de:	9c 91       	ld	r25, X
    41e0:	81 8d       	ldd	r24, Z+25	; 0x19
    41e2:	80 95       	com	r24
    41e4:	89 23       	and	r24, r25
    41e6:	8c 93       	st	X, r24
    41e8:	a4 89       	ldd	r26, Z+20	; 0x14
    41ea:	b5 89       	ldd	r27, Z+21	; 0x15
    41ec:	9c 91       	ld	r25, X
    41ee:	80 8d       	ldd	r24, Z+24	; 0x18
    41f0:	80 95       	com	r24
    41f2:	89 23       	and	r24, r25
    41f4:	8c 93       	st	X, r24
    41f6:	82 85       	ldd	r24, Z+10	; 0x0a
    41f8:	87 ff       	sbrs	r24, 7
    41fa:	11 c0       	rjmp	.+34     	; 0x421e <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x4a>
    41fc:	7e bd       	out	0x2e, r23	; 46
    41fe:	0d b4       	in	r0, 0x2d	; 45
    4200:	07 fe       	sbrs	r0, 7
    4202:	fd cf       	rjmp	.-6      	; 0x41fe <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x2a>
    4204:	6e bd       	out	0x2e, r22	; 46
    4206:	0d b4       	in	r0, 0x2d	; 45
    4208:	07 fe       	sbrs	r0, 7
    420a:	fd cf       	rjmp	.-6      	; 0x4206 <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x32>
    420c:	a4 89       	ldd	r26, Z+20	; 0x14
    420e:	b5 89       	ldd	r27, Z+21	; 0x15
    4210:	9c 91       	ld	r25, X
    4212:	80 8d       	ldd	r24, Z+24	; 0x18
    4214:	89 2b       	or	r24, r25
    4216:	8c 93       	st	X, r24
    4218:	df 91       	pop	r29
    421a:	cf 91       	pop	r28
    421c:	08 95       	ret
    421e:	20 e1       	ldi	r18, 0x10	; 16
    4220:	30 e0       	ldi	r19, 0x00	; 0
    4222:	40 e0       	ldi	r20, 0x00	; 0
    4224:	50 e8       	ldi	r21, 0x80	; 128
    4226:	a4 85       	ldd	r26, Z+12	; 0x0c
    4228:	b5 85       	ldd	r27, Z+13	; 0x0d
    422a:	86 89       	ldd	r24, Z+22	; 0x16
    422c:	eb 01       	movw	r28, r22
    422e:	c4 23       	and	r28, r20
    4230:	d5 23       	and	r29, r21
    4232:	9c 91       	ld	r25, X
    4234:	cd 2b       	or	r28, r29
    4236:	11 f0       	breq	.+4      	; 0x423c <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x68>
    4238:	89 2b       	or	r24, r25
    423a:	02 c0       	rjmp	.+4      	; 0x4240 <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x6c>
    423c:	80 95       	com	r24
    423e:	89 23       	and	r24, r25
    4240:	8c 93       	st	X, r24
    4242:	a6 85       	ldd	r26, Z+14	; 0x0e
    4244:	b7 85       	ldd	r27, Z+15	; 0x0f
    4246:	9c 91       	ld	r25, X
    4248:	87 89       	ldd	r24, Z+23	; 0x17
    424a:	89 2b       	or	r24, r25
    424c:	8c 93       	st	X, r24
    424e:	a6 85       	ldd	r26, Z+14	; 0x0e
    4250:	b7 85       	ldd	r27, Z+15	; 0x0f
    4252:	9c 91       	ld	r25, X
    4254:	87 89       	ldd	r24, Z+23	; 0x17
    4256:	80 95       	com	r24
    4258:	89 23       	and	r24, r25
    425a:	8c 93       	st	X, r24
    425c:	56 95       	lsr	r21
    425e:	47 95       	ror	r20
    4260:	21 50       	subi	r18, 0x01	; 1
    4262:	31 09       	sbc	r19, r1
    4264:	01 f7       	brne	.-64     	; 0x4226 <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x52>
    4266:	d2 cf       	rjmp	.-92     	; 0x420c <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x38>

00004268 <_ZN14TFT_22_ILI922512_writeData16Ej>:
    4268:	cf 93       	push	r28
    426a:	df 93       	push	r29
    426c:	fc 01       	movw	r30, r24
    426e:	a0 89       	ldd	r26, Z+16	; 0x10
    4270:	b1 89       	ldd	r27, Z+17	; 0x11
    4272:	9c 91       	ld	r25, X
    4274:	81 8d       	ldd	r24, Z+25	; 0x19
    4276:	89 2b       	or	r24, r25
    4278:	8c 93       	st	X, r24
    427a:	a4 89       	ldd	r26, Z+20	; 0x14
    427c:	b5 89       	ldd	r27, Z+21	; 0x15
    427e:	9c 91       	ld	r25, X
    4280:	80 8d       	ldd	r24, Z+24	; 0x18
    4282:	80 95       	com	r24
    4284:	89 23       	and	r24, r25
    4286:	8c 93       	st	X, r24
    4288:	82 85       	ldd	r24, Z+10	; 0x0a
    428a:	87 ff       	sbrs	r24, 7
    428c:	11 c0       	rjmp	.+34     	; 0x42b0 <_ZN14TFT_22_ILI922512_writeData16Ej+0x48>
    428e:	7e bd       	out	0x2e, r23	; 46
    4290:	0d b4       	in	r0, 0x2d	; 45
    4292:	07 fe       	sbrs	r0, 7
    4294:	fd cf       	rjmp	.-6      	; 0x4290 <_ZN14TFT_22_ILI922512_writeData16Ej+0x28>
    4296:	6e bd       	out	0x2e, r22	; 46
    4298:	0d b4       	in	r0, 0x2d	; 45
    429a:	07 fe       	sbrs	r0, 7
    429c:	fd cf       	rjmp	.-6      	; 0x4298 <_ZN14TFT_22_ILI922512_writeData16Ej+0x30>
    429e:	a4 89       	ldd	r26, Z+20	; 0x14
    42a0:	b5 89       	ldd	r27, Z+21	; 0x15
    42a2:	9c 91       	ld	r25, X
    42a4:	80 8d       	ldd	r24, Z+24	; 0x18
    42a6:	89 2b       	or	r24, r25
    42a8:	8c 93       	st	X, r24
    42aa:	df 91       	pop	r29
    42ac:	cf 91       	pop	r28
    42ae:	08 95       	ret
    42b0:	20 e1       	ldi	r18, 0x10	; 16
    42b2:	30 e0       	ldi	r19, 0x00	; 0
    42b4:	40 e0       	ldi	r20, 0x00	; 0
    42b6:	50 e8       	ldi	r21, 0x80	; 128
    42b8:	a4 85       	ldd	r26, Z+12	; 0x0c
    42ba:	b5 85       	ldd	r27, Z+13	; 0x0d
    42bc:	86 89       	ldd	r24, Z+22	; 0x16
    42be:	eb 01       	movw	r28, r22
    42c0:	c4 23       	and	r28, r20
    42c2:	d5 23       	and	r29, r21
    42c4:	9c 91       	ld	r25, X
    42c6:	cd 2b       	or	r28, r29
    42c8:	11 f0       	breq	.+4      	; 0x42ce <_ZN14TFT_22_ILI922512_writeData16Ej+0x66>
    42ca:	89 2b       	or	r24, r25
    42cc:	02 c0       	rjmp	.+4      	; 0x42d2 <_ZN14TFT_22_ILI922512_writeData16Ej+0x6a>
    42ce:	80 95       	com	r24
    42d0:	89 23       	and	r24, r25
    42d2:	8c 93       	st	X, r24
    42d4:	a6 85       	ldd	r26, Z+14	; 0x0e
    42d6:	b7 85       	ldd	r27, Z+15	; 0x0f
    42d8:	9c 91       	ld	r25, X
    42da:	87 89       	ldd	r24, Z+23	; 0x17
    42dc:	89 2b       	or	r24, r25
    42de:	8c 93       	st	X, r24
    42e0:	a6 85       	ldd	r26, Z+14	; 0x0e
    42e2:	b7 85       	ldd	r27, Z+15	; 0x0f
    42e4:	9c 91       	ld	r25, X
    42e6:	87 89       	ldd	r24, Z+23	; 0x17
    42e8:	80 95       	com	r24
    42ea:	89 23       	and	r24, r25
    42ec:	8c 93       	st	X, r24
    42ee:	56 95       	lsr	r21
    42f0:	47 95       	ror	r20
    42f2:	21 50       	subi	r18, 0x01	; 1
    42f4:	31 09       	sbc	r19, r1
    42f6:	01 f7       	brne	.-64     	; 0x42b8 <_ZN14TFT_22_ILI922512_writeData16Ej+0x50>
    42f8:	d2 cf       	rjmp	.-92     	; 0x429e <_ZN14TFT_22_ILI922512_writeData16Ej+0x36>

000042fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>:
    42fa:	0f 93       	push	r16
    42fc:	1f 93       	push	r17
    42fe:	cf 93       	push	r28
    4300:	df 93       	push	r29
    4302:	ec 01       	movw	r28, r24
    4304:	8a 01       	movw	r16, r20
    4306:	0e 94 ea 20 	call	0x41d4	; 0x41d4 <_ZN14TFT_22_ILI922515_writeCommand16Ej>
    430a:	b8 01       	movw	r22, r16
    430c:	ce 01       	movw	r24, r28
    430e:	df 91       	pop	r29
    4310:	cf 91       	pop	r28
    4312:	1f 91       	pop	r17
    4314:	0f 91       	pop	r16
    4316:	0c 94 34 21 	jmp	0x4268	; 0x4268 <_ZN14TFT_22_ILI922512_writeData16Ej>

0000431a <_ZN14TFT_22_ILI922512_resetWindowEv>:
    431a:	cf 93       	push	r28
    431c:	df 93       	push	r29
    431e:	ec 01       	movw	r28, r24
    4320:	4f ea       	ldi	r20, 0xAF	; 175
    4322:	50 e0       	ldi	r21, 0x00	; 0
    4324:	66 e3       	ldi	r22, 0x36	; 54
    4326:	70 e0       	ldi	r23, 0x00	; 0
    4328:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    432c:	40 e0       	ldi	r20, 0x00	; 0
    432e:	50 e0       	ldi	r21, 0x00	; 0
    4330:	67 e3       	ldi	r22, 0x37	; 55
    4332:	70 e0       	ldi	r23, 0x00	; 0
    4334:	ce 01       	movw	r24, r28
    4336:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    433a:	4b ed       	ldi	r20, 0xDB	; 219
    433c:	50 e0       	ldi	r21, 0x00	; 0
    433e:	68 e3       	ldi	r22, 0x38	; 56
    4340:	70 e0       	ldi	r23, 0x00	; 0
    4342:	ce 01       	movw	r24, r28
    4344:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4348:	40 e0       	ldi	r20, 0x00	; 0
    434a:	50 e0       	ldi	r21, 0x00	; 0
    434c:	69 e3       	ldi	r22, 0x39	; 57
    434e:	70 e0       	ldi	r23, 0x00	; 0
    4350:	ce 01       	movw	r24, r28
    4352:	df 91       	pop	r29
    4354:	cf 91       	pop	r28
    4356:	0c 94 7d 21 	jmp	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>

0000435a <_ZN14TFT_22_ILI92257setFontEPhb>:
    435a:	dc 01       	movw	r26, r24
    435c:	d7 96       	adiw	r26, 0x37	; 55
    435e:	7c 93       	st	X, r23
    4360:	6e 93       	st	-X, r22
    4362:	d6 97       	sbiw	r26, 0x36	; 54
    4364:	fb 01       	movw	r30, r22
    4366:	84 91       	lpm	r24, Z
    4368:	d8 96       	adiw	r26, 0x38	; 56
    436a:	8c 93       	st	X, r24
    436c:	d8 97       	sbiw	r26, 0x38	; 56
    436e:	31 96       	adiw	r30, 0x01	; 1
    4370:	84 91       	lpm	r24, Z
    4372:	d9 96       	adiw	r26, 0x39	; 57
    4374:	8c 93       	st	X, r24
    4376:	d9 97       	sbiw	r26, 0x39	; 57
    4378:	31 96       	adiw	r30, 0x01	; 1
    437a:	e4 91       	lpm	r30, Z
    437c:	da 96       	adiw	r26, 0x3a	; 58
    437e:	ec 93       	st	X, r30
    4380:	da 97       	sbiw	r26, 0x3a	; 58
    4382:	fb 01       	movw	r30, r22
    4384:	33 96       	adiw	r30, 0x03	; 3
    4386:	64 91       	lpm	r22, Z
    4388:	db 96       	adiw	r26, 0x3b	; 59
    438a:	6c 93       	st	X, r22
    438c:	db 97       	sbiw	r26, 0x3b	; 59
    438e:	98 2f       	mov	r25, r24
    4390:	96 95       	lsr	r25
    4392:	96 95       	lsr	r25
    4394:	96 95       	lsr	r25
    4396:	dc 96       	adiw	r26, 0x3c	; 60
    4398:	9c 93       	st	X, r25
    439a:	dc 97       	sbiw	r26, 0x3c	; 60
    439c:	dd 96       	adiw	r26, 0x3d	; 61
    439e:	4c 93       	st	X, r20
    43a0:	dd 97       	sbiw	r26, 0x3d	; 61
    43a2:	e8 2f       	mov	r30, r24
    43a4:	e7 70       	andi	r30, 0x07	; 7
    43a6:	19 f0       	breq	.+6      	; 0x43ae <_ZN14TFT_22_ILI92257setFontEPhb+0x54>
    43a8:	9f 5f       	subi	r25, 0xFF	; 255
    43aa:	dc 96       	adiw	r26, 0x3c	; 60
    43ac:	9c 93       	st	X, r25
    43ae:	08 95       	ret

000043b0 <_ZN14TFT_22_ILI922510startWriteEv>:
    43b0:	cf 93       	push	r28
    43b2:	df 93       	push	r29
    43b4:	fc 01       	movw	r30, r24
    43b6:	ec 01       	movw	r28, r24
    43b8:	ee 96       	adiw	r28, 0x3e	; 62
    43ba:	88 81       	ld	r24, Y
    43bc:	99 81       	ldd	r25, Y+1	; 0x01
    43be:	aa 81       	ldd	r26, Y+2	; 0x02
    43c0:	bb 81       	ldd	r27, Y+3	; 0x03
    43c2:	ac 01       	movw	r20, r24
    43c4:	bd 01       	movw	r22, r26
    43c6:	4f 5f       	subi	r20, 0xFF	; 255
    43c8:	5f 4f       	sbci	r21, 0xFF	; 255
    43ca:	6f 4f       	sbci	r22, 0xFF	; 255
    43cc:	7f 4f       	sbci	r23, 0xFF	; 255
    43ce:	48 83       	st	Y, r20
    43d0:	59 83       	std	Y+1, r21	; 0x01
    43d2:	6a 83       	std	Y+2, r22	; 0x02
    43d4:	7b 83       	std	Y+3, r23	; 0x03
    43d6:	89 2b       	or	r24, r25
    43d8:	8a 2b       	or	r24, r26
    43da:	8b 2b       	or	r24, r27
    43dc:	29 f5       	brne	.+74     	; 0x4428 <_ZN14TFT_22_ILI922510startWriteEv+0x78>
    43de:	82 85       	ldd	r24, Z+10	; 0x0a
    43e0:	87 ff       	sbrs	r24, 7
    43e2:	1b c0       	rjmp	.+54     	; 0x441a <_ZN14TFT_22_ILI922510startWriteEv+0x6a>
    43e4:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZN8SPIClass13interruptModeE>
    43e8:	88 23       	and	r24, r24
    43ea:	99 f0       	breq	.+38     	; 0x4412 <_ZN14TFT_22_ILI922510startWriteEv+0x62>
    43ec:	2f b7       	in	r18, 0x3f	; 63
    43ee:	f8 94       	cli
    43f0:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZN8SPIClass13interruptModeE>
    43f4:	81 30       	cpi	r24, 0x01	; 1
    43f6:	59 f4       	brne	.+22     	; 0x440e <_ZN14TFT_22_ILI922510startWriteEv+0x5e>
    43f8:	8d b3       	in	r24, 0x1d	; 29
    43fa:	80 93 82 04 	sts	0x0482, r24	; 0x800482 <_ZN8SPIClass13interruptSaveE>
    43fe:	9d b3       	in	r25, 0x1d	; 29
    4400:	80 91 83 04 	lds	r24, 0x0483	; 0x800483 <_ZN8SPIClass13interruptMaskE>
    4404:	80 95       	com	r24
    4406:	89 23       	and	r24, r25
    4408:	8d bb       	out	0x1d, r24	; 29
    440a:	2f bf       	out	0x3f, r18	; 63
    440c:	02 c0       	rjmp	.+4      	; 0x4412 <_ZN14TFT_22_ILI922510startWriteEv+0x62>
    440e:	20 93 82 04 	sts	0x0482, r18	; 0x800482 <_ZN8SPIClass13interruptSaveE>
    4412:	80 e5       	ldi	r24, 0x50	; 80
    4414:	8c bd       	out	0x2c, r24	; 44
    4416:	81 e0       	ldi	r24, 0x01	; 1
    4418:	8d bd       	out	0x2d, r24	; 45
    441a:	a4 89       	ldd	r26, Z+20	; 0x14
    441c:	b5 89       	ldd	r27, Z+21	; 0x15
    441e:	9c 91       	ld	r25, X
    4420:	80 8d       	ldd	r24, Z+24	; 0x18
    4422:	80 95       	com	r24
    4424:	89 23       	and	r24, r25
    4426:	8c 93       	st	X, r24
    4428:	df 91       	pop	r29
    442a:	cf 91       	pop	r28
    442c:	08 95       	ret

0000442e <_ZN14TFT_22_ILI92258endWriteEv>:
    442e:	cf 93       	push	r28
    4430:	df 93       	push	r29
    4432:	fc 01       	movw	r30, r24
    4434:	ec 01       	movw	r28, r24
    4436:	ee 96       	adiw	r28, 0x3e	; 62
    4438:	88 81       	ld	r24, Y
    443a:	99 81       	ldd	r25, Y+1	; 0x01
    443c:	aa 81       	ldd	r26, Y+2	; 0x02
    443e:	bb 81       	ldd	r27, Y+3	; 0x03
    4440:	01 97       	sbiw	r24, 0x01	; 1
    4442:	a1 09       	sbc	r26, r1
    4444:	b1 09       	sbc	r27, r1
    4446:	88 83       	st	Y, r24
    4448:	99 83       	std	Y+1, r25	; 0x01
    444a:	aa 83       	std	Y+2, r26	; 0x02
    444c:	bb 83       	std	Y+3, r27	; 0x03
    444e:	89 2b       	or	r24, r25
    4450:	8a 2b       	or	r24, r26
    4452:	8b 2b       	or	r24, r27
    4454:	c9 f4       	brne	.+50     	; 0x4488 <_ZN14TFT_22_ILI92258endWriteEv+0x5a>
    4456:	a4 89       	ldd	r26, Z+20	; 0x14
    4458:	b5 89       	ldd	r27, Z+21	; 0x15
    445a:	9c 91       	ld	r25, X
    445c:	80 8d       	ldd	r24, Z+24	; 0x18
    445e:	89 2b       	or	r24, r25
    4460:	8c 93       	st	X, r24
    4462:	82 85       	ldd	r24, Z+10	; 0x0a
    4464:	87 ff       	sbrs	r24, 7
    4466:	10 c0       	rjmp	.+32     	; 0x4488 <_ZN14TFT_22_ILI92258endWriteEv+0x5a>
    4468:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <_ZN8SPIClass13interruptModeE>
    446c:	88 23       	and	r24, r24
    446e:	61 f0       	breq	.+24     	; 0x4488 <_ZN14TFT_22_ILI92258endWriteEv+0x5a>
    4470:	9f b7       	in	r25, 0x3f	; 63
    4472:	f8 94       	cli
    4474:	20 91 84 04 	lds	r18, 0x0484	; 0x800484 <_ZN8SPIClass13interruptModeE>
    4478:	80 91 82 04 	lds	r24, 0x0482	; 0x800482 <_ZN8SPIClass13interruptSaveE>
    447c:	21 30       	cpi	r18, 0x01	; 1
    447e:	19 f4       	brne	.+6      	; 0x4486 <_ZN14TFT_22_ILI92258endWriteEv+0x58>
    4480:	8d bb       	out	0x1d, r24	; 29
    4482:	9f bf       	out	0x3f, r25	; 63
    4484:	01 c0       	rjmp	.+2      	; 0x4488 <_ZN14TFT_22_ILI92258endWriteEv+0x5a>
    4486:	8f bf       	out	0x3f, r24	; 63
    4488:	df 91       	pop	r29
    448a:	cf 91       	pop	r28
    448c:	08 95       	ret

0000448e <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t>:
    448e:	af 92       	push	r10
    4490:	bf 92       	push	r11
    4492:	cf 92       	push	r12
    4494:	df 92       	push	r13
    4496:	ef 92       	push	r14
    4498:	0f 93       	push	r16
    449a:	1f 93       	push	r17
    449c:	cf 93       	push	r28
    449e:	df 93       	push	r29
    44a0:	cd b7       	in	r28, 0x3d	; 61
    44a2:	de b7       	in	r29, 0x3e	; 62
    44a4:	c4 54       	subi	r28, 0x44	; 68
    44a6:	d1 09       	sbc	r29, r1
    44a8:	0f b6       	in	r0, 0x3f	; 63
    44aa:	f8 94       	cli
    44ac:	de bf       	out	0x3e, r29	; 62
    44ae:	0f be       	out	0x3f, r0	; 63
    44b0:	cd bf       	out	0x3d, r28	; 61
    44b2:	6c 01       	movw	r12, r24
    44b4:	7e af       	std	Y+62, r23	; 0x3e
    44b6:	6d af       	std	Y+61, r22	; 0x3d
    44b8:	21 96       	adiw	r28, 0x01	; 1
    44ba:	5f af       	std	Y+63, r21	; 0x3f
    44bc:	4e af       	std	Y+62, r20	; 0x3e
    44be:	21 97       	sbiw	r28, 0x01	; 1
    44c0:	23 96       	adiw	r28, 0x03	; 3
    44c2:	3f af       	std	Y+63, r19	; 0x3f
    44c4:	2e af       	std	Y+62, r18	; 0x3e
    44c6:	23 97       	sbiw	r28, 0x03	; 3
    44c8:	25 96       	adiw	r28, 0x05	; 5
    44ca:	1f af       	std	Y+63, r17	; 0x3f
    44cc:	0e af       	std	Y+62, r16	; 0x3e
    44ce:	25 97       	sbiw	r28, 0x05	; 5
    44d0:	0e 2d       	mov	r16, r14
    44d2:	10 e0       	ldi	r17, 0x00	; 0
    44d4:	1f 92       	push	r1
    44d6:	ef 92       	push	r14
    44d8:	25 96       	adiw	r28, 0x05	; 5
    44da:	8f ad       	ldd	r24, Y+63	; 0x3f
    44dc:	25 97       	sbiw	r28, 0x05	; 5
    44de:	8f 93       	push	r24
    44e0:	24 96       	adiw	r28, 0x04	; 4
    44e2:	8f ad       	ldd	r24, Y+63	; 0x3f
    44e4:	24 97       	sbiw	r28, 0x04	; 4
    44e6:	8f 93       	push	r24
    44e8:	23 96       	adiw	r28, 0x03	; 3
    44ea:	8f ad       	ldd	r24, Y+63	; 0x3f
    44ec:	23 97       	sbiw	r28, 0x03	; 3
    44ee:	8f 93       	push	r24
    44f0:	22 96       	adiw	r28, 0x02	; 2
    44f2:	8f ad       	ldd	r24, Y+63	; 0x3f
    44f4:	22 97       	sbiw	r28, 0x02	; 2
    44f6:	8f 93       	push	r24
    44f8:	21 96       	adiw	r28, 0x01	; 1
    44fa:	8f ad       	ldd	r24, Y+63	; 0x3f
    44fc:	21 97       	sbiw	r28, 0x01	; 1
    44fe:	8f 93       	push	r24
    4500:	8f ad       	ldd	r24, Y+63	; 0x3f
    4502:	8f 93       	push	r24
    4504:	8e ad       	ldd	r24, Y+62	; 0x3e
    4506:	8f 93       	push	r24
    4508:	8d ad       	ldd	r24, Y+61	; 0x3d
    450a:	8f 93       	push	r24
    450c:	80 eb       	ldi	r24, 0xB0	; 176
    450e:	91 e0       	ldi	r25, 0x01	; 1
    4510:	9f 93       	push	r25
    4512:	8f 93       	push	r24
    4514:	9e 01       	movw	r18, r28
    4516:	2f 5f       	subi	r18, 0xFF	; 255
    4518:	3f 4f       	sbci	r19, 0xFF	; 255
    451a:	59 01       	movw	r10, r18
    451c:	3f 93       	push	r19
    451e:	2f 93       	push	r18
    4520:	0e 94 6e 33 	call	0x66dc	; 0x66dc <sprintf>
    4524:	b5 01       	movw	r22, r10
    4526:	85 e8       	ldi	r24, 0x85	; 133
    4528:	93 e0       	ldi	r25, 0x03	; 3
    452a:	0e 94 f5 18 	call	0x31ea	; 0x31ea <_ZN5Print7printlnEPKc>
    452e:	f6 01       	movw	r30, r12
    4530:	80 81       	ld	r24, Z
    4532:	91 81       	ldd	r25, Z+1	; 0x01
    4534:	01 97       	sbiw	r24, 0x01	; 1
    4536:	2d ad       	ldd	r18, Y+61	; 0x3d
    4538:	3e ad       	ldd	r19, Y+62	; 0x3e
    453a:	0f b6       	in	r0, 0x3f	; 63
    453c:	f8 94       	cli
    453e:	de bf       	out	0x3e, r29	; 62
    4540:	0f be       	out	0x3f, r0	; 63
    4542:	cd bf       	out	0x3d, r28	; 61
    4544:	82 17       	cp	r24, r18
    4546:	93 07       	cpc	r25, r19
    4548:	08 f4       	brcc	.+2      	; 0x454c <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0xbe>
    454a:	9c 01       	movw	r18, r24
    454c:	3e af       	std	Y+62, r19	; 0x3e
    454e:	2d af       	std	Y+61, r18	; 0x3d
    4550:	23 96       	adiw	r28, 0x03	; 3
    4552:	2e ad       	ldd	r18, Y+62	; 0x3e
    4554:	3f ad       	ldd	r19, Y+63	; 0x3f
    4556:	23 97       	sbiw	r28, 0x03	; 3
    4558:	82 17       	cp	r24, r18
    455a:	93 07       	cpc	r25, r19
    455c:	08 f4       	brcc	.+2      	; 0x4560 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0xd2>
    455e:	9c 01       	movw	r18, r24
    4560:	23 96       	adiw	r28, 0x03	; 3
    4562:	3f af       	std	Y+63, r19	; 0x3f
    4564:	2e af       	std	Y+62, r18	; 0x3e
    4566:	23 97       	sbiw	r28, 0x03	; 3
    4568:	f6 01       	movw	r30, r12
    456a:	82 81       	ldd	r24, Z+2	; 0x02
    456c:	93 81       	ldd	r25, Z+3	; 0x03
    456e:	01 97       	sbiw	r24, 0x01	; 1
    4570:	21 96       	adiw	r28, 0x01	; 1
    4572:	2e ad       	ldd	r18, Y+62	; 0x3e
    4574:	3f ad       	ldd	r19, Y+63	; 0x3f
    4576:	21 97       	sbiw	r28, 0x01	; 1
    4578:	82 17       	cp	r24, r18
    457a:	93 07       	cpc	r25, r19
    457c:	08 f4       	brcc	.+2      	; 0x4580 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0xf2>
    457e:	9c 01       	movw	r18, r24
    4580:	21 96       	adiw	r28, 0x01	; 1
    4582:	3f af       	std	Y+63, r19	; 0x3f
    4584:	2e af       	std	Y+62, r18	; 0x3e
    4586:	21 97       	sbiw	r28, 0x01	; 1
    4588:	25 96       	adiw	r28, 0x05	; 5
    458a:	2e ad       	ldd	r18, Y+62	; 0x3e
    458c:	3f ad       	ldd	r19, Y+63	; 0x3f
    458e:	25 97       	sbiw	r28, 0x05	; 5
    4590:	82 17       	cp	r24, r18
    4592:	93 07       	cpc	r25, r19
    4594:	08 f4       	brcc	.+2      	; 0x4598 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x10a>
    4596:	9c 01       	movw	r18, r24
    4598:	25 96       	adiw	r28, 0x05	; 5
    459a:	3f af       	std	Y+63, r19	; 0x3f
    459c:	2e af       	std	Y+62, r18	; 0x3e
    459e:	25 97       	sbiw	r28, 0x05	; 5
    45a0:	ae 01       	movw	r20, r28
    45a2:	41 5c       	subi	r20, 0xC1	; 193
    45a4:	5f 4f       	sbci	r21, 0xFF	; 255
    45a6:	be 01       	movw	r22, r28
    45a8:	63 5c       	subi	r22, 0xC3	; 195
    45aa:	7f 4f       	sbci	r23, 0xFF	; 255
    45ac:	c6 01       	movw	r24, r12
    45ae:	0e 94 77 20 	call	0x40ee	; 0x40ee <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_>
    45b2:	ae 01       	movw	r20, r28
    45b4:	4d 5b       	subi	r20, 0xBD	; 189
    45b6:	5f 4f       	sbci	r21, 0xFF	; 255
    45b8:	be 01       	movw	r22, r28
    45ba:	6f 5b       	subi	r22, 0xBF	; 191
    45bc:	7f 4f       	sbci	r23, 0xFF	; 255
    45be:	c6 01       	movw	r24, r12
    45c0:	0e 94 77 20 	call	0x40ee	; 0x40ee <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_>
    45c4:	23 96       	adiw	r28, 0x03	; 3
    45c6:	2e ad       	ldd	r18, Y+62	; 0x3e
    45c8:	3f ad       	ldd	r19, Y+63	; 0x3f
    45ca:	23 97       	sbiw	r28, 0x03	; 3
    45cc:	8d ad       	ldd	r24, Y+61	; 0x3d
    45ce:	9e ad       	ldd	r25, Y+62	; 0x3e
    45d0:	28 17       	cp	r18, r24
    45d2:	39 07       	cpc	r19, r25
    45d4:	30 f4       	brcc	.+12     	; 0x45e2 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x154>
    45d6:	3e af       	std	Y+62, r19	; 0x3e
    45d8:	2d af       	std	Y+61, r18	; 0x3d
    45da:	23 96       	adiw	r28, 0x03	; 3
    45dc:	9f af       	std	Y+63, r25	; 0x3f
    45de:	8e af       	std	Y+62, r24	; 0x3e
    45e0:	23 97       	sbiw	r28, 0x03	; 3
    45e2:	25 96       	adiw	r28, 0x05	; 5
    45e4:	2e ad       	ldd	r18, Y+62	; 0x3e
    45e6:	3f ad       	ldd	r19, Y+63	; 0x3f
    45e8:	25 97       	sbiw	r28, 0x05	; 5
    45ea:	21 96       	adiw	r28, 0x01	; 1
    45ec:	8e ad       	ldd	r24, Y+62	; 0x3e
    45ee:	9f ad       	ldd	r25, Y+63	; 0x3f
    45f0:	21 97       	sbiw	r28, 0x01	; 1
    45f2:	28 17       	cp	r18, r24
    45f4:	39 07       	cpc	r19, r25
    45f6:	40 f4       	brcc	.+16     	; 0x4608 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x17a>
    45f8:	21 96       	adiw	r28, 0x01	; 1
    45fa:	3f af       	std	Y+63, r19	; 0x3f
    45fc:	2e af       	std	Y+62, r18	; 0x3e
    45fe:	21 97       	sbiw	r28, 0x01	; 1
    4600:	25 96       	adiw	r28, 0x05	; 5
    4602:	9f af       	std	Y+63, r25	; 0x3f
    4604:	8e af       	std	Y+62, r24	; 0x3e
    4606:	25 97       	sbiw	r28, 0x05	; 5
    4608:	c6 01       	movw	r24, r12
    460a:	0e 94 d8 21 	call	0x43b0	; 0x43b0 <_ZN14TFT_22_ILI922510startWriteEv>
    460e:	f6 01       	movw	r30, r12
    4610:	82 8d       	ldd	r24, Z+26	; 0x1a
    4612:	88 23       	and	r24, r24
    4614:	51 f0       	breq	.+20     	; 0x462a <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x19c>
    4616:	96 01       	movw	r18, r12
    4618:	48 e0       	ldi	r20, 0x08	; 8
    461a:	84 9f       	mul	r24, r20
    461c:	20 0d       	add	r18, r0
    461e:	31 1d       	adc	r19, r1
    4620:	11 24       	eor	r1, r1
    4622:	f8 01       	movw	r30, r16
    4624:	e2 0f       	add	r30, r18
    4626:	f3 1f       	adc	r31, r19
    4628:	e4 88       	ldd	r14, Z+20	; 0x14
    462a:	0e 2d       	mov	r16, r14
    462c:	10 e0       	ldi	r17, 0x00	; 0
    462e:	a8 01       	movw	r20, r16
    4630:	83 e0       	ldi	r24, 0x03	; 3
    4632:	44 0f       	add	r20, r20
    4634:	55 1f       	adc	r21, r21
    4636:	8a 95       	dec	r24
    4638:	e1 f7       	brne	.-8      	; 0x4632 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x1a4>
    463a:	50 61       	ori	r21, 0x10	; 16
    463c:	63 e0       	ldi	r22, 0x03	; 3
    463e:	70 e0       	ldi	r23, 0x00	; 0
    4640:	c6 01       	movw	r24, r12
    4642:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4646:	23 96       	adiw	r28, 0x03	; 3
    4648:	4e ad       	ldd	r20, Y+62	; 0x3e
    464a:	5f ad       	ldd	r21, Y+63	; 0x3f
    464c:	23 97       	sbiw	r28, 0x03	; 3
    464e:	66 e3       	ldi	r22, 0x36	; 54
    4650:	70 e0       	ldi	r23, 0x00	; 0
    4652:	c6 01       	movw	r24, r12
    4654:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4658:	4d ad       	ldd	r20, Y+61	; 0x3d
    465a:	5e ad       	ldd	r21, Y+62	; 0x3e
    465c:	67 e3       	ldi	r22, 0x37	; 55
    465e:	70 e0       	ldi	r23, 0x00	; 0
    4660:	c6 01       	movw	r24, r12
    4662:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4666:	25 96       	adiw	r28, 0x05	; 5
    4668:	4e ad       	ldd	r20, Y+62	; 0x3e
    466a:	5f ad       	ldd	r21, Y+63	; 0x3f
    466c:	25 97       	sbiw	r28, 0x05	; 5
    466e:	68 e3       	ldi	r22, 0x38	; 56
    4670:	70 e0       	ldi	r23, 0x00	; 0
    4672:	c6 01       	movw	r24, r12
    4674:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4678:	21 96       	adiw	r28, 0x01	; 1
    467a:	4e ad       	ldd	r20, Y+62	; 0x3e
    467c:	5f ad       	ldd	r21, Y+63	; 0x3f
    467e:	21 97       	sbiw	r28, 0x01	; 1
    4680:	69 e3       	ldi	r22, 0x39	; 57
    4682:	70 e0       	ldi	r23, 0x00	; 0
    4684:	c6 01       	movw	r24, r12
    4686:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    468a:	1f 92       	push	r1
    468c:	ef 92       	push	r14
    468e:	25 96       	adiw	r28, 0x05	; 5
    4690:	8f ad       	ldd	r24, Y+63	; 0x3f
    4692:	25 97       	sbiw	r28, 0x05	; 5
    4694:	8f 93       	push	r24
    4696:	24 96       	adiw	r28, 0x04	; 4
    4698:	8f ad       	ldd	r24, Y+63	; 0x3f
    469a:	24 97       	sbiw	r28, 0x04	; 4
    469c:	8f 93       	push	r24
    469e:	23 96       	adiw	r28, 0x03	; 3
    46a0:	8f ad       	ldd	r24, Y+63	; 0x3f
    46a2:	23 97       	sbiw	r28, 0x03	; 3
    46a4:	8f 93       	push	r24
    46a6:	22 96       	adiw	r28, 0x02	; 2
    46a8:	8f ad       	ldd	r24, Y+63	; 0x3f
    46aa:	22 97       	sbiw	r28, 0x02	; 2
    46ac:	8f 93       	push	r24
    46ae:	21 96       	adiw	r28, 0x01	; 1
    46b0:	8f ad       	ldd	r24, Y+63	; 0x3f
    46b2:	21 97       	sbiw	r28, 0x01	; 1
    46b4:	8f 93       	push	r24
    46b6:	8f ad       	ldd	r24, Y+63	; 0x3f
    46b8:	8f 93       	push	r24
    46ba:	8e ad       	ldd	r24, Y+62	; 0x3e
    46bc:	8f 93       	push	r24
    46be:	8d ad       	ldd	r24, Y+61	; 0x3d
    46c0:	8f 93       	push	r24
    46c2:	80 ee       	ldi	r24, 0xE0	; 224
    46c4:	91 e0       	ldi	r25, 0x01	; 1
    46c6:	9f 93       	push	r25
    46c8:	8f 93       	push	r24
    46ca:	bf 92       	push	r11
    46cc:	af 92       	push	r10
    46ce:	0e 94 6e 33 	call	0x66dc	; 0x66dc <sprintf>
    46d2:	b5 01       	movw	r22, r10
    46d4:	85 e8       	ldi	r24, 0x85	; 133
    46d6:	93 e0       	ldi	r25, 0x03	; 3
    46d8:	0e 94 f5 18 	call	0x31ea	; 0x31ea <_ZN5Print7printlnEPKc>
    46dc:	0f b6       	in	r0, 0x3f	; 63
    46de:	f8 94       	cli
    46e0:	de bf       	out	0x3e, r29	; 62
    46e2:	0f be       	out	0x3f, r0	; 63
    46e4:	cd bf       	out	0x3d, r28	; 61
    46e6:	c8 01       	movw	r24, r16
    46e8:	95 95       	asr	r25
    46ea:	87 95       	ror	r24
    46ec:	81 30       	cpi	r24, 0x01	; 1
    46ee:	91 05       	cpc	r25, r1
    46f0:	81 f0       	breq	.+32     	; 0x4712 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x284>
    46f2:	3c f4       	brge	.+14     	; 0x4702 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x274>
    46f4:	89 2b       	or	r24, r25
    46f6:	59 f5       	brne	.+86     	; 0x474e <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x2c0>
    46f8:	23 96       	adiw	r28, 0x03	; 3
    46fa:	4e ad       	ldd	r20, Y+62	; 0x3e
    46fc:	5f ad       	ldd	r21, Y+63	; 0x3f
    46fe:	23 97       	sbiw	r28, 0x03	; 3
    4700:	0a c0       	rjmp	.+20     	; 0x4716 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x288>
    4702:	82 30       	cpi	r24, 0x02	; 2
    4704:	91 05       	cpc	r25, r1
    4706:	89 f0       	breq	.+34     	; 0x472a <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x29c>
    4708:	03 97       	sbiw	r24, 0x03	; 3
    470a:	09 f5       	brne	.+66     	; 0x474e <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x2c0>
    470c:	4d ad       	ldd	r20, Y+61	; 0x3d
    470e:	5e ad       	ldd	r21, Y+62	; 0x3e
    4710:	10 c0       	rjmp	.+32     	; 0x4732 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x2a4>
    4712:	4d ad       	ldd	r20, Y+61	; 0x3d
    4714:	5e ad       	ldd	r21, Y+62	; 0x3e
    4716:	60 e2       	ldi	r22, 0x20	; 32
    4718:	70 e0       	ldi	r23, 0x00	; 0
    471a:	c6 01       	movw	r24, r12
    471c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4720:	25 96       	adiw	r28, 0x05	; 5
    4722:	4e ad       	ldd	r20, Y+62	; 0x3e
    4724:	5f ad       	ldd	r21, Y+63	; 0x3f
    4726:	25 97       	sbiw	r28, 0x05	; 5
    4728:	0d c0       	rjmp	.+26     	; 0x4744 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x2b6>
    472a:	23 96       	adiw	r28, 0x03	; 3
    472c:	4e ad       	ldd	r20, Y+62	; 0x3e
    472e:	5f ad       	ldd	r21, Y+63	; 0x3f
    4730:	23 97       	sbiw	r28, 0x03	; 3
    4732:	60 e2       	ldi	r22, 0x20	; 32
    4734:	70 e0       	ldi	r23, 0x00	; 0
    4736:	c6 01       	movw	r24, r12
    4738:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    473c:	21 96       	adiw	r28, 0x01	; 1
    473e:	4e ad       	ldd	r20, Y+62	; 0x3e
    4740:	5f ad       	ldd	r21, Y+63	; 0x3f
    4742:	21 97       	sbiw	r28, 0x01	; 1
    4744:	61 e2       	ldi	r22, 0x21	; 33
    4746:	70 e0       	ldi	r23, 0x00	; 0
    4748:	c6 01       	movw	r24, r12
    474a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    474e:	62 e2       	ldi	r22, 0x22	; 34
    4750:	70 e0       	ldi	r23, 0x00	; 0
    4752:	c6 01       	movw	r24, r12
    4754:	0e 94 ea 20 	call	0x41d4	; 0x41d4 <_ZN14TFT_22_ILI922515_writeCommand16Ej>
    4758:	c6 01       	movw	r24, r12
    475a:	0e 94 17 22 	call	0x442e	; 0x442e <_ZN14TFT_22_ILI92258endWriteEv>
    475e:	cc 5b       	subi	r28, 0xBC	; 188
    4760:	df 4f       	sbci	r29, 0xFF	; 255
    4762:	0f b6       	in	r0, 0x3f	; 63
    4764:	f8 94       	cli
    4766:	de bf       	out	0x3e, r29	; 62
    4768:	0f be       	out	0x3f, r0	; 63
    476a:	cd bf       	out	0x3d, r28	; 61
    476c:	df 91       	pop	r29
    476e:	cf 91       	pop	r28
    4770:	1f 91       	pop	r17
    4772:	0f 91       	pop	r16
    4774:	ef 90       	pop	r14
    4776:	df 90       	pop	r13
    4778:	cf 90       	pop	r12
    477a:	bf 90       	pop	r11
    477c:	af 90       	pop	r10
    477e:	08 95       	ret

00004780 <_ZN14TFT_22_ILI922510_setWindowEjjjj>:
    4780:	ef 92       	push	r14
    4782:	0f 93       	push	r16
    4784:	1f 93       	push	r17
    4786:	e7 e0       	ldi	r30, 0x07	; 7
    4788:	ee 2e       	mov	r14, r30
    478a:	0e 94 47 22 	call	0x448e	; 0x448e <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t>
    478e:	1f 91       	pop	r17
    4790:	0f 91       	pop	r16
    4792:	ef 90       	pop	r14
    4794:	08 95       	ret

00004796 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj>:
    4796:	6f 92       	push	r6
    4798:	7f 92       	push	r7
    479a:	8f 92       	push	r8
    479c:	9f 92       	push	r9
    479e:	af 92       	push	r10
    47a0:	bf 92       	push	r11
    47a2:	cf 92       	push	r12
    47a4:	df 92       	push	r13
    47a6:	ef 92       	push	r14
    47a8:	ff 92       	push	r15
    47aa:	0f 93       	push	r16
    47ac:	1f 93       	push	r17
    47ae:	cf 93       	push	r28
    47b0:	df 93       	push	r29
    47b2:	5c 01       	movw	r10, r24
    47b4:	4b 01       	movw	r8, r22
    47b6:	3a 01       	movw	r6, r20
    47b8:	e9 01       	movw	r28, r18
    47ba:	68 01       	movw	r12, r16
    47bc:	0e 94 c0 23 	call	0x4780	; 0x4780 <_ZN14TFT_22_ILI922510_setWindowEjjjj>
    47c0:	c5 01       	movw	r24, r10
    47c2:	0e 94 d8 21 	call	0x43b0	; 0x43b0 <_ZN14TFT_22_ILI922510startWriteEv>
    47c6:	8f ef       	ldi	r24, 0xFF	; 255
    47c8:	c8 1a       	sub	r12, r24
    47ca:	d8 0a       	sbc	r13, r24
    47cc:	c6 18       	sub	r12, r6
    47ce:	d7 08       	sbc	r13, r7
    47d0:	21 96       	adiw	r28, 0x01	; 1
    47d2:	c8 19       	sub	r28, r8
    47d4:	d9 09       	sbc	r29, r9
    47d6:	cc 9e       	mul	r12, r28
    47d8:	40 01       	movw	r8, r0
    47da:	cd 9e       	mul	r12, r29
    47dc:	90 0c       	add	r9, r0
    47de:	dc 9e       	mul	r13, r28
    47e0:	90 0c       	add	r9, r0
    47e2:	11 24       	eor	r1, r1
    47e4:	81 14       	cp	r8, r1
    47e6:	91 04       	cpc	r9, r1
    47e8:	41 f0       	breq	.+16     	; 0x47fa <_ZN14TFT_22_ILI922513fillRectangleEjjjjj+0x64>
    47ea:	b7 01       	movw	r22, r14
    47ec:	c5 01       	movw	r24, r10
    47ee:	0e 94 34 21 	call	0x4268	; 0x4268 <_ZN14TFT_22_ILI922512_writeData16Ej>
    47f2:	81 e0       	ldi	r24, 0x01	; 1
    47f4:	88 1a       	sub	r8, r24
    47f6:	91 08       	sbc	r9, r1
    47f8:	f5 cf       	rjmp	.-22     	; 0x47e4 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj+0x4e>
    47fa:	c5 01       	movw	r24, r10
    47fc:	0e 94 17 22 	call	0x442e	; 0x442e <_ZN14TFT_22_ILI92258endWriteEv>
    4800:	c5 01       	movw	r24, r10
    4802:	df 91       	pop	r29
    4804:	cf 91       	pop	r28
    4806:	1f 91       	pop	r17
    4808:	0f 91       	pop	r16
    480a:	ff 90       	pop	r15
    480c:	ef 90       	pop	r14
    480e:	df 90       	pop	r13
    4810:	cf 90       	pop	r12
    4812:	bf 90       	pop	r11
    4814:	af 90       	pop	r10
    4816:	9f 90       	pop	r9
    4818:	8f 90       	pop	r8
    481a:	7f 90       	pop	r7
    481c:	6f 90       	pop	r6
    481e:	0c 94 8d 21 	jmp	0x431a	; 0x431a <_ZN14TFT_22_ILI922512_resetWindowEv>

00004822 <_ZN14TFT_22_ILI92255clearEv>:
    4822:	df 92       	push	r13
    4824:	ef 92       	push	r14
    4826:	ff 92       	push	r15
    4828:	0f 93       	push	r16
    482a:	1f 93       	push	r17
    482c:	cf 93       	push	r28
    482e:	df 93       	push	r29
    4830:	ec 01       	movw	r28, r24
    4832:	da 8c       	ldd	r13, Y+26	; 0x1a
    4834:	60 e0       	ldi	r22, 0x00	; 0
    4836:	0e 94 c9 20 	call	0x4192	; 0x4192 <_ZN14TFT_22_ILI922514setOrientationEh>
    483a:	0a 81       	ldd	r16, Y+2	; 0x02
    483c:	1b 81       	ldd	r17, Y+3	; 0x03
    483e:	01 50       	subi	r16, 0x01	; 1
    4840:	11 09       	sbc	r17, r1
    4842:	28 81       	ld	r18, Y
    4844:	39 81       	ldd	r19, Y+1	; 0x01
    4846:	21 50       	subi	r18, 0x01	; 1
    4848:	31 09       	sbc	r19, r1
    484a:	e1 2c       	mov	r14, r1
    484c:	f1 2c       	mov	r15, r1
    484e:	40 e0       	ldi	r20, 0x00	; 0
    4850:	50 e0       	ldi	r21, 0x00	; 0
    4852:	60 e0       	ldi	r22, 0x00	; 0
    4854:	70 e0       	ldi	r23, 0x00	; 0
    4856:	ce 01       	movw	r24, r28
    4858:	0e 94 cb 23 	call	0x4796	; 0x4796 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj>
    485c:	6d 2d       	mov	r22, r13
    485e:	ce 01       	movw	r24, r28
    4860:	0e 94 c9 20 	call	0x4192	; 0x4192 <_ZN14TFT_22_ILI922514setOrientationEh>
    4864:	6a e0       	ldi	r22, 0x0A	; 10
    4866:	70 e0       	ldi	r23, 0x00	; 0
    4868:	80 e0       	ldi	r24, 0x00	; 0
    486a:	90 e0       	ldi	r25, 0x00	; 0
    486c:	df 91       	pop	r29
    486e:	cf 91       	pop	r28
    4870:	1f 91       	pop	r17
    4872:	0f 91       	pop	r16
    4874:	ff 90       	pop	r15
    4876:	ef 90       	pop	r14
    4878:	df 90       	pop	r13
    487a:	0c 94 af 1a 	jmp	0x355e	; 0x355e <delay>

0000487e <_ZN14TFT_22_ILI92255beginEv>:
    487e:	cf 93       	push	r28
    4880:	df 93       	push	r29
    4882:	ec 01       	movw	r28, r24
    4884:	8e 81       	ldd	r24, Y+6	; 0x06
    4886:	18 16       	cp	r1, r24
    4888:	3c f4       	brge	.+14     	; 0x4898 <_ZN14TFT_22_ILI92255beginEv+0x1a>
    488a:	61 e0       	ldi	r22, 0x01	; 1
    488c:	0e 94 db 2b 	call	0x57b6	; 0x57b6 <pinMode>
    4890:	60 e0       	ldi	r22, 0x00	; 0
    4892:	8e 81       	ldd	r24, Y+6	; 0x06
    4894:	0e 94 17 2c 	call	0x582e	; 0x582e <digitalWrite>
    4898:	8b 85       	ldd	r24, Y+11	; 0x0b
    489a:	18 16       	cp	r1, r24
    489c:	3c f4       	brge	.+14     	; 0x48ac <_ZN14TFT_22_ILI92255beginEv+0x2e>
    489e:	61 e0       	ldi	r22, 0x01	; 1
    48a0:	0e 94 db 2b 	call	0x57b6	; 0x57b6 <pinMode>
    48a4:	60 e0       	ldi	r22, 0x00	; 0
    48a6:	ce 01       	movw	r24, r28
    48a8:	0e 94 ba 20 	call	0x4174	; 0x4174 <_ZN14TFT_22_ILI922512setBacklightEb>
    48ac:	61 e0       	ldi	r22, 0x01	; 1
    48ae:	8f 81       	ldd	r24, Y+7	; 0x07
    48b0:	0e 94 db 2b 	call	0x57b6	; 0x57b6 <pinMode>
    48b4:	60 e0       	ldi	r22, 0x00	; 0
    48b6:	8f 81       	ldd	r24, Y+7	; 0x07
    48b8:	0e 94 17 2c 	call	0x582e	; 0x582e <digitalWrite>
    48bc:	61 e0       	ldi	r22, 0x01	; 1
    48be:	88 85       	ldd	r24, Y+8	; 0x08
    48c0:	0e 94 db 2b 	call	0x57b6	; 0x57b6 <pinMode>
    48c4:	61 e0       	ldi	r22, 0x01	; 1
    48c6:	88 85       	ldd	r24, Y+8	; 0x08
    48c8:	0e 94 17 2c 	call	0x582e	; 0x582e <digitalWrite>
    48cc:	88 85       	ldd	r24, Y+8	; 0x08
    48ce:	08 2e       	mov	r0, r24
    48d0:	00 0c       	add	r0, r0
    48d2:	99 0b       	sbc	r25, r25
    48d4:	fc 01       	movw	r30, r24
    48d6:	e9 50       	subi	r30, 0x09	; 9
    48d8:	f0 4e       	sbci	r31, 0xE0	; 224
    48da:	e4 91       	lpm	r30, Z
    48dc:	f0 e0       	ldi	r31, 0x00	; 0
    48de:	ee 0f       	add	r30, r30
    48e0:	ff 1f       	adc	r31, r31
    48e2:	e5 5f       	subi	r30, 0xF5	; 245
    48e4:	ff 4d       	sbci	r31, 0xDF	; 223
    48e6:	25 91       	lpm	r18, Z+
    48e8:	34 91       	lpm	r19, Z
    48ea:	3d 8b       	std	Y+21, r19	; 0x15
    48ec:	2c 8b       	std	Y+20, r18	; 0x14
    48ee:	fc 01       	movw	r30, r24
    48f0:	ed 51       	subi	r30, 0x1D	; 29
    48f2:	f0 4e       	sbci	r31, 0xE0	; 224
    48f4:	e4 91       	lpm	r30, Z
    48f6:	e8 8f       	std	Y+24, r30	; 0x18
    48f8:	8f 81       	ldd	r24, Y+7	; 0x07
    48fa:	08 2e       	mov	r0, r24
    48fc:	00 0c       	add	r0, r0
    48fe:	99 0b       	sbc	r25, r25
    4900:	fc 01       	movw	r30, r24
    4902:	e9 50       	subi	r30, 0x09	; 9
    4904:	f0 4e       	sbci	r31, 0xE0	; 224
    4906:	e4 91       	lpm	r30, Z
    4908:	f0 e0       	ldi	r31, 0x00	; 0
    490a:	ee 0f       	add	r30, r30
    490c:	ff 1f       	adc	r31, r31
    490e:	e5 5f       	subi	r30, 0xF5	; 245
    4910:	ff 4d       	sbci	r31, 0xDF	; 223
    4912:	25 91       	lpm	r18, Z+
    4914:	34 91       	lpm	r19, Z
    4916:	39 8b       	std	Y+17, r19	; 0x11
    4918:	28 8b       	std	Y+16, r18	; 0x10
    491a:	fc 01       	movw	r30, r24
    491c:	ed 51       	subi	r30, 0x1D	; 29
    491e:	f0 4e       	sbci	r31, 0xE0	; 224
    4920:	e4 91       	lpm	r30, Z
    4922:	e9 8f       	std	Y+25, r30	; 0x19
    4924:	8a 85       	ldd	r24, Y+10	; 0x0a
    4926:	87 fd       	sbrc	r24, 7
    4928:	49 c0       	rjmp	.+146    	; 0x49bc <_ZN14TFT_22_ILI92255beginEv+0x13e>
    492a:	61 e0       	ldi	r22, 0x01	; 1
    492c:	89 85       	ldd	r24, Y+9	; 0x09
    492e:	0e 94 db 2b 	call	0x57b6	; 0x57b6 <pinMode>
    4932:	60 e0       	ldi	r22, 0x00	; 0
    4934:	89 85       	ldd	r24, Y+9	; 0x09
    4936:	0e 94 17 2c 	call	0x582e	; 0x582e <digitalWrite>
    493a:	61 e0       	ldi	r22, 0x01	; 1
    493c:	8a 85       	ldd	r24, Y+10	; 0x0a
    493e:	0e 94 db 2b 	call	0x57b6	; 0x57b6 <pinMode>
    4942:	61 e0       	ldi	r22, 0x01	; 1
    4944:	8a 85       	ldd	r24, Y+10	; 0x0a
    4946:	0e 94 17 2c 	call	0x582e	; 0x582e <digitalWrite>
    494a:	8a 85       	ldd	r24, Y+10	; 0x0a
    494c:	08 2e       	mov	r0, r24
    494e:	00 0c       	add	r0, r0
    4950:	99 0b       	sbc	r25, r25
    4952:	fc 01       	movw	r30, r24
    4954:	e9 50       	subi	r30, 0x09	; 9
    4956:	f0 4e       	sbci	r31, 0xE0	; 224
    4958:	e4 91       	lpm	r30, Z
    495a:	f0 e0       	ldi	r31, 0x00	; 0
    495c:	ee 0f       	add	r30, r30
    495e:	ff 1f       	adc	r31, r31
    4960:	e5 5f       	subi	r30, 0xF5	; 245
    4962:	ff 4d       	sbci	r31, 0xDF	; 223
    4964:	a5 91       	lpm	r26, Z+
    4966:	b4 91       	lpm	r27, Z
    4968:	bf 87       	std	Y+15, r27	; 0x0f
    496a:	ae 87       	std	Y+14, r26	; 0x0e
    496c:	fc 01       	movw	r30, r24
    496e:	ed 51       	subi	r30, 0x1D	; 29
    4970:	f0 4e       	sbci	r31, 0xE0	; 224
    4972:	84 91       	lpm	r24, Z
    4974:	8f 8b       	std	Y+23, r24	; 0x17
    4976:	29 85       	ldd	r18, Y+9	; 0x09
    4978:	02 2e       	mov	r0, r18
    497a:	00 0c       	add	r0, r0
    497c:	33 0b       	sbc	r19, r19
    497e:	f9 01       	movw	r30, r18
    4980:	e9 50       	subi	r30, 0x09	; 9
    4982:	f0 4e       	sbci	r31, 0xE0	; 224
    4984:	e4 91       	lpm	r30, Z
    4986:	f0 e0       	ldi	r31, 0x00	; 0
    4988:	ee 0f       	add	r30, r30
    498a:	ff 1f       	adc	r31, r31
    498c:	e5 5f       	subi	r30, 0xF5	; 245
    498e:	ff 4d       	sbci	r31, 0xDF	; 223
    4990:	45 91       	lpm	r20, Z+
    4992:	54 91       	lpm	r21, Z
    4994:	5d 87       	std	Y+13, r21	; 0x0d
    4996:	4c 87       	std	Y+12, r20	; 0x0c
    4998:	f9 01       	movw	r30, r18
    499a:	ed 51       	subi	r30, 0x1D	; 29
    499c:	f0 4e       	sbci	r31, 0xE0	; 224
    499e:	e4 91       	lpm	r30, Z
    49a0:	ee 8b       	std	Y+22, r30	; 0x16
    49a2:	9c 91       	ld	r25, X
    49a4:	e8 2f       	mov	r30, r24
    49a6:	e0 95       	com	r30
    49a8:	e9 23       	and	r30, r25
    49aa:	ec 93       	st	X, r30
    49ac:	ec 85       	ldd	r30, Y+12	; 0x0c
    49ae:	fd 85       	ldd	r31, Y+13	; 0x0d
    49b0:	90 81       	ld	r25, Z
    49b2:	8e 89       	ldd	r24, Y+22	; 0x16
    49b4:	80 95       	com	r24
    49b6:	89 23       	and	r24, r25
    49b8:	80 83       	st	Z, r24
    49ba:	06 c0       	rjmp	.+12     	; 0x49c8 <_ZN14TFT_22_ILI92255beginEv+0x14a>
    49bc:	1f 86       	std	Y+15, r1	; 0x0f
    49be:	1e 86       	std	Y+14, r1	; 0x0e
    49c0:	1f 8a       	std	Y+23, r1	; 0x17
    49c2:	1d 86       	std	Y+13, r1	; 0x0d
    49c4:	1c 86       	std	Y+12, r1	; 0x0c
    49c6:	1e 8a       	std	Y+22, r1	; 0x16
    49c8:	8a 85       	ldd	r24, Y+10	; 0x0a
    49ca:	87 fd       	sbrc	r24, 7
    49cc:	0e 94 46 2c 	call	0x588c	; 0x588c <_ZN8SPIClass5beginEv>
    49d0:	8e 81       	ldd	r24, Y+6	; 0x06
    49d2:	18 16       	cp	r1, r24
    49d4:	ec f4       	brge	.+58     	; 0x4a10 <_ZN14TFT_22_ILI92255beginEv+0x192>
    49d6:	61 e0       	ldi	r22, 0x01	; 1
    49d8:	0e 94 17 2c 	call	0x582e	; 0x582e <digitalWrite>
    49dc:	61 e0       	ldi	r22, 0x01	; 1
    49de:	70 e0       	ldi	r23, 0x00	; 0
    49e0:	80 e0       	ldi	r24, 0x00	; 0
    49e2:	90 e0       	ldi	r25, 0x00	; 0
    49e4:	0e 94 af 1a 	call	0x355e	; 0x355e <delay>
    49e8:	60 e0       	ldi	r22, 0x00	; 0
    49ea:	8e 81       	ldd	r24, Y+6	; 0x06
    49ec:	0e 94 17 2c 	call	0x582e	; 0x582e <digitalWrite>
    49f0:	6a e0       	ldi	r22, 0x0A	; 10
    49f2:	70 e0       	ldi	r23, 0x00	; 0
    49f4:	80 e0       	ldi	r24, 0x00	; 0
    49f6:	90 e0       	ldi	r25, 0x00	; 0
    49f8:	0e 94 af 1a 	call	0x355e	; 0x355e <delay>
    49fc:	61 e0       	ldi	r22, 0x01	; 1
    49fe:	8e 81       	ldd	r24, Y+6	; 0x06
    4a00:	0e 94 17 2c 	call	0x582e	; 0x582e <digitalWrite>
    4a04:	62 e3       	ldi	r22, 0x32	; 50
    4a06:	70 e0       	ldi	r23, 0x00	; 0
    4a08:	80 e0       	ldi	r24, 0x00	; 0
    4a0a:	90 e0       	ldi	r25, 0x00	; 0
    4a0c:	0e 94 af 1a 	call	0x355e	; 0x355e <delay>
    4a10:	ce 01       	movw	r24, r28
    4a12:	0e 94 d8 21 	call	0x43b0	; 0x43b0 <_ZN14TFT_22_ILI922510startWriteEv>
    4a16:	40 e0       	ldi	r20, 0x00	; 0
    4a18:	50 e0       	ldi	r21, 0x00	; 0
    4a1a:	60 e1       	ldi	r22, 0x10	; 16
    4a1c:	70 e0       	ldi	r23, 0x00	; 0
    4a1e:	ce 01       	movw	r24, r28
    4a20:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4a24:	40 e0       	ldi	r20, 0x00	; 0
    4a26:	50 e0       	ldi	r21, 0x00	; 0
    4a28:	61 e1       	ldi	r22, 0x11	; 17
    4a2a:	70 e0       	ldi	r23, 0x00	; 0
    4a2c:	ce 01       	movw	r24, r28
    4a2e:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4a32:	40 e0       	ldi	r20, 0x00	; 0
    4a34:	50 e0       	ldi	r21, 0x00	; 0
    4a36:	62 e1       	ldi	r22, 0x12	; 18
    4a38:	70 e0       	ldi	r23, 0x00	; 0
    4a3a:	ce 01       	movw	r24, r28
    4a3c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4a40:	40 e0       	ldi	r20, 0x00	; 0
    4a42:	50 e0       	ldi	r21, 0x00	; 0
    4a44:	63 e1       	ldi	r22, 0x13	; 19
    4a46:	70 e0       	ldi	r23, 0x00	; 0
    4a48:	ce 01       	movw	r24, r28
    4a4a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4a4e:	40 e0       	ldi	r20, 0x00	; 0
    4a50:	50 e0       	ldi	r21, 0x00	; 0
    4a52:	64 e1       	ldi	r22, 0x14	; 20
    4a54:	70 e0       	ldi	r23, 0x00	; 0
    4a56:	ce 01       	movw	r24, r28
    4a58:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4a5c:	ce 01       	movw	r24, r28
    4a5e:	0e 94 17 22 	call	0x442e	; 0x442e <_ZN14TFT_22_ILI92258endWriteEv>
    4a62:	68 e2       	ldi	r22, 0x28	; 40
    4a64:	70 e0       	ldi	r23, 0x00	; 0
    4a66:	80 e0       	ldi	r24, 0x00	; 0
    4a68:	90 e0       	ldi	r25, 0x00	; 0
    4a6a:	0e 94 af 1a 	call	0x355e	; 0x355e <delay>
    4a6e:	ce 01       	movw	r24, r28
    4a70:	0e 94 d8 21 	call	0x43b0	; 0x43b0 <_ZN14TFT_22_ILI922510startWriteEv>
    4a74:	48 e1       	ldi	r20, 0x18	; 24
    4a76:	50 e0       	ldi	r21, 0x00	; 0
    4a78:	61 e1       	ldi	r22, 0x11	; 17
    4a7a:	70 e0       	ldi	r23, 0x00	; 0
    4a7c:	ce 01       	movw	r24, r28
    4a7e:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4a82:	41 e2       	ldi	r20, 0x21	; 33
    4a84:	51 e6       	ldi	r21, 0x61	; 97
    4a86:	62 e1       	ldi	r22, 0x12	; 18
    4a88:	70 e0       	ldi	r23, 0x00	; 0
    4a8a:	ce 01       	movw	r24, r28
    4a8c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4a90:	4f e6       	ldi	r20, 0x6F	; 111
    4a92:	50 e0       	ldi	r21, 0x00	; 0
    4a94:	63 e1       	ldi	r22, 0x13	; 19
    4a96:	70 e0       	ldi	r23, 0x00	; 0
    4a98:	ce 01       	movw	r24, r28
    4a9a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4a9e:	4f e5       	ldi	r20, 0x5F	; 95
    4aa0:	59 e4       	ldi	r21, 0x49	; 73
    4aa2:	64 e1       	ldi	r22, 0x14	; 20
    4aa4:	70 e0       	ldi	r23, 0x00	; 0
    4aa6:	ce 01       	movw	r24, r28
    4aa8:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4aac:	40 e0       	ldi	r20, 0x00	; 0
    4aae:	58 e0       	ldi	r21, 0x08	; 8
    4ab0:	60 e1       	ldi	r22, 0x10	; 16
    4ab2:	70 e0       	ldi	r23, 0x00	; 0
    4ab4:	ce 01       	movw	r24, r28
    4ab6:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4aba:	ce 01       	movw	r24, r28
    4abc:	0e 94 17 22 	call	0x442e	; 0x442e <_ZN14TFT_22_ILI92258endWriteEv>
    4ac0:	6a e0       	ldi	r22, 0x0A	; 10
    4ac2:	70 e0       	ldi	r23, 0x00	; 0
    4ac4:	80 e0       	ldi	r24, 0x00	; 0
    4ac6:	90 e0       	ldi	r25, 0x00	; 0
    4ac8:	0e 94 af 1a 	call	0x355e	; 0x355e <delay>
    4acc:	ce 01       	movw	r24, r28
    4ace:	0e 94 d8 21 	call	0x43b0	; 0x43b0 <_ZN14TFT_22_ILI922510startWriteEv>
    4ad2:	4b e3       	ldi	r20, 0x3B	; 59
    4ad4:	50 e1       	ldi	r21, 0x10	; 16
    4ad6:	61 e1       	ldi	r22, 0x11	; 17
    4ad8:	70 e0       	ldi	r23, 0x00	; 0
    4ada:	ce 01       	movw	r24, r28
    4adc:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4ae0:	ce 01       	movw	r24, r28
    4ae2:	0e 94 17 22 	call	0x442e	; 0x442e <_ZN14TFT_22_ILI92258endWriteEv>
    4ae6:	62 e3       	ldi	r22, 0x32	; 50
    4ae8:	70 e0       	ldi	r23, 0x00	; 0
    4aea:	80 e0       	ldi	r24, 0x00	; 0
    4aec:	90 e0       	ldi	r25, 0x00	; 0
    4aee:	0e 94 af 1a 	call	0x355e	; 0x355e <delay>
    4af2:	ce 01       	movw	r24, r28
    4af4:	0e 94 d8 21 	call	0x43b0	; 0x43b0 <_ZN14TFT_22_ILI922510startWriteEv>
    4af8:	4c e1       	ldi	r20, 0x1C	; 28
    4afa:	51 e0       	ldi	r21, 0x01	; 1
    4afc:	61 e0       	ldi	r22, 0x01	; 1
    4afe:	70 e0       	ldi	r23, 0x00	; 0
    4b00:	ce 01       	movw	r24, r28
    4b02:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b06:	40 e0       	ldi	r20, 0x00	; 0
    4b08:	51 e0       	ldi	r21, 0x01	; 1
    4b0a:	62 e0       	ldi	r22, 0x02	; 2
    4b0c:	70 e0       	ldi	r23, 0x00	; 0
    4b0e:	ce 01       	movw	r24, r28
    4b10:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b14:	48 e3       	ldi	r20, 0x38	; 56
    4b16:	50 e1       	ldi	r21, 0x10	; 16
    4b18:	63 e0       	ldi	r22, 0x03	; 3
    4b1a:	70 e0       	ldi	r23, 0x00	; 0
    4b1c:	ce 01       	movw	r24, r28
    4b1e:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b22:	40 e0       	ldi	r20, 0x00	; 0
    4b24:	50 e0       	ldi	r21, 0x00	; 0
    4b26:	67 e0       	ldi	r22, 0x07	; 7
    4b28:	70 e0       	ldi	r23, 0x00	; 0
    4b2a:	ce 01       	movw	r24, r28
    4b2c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b30:	48 e0       	ldi	r20, 0x08	; 8
    4b32:	58 e0       	ldi	r21, 0x08	; 8
    4b34:	68 e0       	ldi	r22, 0x08	; 8
    4b36:	70 e0       	ldi	r23, 0x00	; 0
    4b38:	ce 01       	movw	r24, r28
    4b3a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b3e:	40 e0       	ldi	r20, 0x00	; 0
    4b40:	51 e1       	ldi	r21, 0x11	; 17
    4b42:	6b e0       	ldi	r22, 0x0B	; 11
    4b44:	70 e0       	ldi	r23, 0x00	; 0
    4b46:	ce 01       	movw	r24, r28
    4b48:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b4c:	40 e0       	ldi	r20, 0x00	; 0
    4b4e:	50 e0       	ldi	r21, 0x00	; 0
    4b50:	6c e0       	ldi	r22, 0x0C	; 12
    4b52:	70 e0       	ldi	r23, 0x00	; 0
    4b54:	ce 01       	movw	r24, r28
    4b56:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b5a:	41 e0       	ldi	r20, 0x01	; 1
    4b5c:	5d e0       	ldi	r21, 0x0D	; 13
    4b5e:	6f e0       	ldi	r22, 0x0F	; 15
    4b60:	70 e0       	ldi	r23, 0x00	; 0
    4b62:	ce 01       	movw	r24, r28
    4b64:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b68:	40 e2       	ldi	r20, 0x20	; 32
    4b6a:	50 e0       	ldi	r21, 0x00	; 0
    4b6c:	65 e1       	ldi	r22, 0x15	; 21
    4b6e:	70 e0       	ldi	r23, 0x00	; 0
    4b70:	ce 01       	movw	r24, r28
    4b72:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b76:	40 e0       	ldi	r20, 0x00	; 0
    4b78:	50 e0       	ldi	r21, 0x00	; 0
    4b7a:	60 e2       	ldi	r22, 0x20	; 32
    4b7c:	70 e0       	ldi	r23, 0x00	; 0
    4b7e:	ce 01       	movw	r24, r28
    4b80:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b84:	40 e0       	ldi	r20, 0x00	; 0
    4b86:	50 e0       	ldi	r21, 0x00	; 0
    4b88:	61 e2       	ldi	r22, 0x21	; 33
    4b8a:	70 e0       	ldi	r23, 0x00	; 0
    4b8c:	ce 01       	movw	r24, r28
    4b8e:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b92:	40 e0       	ldi	r20, 0x00	; 0
    4b94:	50 e0       	ldi	r21, 0x00	; 0
    4b96:	60 e3       	ldi	r22, 0x30	; 48
    4b98:	70 e0       	ldi	r23, 0x00	; 0
    4b9a:	ce 01       	movw	r24, r28
    4b9c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4ba0:	4b ed       	ldi	r20, 0xDB	; 219
    4ba2:	50 e0       	ldi	r21, 0x00	; 0
    4ba4:	61 e3       	ldi	r22, 0x31	; 49
    4ba6:	70 e0       	ldi	r23, 0x00	; 0
    4ba8:	ce 01       	movw	r24, r28
    4baa:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4bae:	40 e0       	ldi	r20, 0x00	; 0
    4bb0:	50 e0       	ldi	r21, 0x00	; 0
    4bb2:	62 e3       	ldi	r22, 0x32	; 50
    4bb4:	70 e0       	ldi	r23, 0x00	; 0
    4bb6:	ce 01       	movw	r24, r28
    4bb8:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4bbc:	40 e0       	ldi	r20, 0x00	; 0
    4bbe:	50 e0       	ldi	r21, 0x00	; 0
    4bc0:	63 e3       	ldi	r22, 0x33	; 51
    4bc2:	70 e0       	ldi	r23, 0x00	; 0
    4bc4:	ce 01       	movw	r24, r28
    4bc6:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4bca:	4b ed       	ldi	r20, 0xDB	; 219
    4bcc:	50 e0       	ldi	r21, 0x00	; 0
    4bce:	64 e3       	ldi	r22, 0x34	; 52
    4bd0:	70 e0       	ldi	r23, 0x00	; 0
    4bd2:	ce 01       	movw	r24, r28
    4bd4:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4bd8:	40 e0       	ldi	r20, 0x00	; 0
    4bda:	50 e0       	ldi	r21, 0x00	; 0
    4bdc:	65 e3       	ldi	r22, 0x35	; 53
    4bde:	70 e0       	ldi	r23, 0x00	; 0
    4be0:	ce 01       	movw	r24, r28
    4be2:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4be6:	4f ea       	ldi	r20, 0xAF	; 175
    4be8:	50 e0       	ldi	r21, 0x00	; 0
    4bea:	66 e3       	ldi	r22, 0x36	; 54
    4bec:	70 e0       	ldi	r23, 0x00	; 0
    4bee:	ce 01       	movw	r24, r28
    4bf0:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4bf4:	40 e0       	ldi	r20, 0x00	; 0
    4bf6:	50 e0       	ldi	r21, 0x00	; 0
    4bf8:	67 e3       	ldi	r22, 0x37	; 55
    4bfa:	70 e0       	ldi	r23, 0x00	; 0
    4bfc:	ce 01       	movw	r24, r28
    4bfe:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4c02:	4b ed       	ldi	r20, 0xDB	; 219
    4c04:	50 e0       	ldi	r21, 0x00	; 0
    4c06:	68 e3       	ldi	r22, 0x38	; 56
    4c08:	70 e0       	ldi	r23, 0x00	; 0
    4c0a:	ce 01       	movw	r24, r28
    4c0c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4c10:	40 e0       	ldi	r20, 0x00	; 0
    4c12:	50 e0       	ldi	r21, 0x00	; 0
    4c14:	69 e3       	ldi	r22, 0x39	; 57
    4c16:	70 e0       	ldi	r23, 0x00	; 0
    4c18:	ce 01       	movw	r24, r28
    4c1a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4c1e:	40 e0       	ldi	r20, 0x00	; 0
    4c20:	50 e0       	ldi	r21, 0x00	; 0
    4c22:	60 e5       	ldi	r22, 0x50	; 80
    4c24:	70 e0       	ldi	r23, 0x00	; 0
    4c26:	ce 01       	movw	r24, r28
    4c28:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4c2c:	48 e0       	ldi	r20, 0x08	; 8
    4c2e:	58 e0       	ldi	r21, 0x08	; 8
    4c30:	61 e5       	ldi	r22, 0x51	; 81
    4c32:	70 e0       	ldi	r23, 0x00	; 0
    4c34:	ce 01       	movw	r24, r28
    4c36:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4c3a:	4a e0       	ldi	r20, 0x0A	; 10
    4c3c:	58 e0       	ldi	r21, 0x08	; 8
    4c3e:	62 e5       	ldi	r22, 0x52	; 82
    4c40:	70 e0       	ldi	r23, 0x00	; 0
    4c42:	ce 01       	movw	r24, r28
    4c44:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4c48:	4a e0       	ldi	r20, 0x0A	; 10
    4c4a:	50 e0       	ldi	r21, 0x00	; 0
    4c4c:	63 e5       	ldi	r22, 0x53	; 83
    4c4e:	70 e0       	ldi	r23, 0x00	; 0
    4c50:	ce 01       	movw	r24, r28
    4c52:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4c56:	48 e0       	ldi	r20, 0x08	; 8
    4c58:	5a e0       	ldi	r21, 0x0A	; 10
    4c5a:	64 e5       	ldi	r22, 0x54	; 84
    4c5c:	70 e0       	ldi	r23, 0x00	; 0
    4c5e:	ce 01       	movw	r24, r28
    4c60:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4c64:	48 e0       	ldi	r20, 0x08	; 8
    4c66:	58 e0       	ldi	r21, 0x08	; 8
    4c68:	65 e5       	ldi	r22, 0x55	; 85
    4c6a:	70 e0       	ldi	r23, 0x00	; 0
    4c6c:	ce 01       	movw	r24, r28
    4c6e:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4c72:	40 e0       	ldi	r20, 0x00	; 0
    4c74:	50 e0       	ldi	r21, 0x00	; 0
    4c76:	66 e5       	ldi	r22, 0x56	; 86
    4c78:	70 e0       	ldi	r23, 0x00	; 0
    4c7a:	ce 01       	movw	r24, r28
    4c7c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4c80:	40 e0       	ldi	r20, 0x00	; 0
    4c82:	5a e0       	ldi	r21, 0x0A	; 10
    4c84:	67 e5       	ldi	r22, 0x57	; 87
    4c86:	70 e0       	ldi	r23, 0x00	; 0
    4c88:	ce 01       	movw	r24, r28
    4c8a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4c8e:	40 e1       	ldi	r20, 0x10	; 16
    4c90:	57 e0       	ldi	r21, 0x07	; 7
    4c92:	68 e5       	ldi	r22, 0x58	; 88
    4c94:	70 e0       	ldi	r23, 0x00	; 0
    4c96:	ce 01       	movw	r24, r28
    4c98:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4c9c:	40 e1       	ldi	r20, 0x10	; 16
    4c9e:	57 e0       	ldi	r21, 0x07	; 7
    4ca0:	69 e5       	ldi	r22, 0x59	; 89
    4ca2:	70 e0       	ldi	r23, 0x00	; 0
    4ca4:	ce 01       	movw	r24, r28
    4ca6:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4caa:	42 e1       	ldi	r20, 0x12	; 18
    4cac:	50 e0       	ldi	r21, 0x00	; 0
    4cae:	67 e0       	ldi	r22, 0x07	; 7
    4cb0:	70 e0       	ldi	r23, 0x00	; 0
    4cb2:	ce 01       	movw	r24, r28
    4cb4:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4cb8:	ce 01       	movw	r24, r28
    4cba:	0e 94 17 22 	call	0x442e	; 0x442e <_ZN14TFT_22_ILI92258endWriteEv>
    4cbe:	62 e3       	ldi	r22, 0x32	; 50
    4cc0:	70 e0       	ldi	r23, 0x00	; 0
    4cc2:	80 e0       	ldi	r24, 0x00	; 0
    4cc4:	90 e0       	ldi	r25, 0x00	; 0
    4cc6:	0e 94 af 1a 	call	0x355e	; 0x355e <delay>
    4cca:	ce 01       	movw	r24, r28
    4ccc:	0e 94 d8 21 	call	0x43b0	; 0x43b0 <_ZN14TFT_22_ILI922510startWriteEv>
    4cd0:	47 e1       	ldi	r20, 0x17	; 23
    4cd2:	50 e1       	ldi	r21, 0x10	; 16
    4cd4:	67 e0       	ldi	r22, 0x07	; 7
    4cd6:	70 e0       	ldi	r23, 0x00	; 0
    4cd8:	ce 01       	movw	r24, r28
    4cda:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4cde:	ce 01       	movw	r24, r28
    4ce0:	0e 94 17 22 	call	0x442e	; 0x442e <_ZN14TFT_22_ILI92258endWriteEv>
    4ce4:	61 e0       	ldi	r22, 0x01	; 1
    4ce6:	ce 01       	movw	r24, r28
    4ce8:	0e 94 ba 20 	call	0x4174	; 0x4174 <_ZN14TFT_22_ILI922512setBacklightEb>
    4cec:	60 e0       	ldi	r22, 0x00	; 0
    4cee:	ce 01       	movw	r24, r28
    4cf0:	0e 94 c9 20 	call	0x4192	; 0x4192 <_ZN14TFT_22_ILI922514setOrientationEh>
    4cf4:	1d 82       	std	Y+5, r1	; 0x05
    4cf6:	1c 82       	std	Y+4, r1	; 0x04
    4cf8:	ce 01       	movw	r24, r28
    4cfa:	df 91       	pop	r29
    4cfc:	cf 91       	pop	r28
    4cfe:	0c 94 11 24 	jmp	0x4822	; 0x4822 <_ZN14TFT_22_ILI92255clearEv>

00004d02 <_ZN14TFT_22_ILI92259drawPixelEjjj>:
    4d02:	ef 92       	push	r14
    4d04:	ff 92       	push	r15
    4d06:	0f 93       	push	r16
    4d08:	1f 93       	push	r17
    4d0a:	cf 93       	push	r28
    4d0c:	df 93       	push	r29
    4d0e:	00 d0       	rcall	.+0      	; 0x4d10 <_ZN14TFT_22_ILI92259drawPixelEjjj+0xe>
    4d10:	00 d0       	rcall	.+0      	; 0x4d12 <_ZN14TFT_22_ILI92259drawPixelEjjj+0x10>
    4d12:	cd b7       	in	r28, 0x3d	; 61
    4d14:	de b7       	in	r29, 0x3e	; 62
    4d16:	7a 83       	std	Y+2, r23	; 0x02
    4d18:	69 83       	std	Y+1, r22	; 0x01
    4d1a:	5c 83       	std	Y+4, r21	; 0x04
    4d1c:	4b 83       	std	Y+3, r20	; 0x03
    4d1e:	dc 01       	movw	r26, r24
    4d20:	4d 91       	ld	r20, X+
    4d22:	5c 91       	ld	r21, X
    4d24:	11 97       	sbiw	r26, 0x01	; 1
    4d26:	64 17       	cp	r22, r20
    4d28:	75 07       	cpc	r23, r21
    4d2a:	68 f5       	brcc	.+90     	; 0x4d86 <_ZN14TFT_22_ILI92259drawPixelEjjj+0x84>
    4d2c:	12 96       	adiw	r26, 0x02	; 2
    4d2e:	6d 91       	ld	r22, X+
    4d30:	7c 91       	ld	r23, X
    4d32:	13 97       	sbiw	r26, 0x03	; 3
    4d34:	4b 81       	ldd	r20, Y+3	; 0x03
    4d36:	5c 81       	ldd	r21, Y+4	; 0x04
    4d38:	46 17       	cp	r20, r22
    4d3a:	57 07       	cpc	r21, r23
    4d3c:	20 f5       	brcc	.+72     	; 0x4d86 <_ZN14TFT_22_ILI92259drawPixelEjjj+0x84>
    4d3e:	79 01       	movw	r14, r18
    4d40:	8c 01       	movw	r16, r24
    4d42:	ae 01       	movw	r20, r28
    4d44:	4d 5f       	subi	r20, 0xFD	; 253
    4d46:	5f 4f       	sbci	r21, 0xFF	; 255
    4d48:	be 01       	movw	r22, r28
    4d4a:	6f 5f       	subi	r22, 0xFF	; 255
    4d4c:	7f 4f       	sbci	r23, 0xFF	; 255
    4d4e:	0e 94 77 20 	call	0x40ee	; 0x40ee <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_>
    4d52:	c8 01       	movw	r24, r16
    4d54:	0e 94 d8 21 	call	0x43b0	; 0x43b0 <_ZN14TFT_22_ILI922510startWriteEv>
    4d58:	49 81       	ldd	r20, Y+1	; 0x01
    4d5a:	5a 81       	ldd	r21, Y+2	; 0x02
    4d5c:	60 e2       	ldi	r22, 0x20	; 32
    4d5e:	70 e0       	ldi	r23, 0x00	; 0
    4d60:	c8 01       	movw	r24, r16
    4d62:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4d66:	4b 81       	ldd	r20, Y+3	; 0x03
    4d68:	5c 81       	ldd	r21, Y+4	; 0x04
    4d6a:	61 e2       	ldi	r22, 0x21	; 33
    4d6c:	70 e0       	ldi	r23, 0x00	; 0
    4d6e:	c8 01       	movw	r24, r16
    4d70:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4d74:	a7 01       	movw	r20, r14
    4d76:	62 e2       	ldi	r22, 0x22	; 34
    4d78:	70 e0       	ldi	r23, 0x00	; 0
    4d7a:	c8 01       	movw	r24, r16
    4d7c:	0e 94 7d 21 	call	0x42fa	; 0x42fa <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4d80:	c8 01       	movw	r24, r16
    4d82:	0e 94 17 22 	call	0x442e	; 0x442e <_ZN14TFT_22_ILI92258endWriteEv>
    4d86:	0f 90       	pop	r0
    4d88:	0f 90       	pop	r0
    4d8a:	0f 90       	pop	r0
    4d8c:	0f 90       	pop	r0
    4d8e:	df 91       	pop	r29
    4d90:	cf 91       	pop	r28
    4d92:	1f 91       	pop	r17
    4d94:	0f 91       	pop	r16
    4d96:	ff 90       	pop	r15
    4d98:	ef 90       	pop	r14
    4d9a:	08 95       	ret

00004d9c <_ZN14TFT_22_ILI92258drawLineEjjjjj>:
    4d9c:	2f 92       	push	r2
    4d9e:	3f 92       	push	r3
    4da0:	4f 92       	push	r4
    4da2:	5f 92       	push	r5
    4da4:	6f 92       	push	r6
    4da6:	7f 92       	push	r7
    4da8:	8f 92       	push	r8
    4daa:	9f 92       	push	r9
    4dac:	af 92       	push	r10
    4dae:	bf 92       	push	r11
    4db0:	cf 92       	push	r12
    4db2:	df 92       	push	r13
    4db4:	ef 92       	push	r14
    4db6:	ff 92       	push	r15
    4db8:	0f 93       	push	r16
    4dba:	1f 93       	push	r17
    4dbc:	cf 93       	push	r28
    4dbe:	df 93       	push	r29
    4dc0:	00 d0       	rcall	.+0      	; 0x4dc2 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x26>
    4dc2:	00 d0       	rcall	.+0      	; 0x4dc4 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x28>
    4dc4:	00 d0       	rcall	.+0      	; 0x4dc6 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x2a>
    4dc6:	cd b7       	in	r28, 0x3d	; 61
    4dc8:	de b7       	in	r29, 0x3e	; 62
    4dca:	4c 01       	movw	r8, r24
    4dcc:	7e 83       	std	Y+6, r23	; 0x06
    4dce:	6d 83       	std	Y+5, r22	; 0x05
    4dd0:	6a 01       	movw	r12, r20
    4dd2:	59 01       	movw	r10, r18
    4dd4:	fc 82       	std	Y+4, r15	; 0x04
    4dd6:	eb 82       	std	Y+3, r14	; 0x03
    4dd8:	38 01       	movw	r6, r16
    4dda:	64 1a       	sub	r6, r20
    4ddc:	75 0a       	sbc	r7, r21
    4dde:	77 fe       	sbrs	r7, 7
    4de0:	03 c0       	rjmp	.+6      	; 0x4de8 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x4c>
    4de2:	71 94       	neg	r7
    4de4:	61 94       	neg	r6
    4de6:	71 08       	sbc	r7, r1
    4de8:	75 01       	movw	r14, r10
    4dea:	2d 81       	ldd	r18, Y+5	; 0x05
    4dec:	3e 81       	ldd	r19, Y+6	; 0x06
    4dee:	e2 1a       	sub	r14, r18
    4df0:	f3 0a       	sbc	r15, r19
    4df2:	f7 fe       	sbrs	r15, 7
    4df4:	03 c0       	rjmp	.+6      	; 0x4dfc <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x60>
    4df6:	f1 94       	neg	r15
    4df8:	e1 94       	neg	r14
    4dfa:	f1 08       	sbc	r15, r1
    4dfc:	e6 14       	cp	r14, r6
    4dfe:	f7 04       	cpc	r15, r7
    4e00:	5c f4       	brge	.+22     	; 0x4e18 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x7c>
    4e02:	9a 2d       	mov	r25, r10
    4e04:	8b 2d       	mov	r24, r11
    4e06:	58 01       	movw	r10, r16
    4e08:	09 2f       	mov	r16, r25
    4e0a:	18 2f       	mov	r17, r24
    4e0c:	9d 81       	ldd	r25, Y+5	; 0x05
    4e0e:	8e 81       	ldd	r24, Y+6	; 0x06
    4e10:	de 82       	std	Y+6, r13	; 0x06
    4e12:	cd 82       	std	Y+5, r12	; 0x05
    4e14:	c9 2e       	mov	r12, r25
    4e16:	d8 2e       	mov	r13, r24
    4e18:	8d 81       	ldd	r24, Y+5	; 0x05
    4e1a:	9e 81       	ldd	r25, Y+6	; 0x06
    4e1c:	a8 16       	cp	r10, r24
    4e1e:	b9 06       	cpc	r11, r25
    4e20:	58 f4       	brcc	.+22     	; 0x4e38 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x9c>
    4e22:	9c 2d       	mov	r25, r12
    4e24:	8d 2d       	mov	r24, r13
    4e26:	68 01       	movw	r12, r16
    4e28:	09 2f       	mov	r16, r25
    4e2a:	18 2f       	mov	r17, r24
    4e2c:	9d 81       	ldd	r25, Y+5	; 0x05
    4e2e:	8e 81       	ldd	r24, Y+6	; 0x06
    4e30:	be 82       	std	Y+6, r11	; 0x06
    4e32:	ad 82       	std	Y+5, r10	; 0x05
    4e34:	a9 2e       	mov	r10, r25
    4e36:	b8 2e       	mov	r11, r24
    4e38:	95 01       	movw	r18, r10
    4e3a:	8d 81       	ldd	r24, Y+5	; 0x05
    4e3c:	9e 81       	ldd	r25, Y+6	; 0x06
    4e3e:	28 1b       	sub	r18, r24
    4e40:	39 0b       	sbc	r19, r25
    4e42:	3a 83       	std	Y+2, r19	; 0x02
    4e44:	29 83       	std	Y+1, r18	; 0x01
    4e46:	18 01       	movw	r2, r16
    4e48:	2c 18       	sub	r2, r12
    4e4a:	3d 08       	sbc	r3, r13
    4e4c:	37 fe       	sbrs	r3, 7
    4e4e:	03 c0       	rjmp	.+6      	; 0x4e56 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0xba>
    4e50:	31 94       	neg	r3
    4e52:	21 94       	neg	r2
    4e54:	31 08       	sbc	r3, r1
    4e56:	49 80       	ldd	r4, Y+1	; 0x01
    4e58:	5a 80       	ldd	r5, Y+2	; 0x02
    4e5a:	57 fe       	sbrs	r5, 7
    4e5c:	03 c0       	rjmp	.+6      	; 0x4e64 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0xc8>
    4e5e:	9f ef       	ldi	r25, 0xFF	; 255
    4e60:	49 1a       	sub	r4, r25
    4e62:	59 0a       	sbc	r5, r25
    4e64:	55 94       	asr	r5
    4e66:	47 94       	ror	r4
    4e68:	c0 16       	cp	r12, r16
    4e6a:	d1 06       	cpc	r13, r17
    4e6c:	18 f0       	brcs	.+6      	; 0x4e74 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0xd8>
    4e6e:	0f ef       	ldi	r16, 0xFF	; 255
    4e70:	1f ef       	ldi	r17, 0xFF	; 255
    4e72:	02 c0       	rjmp	.+4      	; 0x4e78 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0xdc>
    4e74:	01 e0       	ldi	r16, 0x01	; 1
    4e76:	10 e0       	ldi	r17, 0x00	; 0
    4e78:	c4 01       	movw	r24, r8
    4e7a:	0e 94 d8 21 	call	0x43b0	; 0x43b0 <_ZN14TFT_22_ILI922510startWriteEv>
    4e7e:	2d 81       	ldd	r18, Y+5	; 0x05
    4e80:	3e 81       	ldd	r19, Y+6	; 0x06
    4e82:	a2 16       	cp	r10, r18
    4e84:	b3 06       	cpc	r11, r19
    4e86:	00 f1       	brcs	.+64     	; 0x4ec8 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x12c>
    4e88:	2b 81       	ldd	r18, Y+3	; 0x03
    4e8a:	3c 81       	ldd	r19, Y+4	; 0x04
    4e8c:	e6 14       	cp	r14, r6
    4e8e:	f7 04       	cpc	r15, r7
    4e90:	24 f4       	brge	.+8      	; 0x4e9a <_ZN14TFT_22_ILI92258drawLineEjjjjj+0xfe>
    4e92:	4d 81       	ldd	r20, Y+5	; 0x05
    4e94:	5e 81       	ldd	r21, Y+6	; 0x06
    4e96:	b6 01       	movw	r22, r12
    4e98:	03 c0       	rjmp	.+6      	; 0x4ea0 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x104>
    4e9a:	a6 01       	movw	r20, r12
    4e9c:	6d 81       	ldd	r22, Y+5	; 0x05
    4e9e:	7e 81       	ldd	r23, Y+6	; 0x06
    4ea0:	c4 01       	movw	r24, r8
    4ea2:	0e 94 81 26 	call	0x4d02	; 0x4d02 <_ZN14TFT_22_ILI92259drawPixelEjjj>
    4ea6:	42 18       	sub	r4, r2
    4ea8:	53 08       	sbc	r5, r3
    4eaa:	57 fe       	sbrs	r5, 7
    4eac:	06 c0       	rjmp	.+12     	; 0x4eba <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x11e>
    4eae:	c0 0e       	add	r12, r16
    4eb0:	d1 1e       	adc	r13, r17
    4eb2:	89 81       	ldd	r24, Y+1	; 0x01
    4eb4:	9a 81       	ldd	r25, Y+2	; 0x02
    4eb6:	48 0e       	add	r4, r24
    4eb8:	59 1e       	adc	r5, r25
    4eba:	2d 81       	ldd	r18, Y+5	; 0x05
    4ebc:	3e 81       	ldd	r19, Y+6	; 0x06
    4ebe:	2f 5f       	subi	r18, 0xFF	; 255
    4ec0:	3f 4f       	sbci	r19, 0xFF	; 255
    4ec2:	3e 83       	std	Y+6, r19	; 0x06
    4ec4:	2d 83       	std	Y+5, r18	; 0x05
    4ec6:	db cf       	rjmp	.-74     	; 0x4e7e <_ZN14TFT_22_ILI92258drawLineEjjjjj+0xe2>
    4ec8:	c4 01       	movw	r24, r8
    4eca:	26 96       	adiw	r28, 0x06	; 6
    4ecc:	0f b6       	in	r0, 0x3f	; 63
    4ece:	f8 94       	cli
    4ed0:	de bf       	out	0x3e, r29	; 62
    4ed2:	0f be       	out	0x3f, r0	; 63
    4ed4:	cd bf       	out	0x3d, r28	; 61
    4ed6:	df 91       	pop	r29
    4ed8:	cf 91       	pop	r28
    4eda:	1f 91       	pop	r17
    4edc:	0f 91       	pop	r16
    4ede:	ff 90       	pop	r15
    4ee0:	ef 90       	pop	r14
    4ee2:	df 90       	pop	r13
    4ee4:	cf 90       	pop	r12
    4ee6:	bf 90       	pop	r11
    4ee8:	af 90       	pop	r10
    4eea:	9f 90       	pop	r9
    4eec:	8f 90       	pop	r8
    4eee:	7f 90       	pop	r7
    4ef0:	6f 90       	pop	r6
    4ef2:	5f 90       	pop	r5
    4ef4:	4f 90       	pop	r4
    4ef6:	3f 90       	pop	r3
    4ef8:	2f 90       	pop	r2
    4efa:	0c 94 17 22 	jmp	0x442e	; 0x442e <_ZN14TFT_22_ILI92258endWriteEv>

00004efe <_ZN14TFT_22_ILI922513drawRectangleEjjjjj>:
    4efe:	4f 92       	push	r4
    4f00:	5f 92       	push	r5
    4f02:	6f 92       	push	r6
    4f04:	7f 92       	push	r7
    4f06:	8f 92       	push	r8
    4f08:	9f 92       	push	r9
    4f0a:	af 92       	push	r10
    4f0c:	bf 92       	push	r11
    4f0e:	cf 92       	push	r12
    4f10:	df 92       	push	r13
    4f12:	ef 92       	push	r14
    4f14:	ff 92       	push	r15
    4f16:	0f 93       	push	r16
    4f18:	1f 93       	push	r17
    4f1a:	cf 93       	push	r28
    4f1c:	df 93       	push	r29
    4f1e:	ec 01       	movw	r28, r24
    4f20:	4b 01       	movw	r8, r22
    4f22:	3a 01       	movw	r6, r20
    4f24:	29 01       	movw	r4, r18
    4f26:	68 01       	movw	r12, r16
    4f28:	0e 94 d8 21 	call	0x43b0	; 0x43b0 <_ZN14TFT_22_ILI922510startWriteEv>
    4f2c:	94 01       	movw	r18, r8
    4f2e:	a3 01       	movw	r20, r6
    4f30:	b4 01       	movw	r22, r8
    4f32:	ce 01       	movw	r24, r28
    4f34:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <_ZN14TFT_22_ILI92258drawLineEjjjjj>
    4f38:	83 01       	movw	r16, r6
    4f3a:	92 01       	movw	r18, r4
    4f3c:	a3 01       	movw	r20, r6
    4f3e:	b4 01       	movw	r22, r8
    4f40:	ce 01       	movw	r24, r28
    4f42:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <_ZN14TFT_22_ILI92258drawLineEjjjjj>
    4f46:	86 01       	movw	r16, r12
    4f48:	92 01       	movw	r18, r4
    4f4a:	a6 01       	movw	r20, r12
    4f4c:	b4 01       	movw	r22, r8
    4f4e:	ce 01       	movw	r24, r28
    4f50:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <_ZN14TFT_22_ILI92258drawLineEjjjjj>
    4f54:	92 01       	movw	r18, r4
    4f56:	a3 01       	movw	r20, r6
    4f58:	b2 01       	movw	r22, r4
    4f5a:	ce 01       	movw	r24, r28
    4f5c:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <_ZN14TFT_22_ILI92258drawLineEjjjjj>
    4f60:	ce 01       	movw	r24, r28
    4f62:	df 91       	pop	r29
    4f64:	cf 91       	pop	r28
    4f66:	1f 91       	pop	r17
    4f68:	0f 91       	pop	r16
    4f6a:	ff 90       	pop	r15
    4f6c:	ef 90       	pop	r14
    4f6e:	df 90       	pop	r13
    4f70:	cf 90       	pop	r12
    4f72:	bf 90       	pop	r11
    4f74:	af 90       	pop	r10
    4f76:	9f 90       	pop	r9
    4f78:	8f 90       	pop	r8
    4f7a:	7f 90       	pop	r7
    4f7c:	6f 90       	pop	r6
    4f7e:	5f 90       	pop	r5
    4f80:	4f 90       	pop	r4
    4f82:	0c 94 17 22 	jmp	0x442e	; 0x442e <_ZN14TFT_22_ILI92258endWriteEv>

00004f86 <_ZN14TFT_22_ILI92258drawCharEjjjj>:
    4f86:	2f 92       	push	r2
    4f88:	3f 92       	push	r3
    4f8a:	4f 92       	push	r4
    4f8c:	5f 92       	push	r5
    4f8e:	6f 92       	push	r6
    4f90:	7f 92       	push	r7
    4f92:	8f 92       	push	r8
    4f94:	9f 92       	push	r9
    4f96:	af 92       	push	r10
    4f98:	bf 92       	push	r11
    4f9a:	cf 92       	push	r12
    4f9c:	df 92       	push	r13
    4f9e:	ef 92       	push	r14
    4fa0:	ff 92       	push	r15
    4fa2:	0f 93       	push	r16
    4fa4:	1f 93       	push	r17
    4fa6:	cf 93       	push	r28
    4fa8:	df 93       	push	r29
    4faa:	cd b7       	in	r28, 0x3d	; 61
    4fac:	de b7       	in	r29, 0x3e	; 62
    4fae:	2a 97       	sbiw	r28, 0x0a	; 10
    4fb0:	0f b6       	in	r0, 0x3f	; 63
    4fb2:	f8 94       	cli
    4fb4:	de bf       	out	0x3e, r29	; 62
    4fb6:	0f be       	out	0x3f, r0	; 63
    4fb8:	cd bf       	out	0x3d, r28	; 61
    4fba:	9a 87       	std	Y+10, r25	; 0x0a
    4fbc:	89 87       	std	Y+9, r24	; 0x09
    4fbe:	7b 01       	movw	r14, r22
    4fc0:	6a 01       	movw	r12, r20
    4fc2:	50 2e       	mov	r5, r16
    4fc4:	41 2e       	mov	r4, r17
    4fc6:	dc 01       	movw	r26, r24
    4fc8:	d8 96       	adiw	r26, 0x38	; 56
    4fca:	7c 90       	ld	r7, X
    4fcc:	d8 97       	sbiw	r26, 0x38	; 56
    4fce:	dc 96       	adiw	r26, 0x3c	; 60
    4fd0:	8c 91       	ld	r24, X
    4fd2:	dc 97       	sbiw	r26, 0x3c	; 60
    4fd4:	78 9e       	mul	r7, r24
    4fd6:	c0 01       	movw	r24, r0
    4fd8:	11 24       	eor	r1, r1
    4fda:	01 96       	adiw	r24, 0x01	; 1
    4fdc:	da 96       	adiw	r26, 0x3a	; 58
    4fde:	4c 91       	ld	r20, X
    4fe0:	da 97       	sbiw	r26, 0x3a	; 58
    4fe2:	24 1b       	sub	r18, r20
    4fe4:	31 09       	sbc	r19, r1
    4fe6:	82 9f       	mul	r24, r18
    4fe8:	a0 01       	movw	r20, r0
    4fea:	83 9f       	mul	r24, r19
    4fec:	50 0d       	add	r21, r0
    4fee:	92 9f       	mul	r25, r18
    4ff0:	50 0d       	add	r21, r0
    4ff2:	11 24       	eor	r1, r1
    4ff4:	dd 96       	adiw	r26, 0x3d	; 61
    4ff6:	8c 91       	ld	r24, X
    4ff8:	dd 97       	sbiw	r26, 0x3d	; 61
    4ffa:	81 11       	cpse	r24, r1
    4ffc:	09 c0       	rjmp	.+18     	; 0x5010 <_ZN14TFT_22_ILI92258drawCharEjjjj+0x8a>
    4ffe:	d6 96       	adiw	r26, 0x36	; 54
    5000:	ed 91       	ld	r30, X+
    5002:	fc 91       	ld	r31, X
    5004:	d7 97       	sbiw	r26, 0x37	; 55
    5006:	ca 01       	movw	r24, r20
    5008:	04 96       	adiw	r24, 0x04	; 4
    500a:	e8 0f       	add	r30, r24
    500c:	f9 1f       	adc	r31, r25
    500e:	74 90       	lpm	r7, Z
    5010:	5a 01       	movw	r10, r20
    5012:	b5 e0       	ldi	r27, 0x05	; 5
    5014:	ab 0e       	add	r10, r27
    5016:	b1 1c       	adc	r11, r1
    5018:	89 85       	ldd	r24, Y+9	; 0x09
    501a:	9a 85       	ldd	r25, Y+10	; 0x0a
    501c:	0e 94 d8 21 	call	0x43b0	; 0x43b0 <_ZN14TFT_22_ILI922510startWriteEv>
    5020:	e7 2d       	mov	r30, r7
    5022:	f0 e0       	ldi	r31, 0x00	; 0
    5024:	fa 83       	std	Y+2, r31	; 0x02
    5026:	e9 83       	std	Y+1, r30	; 0x01
    5028:	97 01       	movw	r18, r14
    502a:	2f 5f       	subi	r18, 0xFF	; 255
    502c:	3f 4f       	sbci	r19, 0xFF	; 255
    502e:	2e 0f       	add	r18, r30
    5030:	3f 1f       	adc	r19, r31
    5032:	a9 85       	ldd	r26, Y+9	; 0x09
    5034:	ba 85       	ldd	r27, Y+10	; 0x0a
    5036:	8d 91       	ld	r24, X+
    5038:	9c 91       	ld	r25, X
    503a:	11 97       	sbiw	r26, 0x01	; 1
    503c:	28 17       	cp	r18, r24
    503e:	39 07       	cpc	r19, r25
    5040:	80 f4       	brcc	.+32     	; 0x5062 <_ZN14TFT_22_ILI92258drawCharEjjjj+0xdc>
    5042:	d9 96       	adiw	r26, 0x39	; 57
    5044:	0c 91       	ld	r16, X
    5046:	d9 97       	sbiw	r26, 0x39	; 57
    5048:	10 e0       	ldi	r17, 0x00	; 0
    504a:	01 50       	subi	r16, 0x01	; 1
    504c:	11 09       	sbc	r17, r1
    504e:	0c 0d       	add	r16, r12
    5050:	1d 1d       	adc	r17, r13
    5052:	12 96       	adiw	r26, 0x02	; 2
    5054:	8d 91       	ld	r24, X+
    5056:	9c 91       	ld	r25, X
    5058:	13 97       	sbiw	r26, 0x03	; 3
    505a:	08 17       	cp	r16, r24
    505c:	19 07       	cpc	r17, r25
    505e:	08 f4       	brcc	.+2      	; 0x5062 <_ZN14TFT_22_ILI92258drawCharEjjjj+0xdc>
    5060:	6c c0       	rjmp	.+216    	; 0x513a <_ZN14TFT_22_ILI92258drawCharEjjjj+0x1b4>
    5062:	31 2c       	mov	r3, r1
    5064:	61 2c       	mov	r6, r1
    5066:	45 01       	movw	r8, r10
    5068:	21 2c       	mov	r2, r1
    506a:	f7 01       	movw	r30, r14
    506c:	e6 0d       	add	r30, r6
    506e:	f1 1d       	adc	r31, r1
    5070:	f8 87       	std	Y+8, r31	; 0x08
    5072:	ef 83       	std	Y+7, r30	; 0x07
    5074:	88 2d       	mov	r24, r8
    5076:	8a 19       	sub	r24, r10
    5078:	a9 85       	ldd	r26, Y+9	; 0x09
    507a:	ba 85       	ldd	r27, Y+10	; 0x0a
    507c:	dc 96       	adiw	r26, 0x3c	; 60
    507e:	9c 91       	ld	r25, X
    5080:	dc 97       	sbiw	r26, 0x3c	; 60
    5082:	89 17       	cp	r24, r25
    5084:	08 f0       	brcs	.+2      	; 0x5088 <_ZN14TFT_22_ILI92258drawCharEjjjj+0x102>
    5086:	54 c0       	rjmp	.+168    	; 0x5130 <_ZN14TFT_22_ILI92258drawCharEjjjj+0x1aa>
    5088:	76 14       	cp	r7, r6
    508a:	41 f0       	breq	.+16     	; 0x509c <_ZN14TFT_22_ILI92258drawCharEjjjj+0x116>
    508c:	d6 96       	adiw	r26, 0x36	; 54
    508e:	ed 91       	ld	r30, X+
    5090:	fc 91       	ld	r31, X
    5092:	d7 97       	sbiw	r26, 0x37	; 55
    5094:	e8 0d       	add	r30, r8
    5096:	f9 1d       	adc	r31, r9
    5098:	e4 91       	lpm	r30, Z
    509a:	01 c0       	rjmp	.+2      	; 0x509e <_ZN14TFT_22_ILI92258drawCharEjjjj+0x118>
    509c:	e0 e0       	ldi	r30, 0x00	; 0
    509e:	bf ef       	ldi	r27, 0xFF	; 255
    50a0:	8b 1a       	sub	r8, r27
    50a2:	9b 0a       	sbc	r9, r27
    50a4:	96 01       	movw	r18, r12
    50a6:	98 e0       	ldi	r25, 0x08	; 8
    50a8:	89 9f       	mul	r24, r25
    50aa:	20 0d       	add	r18, r0
    50ac:	31 1d       	adc	r19, r1
    50ae:	11 24       	eor	r1, r1
    50b0:	3e 83       	std	Y+6, r19	; 0x06
    50b2:	2d 83       	std	Y+5, r18	; 0x05
    50b4:	00 e0       	ldi	r16, 0x00	; 0
    50b6:	10 e0       	ldi	r17, 0x00	; 0
    50b8:	ae 2f       	mov	r26, r30
    50ba:	b0 e0       	ldi	r27, 0x00	; 0
    50bc:	bc 83       	std	Y+4, r27	; 0x04
    50be:	ab 83       	std	Y+3, r26	; 0x03
    50c0:	e9 85       	ldd	r30, Y+9	; 0x09
    50c2:	fa 85       	ldd	r31, Y+10	; 0x0a
    50c4:	81 ad       	ldd	r24, Z+57	; 0x39
    50c6:	28 16       	cp	r2, r24
    50c8:	a8 f6       	brcc	.-86     	; 0x5074 <_ZN14TFT_22_ILI92258drawCharEjjjj+0xee>
    50ca:	8b 81       	ldd	r24, Y+3	; 0x03
    50cc:	9c 81       	ldd	r25, Y+4	; 0x04
    50ce:	00 2e       	mov	r0, r16
    50d0:	02 c0       	rjmp	.+4      	; 0x50d6 <_ZN14TFT_22_ILI92258drawCharEjjjj+0x150>
    50d2:	95 95       	asr	r25
    50d4:	87 95       	ror	r24
    50d6:	0a 94       	dec	r0
    50d8:	e2 f7       	brpl	.-8      	; 0x50d2 <_ZN14TFT_22_ILI92258drawCharEjjjj+0x14c>
    50da:	33 20       	and	r3, r3
    50dc:	61 f0       	breq	.+24     	; 0x50f6 <_ZN14TFT_22_ILI92258drawCharEjjjj+0x170>
    50de:	80 fd       	sbrc	r24, 0
    50e0:	03 c0       	rjmp	.+6      	; 0x50e8 <_ZN14TFT_22_ILI92258drawCharEjjjj+0x162>
    50e2:	64 81       	ldd	r22, Z+4	; 0x04
    50e4:	75 81       	ldd	r23, Z+5	; 0x05
    50e6:	02 c0       	rjmp	.+4      	; 0x50ec <_ZN14TFT_22_ILI92258drawCharEjjjj+0x166>
    50e8:	65 2d       	mov	r22, r5
    50ea:	74 2d       	mov	r23, r4
    50ec:	89 85       	ldd	r24, Y+9	; 0x09
    50ee:	9a 85       	ldd	r25, Y+10	; 0x0a
    50f0:	0e 94 34 21 	call	0x4268	; 0x4268 <_ZN14TFT_22_ILI922512_writeData16Ej>
    50f4:	16 c0       	rjmp	.+44     	; 0x5122 <_ZN14TFT_22_ILI92258drawCharEjjjj+0x19c>
    50f6:	80 fd       	sbrc	r24, 0
    50f8:	08 c0       	rjmp	.+16     	; 0x510a <_ZN14TFT_22_ILI92258drawCharEjjjj+0x184>
    50fa:	a9 85       	ldd	r26, Y+9	; 0x09
    50fc:	ba 85       	ldd	r27, Y+10	; 0x0a
    50fe:	14 96       	adiw	r26, 0x04	; 4
    5100:	2c 91       	ld	r18, X
    5102:	14 97       	sbiw	r26, 0x04	; 4
    5104:	15 96       	adiw	r26, 0x05	; 5
    5106:	3c 91       	ld	r19, X
    5108:	02 c0       	rjmp	.+4      	; 0x510e <_ZN14TFT_22_ILI92258drawCharEjjjj+0x188>
    510a:	25 2d       	mov	r18, r5
    510c:	34 2d       	mov	r19, r4
    510e:	4d 81       	ldd	r20, Y+5	; 0x05
    5110:	5e 81       	ldd	r21, Y+6	; 0x06
    5112:	40 0f       	add	r20, r16
    5114:	51 1f       	adc	r21, r17
    5116:	6f 81       	ldd	r22, Y+7	; 0x07
    5118:	78 85       	ldd	r23, Y+8	; 0x08
    511a:	89 85       	ldd	r24, Y+9	; 0x09
    511c:	9a 85       	ldd	r25, Y+10	; 0x0a
    511e:	0e 94 81 26 	call	0x4d02	; 0x4d02 <_ZN14TFT_22_ILI92259drawPixelEjjj>
    5122:	23 94       	inc	r2
    5124:	0f 5f       	subi	r16, 0xFF	; 255
    5126:	1f 4f       	sbci	r17, 0xFF	; 255
    5128:	08 30       	cpi	r16, 0x08	; 8
    512a:	11 05       	cpc	r17, r1
    512c:	49 f6       	brne	.-110    	; 0x50c0 <_ZN14TFT_22_ILI92258drawCharEjjjj+0x13a>
    512e:	a2 cf       	rjmp	.-188    	; 0x5074 <_ZN14TFT_22_ILI92258drawCharEjjjj+0xee>
    5130:	63 94       	inc	r6
    5132:	76 14       	cp	r7, r6
    5134:	58 f0       	brcs	.+22     	; 0x514c <_ZN14TFT_22_ILI92258drawCharEjjjj+0x1c6>
    5136:	54 01       	movw	r10, r8
    5138:	96 cf       	rjmp	.-212    	; 0x5066 <_ZN14TFT_22_ILI92258drawCharEjjjj+0xe0>
    513a:	a6 01       	movw	r20, r12
    513c:	b7 01       	movw	r22, r14
    513e:	89 85       	ldd	r24, Y+9	; 0x09
    5140:	9a 85       	ldd	r25, Y+10	; 0x0a
    5142:	0e 94 c0 23 	call	0x4780	; 0x4780 <_ZN14TFT_22_ILI922510_setWindowEjjjj>
    5146:	33 24       	eor	r3, r3
    5148:	33 94       	inc	r3
    514a:	8c cf       	rjmp	.-232    	; 0x5064 <_ZN14TFT_22_ILI92258drawCharEjjjj+0xde>
    514c:	89 85       	ldd	r24, Y+9	; 0x09
    514e:	9a 85       	ldd	r25, Y+10	; 0x0a
    5150:	0e 94 17 22 	call	0x442e	; 0x442e <_ZN14TFT_22_ILI92258endWriteEv>
    5154:	89 85       	ldd	r24, Y+9	; 0x09
    5156:	9a 85       	ldd	r25, Y+10	; 0x0a
    5158:	0e 94 8d 21 	call	0x431a	; 0x431a <_ZN14TFT_22_ILI922512_resetWindowEv>
    515c:	89 81       	ldd	r24, Y+1	; 0x01
    515e:	9a 81       	ldd	r25, Y+2	; 0x02
    5160:	2a 96       	adiw	r28, 0x0a	; 10
    5162:	0f b6       	in	r0, 0x3f	; 63
    5164:	f8 94       	cli
    5166:	de bf       	out	0x3e, r29	; 62
    5168:	0f be       	out	0x3f, r0	; 63
    516a:	cd bf       	out	0x3d, r28	; 61
    516c:	df 91       	pop	r29
    516e:	cf 91       	pop	r28
    5170:	1f 91       	pop	r17
    5172:	0f 91       	pop	r16
    5174:	ff 90       	pop	r15
    5176:	ef 90       	pop	r14
    5178:	df 90       	pop	r13
    517a:	cf 90       	pop	r12
    517c:	bf 90       	pop	r11
    517e:	af 90       	pop	r10
    5180:	9f 90       	pop	r9
    5182:	8f 90       	pop	r8
    5184:	7f 90       	pop	r7
    5186:	6f 90       	pop	r6
    5188:	5f 90       	pop	r5
    518a:	4f 90       	pop	r4
    518c:	3f 90       	pop	r3
    518e:	2f 90       	pop	r2
    5190:	08 95       	ret

00005192 <_ZN14TFT_22_ILI92258drawTextEjj6Stringj>:
    5192:	6f 92       	push	r6
    5194:	7f 92       	push	r7
    5196:	8f 92       	push	r8
    5198:	9f 92       	push	r9
    519a:	af 92       	push	r10
    519c:	bf 92       	push	r11
    519e:	cf 92       	push	r12
    51a0:	df 92       	push	r13
    51a2:	ff 92       	push	r15
    51a4:	0f 93       	push	r16
    51a6:	1f 93       	push	r17
    51a8:	cf 93       	push	r28
    51aa:	df 93       	push	r29
    51ac:	6c 01       	movw	r12, r24
    51ae:	eb 01       	movw	r28, r22
    51b0:	5a 01       	movw	r10, r20
    51b2:	39 01       	movw	r6, r18
    51b4:	48 01       	movw	r8, r16
    51b6:	f1 2c       	mov	r15, r1
    51b8:	6f 2d       	mov	r22, r15
    51ba:	70 e0       	ldi	r23, 0x00	; 0
    51bc:	f3 01       	movw	r30, r6
    51be:	84 81       	ldd	r24, Z+4	; 0x04
    51c0:	95 81       	ldd	r25, Z+5	; 0x05
    51c2:	68 17       	cp	r22, r24
    51c4:	79 07       	cpc	r23, r25
    51c6:	80 f4       	brcc	.+32     	; 0x51e8 <_ZN14TFT_22_ILI92258drawTextEjj6Stringj+0x56>
    51c8:	c3 01       	movw	r24, r6
    51ca:	0e 94 c1 1c 	call	0x3982	; 0x3982 <_ZNK6String6charAtEj>
    51ce:	28 2f       	mov	r18, r24
    51d0:	30 e0       	ldi	r19, 0x00	; 0
    51d2:	84 01       	movw	r16, r8
    51d4:	a5 01       	movw	r20, r10
    51d6:	be 01       	movw	r22, r28
    51d8:	c6 01       	movw	r24, r12
    51da:	0e 94 c3 27 	call	0x4f86	; 0x4f86 <_ZN14TFT_22_ILI92258drawCharEjjjj>
    51de:	01 96       	adiw	r24, 0x01	; 1
    51e0:	c8 0f       	add	r28, r24
    51e2:	d9 1f       	adc	r29, r25
    51e4:	f3 94       	inc	r15
    51e6:	e8 cf       	rjmp	.-48     	; 0x51b8 <_ZN14TFT_22_ILI92258drawTextEjj6Stringj+0x26>
    51e8:	ce 01       	movw	r24, r28
    51ea:	df 91       	pop	r29
    51ec:	cf 91       	pop	r28
    51ee:	1f 91       	pop	r17
    51f0:	0f 91       	pop	r16
    51f2:	ff 90       	pop	r15
    51f4:	df 90       	pop	r13
    51f6:	cf 90       	pop	r12
    51f8:	bf 90       	pop	r11
    51fa:	af 90       	pop	r10
    51fc:	9f 90       	pop	r9
    51fe:	8f 90       	pop	r8
    5200:	7f 90       	pop	r7
    5202:	6f 90       	pop	r6
    5204:	08 95       	ret

00005206 <_ZN14TFT_22_ILI922510setGFXFontEPK7GFXfont>:


// TEXT- AND CHARACTER-HANDLING FUNCTIONS ----------------------------------

void TFT_22_ILI9225::setGFXFont(const GFXfont *f) {
    gfxFont = (GFXfont *)f;
    5206:	8e 5b       	subi	r24, 0xBE	; 190
    5208:	9f 4f       	sbci	r25, 0xFF	; 255
    520a:	fc 01       	movw	r30, r24
    520c:	71 83       	std	Z+1, r23	; 0x01
    520e:	60 83       	st	Z, r22
    5210:	08 95       	ret

00005212 <_ZN14TFT_22_ILI922511drawGFXCharEiihj>:
    }
}


// Draw a character
uint16_t TFT_22_ILI9225::drawGFXChar(int16_t x, int16_t y, unsigned char c, uint16_t color) {
    5212:	2f 92       	push	r2
    5214:	3f 92       	push	r3
    5216:	4f 92       	push	r4
    5218:	5f 92       	push	r5
    521a:	6f 92       	push	r6
    521c:	7f 92       	push	r7
    521e:	8f 92       	push	r8
    5220:	9f 92       	push	r9
    5222:	af 92       	push	r10
    5224:	bf 92       	push	r11
    5226:	cf 92       	push	r12
    5228:	df 92       	push	r13
    522a:	ef 92       	push	r14
    522c:	ff 92       	push	r15
    522e:	0f 93       	push	r16
    5230:	1f 93       	push	r17
    5232:	cf 93       	push	r28
    5234:	df 93       	push	r29
    5236:	00 d0       	rcall	.+0      	; 0x5238 <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0x26>
    5238:	00 d0       	rcall	.+0      	; 0x523a <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0x28>
    523a:	00 d0       	rcall	.+0      	; 0x523c <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0x2a>
    523c:	cd b7       	in	r28, 0x3d	; 61
    523e:	de b7       	in	r29, 0x3e	; 62
    5240:	6c 01       	movw	r12, r24
    5242:	5b 01       	movw	r10, r22
    5244:	7a 01       	movw	r14, r20

    c -= (uint8_t)pgm_read_byte(&gfxFont->first);
    5246:	fc 01       	movw	r30, r24
    5248:	ee 5b       	subi	r30, 0xBE	; 190
    524a:	ff 4f       	sbci	r31, 0xFF	; 255
    524c:	40 81       	ld	r20, Z
    524e:	51 81       	ldd	r21, Z+1	; 0x01
    5250:	fa 01       	movw	r30, r20
    5252:	34 96       	adiw	r30, 0x04	; 4
    5254:	e4 91       	lpm	r30, Z
    5256:	2e 1b       	sub	r18, r30
    GFXglyph *glyph  = &(((GFXglyph *)pgm_read_pointer(&gfxFont->glyph))[c]);
    5258:	fa 01       	movw	r30, r20
    525a:	32 96       	adiw	r30, 0x02	; 2
    525c:	85 91       	lpm	r24, Z+
    525e:	94 91       	lpm	r25, Z
    5260:	37 e0       	ldi	r19, 0x07	; 7
    5262:	23 9f       	mul	r18, r19
    5264:	80 0d       	add	r24, r0
    5266:	91 1d       	adc	r25, r1
    5268:	11 24       	eor	r1, r1
    uint8_t  *bitmap = (uint8_t *)pgm_read_pointer(&gfxFont->bitmap);
    526a:	fa 01       	movw	r30, r20
    526c:	25 90       	lpm	r2, Z+
    526e:	34 90       	lpm	r3, Z

    uint16_t bo = pgm_read_word(&glyph->bitmapOffset);
    5270:	fc 01       	movw	r30, r24
    5272:	25 91       	lpm	r18, Z+
    5274:	34 91       	lpm	r19, Z
    5276:	3e 83       	std	Y+6, r19	; 0x06
    5278:	2d 83       	std	Y+5, r18	; 0x05
    uint8_t  w  = pgm_read_byte(&glyph->width),
    527a:	fc 01       	movw	r30, r24
    527c:	32 96       	adiw	r30, 0x02	; 2
    527e:	34 91       	lpm	r19, Z
    5280:	3a 83       	std	Y+2, r19	; 0x02
             h  = pgm_read_byte(&glyph->height),
    5282:	31 96       	adiw	r30, 0x01	; 1
    5284:	24 91       	lpm	r18, Z
    5286:	2b 83       	std	Y+3, r18	; 0x03
             xa = pgm_read_byte(&glyph->xAdvance);
    5288:	31 96       	adiw	r30, 0x01	; 1
    528a:	34 91       	lpm	r19, Z
    528c:	3c 83       	std	Y+4, r19	; 0x04
    int8_t   xo = pgm_read_byte(&glyph->xOffset),
    528e:	31 96       	adiw	r30, 0x01	; 1
    5290:	84 90       	lpm	r8, Z
             yo = pgm_read_byte(&glyph->yOffset);
    5292:	31 96       	adiw	r30, 0x01	; 1
    5294:	94 90       	lpm	r9, Z
    uint8_t  xx, yy, bits = 0, bit = 0;

    // Add character clipping here one day

    startWrite();
    5296:	c6 01       	movw	r24, r12
    5298:	0e 94 d8 21 	call	0x43b0	; 0x43b0 <_ZN14TFT_22_ILI922510startWriteEv>
    uint8_t  w  = pgm_read_byte(&glyph->width),
             h  = pgm_read_byte(&glyph->height),
             xa = pgm_read_byte(&glyph->xAdvance);
    int8_t   xo = pgm_read_byte(&glyph->xOffset),
             yo = pgm_read_byte(&glyph->yOffset);
    uint8_t  xx, yy, bits = 0, bit = 0;
    529c:	19 82       	std	Y+1, r1	; 0x01
    529e:	71 2c       	mov	r7, r1

    // Add character clipping here one day

    startWrite();
    for(yy=0; yy<h; yy++) {
    52a0:	61 2c       	mov	r6, r1
        for(xx=0; xx<w; xx++) {
            if(!(bit++ & 7)) {
                bits = pgm_read_byte(&bitmap[bo++]);
            }
            if(bits & 0x80) {
                drawPixel(x+xo+xx, y+yo+yy, color);
    52a2:	27 01       	movw	r4, r14
    52a4:	49 0c       	add	r4, r9
    52a6:	51 1c       	adc	r5, r1
    52a8:	97 fc       	sbrc	r9, 7
    52aa:	5a 94       	dec	r5
    52ac:	a8 0c       	add	r10, r8
    52ae:	b1 1c       	adc	r11, r1
    52b0:	87 fc       	sbrc	r8, 7
    52b2:	ba 94       	dec	r11
    uint8_t  xx, yy, bits = 0, bit = 0;

    // Add character clipping here one day

    startWrite();
    for(yy=0; yy<h; yy++) {
    52b4:	8b 81       	ldd	r24, Y+3	; 0x03
    52b6:	68 16       	cp	r6, r24
    52b8:	59 f1       	breq	.+86     	; 0x5310 <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0xfe>
    52ba:	e1 2c       	mov	r14, r1
    52bc:	f1 2c       	mov	r15, r1
        for(xx=0; xx<w; xx++) {
            if(!(bit++ & 7)) {
                bits = pgm_read_byte(&bitmap[bo++]);
            }
            if(bits & 0x80) {
                drawPixel(x+xo+xx, y+yo+yy, color);
    52be:	42 01       	movw	r8, r4
    52c0:	86 0c       	add	r8, r6
    52c2:	91 1c       	adc	r9, r1
    52c4:	89 81       	ldd	r24, Y+1	; 0x01
    52c6:	8e 0d       	add	r24, r14

    // Add character clipping here one day

    startWrite();
    for(yy=0; yy<h; yy++) {
        for(xx=0; xx<w; xx++) {
    52c8:	9a 81       	ldd	r25, Y+2	; 0x02
    52ca:	e9 16       	cp	r14, r25
    52cc:	d8 f4       	brcc	.+54     	; 0x5304 <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0xf2>
            if(!(bit++ & 7)) {
    52ce:	87 70       	andi	r24, 0x07	; 7
    52d0:	51 f4       	brne	.+20     	; 0x52e6 <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0xd4>
                bits = pgm_read_byte(&bitmap[bo++]);
    52d2:	8d 81       	ldd	r24, Y+5	; 0x05
    52d4:	9e 81       	ldd	r25, Y+6	; 0x06
    52d6:	01 96       	adiw	r24, 0x01	; 1
    52d8:	ed 81       	ldd	r30, Y+5	; 0x05
    52da:	fe 81       	ldd	r31, Y+6	; 0x06
    52dc:	e2 0d       	add	r30, r2
    52de:	f3 1d       	adc	r31, r3
    52e0:	74 90       	lpm	r7, Z
    52e2:	9e 83       	std	Y+6, r25	; 0x06
    52e4:	8d 83       	std	Y+5, r24	; 0x05
            }
            if(bits & 0x80) {
    52e6:	77 fe       	sbrs	r7, 7
    52e8:	08 c0       	rjmp	.+16     	; 0x52fa <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0xe8>
                drawPixel(x+xo+xx, y+yo+yy, color);
    52ea:	98 01       	movw	r18, r16
    52ec:	a4 01       	movw	r20, r8
    52ee:	b5 01       	movw	r22, r10
    52f0:	6e 0d       	add	r22, r14
    52f2:	7f 1d       	adc	r23, r15
    52f4:	c6 01       	movw	r24, r12
    52f6:	0e 94 81 26 	call	0x4d02	; 0x4d02 <_ZN14TFT_22_ILI92259drawPixelEjjj>
            }
            bits <<= 1;
    52fa:	77 0c       	add	r7, r7
    52fc:	2f ef       	ldi	r18, 0xFF	; 255
    52fe:	e2 1a       	sub	r14, r18
    5300:	f2 0a       	sbc	r15, r18

    // Add character clipping here one day

    startWrite();
    for(yy=0; yy<h; yy++) {
        for(xx=0; xx<w; xx++) {
    5302:	e0 cf       	rjmp	.-64     	; 0x52c4 <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0xb2>
    5304:	39 81       	ldd	r19, Y+1	; 0x01
    5306:	8a 81       	ldd	r24, Y+2	; 0x02
    5308:	38 0f       	add	r19, r24
    530a:	39 83       	std	Y+1, r19	; 0x01
    uint8_t  xx, yy, bits = 0, bit = 0;

    // Add character clipping here one day

    startWrite();
    for(yy=0; yy<h; yy++) {
    530c:	63 94       	inc	r6
    530e:	d2 cf       	rjmp	.-92     	; 0x52b4 <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0xa2>
                drawPixel(x+xo+xx, y+yo+yy, color);
            }
            bits <<= 1;
        }
    }
    endWrite();
    5310:	c6 01       	movw	r24, r12
    5312:	0e 94 17 22 	call	0x442e	; 0x442e <_ZN14TFT_22_ILI92258endWriteEv>

    return (uint16_t)xa;
}
    5316:	2c 81       	ldd	r18, Y+4	; 0x04
    5318:	82 2f       	mov	r24, r18
    531a:	90 e0       	ldi	r25, 0x00	; 0
    531c:	26 96       	adiw	r28, 0x06	; 6
    531e:	0f b6       	in	r0, 0x3f	; 63
    5320:	f8 94       	cli
    5322:	de bf       	out	0x3e, r29	; 62
    5324:	0f be       	out	0x3f, r0	; 63
    5326:	cd bf       	out	0x3d, r28	; 61
    5328:	df 91       	pop	r29
    532a:	cf 91       	pop	r28
    532c:	1f 91       	pop	r17
    532e:	0f 91       	pop	r16
    5330:	ff 90       	pop	r15
    5332:	ef 90       	pop	r14
    5334:	df 90       	pop	r13
    5336:	cf 90       	pop	r12
    5338:	bf 90       	pop	r11
    533a:	af 90       	pop	r10
    533c:	9f 90       	pop	r9
    533e:	8f 90       	pop	r8
    5340:	7f 90       	pop	r7
    5342:	6f 90       	pop	r6
    5344:	5f 90       	pop	r5
    5346:	4f 90       	pop	r4
    5348:	3f 90       	pop	r3
    534a:	2f 90       	pop	r2
    534c:	08 95       	ret

0000534e <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj>:
    gfxFont = (GFXfont *)f;
}


// Draw a string
void TFT_22_ILI9225::drawGFXText(int16_t x, int16_t y, STRING s, uint16_t color) {
    534e:	6f 92       	push	r6
    5350:	7f 92       	push	r7
    5352:	8f 92       	push	r8
    5354:	9f 92       	push	r9
    5356:	af 92       	push	r10
    5358:	bf 92       	push	r11
    535a:	cf 92       	push	r12
    535c:	df 92       	push	r13
    535e:	ff 92       	push	r15
    5360:	0f 93       	push	r16
    5362:	1f 93       	push	r17
    5364:	cf 93       	push	r28
    5366:	df 93       	push	r29
    5368:	6c 01       	movw	r12, r24
    536a:	eb 01       	movw	r28, r22
    536c:	5a 01       	movw	r10, r20
    536e:	39 01       	movw	r6, r18
    5370:	48 01       	movw	r8, r16

    int16_t currx = x;

    if(gfxFont) {
    5372:	fc 01       	movw	r30, r24
    5374:	ee 5b       	subi	r30, 0xBE	; 190
    5376:	ff 4f       	sbci	r31, 0xFF	; 255
    5378:	80 81       	ld	r24, Z
    537a:	91 81       	ldd	r25, Z+1	; 0x01
    537c:	89 2b       	or	r24, r25
    537e:	c1 f0       	breq	.+48     	; 0x53b0 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj+0x62>
    5380:	f1 2c       	mov	r15, r1
        // Print every character in string
#ifdef USE_STRING_CLASS
        for (uint8_t k = 0; k < s.length(); k++) {
    5382:	6f 2d       	mov	r22, r15
    5384:	70 e0       	ldi	r23, 0x00	; 0
    5386:	f3 01       	movw	r30, r6
    5388:	84 81       	ldd	r24, Z+4	; 0x04
    538a:	95 81       	ldd	r25, Z+5	; 0x05
    538c:	68 17       	cp	r22, r24
    538e:	79 07       	cpc	r23, r25
    5390:	78 f4       	brcc	.+30     	; 0x53b0 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj+0x62>
            currx += drawGFXChar(currx, y, s.charAt(k), color) + 1;
    5392:	c3 01       	movw	r24, r6
    5394:	0e 94 c1 1c 	call	0x3982	; 0x3982 <_ZNK6String6charAtEj>
    5398:	84 01       	movw	r16, r8
    539a:	28 2f       	mov	r18, r24
    539c:	a5 01       	movw	r20, r10
    539e:	be 01       	movw	r22, r28
    53a0:	c6 01       	movw	r24, r12
    53a2:	0e 94 09 29 	call	0x5212	; 0x5212 <_ZN14TFT_22_ILI922511drawGFXCharEiihj>
    53a6:	21 96       	adiw	r28, 0x01	; 1
    53a8:	c8 0f       	add	r28, r24
    53aa:	d9 1f       	adc	r29, r25
    int16_t currx = x;

    if(gfxFont) {
        // Print every character in string
#ifdef USE_STRING_CLASS
        for (uint8_t k = 0; k < s.length(); k++) {
    53ac:	f3 94       	inc	r15
    53ae:	e9 cf       	rjmp	.-46     	; 0x5382 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj+0x34>
        for (uint8_t k = 0; k < strlen(s); k++) {
            currx += drawGFXChar(currx, y, s[k], color) + 1;
        }
#endif
    }
}
    53b0:	df 91       	pop	r29
    53b2:	cf 91       	pop	r28
    53b4:	1f 91       	pop	r17
    53b6:	0f 91       	pop	r16
    53b8:	ff 90       	pop	r15
    53ba:	df 90       	pop	r13
    53bc:	cf 90       	pop	r12
    53be:	bf 90       	pop	r11
    53c0:	af 90       	pop	r10
    53c2:	9f 90       	pop	r9
    53c4:	8f 90       	pop	r8
    53c6:	7f 90       	pop	r7
    53c8:	6f 90       	pop	r6
    53ca:	08 95       	ret

000053cc <_ZN7TwoWire9availableEv>:
}

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
    53cc:	80 91 60 04 	lds	r24, 0x0460	; 0x800460 <_ZN7TwoWire14rxBufferLengthE>
    53d0:	90 e0       	ldi	r25, 0x00	; 0
    53d2:	20 91 61 04 	lds	r18, 0x0461	; 0x800461 <_ZN7TwoWire13rxBufferIndexE>
    53d6:	82 1b       	sub	r24, r18
    53d8:	91 09       	sbc	r25, r1
    53da:	08 95       	ret

000053dc <_ZN7TwoWire4readEv>:
    53dc:	90 91 61 04 	lds	r25, 0x0461	; 0x800461 <_ZN7TwoWire13rxBufferIndexE>
    53e0:	80 91 60 04 	lds	r24, 0x0460	; 0x800460 <_ZN7TwoWire14rxBufferLengthE>
    53e4:	98 17       	cp	r25, r24
    53e6:	50 f4       	brcc	.+20     	; 0x53fc <_ZN7TwoWire4readEv+0x20>
    53e8:	e9 2f       	mov	r30, r25
    53ea:	f0 e0       	ldi	r31, 0x00	; 0
    53ec:	ee 59       	subi	r30, 0x9E	; 158
    53ee:	fb 4f       	sbci	r31, 0xFB	; 251
    53f0:	20 81       	ld	r18, Z
    53f2:	30 e0       	ldi	r19, 0x00	; 0
    53f4:	9f 5f       	subi	r25, 0xFF	; 255
    53f6:	90 93 61 04 	sts	0x0461, r25	; 0x800461 <_ZN7TwoWire13rxBufferIndexE>
    53fa:	02 c0       	rjmp	.+4      	; 0x5400 <_ZN7TwoWire4readEv+0x24>
    53fc:	2f ef       	ldi	r18, 0xFF	; 255
    53fe:	3f ef       	ldi	r19, 0xFF	; 255
    5400:	c9 01       	movw	r24, r18
    5402:	08 95       	ret

00005404 <_ZN7TwoWire4peekEv>:
    5404:	e0 91 61 04 	lds	r30, 0x0461	; 0x800461 <_ZN7TwoWire13rxBufferIndexE>
    5408:	80 91 60 04 	lds	r24, 0x0460	; 0x800460 <_ZN7TwoWire14rxBufferLengthE>
    540c:	e8 17       	cp	r30, r24
    540e:	30 f4       	brcc	.+12     	; 0x541c <_ZN7TwoWire4peekEv+0x18>
    5410:	f0 e0       	ldi	r31, 0x00	; 0
    5412:	ee 59       	subi	r30, 0x9E	; 158
    5414:	fb 4f       	sbci	r31, 0xFB	; 251
    5416:	80 81       	ld	r24, Z
    5418:	90 e0       	ldi	r25, 0x00	; 0
    541a:	08 95       	ret
    541c:	8f ef       	ldi	r24, 0xFF	; 255
    541e:	9f ef       	ldi	r25, 0xFF	; 255
    5420:	08 95       	ret

00005422 <_ZN7TwoWire5flushEv>:
    5422:	08 95       	ret

00005424 <_ZN7TwoWire16onReceiveServiceEPhi>:
    5424:	cf 93       	push	r28
    5426:	df 93       	push	r29
    5428:	ec 01       	movw	r28, r24
    542a:	e0 91 38 04 	lds	r30, 0x0438	; 0x800438 <_ZN7TwoWire14user_onReceiveE>
    542e:	f0 91 39 04 	lds	r31, 0x0439	; 0x800439 <_ZN7TwoWire14user_onReceiveE+0x1>
    5432:	30 97       	sbiw	r30, 0x00	; 0
    5434:	f1 f0       	breq	.+60     	; 0x5472 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
    5436:	90 91 61 04 	lds	r25, 0x0461	; 0x800461 <_ZN7TwoWire13rxBufferIndexE>
    543a:	80 91 60 04 	lds	r24, 0x0460	; 0x800460 <_ZN7TwoWire14rxBufferLengthE>
    543e:	98 17       	cp	r25, r24
    5440:	c0 f0       	brcs	.+48     	; 0x5472 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
    5442:	90 e0       	ldi	r25, 0x00	; 0
    5444:	29 2f       	mov	r18, r25
    5446:	30 e0       	ldi	r19, 0x00	; 0
    5448:	26 17       	cp	r18, r22
    544a:	37 07       	cpc	r19, r23
    544c:	54 f4       	brge	.+20     	; 0x5462 <_ZN7TwoWire16onReceiveServiceEPhi+0x3e>
    544e:	de 01       	movw	r26, r28
    5450:	a2 0f       	add	r26, r18
    5452:	b3 1f       	adc	r27, r19
    5454:	4c 91       	ld	r20, X
    5456:	d9 01       	movw	r26, r18
    5458:	ae 59       	subi	r26, 0x9E	; 158
    545a:	bb 4f       	sbci	r27, 0xFB	; 251
    545c:	4c 93       	st	X, r20
    545e:	9f 5f       	subi	r25, 0xFF	; 255
    5460:	f1 cf       	rjmp	.-30     	; 0x5444 <_ZN7TwoWire16onReceiveServiceEPhi+0x20>
    5462:	10 92 61 04 	sts	0x0461, r1	; 0x800461 <_ZN7TwoWire13rxBufferIndexE>
    5466:	60 93 60 04 	sts	0x0460, r22	; 0x800460 <_ZN7TwoWire14rxBufferLengthE>
    546a:	cb 01       	movw	r24, r22
    546c:	df 91       	pop	r29
    546e:	cf 91       	pop	r28
    5470:	09 94       	ijmp
    5472:	df 91       	pop	r29
    5474:	cf 91       	pop	r28
    5476:	08 95       	ret

00005478 <_ZN7TwoWire16onRequestServiceEv>:
    5478:	e0 91 3a 04 	lds	r30, 0x043A	; 0x80043a <_ZN7TwoWire14user_onRequestE>
    547c:	f0 91 3b 04 	lds	r31, 0x043B	; 0x80043b <_ZN7TwoWire14user_onRequestE+0x1>
    5480:	30 97       	sbiw	r30, 0x00	; 0
    5482:	29 f0       	breq	.+10     	; 0x548e <_ZN7TwoWire16onRequestServiceEv+0x16>
    5484:	10 92 3e 04 	sts	0x043E, r1	; 0x80043e <_ZN7TwoWire13txBufferIndexE>
    5488:	10 92 3d 04 	sts	0x043D, r1	; 0x80043d <_ZN7TwoWire14txBufferLengthE>
    548c:	09 94       	ijmp
    548e:	08 95       	ret

00005490 <_ZN7TwoWire5writeEPKhj>:
    5490:	cf 92       	push	r12
    5492:	df 92       	push	r13
    5494:	ef 92       	push	r14
    5496:	ff 92       	push	r15
    5498:	0f 93       	push	r16
    549a:	1f 93       	push	r17
    549c:	cf 93       	push	r28
    549e:	df 93       	push	r29
    54a0:	7c 01       	movw	r14, r24
    54a2:	cb 01       	movw	r24, r22
    54a4:	8a 01       	movw	r16, r20
    54a6:	20 91 3c 04 	lds	r18, 0x043C	; 0x80043c <_ZN7TwoWire12transmittingE>
    54aa:	22 23       	and	r18, r18
    54ac:	89 f0       	breq	.+34     	; 0x54d0 <_ZN7TwoWire5writeEPKhj+0x40>
    54ae:	eb 01       	movw	r28, r22
    54b0:	6b 01       	movw	r12, r22
    54b2:	c4 0e       	add	r12, r20
    54b4:	d5 1e       	adc	r13, r21
    54b6:	cc 15       	cp	r28, r12
    54b8:	dd 05       	cpc	r29, r13
    54ba:	69 f0       	breq	.+26     	; 0x54d6 <_ZN7TwoWire5writeEPKhj+0x46>
    54bc:	69 91       	ld	r22, Y+
    54be:	d7 01       	movw	r26, r14
    54c0:	ed 91       	ld	r30, X+
    54c2:	fc 91       	ld	r31, X
    54c4:	01 90       	ld	r0, Z+
    54c6:	f0 81       	ld	r31, Z
    54c8:	e0 2d       	mov	r30, r0
    54ca:	c7 01       	movw	r24, r14
    54cc:	09 95       	icall
    54ce:	f3 cf       	rjmp	.-26     	; 0x54b6 <_ZN7TwoWire5writeEPKhj+0x26>
    54d0:	64 2f       	mov	r22, r20
    54d2:	0e 94 bb 2c 	call	0x5976	; 0x5976 <twi_transmit>
    54d6:	c8 01       	movw	r24, r16
    54d8:	df 91       	pop	r29
    54da:	cf 91       	pop	r28
    54dc:	1f 91       	pop	r17
    54de:	0f 91       	pop	r16
    54e0:	ff 90       	pop	r15
    54e2:	ef 90       	pop	r14
    54e4:	df 90       	pop	r13
    54e6:	cf 90       	pop	r12
    54e8:	08 95       	ret

000054ea <_ZN7TwoWire5writeEh>:
    54ea:	cf 93       	push	r28
    54ec:	df 93       	push	r29
    54ee:	1f 92       	push	r1
    54f0:	cd b7       	in	r28, 0x3d	; 61
    54f2:	de b7       	in	r29, 0x3e	; 62
    54f4:	69 83       	std	Y+1, r22	; 0x01
    54f6:	20 91 3c 04 	lds	r18, 0x043C	; 0x80043c <_ZN7TwoWire12transmittingE>
    54fa:	22 23       	and	r18, r18
    54fc:	d1 f0       	breq	.+52     	; 0x5532 <_ZN7TwoWire5writeEh+0x48>
    54fe:	20 91 3d 04 	lds	r18, 0x043D	; 0x80043d <_ZN7TwoWire14txBufferLengthE>
    5502:	20 32       	cpi	r18, 0x20	; 32
    5504:	40 f0       	brcs	.+16     	; 0x5516 <_ZN7TwoWire5writeEh+0x2c>
    5506:	21 e0       	ldi	r18, 0x01	; 1
    5508:	30 e0       	ldi	r19, 0x00	; 0
    550a:	fc 01       	movw	r30, r24
    550c:	33 83       	std	Z+3, r19	; 0x03
    550e:	22 83       	std	Z+2, r18	; 0x02
    5510:	80 e0       	ldi	r24, 0x00	; 0
    5512:	90 e0       	ldi	r25, 0x00	; 0
    5514:	15 c0       	rjmp	.+42     	; 0x5540 <_ZN7TwoWire5writeEh+0x56>
    5516:	80 91 3e 04 	lds	r24, 0x043E	; 0x80043e <_ZN7TwoWire13txBufferIndexE>
    551a:	e8 2f       	mov	r30, r24
    551c:	f0 e0       	ldi	r31, 0x00	; 0
    551e:	e1 5c       	subi	r30, 0xC1	; 193
    5520:	fb 4f       	sbci	r31, 0xFB	; 251
    5522:	99 81       	ldd	r25, Y+1	; 0x01
    5524:	90 83       	st	Z, r25
    5526:	8f 5f       	subi	r24, 0xFF	; 255
    5528:	80 93 3e 04 	sts	0x043E, r24	; 0x80043e <_ZN7TwoWire13txBufferIndexE>
    552c:	80 93 3d 04 	sts	0x043D, r24	; 0x80043d <_ZN7TwoWire14txBufferLengthE>
    5530:	05 c0       	rjmp	.+10     	; 0x553c <_ZN7TwoWire5writeEh+0x52>
    5532:	61 e0       	ldi	r22, 0x01	; 1
    5534:	ce 01       	movw	r24, r28
    5536:	01 96       	adiw	r24, 0x01	; 1
    5538:	0e 94 bb 2c 	call	0x5976	; 0x5976 <twi_transmit>
    553c:	81 e0       	ldi	r24, 0x01	; 1
    553e:	90 e0       	ldi	r25, 0x00	; 0
    5540:	0f 90       	pop	r0
    5542:	df 91       	pop	r29
    5544:	cf 91       	pop	r28
    5546:	08 95       	ret

00005548 <_ZN7TwoWireC1Ev>:
    5548:	fc 01       	movw	r30, r24
    554a:	13 82       	std	Z+3, r1	; 0x03
    554c:	12 82       	std	Z+2, r1	; 0x02
    554e:	88 ee       	ldi	r24, 0xE8	; 232
    5550:	93 e0       	ldi	r25, 0x03	; 3
    5552:	a0 e0       	ldi	r26, 0x00	; 0
    5554:	b0 e0       	ldi	r27, 0x00	; 0
    5556:	84 83       	std	Z+4, r24	; 0x04
    5558:	95 83       	std	Z+5, r25	; 0x05
    555a:	a6 83       	std	Z+6, r26	; 0x06
    555c:	b7 83       	std	Z+7, r27	; 0x07
    555e:	8f e2       	ldi	r24, 0x2F	; 47
    5560:	92 e0       	ldi	r25, 0x02	; 2
    5562:	91 83       	std	Z+1, r25	; 0x01
    5564:	80 83       	st	Z, r24
    5566:	08 95       	ret

00005568 <_ZN7TwoWire5beginEv>:
    5568:	10 92 61 04 	sts	0x0461, r1	; 0x800461 <_ZN7TwoWire13rxBufferIndexE>
    556c:	10 92 60 04 	sts	0x0460, r1	; 0x800460 <_ZN7TwoWire14rxBufferLengthE>
    5570:	10 92 3e 04 	sts	0x043E, r1	; 0x80043e <_ZN7TwoWire13txBufferIndexE>
    5574:	10 92 3d 04 	sts	0x043D, r1	; 0x80043d <_ZN7TwoWire14txBufferLengthE>
    5578:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <twi_init>
    557c:	8c e3       	ldi	r24, 0x3C	; 60
    557e:	9a e2       	ldi	r25, 0x2A	; 42
    5580:	0e 94 e8 2c 	call	0x59d0	; 0x59d0 <twi_attachSlaveTxEvent>
    5584:	82 e1       	ldi	r24, 0x12	; 18
    5586:	9a e2       	ldi	r25, 0x2A	; 42
    5588:	0c 94 e3 2c 	jmp	0x59c6	; 0x59c6 <twi_attachSlaveRxEvent>

0000558c <_ZN7TwoWire8setClockEm>:
    558c:	cb 01       	movw	r24, r22
    558e:	ba 01       	movw	r22, r20
    5590:	0c 94 a7 2c 	jmp	0x594e	; 0x594e <twi_setFrequency>

00005594 <_ZN7TwoWire17beginTransmissionEh>:
    5594:	81 e0       	ldi	r24, 0x01	; 1
    5596:	80 93 3c 04 	sts	0x043C, r24	; 0x80043c <_ZN7TwoWire12transmittingE>
    559a:	60 93 5f 04 	sts	0x045F, r22	; 0x80045f <_ZN7TwoWire9txAddressE>
    559e:	10 92 3e 04 	sts	0x043E, r1	; 0x80043e <_ZN7TwoWire13txBufferIndexE>
    55a2:	10 92 3d 04 	sts	0x043D, r1	; 0x80043d <_ZN7TwoWire14txBufferLengthE>
    55a6:	08 95       	ret

000055a8 <_ZN7TwoWire15endTransmissionEh>:
    55a8:	0f 93       	push	r16
    55aa:	06 2f       	mov	r16, r22
    55ac:	21 e0       	ldi	r18, 0x01	; 1
    55ae:	40 91 3d 04 	lds	r20, 0x043D	; 0x80043d <_ZN7TwoWire14txBufferLengthE>
    55b2:	6f e3       	ldi	r22, 0x3F	; 63
    55b4:	74 e0       	ldi	r23, 0x04	; 4
    55b6:	80 91 5f 04 	lds	r24, 0x045F	; 0x80045f <_ZN7TwoWire9txAddressE>
    55ba:	0e 94 f2 2d 	call	0x5be4	; 0x5be4 <twi_writeTo>
    55be:	10 92 3e 04 	sts	0x043E, r1	; 0x80043e <_ZN7TwoWire13txBufferIndexE>
    55c2:	10 92 3d 04 	sts	0x043D, r1	; 0x80043d <_ZN7TwoWire14txBufferLengthE>
    55c6:	10 92 3c 04 	sts	0x043C, r1	; 0x80043c <_ZN7TwoWire12transmittingE>
    55ca:	0f 91       	pop	r16
    55cc:	08 95       	ret

000055ce <_ZN7TwoWire11requestFromEhhmhh>:
    55ce:	4f 92       	push	r4
    55d0:	5f 92       	push	r5
    55d2:	6f 92       	push	r6
    55d4:	7f 92       	push	r7
    55d6:	af 92       	push	r10
    55d8:	bf 92       	push	r11
    55da:	cf 92       	push	r12
    55dc:	ef 92       	push	r14
    55de:	ff 92       	push	r15
    55e0:	0f 93       	push	r16
    55e2:	1f 93       	push	r17
    55e4:	cf 93       	push	r28
    55e6:	df 93       	push	r29
    55e8:	5c 01       	movw	r10, r24
    55ea:	f6 2e       	mov	r15, r22
    55ec:	d4 2f       	mov	r29, r20
    55ee:	28 01       	movw	r4, r16
    55f0:	39 01       	movw	r6, r18
    55f2:	ee 20       	and	r14, r14
    55f4:	21 f1       	breq	.+72     	; 0x563e <_ZN7TwoWire11requestFromEhhmhh+0x70>
    55f6:	0e 94 ca 2a 	call	0x5594	; 0x5594 <_ZN7TwoWire17beginTransmissionEh>
    55fa:	ce 2d       	mov	r28, r14
    55fc:	c4 30       	cpi	r28, 0x04	; 4
    55fe:	08 f0       	brcs	.+2      	; 0x5602 <_ZN7TwoWire11requestFromEhhmhh+0x34>
    5600:	c3 e0       	ldi	r28, 0x03	; 3
    5602:	c1 50       	subi	r28, 0x01	; 1
    5604:	c0 f0       	brcs	.+48     	; 0x5636 <_ZN7TwoWire11requestFromEhhmhh+0x68>
    5606:	28 e0       	ldi	r18, 0x08	; 8
    5608:	c2 9f       	mul	r28, r18
    560a:	c0 01       	movw	r24, r0
    560c:	11 24       	eor	r1, r1
    560e:	a3 01       	movw	r20, r6
    5610:	92 01       	movw	r18, r4
    5612:	04 c0       	rjmp	.+8      	; 0x561c <_ZN7TwoWire11requestFromEhhmhh+0x4e>
    5614:	56 95       	lsr	r21
    5616:	47 95       	ror	r20
    5618:	37 95       	ror	r19
    561a:	27 95       	ror	r18
    561c:	8a 95       	dec	r24
    561e:	d2 f7       	brpl	.-12     	; 0x5614 <_ZN7TwoWire11requestFromEhhmhh+0x46>
    5620:	ca 01       	movw	r24, r20
    5622:	b9 01       	movw	r22, r18
    5624:	d5 01       	movw	r26, r10
    5626:	ed 91       	ld	r30, X+
    5628:	fc 91       	ld	r31, X
    562a:	01 90       	ld	r0, Z+
    562c:	f0 81       	ld	r31, Z
    562e:	e0 2d       	mov	r30, r0
    5630:	c5 01       	movw	r24, r10
    5632:	09 95       	icall
    5634:	e6 cf       	rjmp	.-52     	; 0x5602 <_ZN7TwoWire11requestFromEhhmhh+0x34>
    5636:	60 e0       	ldi	r22, 0x00	; 0
    5638:	c5 01       	movw	r24, r10
    563a:	0e 94 d4 2a 	call	0x55a8	; 0x55a8 <_ZN7TwoWire15endTransmissionEh>
    563e:	4d 2f       	mov	r20, r29
    5640:	d1 32       	cpi	r29, 0x21	; 33
    5642:	08 f0       	brcs	.+2      	; 0x5646 <_ZN7TwoWire11requestFromEhhmhh+0x78>
    5644:	40 e2       	ldi	r20, 0x20	; 32
    5646:	2c 2d       	mov	r18, r12
    5648:	62 e6       	ldi	r22, 0x62	; 98
    564a:	74 e0       	ldi	r23, 0x04	; 4
    564c:	8f 2d       	mov	r24, r15
    564e:	0e 94 09 2d 	call	0x5a12	; 0x5a12 <twi_readFrom>
    5652:	10 92 61 04 	sts	0x0461, r1	; 0x800461 <_ZN7TwoWire13rxBufferIndexE>
    5656:	80 93 60 04 	sts	0x0460, r24	; 0x800460 <_ZN7TwoWire14rxBufferLengthE>
    565a:	df 91       	pop	r29
    565c:	cf 91       	pop	r28
    565e:	1f 91       	pop	r17
    5660:	0f 91       	pop	r16
    5662:	ff 90       	pop	r15
    5664:	ef 90       	pop	r14
    5666:	cf 90       	pop	r12
    5668:	bf 90       	pop	r11
    566a:	af 90       	pop	r10
    566c:	7f 90       	pop	r7
    566e:	6f 90       	pop	r6
    5670:	5f 90       	pop	r5
    5672:	4f 90       	pop	r4
    5674:	08 95       	ret

00005676 <_ZN7TwoWire11requestFromEhhh>:
    5676:	cf 92       	push	r12
    5678:	ef 92       	push	r14
    567a:	0f 93       	push	r16
    567c:	1f 93       	push	r17
    567e:	c2 2e       	mov	r12, r18
    5680:	e1 2c       	mov	r14, r1
    5682:	00 e0       	ldi	r16, 0x00	; 0
    5684:	10 e0       	ldi	r17, 0x00	; 0
    5686:	98 01       	movw	r18, r16
    5688:	0e 94 e7 2a 	call	0x55ce	; 0x55ce <_ZN7TwoWire11requestFromEhhmhh>
    568c:	1f 91       	pop	r17
    568e:	0f 91       	pop	r16
    5690:	ef 90       	pop	r14
    5692:	cf 90       	pop	r12
    5694:	08 95       	ret

00005696 <_ZN7TwoWire11requestFromEhh>:
    5696:	21 e0       	ldi	r18, 0x01	; 1
    5698:	0c 94 3b 2b 	jmp	0x5676	; 0x5676 <_ZN7TwoWire11requestFromEhhh>

0000569c <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
}

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
    569c:	8c e2       	ldi	r24, 0x2C	; 44
    569e:	94 e0       	ldi	r25, 0x04	; 4
    56a0:	0c 94 a4 2a 	jmp	0x5548	; 0x5548 <_ZN7TwoWireC1Ev>

000056a4 <yield>:
 * libraries or sketches that supports cooperative threads.
 *
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
    56a4:	08 95       	ret

000056a6 <analogWrite>:
// Right now, PWM output only works on the pins with
// hardware support.  These are defined in the appropriate
// pins_*.c file.  For the rest of the pins, we default
// to digital output.
void analogWrite(uint8_t pin, int val)
{
    56a6:	1f 93       	push	r17
    56a8:	cf 93       	push	r28
    56aa:	df 93       	push	r29
    56ac:	18 2f       	mov	r17, r24
    56ae:	eb 01       	movw	r28, r22
	// We need to make sure the PWM output is enabled for those pins
	// that support it, as we turn it off when digitally reading or
	// writing with them.  Also, make sure the pin is in output mode
	// for consistenty with Wiring, which doesn't require a pinMode
	// call for the analog output pins.
	pinMode(pin, OUTPUT);
    56b0:	61 e0       	ldi	r22, 0x01	; 1
    56b2:	0e 94 db 2b 	call	0x57b6	; 0x57b6 <pinMode>
	if (val == 0)
    56b6:	20 97       	sbiw	r28, 0x00	; 0
    56b8:	11 f4       	brne	.+4      	; 0x56be <analogWrite+0x18>
	{
		digitalWrite(pin, LOW);
    56ba:	60 e0       	ldi	r22, 0x00	; 0
    56bc:	04 c0       	rjmp	.+8      	; 0x56c6 <analogWrite+0x20>
	}
	else if (val == 255)
    56be:	cf 3f       	cpi	r28, 0xFF	; 255
    56c0:	d1 05       	cpc	r29, r1
    56c2:	39 f4       	brne	.+14     	; 0x56d2 <analogWrite+0x2c>
	{
		digitalWrite(pin, HIGH);
    56c4:	61 e0       	ldi	r22, 0x01	; 1
    56c6:	81 2f       	mov	r24, r17
				} else {
					digitalWrite(pin, HIGH);
				}
		}
	}
}
    56c8:	df 91       	pop	r29
    56ca:	cf 91       	pop	r28
    56cc:	1f 91       	pop	r17
	{
		digitalWrite(pin, LOW);
	}
	else if (val == 255)
	{
		digitalWrite(pin, HIGH);
    56ce:	0c 94 17 2c 	jmp	0x582e	; 0x582e <digitalWrite>
	}
	else
	{
		switch(digitalPinToTimer(pin))
    56d2:	e1 2f       	mov	r30, r17
    56d4:	f0 e0       	ldi	r31, 0x00	; 0
    56d6:	e1 53       	subi	r30, 0x31	; 49
    56d8:	f0 4e       	sbci	r31, 0xE0	; 224
    56da:	e4 91       	lpm	r30, Z
    56dc:	e3 30       	cpi	r30, 0x03	; 3
    56de:	f9 f0       	breq	.+62     	; 0x571e <analogWrite+0x78>
    56e0:	48 f4       	brcc	.+18     	; 0x56f4 <analogWrite+0x4e>
    56e2:	e1 30       	cpi	r30, 0x01	; 1
    56e4:	b9 f0       	breq	.+46     	; 0x5714 <analogWrite+0x6e>
    56e6:	e2 30       	cpi	r30, 0x02	; 2
    56e8:	a1 f5       	brne	.+104    	; 0x5752 <analogWrite+0xac>
			#endif

			#if defined(TCCR0A) && defined(COM0B1)
			case TIMER0B:
				// connect pwm to pin on timer 0, channel B
				sbi(TCCR0A, COM0B1);
    56ea:	84 b5       	in	r24, 0x24	; 36
    56ec:	80 62       	ori	r24, 0x20	; 32
    56ee:	84 bd       	out	0x24, r24	; 36
				OCR0B = val; // set pwm duty
    56f0:	c8 bd       	out	0x28, r28	; 40
				break;
    56f2:	34 c0       	rjmp	.+104    	; 0x575c <analogWrite+0xb6>
	{
		digitalWrite(pin, HIGH);
	}
	else
	{
		switch(digitalPinToTimer(pin))
    56f4:	e7 30       	cpi	r30, 0x07	; 7
    56f6:	e9 f0       	breq	.+58     	; 0x5732 <analogWrite+0x8c>
    56f8:	e8 30       	cpi	r30, 0x08	; 8
    56fa:	19 f1       	breq	.+70     	; 0x5742 <analogWrite+0x9c>
    56fc:	e4 30       	cpi	r30, 0x04	; 4
    56fe:	49 f5       	brne	.+82     	; 0x5752 <analogWrite+0xac>
			#endif

			#if defined(TCCR1A) && defined(COM1B1)
			case TIMER1B:
				// connect pwm to pin on timer 1, channel B
				sbi(TCCR1A, COM1B1);
    5700:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    5704:	80 62       	ori	r24, 0x20	; 32
    5706:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
				OCR1B = val; // set pwm duty
    570a:	d0 93 8b 00 	sts	0x008B, r29	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    570e:	c0 93 8a 00 	sts	0x008A, r28	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
				break;
    5712:	24 c0       	rjmp	.+72     	; 0x575c <analogWrite+0xb6>
			#endif

			#if defined(TCCR0A) && defined(COM0A1)
			case TIMER0A:
				// connect pwm to pin on timer 0, channel A
				sbi(TCCR0A, COM0A1);
    5714:	84 b5       	in	r24, 0x24	; 36
    5716:	80 68       	ori	r24, 0x80	; 128
    5718:	84 bd       	out	0x24, r24	; 36
				OCR0A = val; // set pwm duty
    571a:	c7 bd       	out	0x27, r28	; 39
				break;
    571c:	1f c0       	rjmp	.+62     	; 0x575c <analogWrite+0xb6>
			#endif

			#if defined(TCCR1A) && defined(COM1A1)
			case TIMER1A:
				// connect pwm to pin on timer 1, channel A
				sbi(TCCR1A, COM1A1);
    571e:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    5722:	80 68       	ori	r24, 0x80	; 128
    5724:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
				OCR1A = val; // set pwm duty
    5728:	d0 93 89 00 	sts	0x0089, r29	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    572c:	c0 93 88 00 	sts	0x0088, r28	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
				break;
    5730:	15 c0       	rjmp	.+42     	; 0x575c <analogWrite+0xb6>
			#endif

			#if defined(TCCR2A) && defined(COM2A1)
			case TIMER2A:
				// connect pwm to pin on timer 2, channel A
				sbi(TCCR2A, COM2A1);
    5732:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    5736:	80 68       	ori	r24, 0x80	; 128
    5738:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
				OCR2A = val; // set pwm duty
    573c:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
				break;
    5740:	0d c0       	rjmp	.+26     	; 0x575c <analogWrite+0xb6>
			#endif

			#if defined(TCCR2A) && defined(COM2B1)
			case TIMER2B:
				// connect pwm to pin on timer 2, channel B
				sbi(TCCR2A, COM2B1);
    5742:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    5746:	80 62       	ori	r24, 0x20	; 32
    5748:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
				OCR2B = val; // set pwm duty
    574c:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
				break;
    5750:	05 c0       	rjmp	.+10     	; 0x575c <analogWrite+0xb6>
				break;
			#endif

			case NOT_ON_TIMER:
			default:
				if (val < 128) {
    5752:	c0 38       	cpi	r28, 0x80	; 128
    5754:	d1 05       	cpc	r29, r1
    5756:	0c f0       	brlt	.+2      	; 0x575a <analogWrite+0xb4>
    5758:	b5 cf       	rjmp	.-150    	; 0x56c4 <analogWrite+0x1e>
    575a:	af cf       	rjmp	.-162    	; 0x56ba <analogWrite+0x14>
				} else {
					digitalWrite(pin, HIGH);
				}
		}
	}
}
    575c:	df 91       	pop	r29
    575e:	cf 91       	pop	r28
    5760:	1f 91       	pop	r17
    5762:	08 95       	ret

00005764 <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
    5764:	83 30       	cpi	r24, 0x03	; 3
    5766:	81 f0       	breq	.+32     	; 0x5788 <turnOffPWM+0x24>
    5768:	28 f4       	brcc	.+10     	; 0x5774 <turnOffPWM+0x10>
    576a:	81 30       	cpi	r24, 0x01	; 1
    576c:	99 f0       	breq	.+38     	; 0x5794 <turnOffPWM+0x30>
    576e:	82 30       	cpi	r24, 0x02	; 2
    5770:	a1 f0       	breq	.+40     	; 0x579a <turnOffPWM+0x36>
    5772:	08 95       	ret
    5774:	87 30       	cpi	r24, 0x07	; 7
    5776:	a9 f0       	breq	.+42     	; 0x57a2 <turnOffPWM+0x3e>
    5778:	88 30       	cpi	r24, 0x08	; 8
    577a:	b9 f0       	breq	.+46     	; 0x57aa <turnOffPWM+0x46>
    577c:	84 30       	cpi	r24, 0x04	; 4
    577e:	d1 f4       	brne	.+52     	; 0x57b4 <turnOffPWM+0x50>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    5780:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    5784:	8f 7d       	andi	r24, 0xDF	; 223
    5786:	03 c0       	rjmp	.+6      	; 0x578e <turnOffPWM+0x2a>
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
    5788:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    578c:	8f 77       	andi	r24, 0x7F	; 127
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    578e:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    5792:	08 95       	ret
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
    5794:	84 b5       	in	r24, 0x24	; 36
    5796:	8f 77       	andi	r24, 0x7F	; 127
    5798:	02 c0       	rjmp	.+4      	; 0x579e <turnOffPWM+0x3a>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
    579a:	84 b5       	in	r24, 0x24	; 36
    579c:	8f 7d       	andi	r24, 0xDF	; 223
    579e:	84 bd       	out	0x24, r24	; 36
    57a0:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
    57a2:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    57a6:	8f 77       	andi	r24, 0x7F	; 127
    57a8:	03 c0       	rjmp	.+6      	; 0x57b0 <turnOffPWM+0x4c>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
    57aa:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    57ae:	8f 7d       	andi	r24, 0xDF	; 223
    57b0:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    57b4:	08 95       	ret

000057b6 <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    57b6:	cf 93       	push	r28
    57b8:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    57ba:	90 e0       	ldi	r25, 0x00	; 0
    57bc:	fc 01       	movw	r30, r24
    57be:	ed 51       	subi	r30, 0x1D	; 29
    57c0:	f0 4e       	sbci	r31, 0xE0	; 224
    57c2:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
    57c4:	fc 01       	movw	r30, r24
    57c6:	e9 50       	subi	r30, 0x09	; 9
    57c8:	f0 4e       	sbci	r31, 0xE0	; 224
    57ca:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    57cc:	88 23       	and	r24, r24
    57ce:	61 f1       	breq	.+88     	; 0x5828 <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    57d0:	90 e0       	ldi	r25, 0x00	; 0
    57d2:	88 0f       	add	r24, r24
    57d4:	99 1f       	adc	r25, r25
    57d6:	fc 01       	movw	r30, r24
    57d8:	eb 5e       	subi	r30, 0xEB	; 235
    57da:	ff 4d       	sbci	r31, 0xDF	; 223
    57dc:	c5 91       	lpm	r28, Z+
    57de:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
    57e0:	fc 01       	movw	r30, r24
    57e2:	e5 5f       	subi	r30, 0xF5	; 245
    57e4:	ff 4d       	sbci	r31, 0xDF	; 223
    57e6:	a5 91       	lpm	r26, Z+
    57e8:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
    57ea:	61 11       	cpse	r22, r1
    57ec:	09 c0       	rjmp	.+18     	; 0x5800 <pinMode+0x4a>
		uint8_t oldSREG = SREG;
    57ee:	9f b7       	in	r25, 0x3f	; 63
                cli();
    57f0:	f8 94       	cli
		*reg &= ~bit;
    57f2:	88 81       	ld	r24, Y
    57f4:	20 95       	com	r18
    57f6:	82 23       	and	r24, r18
    57f8:	88 83       	st	Y, r24
		*out &= ~bit;
    57fa:	ec 91       	ld	r30, X
    57fc:	2e 23       	and	r18, r30
    57fe:	0b c0       	rjmp	.+22     	; 0x5816 <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    5800:	62 30       	cpi	r22, 0x02	; 2
    5802:	61 f4       	brne	.+24     	; 0x581c <pinMode+0x66>
		uint8_t oldSREG = SREG;
    5804:	9f b7       	in	r25, 0x3f	; 63
                cli();
    5806:	f8 94       	cli
		*reg &= ~bit;
    5808:	88 81       	ld	r24, Y
    580a:	32 2f       	mov	r19, r18
    580c:	30 95       	com	r19
    580e:	83 23       	and	r24, r19
    5810:	88 83       	st	Y, r24
		*out |= bit;
    5812:	ec 91       	ld	r30, X
    5814:	2e 2b       	or	r18, r30
    5816:	2c 93       	st	X, r18
		SREG = oldSREG;
    5818:	9f bf       	out	0x3f, r25	; 63
    581a:	06 c0       	rjmp	.+12     	; 0x5828 <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
    581c:	8f b7       	in	r24, 0x3f	; 63
                cli();
    581e:	f8 94       	cli
		*reg |= bit;
    5820:	e8 81       	ld	r30, Y
    5822:	2e 2b       	or	r18, r30
    5824:	28 83       	st	Y, r18
		SREG = oldSREG;
    5826:	8f bf       	out	0x3f, r24	; 63
	}
}
    5828:	df 91       	pop	r29
    582a:	cf 91       	pop	r28
    582c:	08 95       	ret

0000582e <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
    582e:	1f 93       	push	r17
    5830:	cf 93       	push	r28
    5832:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
    5834:	28 2f       	mov	r18, r24
    5836:	30 e0       	ldi	r19, 0x00	; 0
    5838:	f9 01       	movw	r30, r18
    583a:	e1 53       	subi	r30, 0x31	; 49
    583c:	f0 4e       	sbci	r31, 0xE0	; 224
    583e:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
    5840:	f9 01       	movw	r30, r18
    5842:	ed 51       	subi	r30, 0x1D	; 29
    5844:	f0 4e       	sbci	r31, 0xE0	; 224
    5846:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
    5848:	f9 01       	movw	r30, r18
    584a:	e9 50       	subi	r30, 0x09	; 9
    584c:	f0 4e       	sbci	r31, 0xE0	; 224
    584e:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
    5850:	cc 23       	and	r28, r28
    5852:	c1 f0       	breq	.+48     	; 0x5884 <digitalWrite+0x56>
    5854:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    5856:	81 11       	cpse	r24, r1
    5858:	0e 94 b2 2b 	call	0x5764	; 0x5764 <turnOffPWM>

	out = portOutputRegister(port);
    585c:	ec 2f       	mov	r30, r28
    585e:	f0 e0       	ldi	r31, 0x00	; 0
    5860:	ee 0f       	add	r30, r30
    5862:	ff 1f       	adc	r31, r31
    5864:	e5 5f       	subi	r30, 0xF5	; 245
    5866:	ff 4d       	sbci	r31, 0xDF	; 223
    5868:	a5 91       	lpm	r26, Z+
    586a:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
    586c:	9f b7       	in	r25, 0x3f	; 63
	cli();
    586e:	f8 94       	cli

	if (val == LOW) {
    5870:	11 11       	cpse	r17, r1
    5872:	04 c0       	rjmp	.+8      	; 0x587c <digitalWrite+0x4e>
		*out &= ~bit;
    5874:	8c 91       	ld	r24, X
    5876:	d0 95       	com	r29
    5878:	d8 23       	and	r29, r24
    587a:	02 c0       	rjmp	.+4      	; 0x5880 <digitalWrite+0x52>
	} else {
		*out |= bit;
    587c:	ec 91       	ld	r30, X
    587e:	de 2b       	or	r29, r30
    5880:	dc 93       	st	X, r29
	}

	SREG = oldSREG;
    5882:	9f bf       	out	0x3f, r25	; 63
}
    5884:	df 91       	pop	r29
    5886:	cf 91       	pop	r28
    5888:	1f 91       	pop	r17
    588a:	08 95       	ret

0000588c <_ZN8SPIClass5beginEv>:
#ifdef SPI_TRANSACTION_MISMATCH_LED
uint8_t SPIClass::inTransactionFlag = 0;
#endif

void SPIClass::begin()
{
    588c:	cf 93       	push	r28
  uint8_t sreg = SREG;
    588e:	cf b7       	in	r28, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
    5890:	f8 94       	cli
  if (!initialized) {
    5892:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <_ZN8SPIClass11initializedE>
    5896:	81 11       	cpse	r24, r1
    5898:	27 c0       	rjmp	.+78     	; 0x58e8 <_ZN8SPIClass5beginEv+0x5c>
    // Set SS to high so a connected chip will be "deselected" by default
    uint8_t port = digitalPinToPort(SS);
    589a:	e1 e0       	ldi	r30, 0x01	; 1
    589c:	f0 e2       	ldi	r31, 0x20	; 32
    589e:	84 91       	lpm	r24, Z
    uint8_t bit = digitalPinToBitMask(SS);
    58a0:	ed ee       	ldi	r30, 0xED	; 237
    58a2:	ff e1       	ldi	r31, 0x1F	; 31
    58a4:	94 91       	lpm	r25, Z
    volatile uint8_t *reg = portModeRegister(port);
    58a6:	e8 2f       	mov	r30, r24
    58a8:	f0 e0       	ldi	r31, 0x00	; 0
    58aa:	ee 0f       	add	r30, r30
    58ac:	ff 1f       	adc	r31, r31
    58ae:	eb 5e       	subi	r30, 0xEB	; 235
    58b0:	ff 4d       	sbci	r31, 0xDF	; 223
    58b2:	a5 91       	lpm	r26, Z+
    58b4:	b4 91       	lpm	r27, Z

    // if the SS pin is not already configured as an output
    // then set it high (to enable the internal pull-up resistor)
    if(!(*reg & bit)){
    58b6:	ec 91       	ld	r30, X
    58b8:	e9 23       	and	r30, r25
    58ba:	21 f4       	brne	.+8      	; 0x58c4 <_ZN8SPIClass5beginEv+0x38>
      digitalWrite(SS, HIGH);
    58bc:	61 e0       	ldi	r22, 0x01	; 1
    58be:	8a e0       	ldi	r24, 0x0A	; 10
    58c0:	0e 94 17 2c 	call	0x582e	; 0x582e <digitalWrite>
    }

    // When the SS pin is set as OUTPUT, it can be used as
    // a general purpose output port (it doesn't influence
    // SPI operations).
    pinMode(SS, OUTPUT);
    58c4:	61 e0       	ldi	r22, 0x01	; 1
    58c6:	8a e0       	ldi	r24, 0x0A	; 10
    58c8:	0e 94 db 2b 	call	0x57b6	; 0x57b6 <pinMode>

    // Warning: if the SS pin ever becomes a LOW INPUT then SPI
    // automatically switches to Slave, so the data direction of
    // the SS pin MUST be kept as OUTPUT.
    SPCR |= _BV(MSTR);
    58cc:	8c b5       	in	r24, 0x2c	; 44
    58ce:	80 61       	ori	r24, 0x10	; 16
    58d0:	8c bd       	out	0x2c, r24	; 44
    SPCR |= _BV(SPE);
    58d2:	8c b5       	in	r24, 0x2c	; 44
    58d4:	80 64       	ori	r24, 0x40	; 64
    58d6:	8c bd       	out	0x2c, r24	; 44
    // MISO pin automatically overrides to INPUT.
    // By doing this AFTER enabling SPI, we avoid accidentally
    // clocking in a single bit since the lines go directly
    // from "input" to SPI control.
    // http://code.google.com/p/arduino/issues/detail?id=888
    pinMode(SCK, OUTPUT);
    58d8:	61 e0       	ldi	r22, 0x01	; 1
    58da:	8d e0       	ldi	r24, 0x0D	; 13
    58dc:	0e 94 db 2b 	call	0x57b6	; 0x57b6 <pinMode>
    pinMode(MOSI, OUTPUT);
    58e0:	61 e0       	ldi	r22, 0x01	; 1
    58e2:	8b e0       	ldi	r24, 0x0B	; 11
    58e4:	0e 94 db 2b 	call	0x57b6	; 0x57b6 <pinMode>
  }
  initialized++; // reference count
    58e8:	80 91 85 04 	lds	r24, 0x0485	; 0x800485 <_ZN8SPIClass11initializedE>
    58ec:	8f 5f       	subi	r24, 0xFF	; 255
    58ee:	80 93 85 04 	sts	0x0485, r24	; 0x800485 <_ZN8SPIClass11initializedE>
  SREG = sreg;
    58f2:	cf bf       	out	0x3f, r28	; 63
}
    58f4:	cf 91       	pop	r28
    58f6:	08 95       	ret

000058f8 <twi_init>:
  bool flag = twi_timed_out_flag;
  if (clear_flag){
    twi_timed_out_flag = false;
  }
  return(flag);
}
    58f8:	10 92 f9 04 	sts	0x04F9, r1	; 0x8004f9 <twi_state>
    58fc:	81 e0       	ldi	r24, 0x01	; 1
    58fe:	80 93 f7 04 	sts	0x04F7, r24	; 0x8004f7 <twi_sendStop>
    5902:	10 92 f6 04 	sts	0x04F6, r1	; 0x8004f6 <twi_inRepStart>
    5906:	61 e0       	ldi	r22, 0x01	; 1
    5908:	82 e1       	ldi	r24, 0x12	; 18
    590a:	0e 94 17 2c 	call	0x582e	; 0x582e <digitalWrite>
    590e:	61 e0       	ldi	r22, 0x01	; 1
    5910:	83 e1       	ldi	r24, 0x13	; 19
    5912:	0e 94 17 2c 	call	0x582e	; 0x582e <digitalWrite>
    5916:	e9 eb       	ldi	r30, 0xB9	; 185
    5918:	f0 e0       	ldi	r31, 0x00	; 0
    591a:	80 81       	ld	r24, Z
    591c:	8e 7f       	andi	r24, 0xFE	; 254
    591e:	80 83       	st	Z, r24
    5920:	80 81       	ld	r24, Z
    5922:	8d 7f       	andi	r24, 0xFD	; 253
    5924:	80 83       	st	Z, r24
    5926:	88 e4       	ldi	r24, 0x48	; 72
    5928:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    592c:	85 e4       	ldi	r24, 0x45	; 69
    592e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5932:	08 95       	ret

00005934 <twi_disable>:
    5934:	ec eb       	ldi	r30, 0xBC	; 188
    5936:	f0 e0       	ldi	r31, 0x00	; 0
    5938:	80 81       	ld	r24, Z
    593a:	8a 7b       	andi	r24, 0xBA	; 186
    593c:	80 83       	st	Z, r24
    593e:	60 e0       	ldi	r22, 0x00	; 0
    5940:	82 e1       	ldi	r24, 0x12	; 18
    5942:	0e 94 17 2c 	call	0x582e	; 0x582e <digitalWrite>
    5946:	60 e0       	ldi	r22, 0x00	; 0
    5948:	83 e1       	ldi	r24, 0x13	; 19
    594a:	0c 94 17 2c 	jmp	0x582e	; 0x582e <digitalWrite>

0000594e <twi_setFrequency>:
    594e:	9b 01       	movw	r18, r22
    5950:	ac 01       	movw	r20, r24
    5952:	60 e0       	ldi	r22, 0x00	; 0
    5954:	74 e2       	ldi	r23, 0x24	; 36
    5956:	84 ef       	ldi	r24, 0xF4	; 244
    5958:	90 e0       	ldi	r25, 0x00	; 0
    595a:	0e 94 e2 30 	call	0x61c4	; 0x61c4 <__udivmodsi4>
    595e:	da 01       	movw	r26, r20
    5960:	c9 01       	movw	r24, r18
    5962:	40 97       	sbiw	r24, 0x10	; 16
    5964:	a1 09       	sbc	r26, r1
    5966:	b1 09       	sbc	r27, r1
    5968:	b6 95       	lsr	r27
    596a:	a7 95       	ror	r26
    596c:	97 95       	ror	r25
    596e:	87 95       	ror	r24
    5970:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    5974:	08 95       	ret

00005976 <twi_transmit>:
    5976:	40 91 a8 04 	lds	r20, 0x04A8	; 0x8004a8 <twi_txBufferLength>
    597a:	26 2f       	mov	r18, r22
    597c:	30 e0       	ldi	r19, 0x00	; 0
    597e:	24 0f       	add	r18, r20
    5980:	31 1d       	adc	r19, r1
    5982:	21 32       	cpi	r18, 0x21	; 33
    5984:	31 05       	cpc	r19, r1
    5986:	dc f4       	brge	.+54     	; 0x59be <twi_transmit+0x48>
    5988:	20 91 f9 04 	lds	r18, 0x04F9	; 0x8004f9 <twi_state>
    598c:	24 30       	cpi	r18, 0x04	; 4
    598e:	c9 f4       	brne	.+50     	; 0x59c2 <twi_transmit+0x4c>
    5990:	fc 01       	movw	r30, r24
    5992:	80 e0       	ldi	r24, 0x00	; 0
    5994:	90 e0       	ldi	r25, 0x00	; 0
    5996:	86 17       	cp	r24, r22
    5998:	58 f4       	brcc	.+22     	; 0x59b0 <twi_transmit+0x3a>
    599a:	30 91 a8 04 	lds	r19, 0x04A8	; 0x8004a8 <twi_txBufferLength>
    599e:	21 91       	ld	r18, Z+
    59a0:	dc 01       	movw	r26, r24
    59a2:	a6 55       	subi	r26, 0x56	; 86
    59a4:	bb 4f       	sbci	r27, 0xFB	; 251
    59a6:	a3 0f       	add	r26, r19
    59a8:	b1 1d       	adc	r27, r1
    59aa:	2c 93       	st	X, r18
    59ac:	01 96       	adiw	r24, 0x01	; 1
    59ae:	f3 cf       	rjmp	.-26     	; 0x5996 <twi_transmit+0x20>
    59b0:	80 91 a8 04 	lds	r24, 0x04A8	; 0x8004a8 <twi_txBufferLength>
    59b4:	68 0f       	add	r22, r24
    59b6:	60 93 a8 04 	sts	0x04A8, r22	; 0x8004a8 <twi_txBufferLength>
    59ba:	80 e0       	ldi	r24, 0x00	; 0
    59bc:	08 95       	ret
    59be:	81 e0       	ldi	r24, 0x01	; 1
    59c0:	08 95       	ret
    59c2:	82 e0       	ldi	r24, 0x02	; 2
    59c4:	08 95       	ret

000059c6 <twi_attachSlaveRxEvent>:
    59c6:	90 93 ed 04 	sts	0x04ED, r25	; 0x8004ed <twi_onSlaveReceive+0x1>
    59ca:	80 93 ec 04 	sts	0x04EC, r24	; 0x8004ec <twi_onSlaveReceive>
    59ce:	08 95       	ret

000059d0 <twi_attachSlaveTxEvent>:
    59d0:	90 93 ef 04 	sts	0x04EF, r25	; 0x8004ef <twi_onSlaveTransmit+0x1>
    59d4:	80 93 ee 04 	sts	0x04EE, r24	; 0x8004ee <twi_onSlaveTransmit>
    59d8:	08 95       	ret

000059da <twi_releaseBus>:
    59da:	85 ec       	ldi	r24, 0xC5	; 197
    59dc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    59e0:	10 92 f9 04 	sts	0x04F9, r1	; 0x8004f9 <twi_state>
    59e4:	08 95       	ret

000059e6 <twi_handleTimeout>:
    59e6:	cf 93       	push	r28
    59e8:	df 93       	push	r29
    59ea:	91 e0       	ldi	r25, 0x01	; 1
    59ec:	90 93 f1 04 	sts	0x04F1, r25	; 0x8004f1 <twi_timed_out_flag>
    59f0:	88 23       	and	r24, r24
    59f2:	61 f0       	breq	.+24     	; 0x5a0c <twi_handleTimeout+0x26>
    59f4:	c0 91 b8 00 	lds	r28, 0x00B8	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    59f8:	d0 91 ba 00 	lds	r29, 0x00BA	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7f80ba>
    59fc:	0e 94 9a 2c 	call	0x5934	; 0x5934 <twi_disable>
    5a00:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <twi_init>
    5a04:	d0 93 ba 00 	sts	0x00BA, r29	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7f80ba>
    5a08:	c0 93 b8 00 	sts	0x00B8, r28	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    5a0c:	df 91       	pop	r29
    5a0e:	cf 91       	pop	r28
    5a10:	08 95       	ret

00005a12 <twi_readFrom>:
    5a12:	4f 92       	push	r4
    5a14:	5f 92       	push	r5
    5a16:	6f 92       	push	r6
    5a18:	7f 92       	push	r7
    5a1a:	8f 92       	push	r8
    5a1c:	9f 92       	push	r9
    5a1e:	af 92       	push	r10
    5a20:	bf 92       	push	r11
    5a22:	cf 92       	push	r12
    5a24:	df 92       	push	r13
    5a26:	ef 92       	push	r14
    5a28:	ff 92       	push	r15
    5a2a:	0f 93       	push	r16
    5a2c:	1f 93       	push	r17
    5a2e:	cf 93       	push	r28
    5a30:	df 93       	push	r29
    5a32:	f8 2e       	mov	r15, r24
    5a34:	16 2f       	mov	r17, r22
    5a36:	07 2f       	mov	r16, r23
    5a38:	c4 2f       	mov	r28, r20
    5a3a:	e2 2e       	mov	r14, r18
    5a3c:	41 32       	cpi	r20, 0x21	; 33
    5a3e:	08 f0       	brcs	.+2      	; 0x5a42 <twi_readFrom+0x30>
    5a40:	be c0       	rjmp	.+380    	; 0x5bbe <twi_readFrom+0x1ac>
    5a42:	0e 94 8a 1a 	call	0x3514	; 0x3514 <micros>
    5a46:	4b 01       	movw	r8, r22
    5a48:	5c 01       	movw	r10, r24
    5a4a:	d0 91 f9 04 	lds	r29, 0x04F9	; 0x8004f9 <twi_state>
    5a4e:	dd 23       	and	r29, r29
    5a50:	31 f1       	breq	.+76     	; 0x5a9e <twi_readFrom+0x8c>
    5a52:	80 91 f2 04 	lds	r24, 0x04F2	; 0x8004f2 <twi_timeout_us>
    5a56:	90 91 f3 04 	lds	r25, 0x04F3	; 0x8004f3 <twi_timeout_us+0x1>
    5a5a:	a0 91 f4 04 	lds	r26, 0x04F4	; 0x8004f4 <twi_timeout_us+0x2>
    5a5e:	b0 91 f5 04 	lds	r27, 0x04F5	; 0x8004f5 <twi_timeout_us+0x3>
    5a62:	89 2b       	or	r24, r25
    5a64:	8a 2b       	or	r24, r26
    5a66:	8b 2b       	or	r24, r27
    5a68:	81 f3       	breq	.-32     	; 0x5a4a <twi_readFrom+0x38>
    5a6a:	0e 94 8a 1a 	call	0x3514	; 0x3514 <micros>
    5a6e:	40 90 f2 04 	lds	r4, 0x04F2	; 0x8004f2 <twi_timeout_us>
    5a72:	50 90 f3 04 	lds	r5, 0x04F3	; 0x8004f3 <twi_timeout_us+0x1>
    5a76:	60 90 f4 04 	lds	r6, 0x04F4	; 0x8004f4 <twi_timeout_us+0x2>
    5a7a:	70 90 f5 04 	lds	r7, 0x04F5	; 0x8004f5 <twi_timeout_us+0x3>
    5a7e:	dc 01       	movw	r26, r24
    5a80:	cb 01       	movw	r24, r22
    5a82:	88 19       	sub	r24, r8
    5a84:	99 09       	sbc	r25, r9
    5a86:	aa 09       	sbc	r26, r10
    5a88:	bb 09       	sbc	r27, r11
    5a8a:	48 16       	cp	r4, r24
    5a8c:	59 06       	cpc	r5, r25
    5a8e:	6a 06       	cpc	r6, r26
    5a90:	7b 06       	cpc	r7, r27
    5a92:	d8 f6       	brcc	.-74     	; 0x5a4a <twi_readFrom+0x38>
    5a94:	80 91 f0 04 	lds	r24, 0x04F0	; 0x8004f0 <twi_do_reset_on_timeout>
    5a98:	0e 94 f3 2c 	call	0x59e6	; 0x59e6 <twi_handleTimeout>
    5a9c:	90 c0       	rjmp	.+288    	; 0x5bbe <twi_readFrom+0x1ac>
    5a9e:	81 e0       	ldi	r24, 0x01	; 1
    5aa0:	80 93 f9 04 	sts	0x04F9, r24	; 0x8004f9 <twi_state>
    5aa4:	e0 92 f7 04 	sts	0x04F7, r14	; 0x8004f7 <twi_sendStop>
    5aa8:	9f ef       	ldi	r25, 0xFF	; 255
    5aaa:	90 93 86 04 	sts	0x0486, r25	; 0x800486 <twi_error>
    5aae:	10 92 cb 04 	sts	0x04CB, r1	; 0x8004cb <twi_masterBufferIndex>
    5ab2:	9c 0f       	add	r25, r28
    5ab4:	90 93 ca 04 	sts	0x04CA, r25	; 0x8004ca <twi_masterBufferLength>
    5ab8:	80 93 f8 04 	sts	0x04F8, r24	; 0x8004f8 <twi_slarw>
    5abc:	90 91 f8 04 	lds	r25, 0x04F8	; 0x8004f8 <twi_slarw>
    5ac0:	8f 2d       	mov	r24, r15
    5ac2:	88 0f       	add	r24, r24
    5ac4:	89 2b       	or	r24, r25
    5ac6:	80 93 f8 04 	sts	0x04F8, r24	; 0x8004f8 <twi_slarw>
    5aca:	80 91 f6 04 	lds	r24, 0x04F6	; 0x8004f6 <twi_inRepStart>
    5ace:	81 30       	cpi	r24, 0x01	; 1
    5ad0:	89 f5       	brne	.+98     	; 0x5b34 <twi_readFrom+0x122>
    5ad2:	10 92 f6 04 	sts	0x04F6, r1	; 0x8004f6 <twi_inRepStart>
    5ad6:	0e 94 8a 1a 	call	0x3514	; 0x3514 <micros>
    5ada:	6b 01       	movw	r12, r22
    5adc:	7c 01       	movw	r14, r24
    5ade:	80 91 f8 04 	lds	r24, 0x04F8	; 0x8004f8 <twi_slarw>
    5ae2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    5ae6:	80 91 f2 04 	lds	r24, 0x04F2	; 0x8004f2 <twi_timeout_us>
    5aea:	90 91 f3 04 	lds	r25, 0x04F3	; 0x8004f3 <twi_timeout_us+0x1>
    5aee:	a0 91 f4 04 	lds	r26, 0x04F4	; 0x8004f4 <twi_timeout_us+0x2>
    5af2:	b0 91 f5 04 	lds	r27, 0x04F5	; 0x8004f5 <twi_timeout_us+0x3>
    5af6:	89 2b       	or	r24, r25
    5af8:	8a 2b       	or	r24, r26
    5afa:	8b 2b       	or	r24, r27
    5afc:	a9 f0       	breq	.+42     	; 0x5b28 <twi_readFrom+0x116>
    5afe:	0e 94 8a 1a 	call	0x3514	; 0x3514 <micros>
    5b02:	80 90 f2 04 	lds	r8, 0x04F2	; 0x8004f2 <twi_timeout_us>
    5b06:	90 90 f3 04 	lds	r9, 0x04F3	; 0x8004f3 <twi_timeout_us+0x1>
    5b0a:	a0 90 f4 04 	lds	r10, 0x04F4	; 0x8004f4 <twi_timeout_us+0x2>
    5b0e:	b0 90 f5 04 	lds	r11, 0x04F5	; 0x8004f5 <twi_timeout_us+0x3>
    5b12:	dc 01       	movw	r26, r24
    5b14:	cb 01       	movw	r24, r22
    5b16:	8c 19       	sub	r24, r12
    5b18:	9d 09       	sbc	r25, r13
    5b1a:	ae 09       	sbc	r26, r14
    5b1c:	bf 09       	sbc	r27, r15
    5b1e:	88 16       	cp	r8, r24
    5b20:	99 06       	cpc	r9, r25
    5b22:	aa 06       	cpc	r10, r26
    5b24:	bb 06       	cpc	r11, r27
    5b26:	90 f1       	brcs	.+100    	; 0x5b8c <twi_readFrom+0x17a>
    5b28:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5b2c:	83 fd       	sbrc	r24, 3
    5b2e:	d7 cf       	rjmp	.-82     	; 0x5ade <twi_readFrom+0xcc>
    5b30:	85 ec       	ldi	r24, 0xC5	; 197
    5b32:	01 c0       	rjmp	.+2      	; 0x5b36 <twi_readFrom+0x124>
    5b34:	85 ee       	ldi	r24, 0xE5	; 229
    5b36:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5b3a:	0e 94 8a 1a 	call	0x3514	; 0x3514 <micros>
    5b3e:	6b 01       	movw	r12, r22
    5b40:	7c 01       	movw	r14, r24
    5b42:	80 91 f9 04 	lds	r24, 0x04F9	; 0x8004f9 <twi_state>
    5b46:	81 30       	cpi	r24, 0x01	; 1
    5b48:	31 f5       	brne	.+76     	; 0x5b96 <twi_readFrom+0x184>
    5b4a:	80 91 f2 04 	lds	r24, 0x04F2	; 0x8004f2 <twi_timeout_us>
    5b4e:	90 91 f3 04 	lds	r25, 0x04F3	; 0x8004f3 <twi_timeout_us+0x1>
    5b52:	a0 91 f4 04 	lds	r26, 0x04F4	; 0x8004f4 <twi_timeout_us+0x2>
    5b56:	b0 91 f5 04 	lds	r27, 0x04F5	; 0x8004f5 <twi_timeout_us+0x3>
    5b5a:	89 2b       	or	r24, r25
    5b5c:	8a 2b       	or	r24, r26
    5b5e:	8b 2b       	or	r24, r27
    5b60:	81 f3       	breq	.-32     	; 0x5b42 <twi_readFrom+0x130>
    5b62:	0e 94 8a 1a 	call	0x3514	; 0x3514 <micros>
    5b66:	80 90 f2 04 	lds	r8, 0x04F2	; 0x8004f2 <twi_timeout_us>
    5b6a:	90 90 f3 04 	lds	r9, 0x04F3	; 0x8004f3 <twi_timeout_us+0x1>
    5b6e:	a0 90 f4 04 	lds	r10, 0x04F4	; 0x8004f4 <twi_timeout_us+0x2>
    5b72:	b0 90 f5 04 	lds	r11, 0x04F5	; 0x8004f5 <twi_timeout_us+0x3>
    5b76:	dc 01       	movw	r26, r24
    5b78:	cb 01       	movw	r24, r22
    5b7a:	8c 19       	sub	r24, r12
    5b7c:	9d 09       	sbc	r25, r13
    5b7e:	ae 09       	sbc	r26, r14
    5b80:	bf 09       	sbc	r27, r15
    5b82:	88 16       	cp	r8, r24
    5b84:	99 06       	cpc	r9, r25
    5b86:	aa 06       	cpc	r10, r26
    5b88:	bb 06       	cpc	r11, r27
    5b8a:	d8 f6       	brcc	.-74     	; 0x5b42 <twi_readFrom+0x130>
    5b8c:	80 91 f0 04 	lds	r24, 0x04F0	; 0x8004f0 <twi_do_reset_on_timeout>
    5b90:	0e 94 f3 2c 	call	0x59e6	; 0x59e6 <twi_handleTimeout>
    5b94:	15 c0       	rjmp	.+42     	; 0x5bc0 <twi_readFrom+0x1ae>
    5b96:	80 91 cb 04 	lds	r24, 0x04CB	; 0x8004cb <twi_masterBufferIndex>
    5b9a:	8c 17       	cp	r24, r28
    5b9c:	10 f4       	brcc	.+4      	; 0x5ba2 <twi_readFrom+0x190>
    5b9e:	c0 91 cb 04 	lds	r28, 0x04CB	; 0x8004cb <twi_masterBufferIndex>
    5ba2:	ac ec       	ldi	r26, 0xCC	; 204
    5ba4:	b4 e0       	ldi	r27, 0x04	; 4
    5ba6:	91 2f       	mov	r25, r17
    5ba8:	e1 2f       	mov	r30, r17
    5baa:	f0 2f       	mov	r31, r16
    5bac:	8e 2f       	mov	r24, r30
    5bae:	89 1b       	sub	r24, r25
    5bb0:	8c 17       	cp	r24, r28
    5bb2:	18 f4       	brcc	.+6      	; 0x5bba <twi_readFrom+0x1a8>
    5bb4:	8d 91       	ld	r24, X+
    5bb6:	81 93       	st	Z+, r24
    5bb8:	f9 cf       	rjmp	.-14     	; 0x5bac <twi_readFrom+0x19a>
    5bba:	dc 2f       	mov	r29, r28
    5bbc:	01 c0       	rjmp	.+2      	; 0x5bc0 <twi_readFrom+0x1ae>
    5bbe:	d0 e0       	ldi	r29, 0x00	; 0
    5bc0:	8d 2f       	mov	r24, r29
    5bc2:	df 91       	pop	r29
    5bc4:	cf 91       	pop	r28
    5bc6:	1f 91       	pop	r17
    5bc8:	0f 91       	pop	r16
    5bca:	ff 90       	pop	r15
    5bcc:	ef 90       	pop	r14
    5bce:	df 90       	pop	r13
    5bd0:	cf 90       	pop	r12
    5bd2:	bf 90       	pop	r11
    5bd4:	af 90       	pop	r10
    5bd6:	9f 90       	pop	r9
    5bd8:	8f 90       	pop	r8
    5bda:	7f 90       	pop	r7
    5bdc:	6f 90       	pop	r6
    5bde:	5f 90       	pop	r5
    5be0:	4f 90       	pop	r4
    5be2:	08 95       	ret

00005be4 <twi_writeTo>:
    5be4:	4f 92       	push	r4
    5be6:	5f 92       	push	r5
    5be8:	6f 92       	push	r6
    5bea:	7f 92       	push	r7
    5bec:	8f 92       	push	r8
    5bee:	9f 92       	push	r9
    5bf0:	af 92       	push	r10
    5bf2:	bf 92       	push	r11
    5bf4:	cf 92       	push	r12
    5bf6:	df 92       	push	r13
    5bf8:	ef 92       	push	r14
    5bfa:	ff 92       	push	r15
    5bfc:	0f 93       	push	r16
    5bfe:	1f 93       	push	r17
    5c00:	cf 93       	push	r28
    5c02:	df 93       	push	r29
    5c04:	41 32       	cpi	r20, 0x21	; 33
    5c06:	08 f0       	brcs	.+2      	; 0x5c0a <twi_writeTo+0x26>
    5c08:	c6 c0       	rjmp	.+396    	; 0x5d96 <twi_writeTo+0x1b2>
    5c0a:	12 2f       	mov	r17, r18
    5c0c:	f4 2e       	mov	r15, r20
    5c0e:	d7 2e       	mov	r13, r23
    5c10:	e6 2e       	mov	r14, r22
    5c12:	d8 2f       	mov	r29, r24
    5c14:	0e 94 8a 1a 	call	0x3514	; 0x3514 <micros>
    5c18:	4b 01       	movw	r8, r22
    5c1a:	5c 01       	movw	r10, r24
    5c1c:	c0 91 f9 04 	lds	r28, 0x04F9	; 0x8004f9 <twi_state>
    5c20:	cc 23       	and	r28, r28
    5c22:	11 f1       	breq	.+68     	; 0x5c68 <twi_writeTo+0x84>
    5c24:	80 91 f2 04 	lds	r24, 0x04F2	; 0x8004f2 <twi_timeout_us>
    5c28:	90 91 f3 04 	lds	r25, 0x04F3	; 0x8004f3 <twi_timeout_us+0x1>
    5c2c:	a0 91 f4 04 	lds	r26, 0x04F4	; 0x8004f4 <twi_timeout_us+0x2>
    5c30:	b0 91 f5 04 	lds	r27, 0x04F5	; 0x8004f5 <twi_timeout_us+0x3>
    5c34:	89 2b       	or	r24, r25
    5c36:	8a 2b       	or	r24, r26
    5c38:	8b 2b       	or	r24, r27
    5c3a:	81 f3       	breq	.-32     	; 0x5c1c <twi_writeTo+0x38>
    5c3c:	0e 94 8a 1a 	call	0x3514	; 0x3514 <micros>
    5c40:	40 90 f2 04 	lds	r4, 0x04F2	; 0x8004f2 <twi_timeout_us>
    5c44:	50 90 f3 04 	lds	r5, 0x04F3	; 0x8004f3 <twi_timeout_us+0x1>
    5c48:	60 90 f4 04 	lds	r6, 0x04F4	; 0x8004f4 <twi_timeout_us+0x2>
    5c4c:	70 90 f5 04 	lds	r7, 0x04F5	; 0x8004f5 <twi_timeout_us+0x3>
    5c50:	dc 01       	movw	r26, r24
    5c52:	cb 01       	movw	r24, r22
    5c54:	88 19       	sub	r24, r8
    5c56:	99 09       	sbc	r25, r9
    5c58:	aa 09       	sbc	r26, r10
    5c5a:	bb 09       	sbc	r27, r11
    5c5c:	48 16       	cp	r4, r24
    5c5e:	59 06       	cpc	r5, r25
    5c60:	6a 06       	cpc	r6, r26
    5c62:	7b 06       	cpc	r7, r27
    5c64:	d8 f6       	brcc	.-74     	; 0x5c1c <twi_writeTo+0x38>
    5c66:	83 c0       	rjmp	.+262    	; 0x5d6e <twi_writeTo+0x18a>
    5c68:	82 e0       	ldi	r24, 0x02	; 2
    5c6a:	80 93 f9 04 	sts	0x04F9, r24	; 0x8004f9 <twi_state>
    5c6e:	00 93 f7 04 	sts	0x04F7, r16	; 0x8004f7 <twi_sendStop>
    5c72:	8f ef       	ldi	r24, 0xFF	; 255
    5c74:	80 93 86 04 	sts	0x0486, r24	; 0x800486 <twi_error>
    5c78:	10 92 cb 04 	sts	0x04CB, r1	; 0x8004cb <twi_masterBufferIndex>
    5c7c:	f0 92 ca 04 	sts	0x04CA, r15	; 0x8004ca <twi_masterBufferLength>
    5c80:	9e 2d       	mov	r25, r14
    5c82:	ac ec       	ldi	r26, 0xCC	; 204
    5c84:	b4 e0       	ldi	r27, 0x04	; 4
    5c86:	ee 2d       	mov	r30, r14
    5c88:	fd 2d       	mov	r31, r13
    5c8a:	8e 2f       	mov	r24, r30
    5c8c:	89 1b       	sub	r24, r25
    5c8e:	8f 15       	cp	r24, r15
    5c90:	18 f4       	brcc	.+6      	; 0x5c98 <twi_writeTo+0xb4>
    5c92:	81 91       	ld	r24, Z+
    5c94:	8d 93       	st	X+, r24
    5c96:	f9 cf       	rjmp	.-14     	; 0x5c8a <twi_writeTo+0xa6>
    5c98:	10 92 f8 04 	sts	0x04F8, r1	; 0x8004f8 <twi_slarw>
    5c9c:	90 91 f8 04 	lds	r25, 0x04F8	; 0x8004f8 <twi_slarw>
    5ca0:	dd 0f       	add	r29, r29
    5ca2:	d9 2b       	or	r29, r25
    5ca4:	d0 93 f8 04 	sts	0x04F8, r29	; 0x8004f8 <twi_slarw>
    5ca8:	80 91 f6 04 	lds	r24, 0x04F6	; 0x8004f6 <twi_inRepStart>
    5cac:	81 30       	cpi	r24, 0x01	; 1
    5cae:	89 f5       	brne	.+98     	; 0x5d12 <twi_writeTo+0x12e>
    5cb0:	10 92 f6 04 	sts	0x04F6, r1	; 0x8004f6 <twi_inRepStart>
    5cb4:	0e 94 8a 1a 	call	0x3514	; 0x3514 <micros>
    5cb8:	6b 01       	movw	r12, r22
    5cba:	7c 01       	movw	r14, r24
    5cbc:	80 91 f8 04 	lds	r24, 0x04F8	; 0x8004f8 <twi_slarw>
    5cc0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    5cc4:	80 91 f2 04 	lds	r24, 0x04F2	; 0x8004f2 <twi_timeout_us>
    5cc8:	90 91 f3 04 	lds	r25, 0x04F3	; 0x8004f3 <twi_timeout_us+0x1>
    5ccc:	a0 91 f4 04 	lds	r26, 0x04F4	; 0x8004f4 <twi_timeout_us+0x2>
    5cd0:	b0 91 f5 04 	lds	r27, 0x04F5	; 0x8004f5 <twi_timeout_us+0x3>
    5cd4:	89 2b       	or	r24, r25
    5cd6:	8a 2b       	or	r24, r26
    5cd8:	8b 2b       	or	r24, r27
    5cda:	a9 f0       	breq	.+42     	; 0x5d06 <twi_writeTo+0x122>
    5cdc:	0e 94 8a 1a 	call	0x3514	; 0x3514 <micros>
    5ce0:	80 90 f2 04 	lds	r8, 0x04F2	; 0x8004f2 <twi_timeout_us>
    5ce4:	90 90 f3 04 	lds	r9, 0x04F3	; 0x8004f3 <twi_timeout_us+0x1>
    5ce8:	a0 90 f4 04 	lds	r10, 0x04F4	; 0x8004f4 <twi_timeout_us+0x2>
    5cec:	b0 90 f5 04 	lds	r11, 0x04F5	; 0x8004f5 <twi_timeout_us+0x3>
    5cf0:	dc 01       	movw	r26, r24
    5cf2:	cb 01       	movw	r24, r22
    5cf4:	8c 19       	sub	r24, r12
    5cf6:	9d 09       	sbc	r25, r13
    5cf8:	ae 09       	sbc	r26, r14
    5cfa:	bf 09       	sbc	r27, r15
    5cfc:	88 16       	cp	r8, r24
    5cfe:	99 06       	cpc	r9, r25
    5d00:	aa 06       	cpc	r10, r26
    5d02:	bb 06       	cpc	r11, r27
    5d04:	a0 f1       	brcs	.+104    	; 0x5d6e <twi_writeTo+0x18a>
    5d06:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5d0a:	83 fd       	sbrc	r24, 3
    5d0c:	d7 cf       	rjmp	.-82     	; 0x5cbc <twi_writeTo+0xd8>
    5d0e:	85 ec       	ldi	r24, 0xC5	; 197
    5d10:	01 c0       	rjmp	.+2      	; 0x5d14 <twi_writeTo+0x130>
    5d12:	85 ee       	ldi	r24, 0xE5	; 229
    5d14:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5d18:	0e 94 8a 1a 	call	0x3514	; 0x3514 <micros>
    5d1c:	6b 01       	movw	r12, r22
    5d1e:	7c 01       	movw	r14, r24
    5d20:	11 23       	and	r17, r17
    5d22:	59 f1       	breq	.+86     	; 0x5d7a <twi_writeTo+0x196>
    5d24:	80 91 f9 04 	lds	r24, 0x04F9	; 0x8004f9 <twi_state>
    5d28:	82 30       	cpi	r24, 0x02	; 2
    5d2a:	39 f5       	brne	.+78     	; 0x5d7a <twi_writeTo+0x196>
    5d2c:	80 91 f2 04 	lds	r24, 0x04F2	; 0x8004f2 <twi_timeout_us>
    5d30:	90 91 f3 04 	lds	r25, 0x04F3	; 0x8004f3 <twi_timeout_us+0x1>
    5d34:	a0 91 f4 04 	lds	r26, 0x04F4	; 0x8004f4 <twi_timeout_us+0x2>
    5d38:	b0 91 f5 04 	lds	r27, 0x04F5	; 0x8004f5 <twi_timeout_us+0x3>
    5d3c:	89 2b       	or	r24, r25
    5d3e:	8a 2b       	or	r24, r26
    5d40:	8b 2b       	or	r24, r27
    5d42:	71 f3       	breq	.-36     	; 0x5d20 <twi_writeTo+0x13c>
    5d44:	0e 94 8a 1a 	call	0x3514	; 0x3514 <micros>
    5d48:	80 90 f2 04 	lds	r8, 0x04F2	; 0x8004f2 <twi_timeout_us>
    5d4c:	90 90 f3 04 	lds	r9, 0x04F3	; 0x8004f3 <twi_timeout_us+0x1>
    5d50:	a0 90 f4 04 	lds	r10, 0x04F4	; 0x8004f4 <twi_timeout_us+0x2>
    5d54:	b0 90 f5 04 	lds	r11, 0x04F5	; 0x8004f5 <twi_timeout_us+0x3>
    5d58:	dc 01       	movw	r26, r24
    5d5a:	cb 01       	movw	r24, r22
    5d5c:	8c 19       	sub	r24, r12
    5d5e:	9d 09       	sbc	r25, r13
    5d60:	ae 09       	sbc	r26, r14
    5d62:	bf 09       	sbc	r27, r15
    5d64:	88 16       	cp	r8, r24
    5d66:	99 06       	cpc	r9, r25
    5d68:	aa 06       	cpc	r10, r26
    5d6a:	bb 06       	cpc	r11, r27
    5d6c:	c8 f6       	brcc	.-78     	; 0x5d20 <twi_writeTo+0x13c>
    5d6e:	80 91 f0 04 	lds	r24, 0x04F0	; 0x8004f0 <twi_do_reset_on_timeout>
    5d72:	0e 94 f3 2c 	call	0x59e6	; 0x59e6 <twi_handleTimeout>
    5d76:	c5 e0       	ldi	r28, 0x05	; 5
    5d78:	13 c0       	rjmp	.+38     	; 0x5da0 <twi_writeTo+0x1bc>
    5d7a:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <twi_error>
    5d7e:	8f 3f       	cpi	r24, 0xFF	; 255
    5d80:	79 f0       	breq	.+30     	; 0x5da0 <twi_writeTo+0x1bc>
    5d82:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <twi_error>
    5d86:	80 32       	cpi	r24, 0x20	; 32
    5d88:	41 f0       	breq	.+16     	; 0x5d9a <twi_writeTo+0x1b6>
    5d8a:	80 91 86 04 	lds	r24, 0x0486	; 0x800486 <twi_error>
    5d8e:	80 33       	cpi	r24, 0x30	; 48
    5d90:	31 f0       	breq	.+12     	; 0x5d9e <twi_writeTo+0x1ba>
    5d92:	c4 e0       	ldi	r28, 0x04	; 4
    5d94:	05 c0       	rjmp	.+10     	; 0x5da0 <twi_writeTo+0x1bc>
    5d96:	c1 e0       	ldi	r28, 0x01	; 1
    5d98:	03 c0       	rjmp	.+6      	; 0x5da0 <twi_writeTo+0x1bc>
    5d9a:	c2 e0       	ldi	r28, 0x02	; 2
    5d9c:	01 c0       	rjmp	.+2      	; 0x5da0 <twi_writeTo+0x1bc>
    5d9e:	c3 e0       	ldi	r28, 0x03	; 3
    5da0:	8c 2f       	mov	r24, r28
    5da2:	df 91       	pop	r29
    5da4:	cf 91       	pop	r28
    5da6:	1f 91       	pop	r17
    5da8:	0f 91       	pop	r16
    5daa:	ff 90       	pop	r15
    5dac:	ef 90       	pop	r14
    5dae:	df 90       	pop	r13
    5db0:	cf 90       	pop	r12
    5db2:	bf 90       	pop	r11
    5db4:	af 90       	pop	r10
    5db6:	9f 90       	pop	r9
    5db8:	8f 90       	pop	r8
    5dba:	7f 90       	pop	r7
    5dbc:	6f 90       	pop	r6
    5dbe:	5f 90       	pop	r5
    5dc0:	4f 90       	pop	r4
    5dc2:	08 95       	ret

00005dc4 <twi_stop>:
    5dc4:	85 ed       	ldi	r24, 0xD5	; 213
    5dc6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5dca:	80 91 f2 04 	lds	r24, 0x04F2	; 0x8004f2 <twi_timeout_us>
    5dce:	90 91 f3 04 	lds	r25, 0x04F3	; 0x8004f3 <twi_timeout_us+0x1>
    5dd2:	a0 91 f4 04 	lds	r26, 0x04F4	; 0x8004f4 <twi_timeout_us+0x2>
    5dd6:	b0 91 f5 04 	lds	r27, 0x04F5	; 0x8004f5 <twi_timeout_us+0x3>
    5dda:	07 96       	adiw	r24, 0x07	; 7
    5ddc:	a1 1d       	adc	r26, r1
    5dde:	b1 1d       	adc	r27, r1
    5de0:	23 e0       	ldi	r18, 0x03	; 3
    5de2:	b6 95       	lsr	r27
    5de4:	a7 95       	ror	r26
    5de6:	97 95       	ror	r25
    5de8:	87 95       	ror	r24
    5dea:	2a 95       	dec	r18
    5dec:	d1 f7       	brne	.-12     	; 0x5de2 <twi_stop+0x1e>
    5dee:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5df2:	24 ff       	sbrs	r18, 4
    5df4:	1c c0       	rjmp	.+56     	; 0x5e2e <twi_stop+0x6a>
    5df6:	40 91 f2 04 	lds	r20, 0x04F2	; 0x8004f2 <twi_timeout_us>
    5dfa:	50 91 f3 04 	lds	r21, 0x04F3	; 0x8004f3 <twi_timeout_us+0x1>
    5dfe:	60 91 f4 04 	lds	r22, 0x04F4	; 0x8004f4 <twi_timeout_us+0x2>
    5e02:	70 91 f5 04 	lds	r23, 0x04F5	; 0x8004f5 <twi_timeout_us+0x3>
    5e06:	45 2b       	or	r20, r21
    5e08:	46 2b       	or	r20, r22
    5e0a:	47 2b       	or	r20, r23
    5e0c:	81 f3       	breq	.-32     	; 0x5dee <twi_stop+0x2a>
    5e0e:	00 97       	sbiw	r24, 0x00	; 0
    5e10:	a1 05       	cpc	r26, r1
    5e12:	b1 05       	cpc	r27, r1
    5e14:	41 f0       	breq	.+16     	; 0x5e26 <twi_stop+0x62>
    5e16:	25 e3       	ldi	r18, 0x35	; 53
    5e18:	2a 95       	dec	r18
    5e1a:	f1 f7       	brne	.-4      	; 0x5e18 <twi_stop+0x54>
    5e1c:	00 00       	nop
    5e1e:	01 97       	sbiw	r24, 0x01	; 1
    5e20:	a1 09       	sbc	r26, r1
    5e22:	b1 09       	sbc	r27, r1
    5e24:	e4 cf       	rjmp	.-56     	; 0x5dee <twi_stop+0x2a>
    5e26:	80 91 f0 04 	lds	r24, 0x04F0	; 0x8004f0 <twi_do_reset_on_timeout>
    5e2a:	0c 94 f3 2c 	jmp	0x59e6	; 0x59e6 <twi_handleTimeout>
    5e2e:	10 92 f9 04 	sts	0x04F9, r1	; 0x8004f9 <twi_state>
    5e32:	08 95       	ret

00005e34 <__vector_24>:

ISR(TWI_vect)
{
    5e34:	1f 92       	push	r1
    5e36:	0f 92       	push	r0
    5e38:	0f b6       	in	r0, 0x3f	; 63
    5e3a:	0f 92       	push	r0
    5e3c:	11 24       	eor	r1, r1
    5e3e:	2f 93       	push	r18
    5e40:	3f 93       	push	r19
    5e42:	4f 93       	push	r20
    5e44:	5f 93       	push	r21
    5e46:	6f 93       	push	r22
    5e48:	7f 93       	push	r23
    5e4a:	8f 93       	push	r24
    5e4c:	9f 93       	push	r25
    5e4e:	af 93       	push	r26
    5e50:	bf 93       	push	r27
    5e52:	ef 93       	push	r30
    5e54:	ff 93       	push	r31
  switch(TW_STATUS){
    5e56:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
    5e5a:	88 7f       	andi	r24, 0xF8	; 248
    5e5c:	80 36       	cpi	r24, 0x60	; 96
    5e5e:	09 f4       	brne	.+2      	; 0x5e62 <__vector_24+0x2e>
    5e60:	9e c0       	rjmp	.+316    	; 0x5f9e <__vector_24+0x16a>
    5e62:	78 f5       	brcc	.+94     	; 0x5ec2 <__vector_24+0x8e>
    5e64:	88 32       	cpi	r24, 0x28	; 40
    5e66:	09 f4       	brne	.+2      	; 0x5e6a <__vector_24+0x36>
    5e68:	5d c0       	rjmp	.+186    	; 0x5f24 <__vector_24+0xf0>
    5e6a:	90 f4       	brcc	.+36     	; 0x5e90 <__vector_24+0x5c>
    5e6c:	80 31       	cpi	r24, 0x10	; 16
    5e6e:	09 f4       	brne	.+2      	; 0x5e72 <__vector_24+0x3e>
    5e70:	56 c0       	rjmp	.+172    	; 0x5f1e <__vector_24+0xea>
    5e72:	38 f4       	brcc	.+14     	; 0x5e82 <__vector_24+0x4e>
    5e74:	88 23       	and	r24, r24
    5e76:	09 f4       	brne	.+2      	; 0x5e7a <__vector_24+0x46>
    5e78:	f5 c0       	rjmp	.+490    	; 0x6064 <__vector_24+0x230>
    5e7a:	88 30       	cpi	r24, 0x08	; 8
    5e7c:	09 f4       	brne	.+2      	; 0x5e80 <__vector_24+0x4c>
    5e7e:	4f c0       	rjmp	.+158    	; 0x5f1e <__vector_24+0xea>
    5e80:	f5 c0       	rjmp	.+490    	; 0x606c <__vector_24+0x238>
    5e82:	88 31       	cpi	r24, 0x18	; 24
    5e84:	09 f4       	brne	.+2      	; 0x5e88 <__vector_24+0x54>
    5e86:	4e c0       	rjmp	.+156    	; 0x5f24 <__vector_24+0xf0>
    5e88:	80 32       	cpi	r24, 0x20	; 32
    5e8a:	09 f4       	brne	.+2      	; 0x5e8e <__vector_24+0x5a>
    5e8c:	5f c0       	rjmp	.+190    	; 0x5f4c <__vector_24+0x118>
    5e8e:	ee c0       	rjmp	.+476    	; 0x606c <__vector_24+0x238>
    5e90:	80 34       	cpi	r24, 0x40	; 64
    5e92:	09 f4       	brne	.+2      	; 0x5e96 <__vector_24+0x62>
    5e94:	6a c0       	rjmp	.+212    	; 0x5f6a <__vector_24+0x136>
    5e96:	58 f4       	brcc	.+22     	; 0x5eae <__vector_24+0x7a>
    5e98:	80 33       	cpi	r24, 0x30	; 48
    5e9a:	09 f4       	brne	.+2      	; 0x5e9e <__vector_24+0x6a>
    5e9c:	57 c0       	rjmp	.+174    	; 0x5f4c <__vector_24+0x118>
    5e9e:	88 33       	cpi	r24, 0x38	; 56
    5ea0:	09 f0       	breq	.+2      	; 0x5ea4 <__vector_24+0x70>
    5ea2:	e4 c0       	rjmp	.+456    	; 0x606c <__vector_24+0x238>
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
    5ea4:	80 93 86 04 	sts	0x0486, r24	; 0x800486 <twi_error>
      twi_releaseBus();
    5ea8:	0e 94 ed 2c 	call	0x59da	; 0x59da <twi_releaseBus>
      break;
    5eac:	df c0       	rjmp	.+446    	; 0x606c <__vector_24+0x238>
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    5eae:	80 35       	cpi	r24, 0x50	; 80
    5eb0:	09 f4       	brne	.+2      	; 0x5eb4 <__vector_24+0x80>
    5eb2:	4f c0       	rjmp	.+158    	; 0x5f52 <__vector_24+0x11e>
    5eb4:	88 35       	cpi	r24, 0x58	; 88
    5eb6:	09 f4       	brne	.+2      	; 0x5eba <__vector_24+0x86>
    5eb8:	5d c0       	rjmp	.+186    	; 0x5f74 <__vector_24+0x140>
    5eba:	88 34       	cpi	r24, 0x48	; 72
    5ebc:	09 f0       	breq	.+2      	; 0x5ec0 <__vector_24+0x8c>
    5ebe:	d6 c0       	rjmp	.+428    	; 0x606c <__vector_24+0x238>
    5ec0:	d3 c0       	rjmp	.+422    	; 0x6068 <__vector_24+0x234>
    5ec2:	88 39       	cpi	r24, 0x98	; 152
    5ec4:	09 f4       	brne	.+2      	; 0x5ec8 <__vector_24+0x94>
    5ec6:	c4 c0       	rjmp	.+392    	; 0x6050 <__vector_24+0x21c>
    5ec8:	a8 f4       	brcc	.+42     	; 0x5ef4 <__vector_24+0xc0>
    5eca:	88 37       	cpi	r24, 0x78	; 120
    5ecc:	09 f4       	brne	.+2      	; 0x5ed0 <__vector_24+0x9c>
    5ece:	67 c0       	rjmp	.+206    	; 0x5f9e <__vector_24+0x16a>
    5ed0:	38 f4       	brcc	.+14     	; 0x5ee0 <__vector_24+0xac>
    5ed2:	88 36       	cpi	r24, 0x68	; 104
    5ed4:	09 f4       	brne	.+2      	; 0x5ed8 <__vector_24+0xa4>
    5ed6:	63 c0       	rjmp	.+198    	; 0x5f9e <__vector_24+0x16a>
    5ed8:	80 37       	cpi	r24, 0x70	; 112
    5eda:	09 f4       	brne	.+2      	; 0x5ede <__vector_24+0xaa>
    5edc:	60 c0       	rjmp	.+192    	; 0x5f9e <__vector_24+0x16a>
    5ede:	c6 c0       	rjmp	.+396    	; 0x606c <__vector_24+0x238>
    5ee0:	88 38       	cpi	r24, 0x88	; 136
    5ee2:	09 f4       	brne	.+2      	; 0x5ee6 <__vector_24+0xb2>
    5ee4:	b5 c0       	rjmp	.+362    	; 0x6050 <__vector_24+0x21c>
    5ee6:	80 39       	cpi	r24, 0x90	; 144
    5ee8:	09 f4       	brne	.+2      	; 0x5eec <__vector_24+0xb8>
    5eea:	5f c0       	rjmp	.+190    	; 0x5faa <__vector_24+0x176>
    5eec:	80 38       	cpi	r24, 0x80	; 128
    5eee:	09 f0       	breq	.+2      	; 0x5ef2 <__vector_24+0xbe>
    5ef0:	bd c0       	rjmp	.+378    	; 0x606c <__vector_24+0x238>
    5ef2:	5b c0       	rjmp	.+182    	; 0x5faa <__vector_24+0x176>
    5ef4:	80 3b       	cpi	r24, 0xB0	; 176
    5ef6:	09 f4       	brne	.+2      	; 0x5efa <__vector_24+0xc6>
    5ef8:	83 c0       	rjmp	.+262    	; 0x6000 <__vector_24+0x1cc>
    5efa:	38 f4       	brcc	.+14     	; 0x5f0a <__vector_24+0xd6>
    5efc:	80 3a       	cpi	r24, 0xA0	; 160
    5efe:	09 f4       	brne	.+2      	; 0x5f02 <__vector_24+0xce>
    5f00:	66 c0       	rjmp	.+204    	; 0x5fce <__vector_24+0x19a>
    5f02:	88 3a       	cpi	r24, 0xA8	; 168
    5f04:	09 f4       	brne	.+2      	; 0x5f08 <__vector_24+0xd4>
    5f06:	7c c0       	rjmp	.+248    	; 0x6000 <__vector_24+0x1cc>
    5f08:	b1 c0       	rjmp	.+354    	; 0x606c <__vector_24+0x238>
    5f0a:	80 3c       	cpi	r24, 0xC0	; 192
    5f0c:	09 f4       	brne	.+2      	; 0x5f10 <__vector_24+0xdc>
    5f0e:	a4 c0       	rjmp	.+328    	; 0x6058 <__vector_24+0x224>
    5f10:	88 3c       	cpi	r24, 0xC8	; 200
    5f12:	09 f4       	brne	.+2      	; 0x5f16 <__vector_24+0xe2>
    5f14:	a1 c0       	rjmp	.+322    	; 0x6058 <__vector_24+0x224>
    5f16:	88 3b       	cpi	r24, 0xB8	; 184
    5f18:	09 f4       	brne	.+2      	; 0x5f1c <__vector_24+0xe8>
    5f1a:	87 c0       	rjmp	.+270    	; 0x602a <__vector_24+0x1f6>
    5f1c:	a7 c0       	rjmp	.+334    	; 0x606c <__vector_24+0x238>
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
    5f1e:	80 91 f8 04 	lds	r24, 0x04F8	; 0x8004f8 <twi_slarw>
    5f22:	10 c0       	rjmp	.+32     	; 0x5f44 <__vector_24+0x110>

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
    5f24:	90 91 cb 04 	lds	r25, 0x04CB	; 0x8004cb <twi_masterBufferIndex>
    5f28:	80 91 ca 04 	lds	r24, 0x04CA	; 0x8004ca <twi_masterBufferLength>
    5f2c:	98 17       	cp	r25, r24
    5f2e:	70 f5       	brcc	.+92     	; 0x5f8c <__vector_24+0x158>
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    5f30:	e0 91 cb 04 	lds	r30, 0x04CB	; 0x8004cb <twi_masterBufferIndex>
    5f34:	81 e0       	ldi	r24, 0x01	; 1
    5f36:	8e 0f       	add	r24, r30
    5f38:	80 93 cb 04 	sts	0x04CB, r24	; 0x8004cb <twi_masterBufferIndex>
    5f3c:	f0 e0       	ldi	r31, 0x00	; 0
    5f3e:	e4 53       	subi	r30, 0x34	; 52
    5f40:	fb 4f       	sbci	r31, 0xFB	; 251
    5f42:	80 81       	ld	r24, Z
    5f44:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    5f48:	85 ec       	ldi	r24, 0xC5	; 197
    5f4a:	83 c0       	rjmp	.+262    	; 0x6052 <__vector_24+0x21e>
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
    5f4c:	80 93 86 04 	sts	0x0486, r24	; 0x800486 <twi_error>
    5f50:	8b c0       	rjmp	.+278    	; 0x6068 <__vector_24+0x234>
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    5f52:	e0 91 cb 04 	lds	r30, 0x04CB	; 0x8004cb <twi_masterBufferIndex>
    5f56:	81 e0       	ldi	r24, 0x01	; 1
    5f58:	8e 0f       	add	r24, r30
    5f5a:	80 93 cb 04 	sts	0x04CB, r24	; 0x8004cb <twi_masterBufferIndex>
    5f5e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    5f62:	f0 e0       	ldi	r31, 0x00	; 0
    5f64:	e4 53       	subi	r30, 0x34	; 52
    5f66:	fb 4f       	sbci	r31, 0xFB	; 251
    5f68:	80 83       	st	Z, r24
      __attribute__ ((fallthrough));
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
    5f6a:	90 91 cb 04 	lds	r25, 0x04CB	; 0x8004cb <twi_masterBufferIndex>
    5f6e:	80 91 ca 04 	lds	r24, 0x04CA	; 0x8004ca <twi_masterBufferLength>
    5f72:	6b c0       	rjmp	.+214    	; 0x604a <__vector_24+0x216>
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    5f74:	e0 91 cb 04 	lds	r30, 0x04CB	; 0x8004cb <twi_masterBufferIndex>
    5f78:	81 e0       	ldi	r24, 0x01	; 1
    5f7a:	8e 0f       	add	r24, r30
    5f7c:	80 93 cb 04 	sts	0x04CB, r24	; 0x8004cb <twi_masterBufferIndex>
    5f80:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    5f84:	f0 e0       	ldi	r31, 0x00	; 0
    5f86:	e4 53       	subi	r30, 0x34	; 52
    5f88:	fb 4f       	sbci	r31, 0xFB	; 251
    5f8a:	80 83       	st	Z, r24
      if (twi_sendStop){
    5f8c:	80 91 f7 04 	lds	r24, 0x04F7	; 0x8004f7 <twi_sendStop>
    5f90:	81 11       	cpse	r24, r1
    5f92:	6a c0       	rjmp	.+212    	; 0x6068 <__vector_24+0x234>
        twi_stop();
      } else {
        twi_inRepStart = true;	// we're gonna send the START
    5f94:	81 e0       	ldi	r24, 0x01	; 1
    5f96:	80 93 f6 04 	sts	0x04F6, r24	; 0x8004f6 <twi_inRepStart>
        // don't enable the interrupt. We'll generate the start, but we
        // avoid handling the interrupt until we're in the next transaction,
        // at the point where we would normally issue the start.
        TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    5f9a:	84 ea       	ldi	r24, 0xA4	; 164
    5f9c:	5e c0       	rjmp	.+188    	; 0x605a <__vector_24+0x226>
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
    5f9e:	83 e0       	ldi	r24, 0x03	; 3
    5fa0:	80 93 f9 04 	sts	0x04F9, r24	; 0x8004f9 <twi_state>
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
    5fa4:	10 92 87 04 	sts	0x0487, r1	; 0x800487 <twi_rxBufferIndex>
    5fa8:	cf cf       	rjmp	.-98     	; 0x5f48 <__vector_24+0x114>
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    5faa:	80 91 87 04 	lds	r24, 0x0487	; 0x800487 <twi_rxBufferIndex>
    5fae:	80 32       	cpi	r24, 0x20	; 32
    5fb0:	08 f0       	brcs	.+2      	; 0x5fb4 <__vector_24+0x180>
    5fb2:	4e c0       	rjmp	.+156    	; 0x6050 <__vector_24+0x21c>
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
    5fb4:	e0 91 87 04 	lds	r30, 0x0487	; 0x800487 <twi_rxBufferIndex>
    5fb8:	81 e0       	ldi	r24, 0x01	; 1
    5fba:	8e 0f       	add	r24, r30
    5fbc:	80 93 87 04 	sts	0x0487, r24	; 0x800487 <twi_rxBufferIndex>
    5fc0:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    5fc4:	f0 e0       	ldi	r31, 0x00	; 0
    5fc6:	e8 57       	subi	r30, 0x78	; 120
    5fc8:	fb 4f       	sbci	r31, 0xFB	; 251
    5fca:	80 83       	st	Z, r24
    5fcc:	bd cf       	rjmp	.-134    	; 0x5f48 <__vector_24+0x114>
        twi_reply(0);
      }
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
    5fce:	0e 94 ed 2c 	call	0x59da	; 0x59da <twi_releaseBus>
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    5fd2:	80 91 87 04 	lds	r24, 0x0487	; 0x800487 <twi_rxBufferIndex>
    5fd6:	80 32       	cpi	r24, 0x20	; 32
    5fd8:	30 f4       	brcc	.+12     	; 0x5fe6 <__vector_24+0x1b2>
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
    5fda:	e0 91 87 04 	lds	r30, 0x0487	; 0x800487 <twi_rxBufferIndex>
    5fde:	f0 e0       	ldi	r31, 0x00	; 0
    5fe0:	e8 57       	subi	r30, 0x78	; 120
    5fe2:	fb 4f       	sbci	r31, 0xFB	; 251
    5fe4:	10 82       	st	Z, r1
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
    5fe6:	60 91 87 04 	lds	r22, 0x0487	; 0x800487 <twi_rxBufferIndex>
    5fea:	70 e0       	ldi	r23, 0x00	; 0
    5fec:	e0 91 ec 04 	lds	r30, 0x04EC	; 0x8004ec <twi_onSlaveReceive>
    5ff0:	f0 91 ed 04 	lds	r31, 0x04ED	; 0x8004ed <twi_onSlaveReceive+0x1>
    5ff4:	88 e8       	ldi	r24, 0x88	; 136
    5ff6:	94 e0       	ldi	r25, 0x04	; 4
    5ff8:	09 95       	icall
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
    5ffa:	10 92 87 04 	sts	0x0487, r1	; 0x800487 <twi_rxBufferIndex>
      break;
    5ffe:	36 c0       	rjmp	.+108    	; 0x606c <__vector_24+0x238>
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
    6000:	84 e0       	ldi	r24, 0x04	; 4
    6002:	80 93 f9 04 	sts	0x04F9, r24	; 0x8004f9 <twi_state>
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
    6006:	10 92 a9 04 	sts	0x04A9, r1	; 0x8004a9 <twi_txBufferIndex>
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
    600a:	10 92 a8 04 	sts	0x04A8, r1	; 0x8004a8 <twi_txBufferLength>
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
    600e:	e0 91 ee 04 	lds	r30, 0x04EE	; 0x8004ee <twi_onSlaveTransmit>
    6012:	f0 91 ef 04 	lds	r31, 0x04EF	; 0x8004ef <twi_onSlaveTransmit+0x1>
    6016:	09 95       	icall
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
    6018:	80 91 a8 04 	lds	r24, 0x04A8	; 0x8004a8 <twi_txBufferLength>
    601c:	81 11       	cpse	r24, r1
    601e:	05 c0       	rjmp	.+10     	; 0x602a <__vector_24+0x1f6>
        twi_txBufferLength = 1;
    6020:	81 e0       	ldi	r24, 0x01	; 1
    6022:	80 93 a8 04 	sts	0x04A8, r24	; 0x8004a8 <twi_txBufferLength>
        twi_txBuffer[0] = 0x00;
    6026:	10 92 aa 04 	sts	0x04AA, r1	; 0x8004aa <twi_txBuffer>
      }
      __attribute__ ((fallthrough));		  
      // transmit first byte from buffer, fall
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
    602a:	e0 91 a9 04 	lds	r30, 0x04A9	; 0x8004a9 <twi_txBufferIndex>
    602e:	81 e0       	ldi	r24, 0x01	; 1
    6030:	8e 0f       	add	r24, r30
    6032:	80 93 a9 04 	sts	0x04A9, r24	; 0x8004a9 <twi_txBufferIndex>
    6036:	f0 e0       	ldi	r31, 0x00	; 0
    6038:	e6 55       	subi	r30, 0x56	; 86
    603a:	fb 4f       	sbci	r31, 0xFB	; 251
    603c:	80 81       	ld	r24, Z
    603e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    6042:	90 91 a9 04 	lds	r25, 0x04A9	; 0x8004a9 <twi_txBufferIndex>
    6046:	80 91 a8 04 	lds	r24, 0x04A8	; 0x8004a8 <twi_txBufferLength>
    604a:	98 17       	cp	r25, r24
    604c:	08 f4       	brcc	.+2      	; 0x6050 <__vector_24+0x21c>
    604e:	7c cf       	rjmp	.-264    	; 0x5f48 <__vector_24+0x114>
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    6050:	85 e8       	ldi	r24, 0x85	; 133
    6052:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    6056:	0a c0       	rjmp	.+20     	; 0x606c <__vector_24+0x238>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    6058:	85 ec       	ldi	r24, 0xC5	; 197
    605a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
    605e:	10 92 f9 04 	sts	0x04F9, r1	; 0x8004f9 <twi_state>
      break;
    6062:	04 c0       	rjmp	.+8      	; 0x606c <__vector_24+0x238>

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
    6064:	10 92 86 04 	sts	0x0486, r1	; 0x800486 <twi_error>
      twi_stop();
    6068:	0e 94 e2 2e 	call	0x5dc4	; 0x5dc4 <twi_stop>
      break;
  }
}
    606c:	ff 91       	pop	r31
    606e:	ef 91       	pop	r30
    6070:	bf 91       	pop	r27
    6072:	af 91       	pop	r26
    6074:	9f 91       	pop	r25
    6076:	8f 91       	pop	r24
    6078:	7f 91       	pop	r23
    607a:	6f 91       	pop	r22
    607c:	5f 91       	pop	r21
    607e:	4f 91       	pop	r20
    6080:	3f 91       	pop	r19
    6082:	2f 91       	pop	r18
    6084:	0f 90       	pop	r0
    6086:	0f be       	out	0x3f, r0	; 63
    6088:	0f 90       	pop	r0
    608a:	1f 90       	pop	r1
    608c:	18 95       	reti

0000608e <__cmpsf2>:
    608e:	0e 94 a2 16 	call	0x2d44	; 0x2d44 <__fp_cmp>
    6092:	08 f4       	brcc	.+2      	; 0x6096 <__cmpsf2+0x8>
    6094:	81 e0       	ldi	r24, 0x01	; 1
    6096:	08 95       	ret

00006098 <__mulsf3>:
    6098:	0e 94 5f 30 	call	0x60be	; 0x60be <__mulsf3x>
    609c:	0c 94 63 16 	jmp	0x2cc6	; 0x2cc6 <__fp_round>
    60a0:	0e 94 55 16 	call	0x2caa	; 0x2caa <__fp_pscA>
    60a4:	38 f0       	brcs	.+14     	; 0x60b4 <__mulsf3+0x1c>
    60a6:	0e 94 5c 16 	call	0x2cb8	; 0x2cb8 <__fp_pscB>
    60aa:	20 f0       	brcs	.+8      	; 0x60b4 <__mulsf3+0x1c>
    60ac:	95 23       	and	r25, r21
    60ae:	11 f0       	breq	.+4      	; 0x60b4 <__mulsf3+0x1c>
    60b0:	0c 94 4c 16 	jmp	0x2c98	; 0x2c98 <__fp_inf>
    60b4:	0c 94 52 16 	jmp	0x2ca4	; 0x2ca4 <__fp_nan>
    60b8:	11 24       	eor	r1, r1
    60ba:	0c 94 97 16 	jmp	0x2d2e	; 0x2d2e <__fp_szero>

000060be <__mulsf3x>:
    60be:	0e 94 74 16 	call	0x2ce8	; 0x2ce8 <__fp_split3>
    60c2:	70 f3       	brcs	.-36     	; 0x60a0 <__mulsf3+0x8>

000060c4 <__mulsf3_pse>:
    60c4:	95 9f       	mul	r25, r21
    60c6:	c1 f3       	breq	.-16     	; 0x60b8 <__mulsf3+0x20>
    60c8:	95 0f       	add	r25, r21
    60ca:	50 e0       	ldi	r21, 0x00	; 0
    60cc:	55 1f       	adc	r21, r21
    60ce:	62 9f       	mul	r22, r18
    60d0:	f0 01       	movw	r30, r0
    60d2:	72 9f       	mul	r23, r18
    60d4:	bb 27       	eor	r27, r27
    60d6:	f0 0d       	add	r31, r0
    60d8:	b1 1d       	adc	r27, r1
    60da:	63 9f       	mul	r22, r19
    60dc:	aa 27       	eor	r26, r26
    60de:	f0 0d       	add	r31, r0
    60e0:	b1 1d       	adc	r27, r1
    60e2:	aa 1f       	adc	r26, r26
    60e4:	64 9f       	mul	r22, r20
    60e6:	66 27       	eor	r22, r22
    60e8:	b0 0d       	add	r27, r0
    60ea:	a1 1d       	adc	r26, r1
    60ec:	66 1f       	adc	r22, r22
    60ee:	82 9f       	mul	r24, r18
    60f0:	22 27       	eor	r18, r18
    60f2:	b0 0d       	add	r27, r0
    60f4:	a1 1d       	adc	r26, r1
    60f6:	62 1f       	adc	r22, r18
    60f8:	73 9f       	mul	r23, r19
    60fa:	b0 0d       	add	r27, r0
    60fc:	a1 1d       	adc	r26, r1
    60fe:	62 1f       	adc	r22, r18
    6100:	83 9f       	mul	r24, r19
    6102:	a0 0d       	add	r26, r0
    6104:	61 1d       	adc	r22, r1
    6106:	22 1f       	adc	r18, r18
    6108:	74 9f       	mul	r23, r20
    610a:	33 27       	eor	r19, r19
    610c:	a0 0d       	add	r26, r0
    610e:	61 1d       	adc	r22, r1
    6110:	23 1f       	adc	r18, r19
    6112:	84 9f       	mul	r24, r20
    6114:	60 0d       	add	r22, r0
    6116:	21 1d       	adc	r18, r1
    6118:	82 2f       	mov	r24, r18
    611a:	76 2f       	mov	r23, r22
    611c:	6a 2f       	mov	r22, r26
    611e:	11 24       	eor	r1, r1
    6120:	9f 57       	subi	r25, 0x7F	; 127
    6122:	50 40       	sbci	r21, 0x00	; 0
    6124:	9a f0       	brmi	.+38     	; 0x614c <__mulsf3_pse+0x88>
    6126:	f1 f0       	breq	.+60     	; 0x6164 <__mulsf3_pse+0xa0>
    6128:	88 23       	and	r24, r24
    612a:	4a f0       	brmi	.+18     	; 0x613e <__mulsf3_pse+0x7a>
    612c:	ee 0f       	add	r30, r30
    612e:	ff 1f       	adc	r31, r31
    6130:	bb 1f       	adc	r27, r27
    6132:	66 1f       	adc	r22, r22
    6134:	77 1f       	adc	r23, r23
    6136:	88 1f       	adc	r24, r24
    6138:	91 50       	subi	r25, 0x01	; 1
    613a:	50 40       	sbci	r21, 0x00	; 0
    613c:	a9 f7       	brne	.-22     	; 0x6128 <__mulsf3_pse+0x64>
    613e:	9e 3f       	cpi	r25, 0xFE	; 254
    6140:	51 05       	cpc	r21, r1
    6142:	80 f0       	brcs	.+32     	; 0x6164 <__mulsf3_pse+0xa0>
    6144:	0c 94 4c 16 	jmp	0x2c98	; 0x2c98 <__fp_inf>
    6148:	0c 94 97 16 	jmp	0x2d2e	; 0x2d2e <__fp_szero>
    614c:	5f 3f       	cpi	r21, 0xFF	; 255
    614e:	e4 f3       	brlt	.-8      	; 0x6148 <__mulsf3_pse+0x84>
    6150:	98 3e       	cpi	r25, 0xE8	; 232
    6152:	d4 f3       	brlt	.-12     	; 0x6148 <__mulsf3_pse+0x84>
    6154:	86 95       	lsr	r24
    6156:	77 95       	ror	r23
    6158:	67 95       	ror	r22
    615a:	b7 95       	ror	r27
    615c:	f7 95       	ror	r31
    615e:	e7 95       	ror	r30
    6160:	9f 5f       	subi	r25, 0xFF	; 255
    6162:	c1 f7       	brne	.-16     	; 0x6154 <__mulsf3_pse+0x90>
    6164:	fe 2b       	or	r31, r30
    6166:	88 0f       	add	r24, r24
    6168:	91 1d       	adc	r25, r1
    616a:	96 95       	lsr	r25
    616c:	87 95       	ror	r24
    616e:	97 f9       	bld	r25, 7
    6170:	08 95       	ret

00006172 <__unordsf2>:
    6172:	0e 94 a2 16 	call	0x2d44	; 0x2d44 <__fp_cmp>
    6176:	88 0b       	sbc	r24, r24
    6178:	99 0b       	sbc	r25, r25
    617a:	08 95       	ret

0000617c <__mulsi3>:
    617c:	db 01       	movw	r26, r22
    617e:	8f 93       	push	r24
    6180:	9f 93       	push	r25
    6182:	0e 94 29 31 	call	0x6252	; 0x6252 <__muluhisi3>
    6186:	bf 91       	pop	r27
    6188:	af 91       	pop	r26
    618a:	a2 9f       	mul	r26, r18
    618c:	80 0d       	add	r24, r0
    618e:	91 1d       	adc	r25, r1
    6190:	a3 9f       	mul	r26, r19
    6192:	90 0d       	add	r25, r0
    6194:	b2 9f       	mul	r27, r18
    6196:	90 0d       	add	r25, r0
    6198:	11 24       	eor	r1, r1
    619a:	08 95       	ret

0000619c <__divmodhi4>:
    619c:	97 fb       	bst	r25, 7
    619e:	07 2e       	mov	r0, r23
    61a0:	16 f4       	brtc	.+4      	; 0x61a6 <__divmodhi4+0xa>
    61a2:	00 94       	com	r0
    61a4:	07 d0       	rcall	.+14     	; 0x61b4 <__divmodhi4_neg1>
    61a6:	77 fd       	sbrc	r23, 7
    61a8:	09 d0       	rcall	.+18     	; 0x61bc <__divmodhi4_neg2>
    61aa:	0e 94 34 31 	call	0x6268	; 0x6268 <__udivmodhi4>
    61ae:	07 fc       	sbrc	r0, 7
    61b0:	05 d0       	rcall	.+10     	; 0x61bc <__divmodhi4_neg2>
    61b2:	3e f4       	brtc	.+14     	; 0x61c2 <__divmodhi4_exit>

000061b4 <__divmodhi4_neg1>:
    61b4:	90 95       	com	r25
    61b6:	81 95       	neg	r24
    61b8:	9f 4f       	sbci	r25, 0xFF	; 255
    61ba:	08 95       	ret

000061bc <__divmodhi4_neg2>:
    61bc:	70 95       	com	r23
    61be:	61 95       	neg	r22
    61c0:	7f 4f       	sbci	r23, 0xFF	; 255

000061c2 <__divmodhi4_exit>:
    61c2:	08 95       	ret

000061c4 <__udivmodsi4>:
    61c4:	a1 e2       	ldi	r26, 0x21	; 33
    61c6:	1a 2e       	mov	r1, r26
    61c8:	aa 1b       	sub	r26, r26
    61ca:	bb 1b       	sub	r27, r27
    61cc:	fd 01       	movw	r30, r26
    61ce:	0d c0       	rjmp	.+26     	; 0x61ea <__udivmodsi4_ep>

000061d0 <__udivmodsi4_loop>:
    61d0:	aa 1f       	adc	r26, r26
    61d2:	bb 1f       	adc	r27, r27
    61d4:	ee 1f       	adc	r30, r30
    61d6:	ff 1f       	adc	r31, r31
    61d8:	a2 17       	cp	r26, r18
    61da:	b3 07       	cpc	r27, r19
    61dc:	e4 07       	cpc	r30, r20
    61de:	f5 07       	cpc	r31, r21
    61e0:	20 f0       	brcs	.+8      	; 0x61ea <__udivmodsi4_ep>
    61e2:	a2 1b       	sub	r26, r18
    61e4:	b3 0b       	sbc	r27, r19
    61e6:	e4 0b       	sbc	r30, r20
    61e8:	f5 0b       	sbc	r31, r21

000061ea <__udivmodsi4_ep>:
    61ea:	66 1f       	adc	r22, r22
    61ec:	77 1f       	adc	r23, r23
    61ee:	88 1f       	adc	r24, r24
    61f0:	99 1f       	adc	r25, r25
    61f2:	1a 94       	dec	r1
    61f4:	69 f7       	brne	.-38     	; 0x61d0 <__udivmodsi4_loop>
    61f6:	60 95       	com	r22
    61f8:	70 95       	com	r23
    61fa:	80 95       	com	r24
    61fc:	90 95       	com	r25
    61fe:	9b 01       	movw	r18, r22
    6200:	ac 01       	movw	r20, r24
    6202:	bd 01       	movw	r22, r26
    6204:	cf 01       	movw	r24, r30
    6206:	08 95       	ret

00006208 <__divmodsi4>:
    6208:	05 2e       	mov	r0, r21
    620a:	97 fb       	bst	r25, 7
    620c:	1e f4       	brtc	.+6      	; 0x6214 <__divmodsi4+0xc>
    620e:	00 94       	com	r0
    6210:	0e 94 1b 31 	call	0x6236	; 0x6236 <__negsi2>
    6214:	57 fd       	sbrc	r21, 7
    6216:	07 d0       	rcall	.+14     	; 0x6226 <__divmodsi4_neg2>
    6218:	0e 94 e2 30 	call	0x61c4	; 0x61c4 <__udivmodsi4>
    621c:	07 fc       	sbrc	r0, 7
    621e:	03 d0       	rcall	.+6      	; 0x6226 <__divmodsi4_neg2>
    6220:	4e f4       	brtc	.+18     	; 0x6234 <__divmodsi4_exit>
    6222:	0c 94 1b 31 	jmp	0x6236	; 0x6236 <__negsi2>

00006226 <__divmodsi4_neg2>:
    6226:	50 95       	com	r21
    6228:	40 95       	com	r20
    622a:	30 95       	com	r19
    622c:	21 95       	neg	r18
    622e:	3f 4f       	sbci	r19, 0xFF	; 255
    6230:	4f 4f       	sbci	r20, 0xFF	; 255
    6232:	5f 4f       	sbci	r21, 0xFF	; 255

00006234 <__divmodsi4_exit>:
    6234:	08 95       	ret

00006236 <__negsi2>:
    6236:	90 95       	com	r25
    6238:	80 95       	com	r24
    623a:	70 95       	com	r23
    623c:	61 95       	neg	r22
    623e:	7f 4f       	sbci	r23, 0xFF	; 255
    6240:	8f 4f       	sbci	r24, 0xFF	; 255
    6242:	9f 4f       	sbci	r25, 0xFF	; 255
    6244:	08 95       	ret

00006246 <__tablejump2__>:
    6246:	ee 0f       	add	r30, r30
    6248:	ff 1f       	adc	r31, r31
    624a:	05 90       	lpm	r0, Z+
    624c:	f4 91       	lpm	r31, Z
    624e:	e0 2d       	mov	r30, r0
    6250:	09 94       	ijmp

00006252 <__muluhisi3>:
    6252:	0e 94 48 31 	call	0x6290	; 0x6290 <__umulhisi3>
    6256:	a5 9f       	mul	r26, r21
    6258:	90 0d       	add	r25, r0
    625a:	b4 9f       	mul	r27, r20
    625c:	90 0d       	add	r25, r0
    625e:	a4 9f       	mul	r26, r20
    6260:	80 0d       	add	r24, r0
    6262:	91 1d       	adc	r25, r1
    6264:	11 24       	eor	r1, r1
    6266:	08 95       	ret

00006268 <__udivmodhi4>:
    6268:	aa 1b       	sub	r26, r26
    626a:	bb 1b       	sub	r27, r27
    626c:	51 e1       	ldi	r21, 0x11	; 17
    626e:	07 c0       	rjmp	.+14     	; 0x627e <__udivmodhi4_ep>

00006270 <__udivmodhi4_loop>:
    6270:	aa 1f       	adc	r26, r26
    6272:	bb 1f       	adc	r27, r27
    6274:	a6 17       	cp	r26, r22
    6276:	b7 07       	cpc	r27, r23
    6278:	10 f0       	brcs	.+4      	; 0x627e <__udivmodhi4_ep>
    627a:	a6 1b       	sub	r26, r22
    627c:	b7 0b       	sbc	r27, r23

0000627e <__udivmodhi4_ep>:
    627e:	88 1f       	adc	r24, r24
    6280:	99 1f       	adc	r25, r25
    6282:	5a 95       	dec	r21
    6284:	a9 f7       	brne	.-22     	; 0x6270 <__udivmodhi4_loop>
    6286:	80 95       	com	r24
    6288:	90 95       	com	r25
    628a:	bc 01       	movw	r22, r24
    628c:	cd 01       	movw	r24, r26
    628e:	08 95       	ret

00006290 <__umulhisi3>:
    6290:	a2 9f       	mul	r26, r18
    6292:	b0 01       	movw	r22, r0
    6294:	b3 9f       	mul	r27, r19
    6296:	c0 01       	movw	r24, r0
    6298:	a3 9f       	mul	r26, r19
    629a:	70 0d       	add	r23, r0
    629c:	81 1d       	adc	r24, r1
    629e:	11 24       	eor	r1, r1
    62a0:	91 1d       	adc	r25, r1
    62a2:	b2 9f       	mul	r27, r18
    62a4:	70 0d       	add	r23, r0
    62a6:	81 1d       	adc	r24, r1
    62a8:	11 24       	eor	r1, r1
    62aa:	91 1d       	adc	r25, r1
    62ac:	08 95       	ret

000062ae <dtostrf>:
    62ae:	ef 92       	push	r14
    62b0:	0f 93       	push	r16
    62b2:	1f 93       	push	r17
    62b4:	cf 93       	push	r28
    62b6:	df 93       	push	r29
    62b8:	e8 01       	movw	r28, r16
    62ba:	47 fd       	sbrc	r20, 7
    62bc:	02 c0       	rjmp	.+4      	; 0x62c2 <dtostrf+0x14>
    62be:	34 e0       	ldi	r19, 0x04	; 4
    62c0:	01 c0       	rjmp	.+2      	; 0x62c4 <dtostrf+0x16>
    62c2:	34 e1       	ldi	r19, 0x14	; 20
    62c4:	04 2e       	mov	r0, r20
    62c6:	00 0c       	add	r0, r0
    62c8:	55 0b       	sbc	r21, r21
    62ca:	57 ff       	sbrs	r21, 7
    62cc:	03 c0       	rjmp	.+6      	; 0x62d4 <dtostrf+0x26>
    62ce:	51 95       	neg	r21
    62d0:	41 95       	neg	r20
    62d2:	51 09       	sbc	r21, r1
    62d4:	e3 2e       	mov	r14, r19
    62d6:	02 2f       	mov	r16, r18
    62d8:	24 2f       	mov	r18, r20
    62da:	ae 01       	movw	r20, r28
    62dc:	0e 94 71 35 	call	0x6ae2	; 0x6ae2 <dtoa_prf>
    62e0:	ce 01       	movw	r24, r28
    62e2:	df 91       	pop	r29
    62e4:	cf 91       	pop	r28
    62e6:	1f 91       	pop	r17
    62e8:	0f 91       	pop	r16
    62ea:	ef 90       	pop	r14
    62ec:	08 95       	ret

000062ee <malloc>:
    62ee:	0f 93       	push	r16
    62f0:	1f 93       	push	r17
    62f2:	cf 93       	push	r28
    62f4:	df 93       	push	r29
    62f6:	82 30       	cpi	r24, 0x02	; 2
    62f8:	91 05       	cpc	r25, r1
    62fa:	10 f4       	brcc	.+4      	; 0x6300 <malloc+0x12>
    62fc:	82 e0       	ldi	r24, 0x02	; 2
    62fe:	90 e0       	ldi	r25, 0x00	; 0
    6300:	e0 91 fc 04 	lds	r30, 0x04FC	; 0x8004fc <__flp>
    6304:	f0 91 fd 04 	lds	r31, 0x04FD	; 0x8004fd <__flp+0x1>
    6308:	20 e0       	ldi	r18, 0x00	; 0
    630a:	30 e0       	ldi	r19, 0x00	; 0
    630c:	a0 e0       	ldi	r26, 0x00	; 0
    630e:	b0 e0       	ldi	r27, 0x00	; 0
    6310:	30 97       	sbiw	r30, 0x00	; 0
    6312:	19 f1       	breq	.+70     	; 0x635a <malloc+0x6c>
    6314:	40 81       	ld	r20, Z
    6316:	51 81       	ldd	r21, Z+1	; 0x01
    6318:	02 81       	ldd	r16, Z+2	; 0x02
    631a:	13 81       	ldd	r17, Z+3	; 0x03
    631c:	48 17       	cp	r20, r24
    631e:	59 07       	cpc	r21, r25
    6320:	c8 f0       	brcs	.+50     	; 0x6354 <malloc+0x66>
    6322:	84 17       	cp	r24, r20
    6324:	95 07       	cpc	r25, r21
    6326:	69 f4       	brne	.+26     	; 0x6342 <malloc+0x54>
    6328:	10 97       	sbiw	r26, 0x00	; 0
    632a:	31 f0       	breq	.+12     	; 0x6338 <malloc+0x4a>
    632c:	12 96       	adiw	r26, 0x02	; 2
    632e:	0c 93       	st	X, r16
    6330:	12 97       	sbiw	r26, 0x02	; 2
    6332:	13 96       	adiw	r26, 0x03	; 3
    6334:	1c 93       	st	X, r17
    6336:	27 c0       	rjmp	.+78     	; 0x6386 <malloc+0x98>
    6338:	00 93 fc 04 	sts	0x04FC, r16	; 0x8004fc <__flp>
    633c:	10 93 fd 04 	sts	0x04FD, r17	; 0x8004fd <__flp+0x1>
    6340:	22 c0       	rjmp	.+68     	; 0x6386 <malloc+0x98>
    6342:	21 15       	cp	r18, r1
    6344:	31 05       	cpc	r19, r1
    6346:	19 f0       	breq	.+6      	; 0x634e <malloc+0x60>
    6348:	42 17       	cp	r20, r18
    634a:	53 07       	cpc	r21, r19
    634c:	18 f4       	brcc	.+6      	; 0x6354 <malloc+0x66>
    634e:	9a 01       	movw	r18, r20
    6350:	bd 01       	movw	r22, r26
    6352:	ef 01       	movw	r28, r30
    6354:	df 01       	movw	r26, r30
    6356:	f8 01       	movw	r30, r16
    6358:	db cf       	rjmp	.-74     	; 0x6310 <malloc+0x22>
    635a:	21 15       	cp	r18, r1
    635c:	31 05       	cpc	r19, r1
    635e:	f9 f0       	breq	.+62     	; 0x639e <malloc+0xb0>
    6360:	28 1b       	sub	r18, r24
    6362:	39 0b       	sbc	r19, r25
    6364:	24 30       	cpi	r18, 0x04	; 4
    6366:	31 05       	cpc	r19, r1
    6368:	80 f4       	brcc	.+32     	; 0x638a <malloc+0x9c>
    636a:	8a 81       	ldd	r24, Y+2	; 0x02
    636c:	9b 81       	ldd	r25, Y+3	; 0x03
    636e:	61 15       	cp	r22, r1
    6370:	71 05       	cpc	r23, r1
    6372:	21 f0       	breq	.+8      	; 0x637c <malloc+0x8e>
    6374:	fb 01       	movw	r30, r22
    6376:	93 83       	std	Z+3, r25	; 0x03
    6378:	82 83       	std	Z+2, r24	; 0x02
    637a:	04 c0       	rjmp	.+8      	; 0x6384 <malloc+0x96>
    637c:	90 93 fd 04 	sts	0x04FD, r25	; 0x8004fd <__flp+0x1>
    6380:	80 93 fc 04 	sts	0x04FC, r24	; 0x8004fc <__flp>
    6384:	fe 01       	movw	r30, r28
    6386:	32 96       	adiw	r30, 0x02	; 2
    6388:	44 c0       	rjmp	.+136    	; 0x6412 <malloc+0x124>
    638a:	fe 01       	movw	r30, r28
    638c:	e2 0f       	add	r30, r18
    638e:	f3 1f       	adc	r31, r19
    6390:	81 93       	st	Z+, r24
    6392:	91 93       	st	Z+, r25
    6394:	22 50       	subi	r18, 0x02	; 2
    6396:	31 09       	sbc	r19, r1
    6398:	39 83       	std	Y+1, r19	; 0x01
    639a:	28 83       	st	Y, r18
    639c:	3a c0       	rjmp	.+116    	; 0x6412 <malloc+0x124>
    639e:	20 91 fa 04 	lds	r18, 0x04FA	; 0x8004fa <__brkval>
    63a2:	30 91 fb 04 	lds	r19, 0x04FB	; 0x8004fb <__brkval+0x1>
    63a6:	23 2b       	or	r18, r19
    63a8:	41 f4       	brne	.+16     	; 0x63ba <malloc+0xcc>
    63aa:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    63ae:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    63b2:	30 93 fb 04 	sts	0x04FB, r19	; 0x8004fb <__brkval+0x1>
    63b6:	20 93 fa 04 	sts	0x04FA, r18	; 0x8004fa <__brkval>
    63ba:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    63be:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    63c2:	21 15       	cp	r18, r1
    63c4:	31 05       	cpc	r19, r1
    63c6:	41 f4       	brne	.+16     	; 0x63d8 <malloc+0xea>
    63c8:	2d b7       	in	r18, 0x3d	; 61
    63ca:	3e b7       	in	r19, 0x3e	; 62
    63cc:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    63d0:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    63d4:	24 1b       	sub	r18, r20
    63d6:	35 0b       	sbc	r19, r21
    63d8:	e0 91 fa 04 	lds	r30, 0x04FA	; 0x8004fa <__brkval>
    63dc:	f0 91 fb 04 	lds	r31, 0x04FB	; 0x8004fb <__brkval+0x1>
    63e0:	e2 17       	cp	r30, r18
    63e2:	f3 07       	cpc	r31, r19
    63e4:	a0 f4       	brcc	.+40     	; 0x640e <malloc+0x120>
    63e6:	2e 1b       	sub	r18, r30
    63e8:	3f 0b       	sbc	r19, r31
    63ea:	28 17       	cp	r18, r24
    63ec:	39 07       	cpc	r19, r25
    63ee:	78 f0       	brcs	.+30     	; 0x640e <malloc+0x120>
    63f0:	ac 01       	movw	r20, r24
    63f2:	4e 5f       	subi	r20, 0xFE	; 254
    63f4:	5f 4f       	sbci	r21, 0xFF	; 255
    63f6:	24 17       	cp	r18, r20
    63f8:	35 07       	cpc	r19, r21
    63fa:	48 f0       	brcs	.+18     	; 0x640e <malloc+0x120>
    63fc:	4e 0f       	add	r20, r30
    63fe:	5f 1f       	adc	r21, r31
    6400:	50 93 fb 04 	sts	0x04FB, r21	; 0x8004fb <__brkval+0x1>
    6404:	40 93 fa 04 	sts	0x04FA, r20	; 0x8004fa <__brkval>
    6408:	81 93       	st	Z+, r24
    640a:	91 93       	st	Z+, r25
    640c:	02 c0       	rjmp	.+4      	; 0x6412 <malloc+0x124>
    640e:	e0 e0       	ldi	r30, 0x00	; 0
    6410:	f0 e0       	ldi	r31, 0x00	; 0
    6412:	cf 01       	movw	r24, r30
    6414:	df 91       	pop	r29
    6416:	cf 91       	pop	r28
    6418:	1f 91       	pop	r17
    641a:	0f 91       	pop	r16
    641c:	08 95       	ret

0000641e <free>:
    641e:	cf 93       	push	r28
    6420:	df 93       	push	r29
    6422:	00 97       	sbiw	r24, 0x00	; 0
    6424:	09 f4       	brne	.+2      	; 0x6428 <free+0xa>
    6426:	81 c0       	rjmp	.+258    	; 0x652a <free+0x10c>
    6428:	fc 01       	movw	r30, r24
    642a:	32 97       	sbiw	r30, 0x02	; 2
    642c:	13 82       	std	Z+3, r1	; 0x03
    642e:	12 82       	std	Z+2, r1	; 0x02
    6430:	a0 91 fc 04 	lds	r26, 0x04FC	; 0x8004fc <__flp>
    6434:	b0 91 fd 04 	lds	r27, 0x04FD	; 0x8004fd <__flp+0x1>
    6438:	10 97       	sbiw	r26, 0x00	; 0
    643a:	81 f4       	brne	.+32     	; 0x645c <free+0x3e>
    643c:	20 81       	ld	r18, Z
    643e:	31 81       	ldd	r19, Z+1	; 0x01
    6440:	82 0f       	add	r24, r18
    6442:	93 1f       	adc	r25, r19
    6444:	20 91 fa 04 	lds	r18, 0x04FA	; 0x8004fa <__brkval>
    6448:	30 91 fb 04 	lds	r19, 0x04FB	; 0x8004fb <__brkval+0x1>
    644c:	28 17       	cp	r18, r24
    644e:	39 07       	cpc	r19, r25
    6450:	51 f5       	brne	.+84     	; 0x64a6 <free+0x88>
    6452:	f0 93 fb 04 	sts	0x04FB, r31	; 0x8004fb <__brkval+0x1>
    6456:	e0 93 fa 04 	sts	0x04FA, r30	; 0x8004fa <__brkval>
    645a:	67 c0       	rjmp	.+206    	; 0x652a <free+0x10c>
    645c:	ed 01       	movw	r28, r26
    645e:	20 e0       	ldi	r18, 0x00	; 0
    6460:	30 e0       	ldi	r19, 0x00	; 0
    6462:	ce 17       	cp	r28, r30
    6464:	df 07       	cpc	r29, r31
    6466:	40 f4       	brcc	.+16     	; 0x6478 <free+0x5a>
    6468:	4a 81       	ldd	r20, Y+2	; 0x02
    646a:	5b 81       	ldd	r21, Y+3	; 0x03
    646c:	9e 01       	movw	r18, r28
    646e:	41 15       	cp	r20, r1
    6470:	51 05       	cpc	r21, r1
    6472:	f1 f0       	breq	.+60     	; 0x64b0 <free+0x92>
    6474:	ea 01       	movw	r28, r20
    6476:	f5 cf       	rjmp	.-22     	; 0x6462 <free+0x44>
    6478:	d3 83       	std	Z+3, r29	; 0x03
    647a:	c2 83       	std	Z+2, r28	; 0x02
    647c:	40 81       	ld	r20, Z
    647e:	51 81       	ldd	r21, Z+1	; 0x01
    6480:	84 0f       	add	r24, r20
    6482:	95 1f       	adc	r25, r21
    6484:	c8 17       	cp	r28, r24
    6486:	d9 07       	cpc	r29, r25
    6488:	59 f4       	brne	.+22     	; 0x64a0 <free+0x82>
    648a:	88 81       	ld	r24, Y
    648c:	99 81       	ldd	r25, Y+1	; 0x01
    648e:	84 0f       	add	r24, r20
    6490:	95 1f       	adc	r25, r21
    6492:	02 96       	adiw	r24, 0x02	; 2
    6494:	91 83       	std	Z+1, r25	; 0x01
    6496:	80 83       	st	Z, r24
    6498:	8a 81       	ldd	r24, Y+2	; 0x02
    649a:	9b 81       	ldd	r25, Y+3	; 0x03
    649c:	93 83       	std	Z+3, r25	; 0x03
    649e:	82 83       	std	Z+2, r24	; 0x02
    64a0:	21 15       	cp	r18, r1
    64a2:	31 05       	cpc	r19, r1
    64a4:	29 f4       	brne	.+10     	; 0x64b0 <free+0x92>
    64a6:	f0 93 fd 04 	sts	0x04FD, r31	; 0x8004fd <__flp+0x1>
    64aa:	e0 93 fc 04 	sts	0x04FC, r30	; 0x8004fc <__flp>
    64ae:	3d c0       	rjmp	.+122    	; 0x652a <free+0x10c>
    64b0:	e9 01       	movw	r28, r18
    64b2:	fb 83       	std	Y+3, r31	; 0x03
    64b4:	ea 83       	std	Y+2, r30	; 0x02
    64b6:	49 91       	ld	r20, Y+
    64b8:	59 91       	ld	r21, Y+
    64ba:	c4 0f       	add	r28, r20
    64bc:	d5 1f       	adc	r29, r21
    64be:	ec 17       	cp	r30, r28
    64c0:	fd 07       	cpc	r31, r29
    64c2:	61 f4       	brne	.+24     	; 0x64dc <free+0xbe>
    64c4:	80 81       	ld	r24, Z
    64c6:	91 81       	ldd	r25, Z+1	; 0x01
    64c8:	84 0f       	add	r24, r20
    64ca:	95 1f       	adc	r25, r21
    64cc:	02 96       	adiw	r24, 0x02	; 2
    64ce:	e9 01       	movw	r28, r18
    64d0:	99 83       	std	Y+1, r25	; 0x01
    64d2:	88 83       	st	Y, r24
    64d4:	82 81       	ldd	r24, Z+2	; 0x02
    64d6:	93 81       	ldd	r25, Z+3	; 0x03
    64d8:	9b 83       	std	Y+3, r25	; 0x03
    64da:	8a 83       	std	Y+2, r24	; 0x02
    64dc:	e0 e0       	ldi	r30, 0x00	; 0
    64de:	f0 e0       	ldi	r31, 0x00	; 0
    64e0:	12 96       	adiw	r26, 0x02	; 2
    64e2:	8d 91       	ld	r24, X+
    64e4:	9c 91       	ld	r25, X
    64e6:	13 97       	sbiw	r26, 0x03	; 3
    64e8:	00 97       	sbiw	r24, 0x00	; 0
    64ea:	19 f0       	breq	.+6      	; 0x64f2 <free+0xd4>
    64ec:	fd 01       	movw	r30, r26
    64ee:	dc 01       	movw	r26, r24
    64f0:	f7 cf       	rjmp	.-18     	; 0x64e0 <free+0xc2>
    64f2:	8d 91       	ld	r24, X+
    64f4:	9c 91       	ld	r25, X
    64f6:	11 97       	sbiw	r26, 0x01	; 1
    64f8:	9d 01       	movw	r18, r26
    64fa:	2e 5f       	subi	r18, 0xFE	; 254
    64fc:	3f 4f       	sbci	r19, 0xFF	; 255
    64fe:	82 0f       	add	r24, r18
    6500:	93 1f       	adc	r25, r19
    6502:	20 91 fa 04 	lds	r18, 0x04FA	; 0x8004fa <__brkval>
    6506:	30 91 fb 04 	lds	r19, 0x04FB	; 0x8004fb <__brkval+0x1>
    650a:	28 17       	cp	r18, r24
    650c:	39 07       	cpc	r19, r25
    650e:	69 f4       	brne	.+26     	; 0x652a <free+0x10c>
    6510:	30 97       	sbiw	r30, 0x00	; 0
    6512:	29 f4       	brne	.+10     	; 0x651e <free+0x100>
    6514:	10 92 fd 04 	sts	0x04FD, r1	; 0x8004fd <__flp+0x1>
    6518:	10 92 fc 04 	sts	0x04FC, r1	; 0x8004fc <__flp>
    651c:	02 c0       	rjmp	.+4      	; 0x6522 <free+0x104>
    651e:	13 82       	std	Z+3, r1	; 0x03
    6520:	12 82       	std	Z+2, r1	; 0x02
    6522:	b0 93 fb 04 	sts	0x04FB, r27	; 0x8004fb <__brkval+0x1>
    6526:	a0 93 fa 04 	sts	0x04FA, r26	; 0x8004fa <__brkval>
    652a:	df 91       	pop	r29
    652c:	cf 91       	pop	r28
    652e:	08 95       	ret

00006530 <realloc>:
    6530:	a0 e0       	ldi	r26, 0x00	; 0
    6532:	b0 e0       	ldi	r27, 0x00	; 0
    6534:	ee e9       	ldi	r30, 0x9E	; 158
    6536:	f2 e3       	ldi	r31, 0x32	; 50
    6538:	0c 94 57 38 	jmp	0x70ae	; 0x70ae <__prologue_saves__+0x8>
    653c:	ec 01       	movw	r28, r24
    653e:	00 97       	sbiw	r24, 0x00	; 0
    6540:	21 f4       	brne	.+8      	; 0x654a <realloc+0x1a>
    6542:	cb 01       	movw	r24, r22
    6544:	0e 94 77 31 	call	0x62ee	; 0x62ee <malloc>
    6548:	b4 c0       	rjmp	.+360    	; 0x66b2 <realloc+0x182>
    654a:	fc 01       	movw	r30, r24
    654c:	e6 0f       	add	r30, r22
    654e:	f7 1f       	adc	r31, r23
    6550:	9c 01       	movw	r18, r24
    6552:	22 50       	subi	r18, 0x02	; 2
    6554:	31 09       	sbc	r19, r1
    6556:	e2 17       	cp	r30, r18
    6558:	f3 07       	cpc	r31, r19
    655a:	08 f4       	brcc	.+2      	; 0x655e <realloc+0x2e>
    655c:	a8 c0       	rjmp	.+336    	; 0x66ae <realloc+0x17e>
    655e:	d9 01       	movw	r26, r18
    6560:	0d 91       	ld	r16, X+
    6562:	1c 91       	ld	r17, X
    6564:	11 97       	sbiw	r26, 0x01	; 1
    6566:	06 17       	cp	r16, r22
    6568:	17 07       	cpc	r17, r23
    656a:	b0 f0       	brcs	.+44     	; 0x6598 <realloc+0x68>
    656c:	05 30       	cpi	r16, 0x05	; 5
    656e:	11 05       	cpc	r17, r1
    6570:	08 f4       	brcc	.+2      	; 0x6574 <realloc+0x44>
    6572:	9b c0       	rjmp	.+310    	; 0x66aa <realloc+0x17a>
    6574:	c8 01       	movw	r24, r16
    6576:	04 97       	sbiw	r24, 0x04	; 4
    6578:	86 17       	cp	r24, r22
    657a:	97 07       	cpc	r25, r23
    657c:	08 f4       	brcc	.+2      	; 0x6580 <realloc+0x50>
    657e:	95 c0       	rjmp	.+298    	; 0x66aa <realloc+0x17a>
    6580:	02 50       	subi	r16, 0x02	; 2
    6582:	11 09       	sbc	r17, r1
    6584:	06 1b       	sub	r16, r22
    6586:	17 0b       	sbc	r17, r23
    6588:	01 93       	st	Z+, r16
    658a:	11 93       	st	Z+, r17
    658c:	6d 93       	st	X+, r22
    658e:	7c 93       	st	X, r23
    6590:	cf 01       	movw	r24, r30
    6592:	0e 94 0f 32 	call	0x641e	; 0x641e <free>
    6596:	89 c0       	rjmp	.+274    	; 0x66aa <realloc+0x17a>
    6598:	5b 01       	movw	r10, r22
    659a:	a0 1a       	sub	r10, r16
    659c:	b1 0a       	sbc	r11, r17
    659e:	4c 01       	movw	r8, r24
    65a0:	80 0e       	add	r8, r16
    65a2:	91 1e       	adc	r9, r17
    65a4:	a0 91 fc 04 	lds	r26, 0x04FC	; 0x8004fc <__flp>
    65a8:	b0 91 fd 04 	lds	r27, 0x04FD	; 0x8004fd <__flp+0x1>
    65ac:	61 2c       	mov	r6, r1
    65ae:	71 2c       	mov	r7, r1
    65b0:	e1 2c       	mov	r14, r1
    65b2:	f1 2c       	mov	r15, r1
    65b4:	10 97       	sbiw	r26, 0x00	; 0
    65b6:	09 f4       	brne	.+2      	; 0x65ba <realloc+0x8a>
    65b8:	46 c0       	rjmp	.+140    	; 0x6646 <realloc+0x116>
    65ba:	8d 91       	ld	r24, X+
    65bc:	9c 91       	ld	r25, X
    65be:	11 97       	sbiw	r26, 0x01	; 1
    65c0:	a8 15       	cp	r26, r8
    65c2:	b9 05       	cpc	r27, r9
    65c4:	b1 f5       	brne	.+108    	; 0x6632 <realloc+0x102>
    65c6:	6c 01       	movw	r12, r24
    65c8:	42 e0       	ldi	r20, 0x02	; 2
    65ca:	c4 0e       	add	r12, r20
    65cc:	d1 1c       	adc	r13, r1
    65ce:	ca 14       	cp	r12, r10
    65d0:	db 04       	cpc	r13, r11
    65d2:	78 f1       	brcs	.+94     	; 0x6632 <realloc+0x102>
    65d4:	4c 01       	movw	r8, r24
    65d6:	8a 18       	sub	r8, r10
    65d8:	9b 08       	sbc	r9, r11
    65da:	64 01       	movw	r12, r8
    65dc:	42 e0       	ldi	r20, 0x02	; 2
    65de:	c4 0e       	add	r12, r20
    65e0:	d1 1c       	adc	r13, r1
    65e2:	12 96       	adiw	r26, 0x02	; 2
    65e4:	bc 90       	ld	r11, X
    65e6:	12 97       	sbiw	r26, 0x02	; 2
    65e8:	13 96       	adiw	r26, 0x03	; 3
    65ea:	ac 91       	ld	r26, X
    65ec:	b5 e0       	ldi	r27, 0x05	; 5
    65ee:	cb 16       	cp	r12, r27
    65f0:	d1 04       	cpc	r13, r1
    65f2:	40 f0       	brcs	.+16     	; 0x6604 <realloc+0xd4>
    65f4:	b2 82       	std	Z+2, r11	; 0x02
    65f6:	a3 83       	std	Z+3, r26	; 0x03
    65f8:	91 82       	std	Z+1, r9	; 0x01
    65fa:	80 82       	st	Z, r8
    65fc:	d9 01       	movw	r26, r18
    65fe:	6d 93       	st	X+, r22
    6600:	7c 93       	st	X, r23
    6602:	09 c0       	rjmp	.+18     	; 0x6616 <realloc+0xe6>
    6604:	0e 5f       	subi	r16, 0xFE	; 254
    6606:	1f 4f       	sbci	r17, 0xFF	; 255
    6608:	80 0f       	add	r24, r16
    660a:	91 1f       	adc	r25, r17
    660c:	f9 01       	movw	r30, r18
    660e:	91 83       	std	Z+1, r25	; 0x01
    6610:	80 83       	st	Z, r24
    6612:	eb 2d       	mov	r30, r11
    6614:	fa 2f       	mov	r31, r26
    6616:	e1 14       	cp	r14, r1
    6618:	f1 04       	cpc	r15, r1
    661a:	31 f0       	breq	.+12     	; 0x6628 <realloc+0xf8>
    661c:	d7 01       	movw	r26, r14
    661e:	13 96       	adiw	r26, 0x03	; 3
    6620:	fc 93       	st	X, r31
    6622:	ee 93       	st	-X, r30
    6624:	12 97       	sbiw	r26, 0x02	; 2
    6626:	41 c0       	rjmp	.+130    	; 0x66aa <realloc+0x17a>
    6628:	f0 93 fd 04 	sts	0x04FD, r31	; 0x8004fd <__flp+0x1>
    662c:	e0 93 fc 04 	sts	0x04FC, r30	; 0x8004fc <__flp>
    6630:	3c c0       	rjmp	.+120    	; 0x66aa <realloc+0x17a>
    6632:	68 16       	cp	r6, r24
    6634:	79 06       	cpc	r7, r25
    6636:	08 f4       	brcc	.+2      	; 0x663a <realloc+0x10a>
    6638:	3c 01       	movw	r6, r24
    663a:	7d 01       	movw	r14, r26
    663c:	12 96       	adiw	r26, 0x02	; 2
    663e:	0d 90       	ld	r0, X+
    6640:	bc 91       	ld	r27, X
    6642:	a0 2d       	mov	r26, r0
    6644:	b7 cf       	rjmp	.-146    	; 0x65b4 <realloc+0x84>
    6646:	80 91 fa 04 	lds	r24, 0x04FA	; 0x8004fa <__brkval>
    664a:	90 91 fb 04 	lds	r25, 0x04FB	; 0x8004fb <__brkval+0x1>
    664e:	88 16       	cp	r8, r24
    6650:	99 06       	cpc	r9, r25
    6652:	e1 f4       	brne	.+56     	; 0x668c <realloc+0x15c>
    6654:	66 16       	cp	r6, r22
    6656:	77 06       	cpc	r7, r23
    6658:	c8 f4       	brcc	.+50     	; 0x668c <realloc+0x15c>
    665a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    665e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    6662:	00 97       	sbiw	r24, 0x00	; 0
    6664:	41 f4       	brne	.+16     	; 0x6676 <realloc+0x146>
    6666:	8d b7       	in	r24, 0x3d	; 61
    6668:	9e b7       	in	r25, 0x3e	; 62
    666a:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    666e:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    6672:	84 1b       	sub	r24, r20
    6674:	95 0b       	sbc	r25, r21
    6676:	e8 17       	cp	r30, r24
    6678:	f9 07       	cpc	r31, r25
    667a:	c8 f4       	brcc	.+50     	; 0x66ae <realloc+0x17e>
    667c:	f0 93 fb 04 	sts	0x04FB, r31	; 0x8004fb <__brkval+0x1>
    6680:	e0 93 fa 04 	sts	0x04FA, r30	; 0x8004fa <__brkval>
    6684:	f9 01       	movw	r30, r18
    6686:	71 83       	std	Z+1, r23	; 0x01
    6688:	60 83       	st	Z, r22
    668a:	0f c0       	rjmp	.+30     	; 0x66aa <realloc+0x17a>
    668c:	cb 01       	movw	r24, r22
    668e:	0e 94 77 31 	call	0x62ee	; 0x62ee <malloc>
    6692:	7c 01       	movw	r14, r24
    6694:	00 97       	sbiw	r24, 0x00	; 0
    6696:	59 f0       	breq	.+22     	; 0x66ae <realloc+0x17e>
    6698:	a8 01       	movw	r20, r16
    669a:	be 01       	movw	r22, r28
    669c:	0e 94 5e 33 	call	0x66bc	; 0x66bc <memcpy>
    66a0:	ce 01       	movw	r24, r28
    66a2:	0e 94 0f 32 	call	0x641e	; 0x641e <free>
    66a6:	c7 01       	movw	r24, r14
    66a8:	04 c0       	rjmp	.+8      	; 0x66b2 <realloc+0x182>
    66aa:	ce 01       	movw	r24, r28
    66ac:	02 c0       	rjmp	.+4      	; 0x66b2 <realloc+0x182>
    66ae:	80 e0       	ldi	r24, 0x00	; 0
    66b0:	90 e0       	ldi	r25, 0x00	; 0
    66b2:	cd b7       	in	r28, 0x3d	; 61
    66b4:	de b7       	in	r29, 0x3e	; 62
    66b6:	ee e0       	ldi	r30, 0x0E	; 14
    66b8:	0c 94 73 38 	jmp	0x70e6	; 0x70e6 <__epilogue_restores__+0x8>

000066bc <memcpy>:
    66bc:	fb 01       	movw	r30, r22
    66be:	dc 01       	movw	r26, r24
    66c0:	02 c0       	rjmp	.+4      	; 0x66c6 <memcpy+0xa>
    66c2:	01 90       	ld	r0, Z+
    66c4:	0d 92       	st	X+, r0
    66c6:	41 50       	subi	r20, 0x01	; 1
    66c8:	50 40       	sbci	r21, 0x00	; 0
    66ca:	d8 f7       	brcc	.-10     	; 0x66c2 <memcpy+0x6>
    66cc:	08 95       	ret

000066ce <strcpy>:
    66ce:	fb 01       	movw	r30, r22
    66d0:	dc 01       	movw	r26, r24
    66d2:	01 90       	ld	r0, Z+
    66d4:	0d 92       	st	X+, r0
    66d6:	00 20       	and	r0, r0
    66d8:	e1 f7       	brne	.-8      	; 0x66d2 <strcpy+0x4>
    66da:	08 95       	ret

000066dc <sprintf>:
    66dc:	ae e0       	ldi	r26, 0x0E	; 14
    66de:	b0 e0       	ldi	r27, 0x00	; 0
    66e0:	e4 e7       	ldi	r30, 0x74	; 116
    66e2:	f3 e3       	ldi	r31, 0x33	; 51
    66e4:	0c 94 61 38 	jmp	0x70c2	; 0x70c2 <__prologue_saves__+0x1c>
    66e8:	0d 89       	ldd	r16, Y+21	; 0x15
    66ea:	1e 89       	ldd	r17, Y+22	; 0x16
    66ec:	86 e0       	ldi	r24, 0x06	; 6
    66ee:	8c 83       	std	Y+4, r24	; 0x04
    66f0:	1a 83       	std	Y+2, r17	; 0x02
    66f2:	09 83       	std	Y+1, r16	; 0x01
    66f4:	8f ef       	ldi	r24, 0xFF	; 255
    66f6:	9f e7       	ldi	r25, 0x7F	; 127
    66f8:	9e 83       	std	Y+6, r25	; 0x06
    66fa:	8d 83       	std	Y+5, r24	; 0x05
    66fc:	ae 01       	movw	r20, r28
    66fe:	47 5e       	subi	r20, 0xE7	; 231
    6700:	5f 4f       	sbci	r21, 0xFF	; 255
    6702:	6f 89       	ldd	r22, Y+23	; 0x17
    6704:	78 8d       	ldd	r23, Y+24	; 0x18
    6706:	ce 01       	movw	r24, r28
    6708:	01 96       	adiw	r24, 0x01	; 1
    670a:	0e 94 90 33 	call	0x6720	; 0x6720 <vfprintf>
    670e:	ef 81       	ldd	r30, Y+7	; 0x07
    6710:	f8 85       	ldd	r31, Y+8	; 0x08
    6712:	e0 0f       	add	r30, r16
    6714:	f1 1f       	adc	r31, r17
    6716:	10 82       	st	Z, r1
    6718:	2e 96       	adiw	r28, 0x0e	; 14
    671a:	e4 e0       	ldi	r30, 0x04	; 4
    671c:	0c 94 7d 38 	jmp	0x70fa	; 0x70fa <__epilogue_restores__+0x1c>

00006720 <vfprintf>:
    6720:	ab e0       	ldi	r26, 0x0B	; 11
    6722:	b0 e0       	ldi	r27, 0x00	; 0
    6724:	e6 e9       	ldi	r30, 0x96	; 150
    6726:	f3 e3       	ldi	r31, 0x33	; 51
    6728:	0c 94 53 38 	jmp	0x70a6	; 0x70a6 <__prologue_saves__>
    672c:	6c 01       	movw	r12, r24
    672e:	7b 01       	movw	r14, r22
    6730:	8a 01       	movw	r16, r20
    6732:	fc 01       	movw	r30, r24
    6734:	17 82       	std	Z+7, r1	; 0x07
    6736:	16 82       	std	Z+6, r1	; 0x06
    6738:	83 81       	ldd	r24, Z+3	; 0x03
    673a:	81 ff       	sbrs	r24, 1
    673c:	cc c1       	rjmp	.+920    	; 0x6ad6 <vfprintf+0x3b6>
    673e:	ce 01       	movw	r24, r28
    6740:	01 96       	adiw	r24, 0x01	; 1
    6742:	3c 01       	movw	r6, r24
    6744:	f6 01       	movw	r30, r12
    6746:	93 81       	ldd	r25, Z+3	; 0x03
    6748:	f7 01       	movw	r30, r14
    674a:	93 fd       	sbrc	r25, 3
    674c:	85 91       	lpm	r24, Z+
    674e:	93 ff       	sbrs	r25, 3
    6750:	81 91       	ld	r24, Z+
    6752:	7f 01       	movw	r14, r30
    6754:	88 23       	and	r24, r24
    6756:	09 f4       	brne	.+2      	; 0x675a <vfprintf+0x3a>
    6758:	ba c1       	rjmp	.+884    	; 0x6ace <vfprintf+0x3ae>
    675a:	85 32       	cpi	r24, 0x25	; 37
    675c:	39 f4       	brne	.+14     	; 0x676c <vfprintf+0x4c>
    675e:	93 fd       	sbrc	r25, 3
    6760:	85 91       	lpm	r24, Z+
    6762:	93 ff       	sbrs	r25, 3
    6764:	81 91       	ld	r24, Z+
    6766:	7f 01       	movw	r14, r30
    6768:	85 32       	cpi	r24, 0x25	; 37
    676a:	29 f4       	brne	.+10     	; 0x6776 <vfprintf+0x56>
    676c:	b6 01       	movw	r22, r12
    676e:	90 e0       	ldi	r25, 0x00	; 0
    6770:	0e 94 b9 37 	call	0x6f72	; 0x6f72 <fputc>
    6774:	e7 cf       	rjmp	.-50     	; 0x6744 <vfprintf+0x24>
    6776:	91 2c       	mov	r9, r1
    6778:	21 2c       	mov	r2, r1
    677a:	31 2c       	mov	r3, r1
    677c:	ff e1       	ldi	r31, 0x1F	; 31
    677e:	f3 15       	cp	r31, r3
    6780:	d8 f0       	brcs	.+54     	; 0x67b8 <vfprintf+0x98>
    6782:	8b 32       	cpi	r24, 0x2B	; 43
    6784:	79 f0       	breq	.+30     	; 0x67a4 <vfprintf+0x84>
    6786:	38 f4       	brcc	.+14     	; 0x6796 <vfprintf+0x76>
    6788:	80 32       	cpi	r24, 0x20	; 32
    678a:	79 f0       	breq	.+30     	; 0x67aa <vfprintf+0x8a>
    678c:	83 32       	cpi	r24, 0x23	; 35
    678e:	a1 f4       	brne	.+40     	; 0x67b8 <vfprintf+0x98>
    6790:	23 2d       	mov	r18, r3
    6792:	20 61       	ori	r18, 0x10	; 16
    6794:	1d c0       	rjmp	.+58     	; 0x67d0 <vfprintf+0xb0>
    6796:	8d 32       	cpi	r24, 0x2D	; 45
    6798:	61 f0       	breq	.+24     	; 0x67b2 <vfprintf+0x92>
    679a:	80 33       	cpi	r24, 0x30	; 48
    679c:	69 f4       	brne	.+26     	; 0x67b8 <vfprintf+0x98>
    679e:	23 2d       	mov	r18, r3
    67a0:	21 60       	ori	r18, 0x01	; 1
    67a2:	16 c0       	rjmp	.+44     	; 0x67d0 <vfprintf+0xb0>
    67a4:	83 2d       	mov	r24, r3
    67a6:	82 60       	ori	r24, 0x02	; 2
    67a8:	38 2e       	mov	r3, r24
    67aa:	e3 2d       	mov	r30, r3
    67ac:	e4 60       	ori	r30, 0x04	; 4
    67ae:	3e 2e       	mov	r3, r30
    67b0:	2a c0       	rjmp	.+84     	; 0x6806 <vfprintf+0xe6>
    67b2:	f3 2d       	mov	r31, r3
    67b4:	f8 60       	ori	r31, 0x08	; 8
    67b6:	1d c0       	rjmp	.+58     	; 0x67f2 <vfprintf+0xd2>
    67b8:	37 fc       	sbrc	r3, 7
    67ba:	2d c0       	rjmp	.+90     	; 0x6816 <vfprintf+0xf6>
    67bc:	20 ed       	ldi	r18, 0xD0	; 208
    67be:	28 0f       	add	r18, r24
    67c0:	2a 30       	cpi	r18, 0x0A	; 10
    67c2:	40 f0       	brcs	.+16     	; 0x67d4 <vfprintf+0xb4>
    67c4:	8e 32       	cpi	r24, 0x2E	; 46
    67c6:	b9 f4       	brne	.+46     	; 0x67f6 <vfprintf+0xd6>
    67c8:	36 fc       	sbrc	r3, 6
    67ca:	81 c1       	rjmp	.+770    	; 0x6ace <vfprintf+0x3ae>
    67cc:	23 2d       	mov	r18, r3
    67ce:	20 64       	ori	r18, 0x40	; 64
    67d0:	32 2e       	mov	r3, r18
    67d2:	19 c0       	rjmp	.+50     	; 0x6806 <vfprintf+0xe6>
    67d4:	36 fe       	sbrs	r3, 6
    67d6:	06 c0       	rjmp	.+12     	; 0x67e4 <vfprintf+0xc4>
    67d8:	8a e0       	ldi	r24, 0x0A	; 10
    67da:	98 9e       	mul	r9, r24
    67dc:	20 0d       	add	r18, r0
    67de:	11 24       	eor	r1, r1
    67e0:	92 2e       	mov	r9, r18
    67e2:	11 c0       	rjmp	.+34     	; 0x6806 <vfprintf+0xe6>
    67e4:	ea e0       	ldi	r30, 0x0A	; 10
    67e6:	2e 9e       	mul	r2, r30
    67e8:	20 0d       	add	r18, r0
    67ea:	11 24       	eor	r1, r1
    67ec:	22 2e       	mov	r2, r18
    67ee:	f3 2d       	mov	r31, r3
    67f0:	f0 62       	ori	r31, 0x20	; 32
    67f2:	3f 2e       	mov	r3, r31
    67f4:	08 c0       	rjmp	.+16     	; 0x6806 <vfprintf+0xe6>
    67f6:	8c 36       	cpi	r24, 0x6C	; 108
    67f8:	21 f4       	brne	.+8      	; 0x6802 <vfprintf+0xe2>
    67fa:	83 2d       	mov	r24, r3
    67fc:	80 68       	ori	r24, 0x80	; 128
    67fe:	38 2e       	mov	r3, r24
    6800:	02 c0       	rjmp	.+4      	; 0x6806 <vfprintf+0xe6>
    6802:	88 36       	cpi	r24, 0x68	; 104
    6804:	41 f4       	brne	.+16     	; 0x6816 <vfprintf+0xf6>
    6806:	f7 01       	movw	r30, r14
    6808:	93 fd       	sbrc	r25, 3
    680a:	85 91       	lpm	r24, Z+
    680c:	93 ff       	sbrs	r25, 3
    680e:	81 91       	ld	r24, Z+
    6810:	7f 01       	movw	r14, r30
    6812:	81 11       	cpse	r24, r1
    6814:	b3 cf       	rjmp	.-154    	; 0x677c <vfprintf+0x5c>
    6816:	98 2f       	mov	r25, r24
    6818:	9f 7d       	andi	r25, 0xDF	; 223
    681a:	95 54       	subi	r25, 0x45	; 69
    681c:	93 30       	cpi	r25, 0x03	; 3
    681e:	28 f4       	brcc	.+10     	; 0x682a <vfprintf+0x10a>
    6820:	0c 5f       	subi	r16, 0xFC	; 252
    6822:	1f 4f       	sbci	r17, 0xFF	; 255
    6824:	9f e3       	ldi	r25, 0x3F	; 63
    6826:	99 83       	std	Y+1, r25	; 0x01
    6828:	0d c0       	rjmp	.+26     	; 0x6844 <vfprintf+0x124>
    682a:	83 36       	cpi	r24, 0x63	; 99
    682c:	31 f0       	breq	.+12     	; 0x683a <vfprintf+0x11a>
    682e:	83 37       	cpi	r24, 0x73	; 115
    6830:	71 f0       	breq	.+28     	; 0x684e <vfprintf+0x12e>
    6832:	83 35       	cpi	r24, 0x53	; 83
    6834:	09 f0       	breq	.+2      	; 0x6838 <vfprintf+0x118>
    6836:	59 c0       	rjmp	.+178    	; 0x68ea <vfprintf+0x1ca>
    6838:	21 c0       	rjmp	.+66     	; 0x687c <vfprintf+0x15c>
    683a:	f8 01       	movw	r30, r16
    683c:	80 81       	ld	r24, Z
    683e:	89 83       	std	Y+1, r24	; 0x01
    6840:	0e 5f       	subi	r16, 0xFE	; 254
    6842:	1f 4f       	sbci	r17, 0xFF	; 255
    6844:	88 24       	eor	r8, r8
    6846:	83 94       	inc	r8
    6848:	91 2c       	mov	r9, r1
    684a:	53 01       	movw	r10, r6
    684c:	13 c0       	rjmp	.+38     	; 0x6874 <vfprintf+0x154>
    684e:	28 01       	movw	r4, r16
    6850:	f2 e0       	ldi	r31, 0x02	; 2
    6852:	4f 0e       	add	r4, r31
    6854:	51 1c       	adc	r5, r1
    6856:	f8 01       	movw	r30, r16
    6858:	a0 80       	ld	r10, Z
    685a:	b1 80       	ldd	r11, Z+1	; 0x01
    685c:	36 fe       	sbrs	r3, 6
    685e:	03 c0       	rjmp	.+6      	; 0x6866 <vfprintf+0x146>
    6860:	69 2d       	mov	r22, r9
    6862:	70 e0       	ldi	r23, 0x00	; 0
    6864:	02 c0       	rjmp	.+4      	; 0x686a <vfprintf+0x14a>
    6866:	6f ef       	ldi	r22, 0xFF	; 255
    6868:	7f ef       	ldi	r23, 0xFF	; 255
    686a:	c5 01       	movw	r24, r10
    686c:	0e 94 ae 37 	call	0x6f5c	; 0x6f5c <strnlen>
    6870:	4c 01       	movw	r8, r24
    6872:	82 01       	movw	r16, r4
    6874:	f3 2d       	mov	r31, r3
    6876:	ff 77       	andi	r31, 0x7F	; 127
    6878:	3f 2e       	mov	r3, r31
    687a:	16 c0       	rjmp	.+44     	; 0x68a8 <vfprintf+0x188>
    687c:	28 01       	movw	r4, r16
    687e:	22 e0       	ldi	r18, 0x02	; 2
    6880:	42 0e       	add	r4, r18
    6882:	51 1c       	adc	r5, r1
    6884:	f8 01       	movw	r30, r16
    6886:	a0 80       	ld	r10, Z
    6888:	b1 80       	ldd	r11, Z+1	; 0x01
    688a:	36 fe       	sbrs	r3, 6
    688c:	03 c0       	rjmp	.+6      	; 0x6894 <vfprintf+0x174>
    688e:	69 2d       	mov	r22, r9
    6890:	70 e0       	ldi	r23, 0x00	; 0
    6892:	02 c0       	rjmp	.+4      	; 0x6898 <vfprintf+0x178>
    6894:	6f ef       	ldi	r22, 0xFF	; 255
    6896:	7f ef       	ldi	r23, 0xFF	; 255
    6898:	c5 01       	movw	r24, r10
    689a:	0e 94 a3 37 	call	0x6f46	; 0x6f46 <strnlen_P>
    689e:	4c 01       	movw	r8, r24
    68a0:	f3 2d       	mov	r31, r3
    68a2:	f0 68       	ori	r31, 0x80	; 128
    68a4:	3f 2e       	mov	r3, r31
    68a6:	82 01       	movw	r16, r4
    68a8:	33 fc       	sbrc	r3, 3
    68aa:	1b c0       	rjmp	.+54     	; 0x68e2 <vfprintf+0x1c2>
    68ac:	82 2d       	mov	r24, r2
    68ae:	90 e0       	ldi	r25, 0x00	; 0
    68b0:	88 16       	cp	r8, r24
    68b2:	99 06       	cpc	r9, r25
    68b4:	b0 f4       	brcc	.+44     	; 0x68e2 <vfprintf+0x1c2>
    68b6:	b6 01       	movw	r22, r12
    68b8:	80 e2       	ldi	r24, 0x20	; 32
    68ba:	90 e0       	ldi	r25, 0x00	; 0
    68bc:	0e 94 b9 37 	call	0x6f72	; 0x6f72 <fputc>
    68c0:	2a 94       	dec	r2
    68c2:	f4 cf       	rjmp	.-24     	; 0x68ac <vfprintf+0x18c>
    68c4:	f5 01       	movw	r30, r10
    68c6:	37 fc       	sbrc	r3, 7
    68c8:	85 91       	lpm	r24, Z+
    68ca:	37 fe       	sbrs	r3, 7
    68cc:	81 91       	ld	r24, Z+
    68ce:	5f 01       	movw	r10, r30
    68d0:	b6 01       	movw	r22, r12
    68d2:	90 e0       	ldi	r25, 0x00	; 0
    68d4:	0e 94 b9 37 	call	0x6f72	; 0x6f72 <fputc>
    68d8:	21 10       	cpse	r2, r1
    68da:	2a 94       	dec	r2
    68dc:	21 e0       	ldi	r18, 0x01	; 1
    68de:	82 1a       	sub	r8, r18
    68e0:	91 08       	sbc	r9, r1
    68e2:	81 14       	cp	r8, r1
    68e4:	91 04       	cpc	r9, r1
    68e6:	71 f7       	brne	.-36     	; 0x68c4 <vfprintf+0x1a4>
    68e8:	e8 c0       	rjmp	.+464    	; 0x6aba <vfprintf+0x39a>
    68ea:	84 36       	cpi	r24, 0x64	; 100
    68ec:	11 f0       	breq	.+4      	; 0x68f2 <vfprintf+0x1d2>
    68ee:	89 36       	cpi	r24, 0x69	; 105
    68f0:	41 f5       	brne	.+80     	; 0x6942 <vfprintf+0x222>
    68f2:	f8 01       	movw	r30, r16
    68f4:	37 fe       	sbrs	r3, 7
    68f6:	07 c0       	rjmp	.+14     	; 0x6906 <vfprintf+0x1e6>
    68f8:	60 81       	ld	r22, Z
    68fa:	71 81       	ldd	r23, Z+1	; 0x01
    68fc:	82 81       	ldd	r24, Z+2	; 0x02
    68fe:	93 81       	ldd	r25, Z+3	; 0x03
    6900:	0c 5f       	subi	r16, 0xFC	; 252
    6902:	1f 4f       	sbci	r17, 0xFF	; 255
    6904:	08 c0       	rjmp	.+16     	; 0x6916 <vfprintf+0x1f6>
    6906:	60 81       	ld	r22, Z
    6908:	71 81       	ldd	r23, Z+1	; 0x01
    690a:	07 2e       	mov	r0, r23
    690c:	00 0c       	add	r0, r0
    690e:	88 0b       	sbc	r24, r24
    6910:	99 0b       	sbc	r25, r25
    6912:	0e 5f       	subi	r16, 0xFE	; 254
    6914:	1f 4f       	sbci	r17, 0xFF	; 255
    6916:	f3 2d       	mov	r31, r3
    6918:	ff 76       	andi	r31, 0x6F	; 111
    691a:	3f 2e       	mov	r3, r31
    691c:	97 ff       	sbrs	r25, 7
    691e:	09 c0       	rjmp	.+18     	; 0x6932 <vfprintf+0x212>
    6920:	90 95       	com	r25
    6922:	80 95       	com	r24
    6924:	70 95       	com	r23
    6926:	61 95       	neg	r22
    6928:	7f 4f       	sbci	r23, 0xFF	; 255
    692a:	8f 4f       	sbci	r24, 0xFF	; 255
    692c:	9f 4f       	sbci	r25, 0xFF	; 255
    692e:	f0 68       	ori	r31, 0x80	; 128
    6930:	3f 2e       	mov	r3, r31
    6932:	2a e0       	ldi	r18, 0x0A	; 10
    6934:	30 e0       	ldi	r19, 0x00	; 0
    6936:	a3 01       	movw	r20, r6
    6938:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__ultoa_invert>
    693c:	88 2e       	mov	r8, r24
    693e:	86 18       	sub	r8, r6
    6940:	45 c0       	rjmp	.+138    	; 0x69cc <vfprintf+0x2ac>
    6942:	85 37       	cpi	r24, 0x75	; 117
    6944:	31 f4       	brne	.+12     	; 0x6952 <vfprintf+0x232>
    6946:	23 2d       	mov	r18, r3
    6948:	2f 7e       	andi	r18, 0xEF	; 239
    694a:	b2 2e       	mov	r11, r18
    694c:	2a e0       	ldi	r18, 0x0A	; 10
    694e:	30 e0       	ldi	r19, 0x00	; 0
    6950:	25 c0       	rjmp	.+74     	; 0x699c <vfprintf+0x27c>
    6952:	93 2d       	mov	r25, r3
    6954:	99 7f       	andi	r25, 0xF9	; 249
    6956:	b9 2e       	mov	r11, r25
    6958:	8f 36       	cpi	r24, 0x6F	; 111
    695a:	c1 f0       	breq	.+48     	; 0x698c <vfprintf+0x26c>
    695c:	18 f4       	brcc	.+6      	; 0x6964 <vfprintf+0x244>
    695e:	88 35       	cpi	r24, 0x58	; 88
    6960:	79 f0       	breq	.+30     	; 0x6980 <vfprintf+0x260>
    6962:	b5 c0       	rjmp	.+362    	; 0x6ace <vfprintf+0x3ae>
    6964:	80 37       	cpi	r24, 0x70	; 112
    6966:	19 f0       	breq	.+6      	; 0x696e <vfprintf+0x24e>
    6968:	88 37       	cpi	r24, 0x78	; 120
    696a:	21 f0       	breq	.+8      	; 0x6974 <vfprintf+0x254>
    696c:	b0 c0       	rjmp	.+352    	; 0x6ace <vfprintf+0x3ae>
    696e:	e9 2f       	mov	r30, r25
    6970:	e0 61       	ori	r30, 0x10	; 16
    6972:	be 2e       	mov	r11, r30
    6974:	b4 fe       	sbrs	r11, 4
    6976:	0d c0       	rjmp	.+26     	; 0x6992 <vfprintf+0x272>
    6978:	fb 2d       	mov	r31, r11
    697a:	f4 60       	ori	r31, 0x04	; 4
    697c:	bf 2e       	mov	r11, r31
    697e:	09 c0       	rjmp	.+18     	; 0x6992 <vfprintf+0x272>
    6980:	34 fe       	sbrs	r3, 4
    6982:	0a c0       	rjmp	.+20     	; 0x6998 <vfprintf+0x278>
    6984:	29 2f       	mov	r18, r25
    6986:	26 60       	ori	r18, 0x06	; 6
    6988:	b2 2e       	mov	r11, r18
    698a:	06 c0       	rjmp	.+12     	; 0x6998 <vfprintf+0x278>
    698c:	28 e0       	ldi	r18, 0x08	; 8
    698e:	30 e0       	ldi	r19, 0x00	; 0
    6990:	05 c0       	rjmp	.+10     	; 0x699c <vfprintf+0x27c>
    6992:	20 e1       	ldi	r18, 0x10	; 16
    6994:	30 e0       	ldi	r19, 0x00	; 0
    6996:	02 c0       	rjmp	.+4      	; 0x699c <vfprintf+0x27c>
    6998:	20 e1       	ldi	r18, 0x10	; 16
    699a:	32 e0       	ldi	r19, 0x02	; 2
    699c:	f8 01       	movw	r30, r16
    699e:	b7 fe       	sbrs	r11, 7
    69a0:	07 c0       	rjmp	.+14     	; 0x69b0 <vfprintf+0x290>
    69a2:	60 81       	ld	r22, Z
    69a4:	71 81       	ldd	r23, Z+1	; 0x01
    69a6:	82 81       	ldd	r24, Z+2	; 0x02
    69a8:	93 81       	ldd	r25, Z+3	; 0x03
    69aa:	0c 5f       	subi	r16, 0xFC	; 252
    69ac:	1f 4f       	sbci	r17, 0xFF	; 255
    69ae:	06 c0       	rjmp	.+12     	; 0x69bc <vfprintf+0x29c>
    69b0:	60 81       	ld	r22, Z
    69b2:	71 81       	ldd	r23, Z+1	; 0x01
    69b4:	80 e0       	ldi	r24, 0x00	; 0
    69b6:	90 e0       	ldi	r25, 0x00	; 0
    69b8:	0e 5f       	subi	r16, 0xFE	; 254
    69ba:	1f 4f       	sbci	r17, 0xFF	; 255
    69bc:	a3 01       	movw	r20, r6
    69be:	0e 94 f5 37 	call	0x6fea	; 0x6fea <__ultoa_invert>
    69c2:	88 2e       	mov	r8, r24
    69c4:	86 18       	sub	r8, r6
    69c6:	fb 2d       	mov	r31, r11
    69c8:	ff 77       	andi	r31, 0x7F	; 127
    69ca:	3f 2e       	mov	r3, r31
    69cc:	36 fe       	sbrs	r3, 6
    69ce:	0d c0       	rjmp	.+26     	; 0x69ea <vfprintf+0x2ca>
    69d0:	23 2d       	mov	r18, r3
    69d2:	2e 7f       	andi	r18, 0xFE	; 254
    69d4:	a2 2e       	mov	r10, r18
    69d6:	89 14       	cp	r8, r9
    69d8:	58 f4       	brcc	.+22     	; 0x69f0 <vfprintf+0x2d0>
    69da:	34 fe       	sbrs	r3, 4
    69dc:	0b c0       	rjmp	.+22     	; 0x69f4 <vfprintf+0x2d4>
    69de:	32 fc       	sbrc	r3, 2
    69e0:	09 c0       	rjmp	.+18     	; 0x69f4 <vfprintf+0x2d4>
    69e2:	83 2d       	mov	r24, r3
    69e4:	8e 7e       	andi	r24, 0xEE	; 238
    69e6:	a8 2e       	mov	r10, r24
    69e8:	05 c0       	rjmp	.+10     	; 0x69f4 <vfprintf+0x2d4>
    69ea:	b8 2c       	mov	r11, r8
    69ec:	a3 2c       	mov	r10, r3
    69ee:	03 c0       	rjmp	.+6      	; 0x69f6 <vfprintf+0x2d6>
    69f0:	b8 2c       	mov	r11, r8
    69f2:	01 c0       	rjmp	.+2      	; 0x69f6 <vfprintf+0x2d6>
    69f4:	b9 2c       	mov	r11, r9
    69f6:	a4 fe       	sbrs	r10, 4
    69f8:	0f c0       	rjmp	.+30     	; 0x6a18 <vfprintf+0x2f8>
    69fa:	fe 01       	movw	r30, r28
    69fc:	e8 0d       	add	r30, r8
    69fe:	f1 1d       	adc	r31, r1
    6a00:	80 81       	ld	r24, Z
    6a02:	80 33       	cpi	r24, 0x30	; 48
    6a04:	21 f4       	brne	.+8      	; 0x6a0e <vfprintf+0x2ee>
    6a06:	9a 2d       	mov	r25, r10
    6a08:	99 7e       	andi	r25, 0xE9	; 233
    6a0a:	a9 2e       	mov	r10, r25
    6a0c:	09 c0       	rjmp	.+18     	; 0x6a20 <vfprintf+0x300>
    6a0e:	a2 fe       	sbrs	r10, 2
    6a10:	06 c0       	rjmp	.+12     	; 0x6a1e <vfprintf+0x2fe>
    6a12:	b3 94       	inc	r11
    6a14:	b3 94       	inc	r11
    6a16:	04 c0       	rjmp	.+8      	; 0x6a20 <vfprintf+0x300>
    6a18:	8a 2d       	mov	r24, r10
    6a1a:	86 78       	andi	r24, 0x86	; 134
    6a1c:	09 f0       	breq	.+2      	; 0x6a20 <vfprintf+0x300>
    6a1e:	b3 94       	inc	r11
    6a20:	a3 fc       	sbrc	r10, 3
    6a22:	11 c0       	rjmp	.+34     	; 0x6a46 <vfprintf+0x326>
    6a24:	a0 fe       	sbrs	r10, 0
    6a26:	06 c0       	rjmp	.+12     	; 0x6a34 <vfprintf+0x314>
    6a28:	b2 14       	cp	r11, r2
    6a2a:	88 f4       	brcc	.+34     	; 0x6a4e <vfprintf+0x32e>
    6a2c:	28 0c       	add	r2, r8
    6a2e:	92 2c       	mov	r9, r2
    6a30:	9b 18       	sub	r9, r11
    6a32:	0e c0       	rjmp	.+28     	; 0x6a50 <vfprintf+0x330>
    6a34:	b2 14       	cp	r11, r2
    6a36:	60 f4       	brcc	.+24     	; 0x6a50 <vfprintf+0x330>
    6a38:	b6 01       	movw	r22, r12
    6a3a:	80 e2       	ldi	r24, 0x20	; 32
    6a3c:	90 e0       	ldi	r25, 0x00	; 0
    6a3e:	0e 94 b9 37 	call	0x6f72	; 0x6f72 <fputc>
    6a42:	b3 94       	inc	r11
    6a44:	f7 cf       	rjmp	.-18     	; 0x6a34 <vfprintf+0x314>
    6a46:	b2 14       	cp	r11, r2
    6a48:	18 f4       	brcc	.+6      	; 0x6a50 <vfprintf+0x330>
    6a4a:	2b 18       	sub	r2, r11
    6a4c:	02 c0       	rjmp	.+4      	; 0x6a52 <vfprintf+0x332>
    6a4e:	98 2c       	mov	r9, r8
    6a50:	21 2c       	mov	r2, r1
    6a52:	a4 fe       	sbrs	r10, 4
    6a54:	10 c0       	rjmp	.+32     	; 0x6a76 <vfprintf+0x356>
    6a56:	b6 01       	movw	r22, r12
    6a58:	80 e3       	ldi	r24, 0x30	; 48
    6a5a:	90 e0       	ldi	r25, 0x00	; 0
    6a5c:	0e 94 b9 37 	call	0x6f72	; 0x6f72 <fputc>
    6a60:	a2 fe       	sbrs	r10, 2
    6a62:	17 c0       	rjmp	.+46     	; 0x6a92 <vfprintf+0x372>
    6a64:	a1 fc       	sbrc	r10, 1
    6a66:	03 c0       	rjmp	.+6      	; 0x6a6e <vfprintf+0x34e>
    6a68:	88 e7       	ldi	r24, 0x78	; 120
    6a6a:	90 e0       	ldi	r25, 0x00	; 0
    6a6c:	02 c0       	rjmp	.+4      	; 0x6a72 <vfprintf+0x352>
    6a6e:	88 e5       	ldi	r24, 0x58	; 88
    6a70:	90 e0       	ldi	r25, 0x00	; 0
    6a72:	b6 01       	movw	r22, r12
    6a74:	0c c0       	rjmp	.+24     	; 0x6a8e <vfprintf+0x36e>
    6a76:	8a 2d       	mov	r24, r10
    6a78:	86 78       	andi	r24, 0x86	; 134
    6a7a:	59 f0       	breq	.+22     	; 0x6a92 <vfprintf+0x372>
    6a7c:	a1 fe       	sbrs	r10, 1
    6a7e:	02 c0       	rjmp	.+4      	; 0x6a84 <vfprintf+0x364>
    6a80:	8b e2       	ldi	r24, 0x2B	; 43
    6a82:	01 c0       	rjmp	.+2      	; 0x6a86 <vfprintf+0x366>
    6a84:	80 e2       	ldi	r24, 0x20	; 32
    6a86:	a7 fc       	sbrc	r10, 7
    6a88:	8d e2       	ldi	r24, 0x2D	; 45
    6a8a:	b6 01       	movw	r22, r12
    6a8c:	90 e0       	ldi	r25, 0x00	; 0
    6a8e:	0e 94 b9 37 	call	0x6f72	; 0x6f72 <fputc>
    6a92:	89 14       	cp	r8, r9
    6a94:	38 f4       	brcc	.+14     	; 0x6aa4 <vfprintf+0x384>
    6a96:	b6 01       	movw	r22, r12
    6a98:	80 e3       	ldi	r24, 0x30	; 48
    6a9a:	90 e0       	ldi	r25, 0x00	; 0
    6a9c:	0e 94 b9 37 	call	0x6f72	; 0x6f72 <fputc>
    6aa0:	9a 94       	dec	r9
    6aa2:	f7 cf       	rjmp	.-18     	; 0x6a92 <vfprintf+0x372>
    6aa4:	8a 94       	dec	r8
    6aa6:	f3 01       	movw	r30, r6
    6aa8:	e8 0d       	add	r30, r8
    6aaa:	f1 1d       	adc	r31, r1
    6aac:	80 81       	ld	r24, Z
    6aae:	b6 01       	movw	r22, r12
    6ab0:	90 e0       	ldi	r25, 0x00	; 0
    6ab2:	0e 94 b9 37 	call	0x6f72	; 0x6f72 <fputc>
    6ab6:	81 10       	cpse	r8, r1
    6ab8:	f5 cf       	rjmp	.-22     	; 0x6aa4 <vfprintf+0x384>
    6aba:	22 20       	and	r2, r2
    6abc:	09 f4       	brne	.+2      	; 0x6ac0 <vfprintf+0x3a0>
    6abe:	42 ce       	rjmp	.-892    	; 0x6744 <vfprintf+0x24>
    6ac0:	b6 01       	movw	r22, r12
    6ac2:	80 e2       	ldi	r24, 0x20	; 32
    6ac4:	90 e0       	ldi	r25, 0x00	; 0
    6ac6:	0e 94 b9 37 	call	0x6f72	; 0x6f72 <fputc>
    6aca:	2a 94       	dec	r2
    6acc:	f6 cf       	rjmp	.-20     	; 0x6aba <vfprintf+0x39a>
    6ace:	f6 01       	movw	r30, r12
    6ad0:	86 81       	ldd	r24, Z+6	; 0x06
    6ad2:	97 81       	ldd	r25, Z+7	; 0x07
    6ad4:	02 c0       	rjmp	.+4      	; 0x6ada <vfprintf+0x3ba>
    6ad6:	8f ef       	ldi	r24, 0xFF	; 255
    6ad8:	9f ef       	ldi	r25, 0xFF	; 255
    6ada:	2b 96       	adiw	r28, 0x0b	; 11
    6adc:	e2 e1       	ldi	r30, 0x12	; 18
    6ade:	0c 94 6f 38 	jmp	0x70de	; 0x70de <__epilogue_restores__>

00006ae2 <dtoa_prf>:
    6ae2:	a9 e0       	ldi	r26, 0x09	; 9
    6ae4:	b0 e0       	ldi	r27, 0x00	; 0
    6ae6:	e7 e7       	ldi	r30, 0x77	; 119
    6ae8:	f5 e3       	ldi	r31, 0x35	; 53
    6aea:	0c 94 59 38 	jmp	0x70b2	; 0x70b2 <__prologue_saves__+0xc>
    6aee:	6a 01       	movw	r12, r20
    6af0:	12 2f       	mov	r17, r18
    6af2:	b0 2e       	mov	r11, r16
    6af4:	2b e3       	ldi	r18, 0x3B	; 59
    6af6:	20 17       	cp	r18, r16
    6af8:	20 f0       	brcs	.+8      	; 0x6b02 <dtoa_prf+0x20>
    6afa:	ff 24       	eor	r15, r15
    6afc:	f3 94       	inc	r15
    6afe:	f0 0e       	add	r15, r16
    6b00:	02 c0       	rjmp	.+4      	; 0x6b06 <dtoa_prf+0x24>
    6b02:	2c e3       	ldi	r18, 0x3C	; 60
    6b04:	f2 2e       	mov	r15, r18
    6b06:	0f 2d       	mov	r16, r15
    6b08:	27 e0       	ldi	r18, 0x07	; 7
    6b0a:	ae 01       	movw	r20, r28
    6b0c:	4f 5f       	subi	r20, 0xFF	; 255
    6b0e:	5f 4f       	sbci	r21, 0xFF	; 255
    6b10:	0e 94 cb 36 	call	0x6d96	; 0x6d96 <__ftoa_engine>
    6b14:	bc 01       	movw	r22, r24
    6b16:	49 81       	ldd	r20, Y+1	; 0x01
    6b18:	84 2f       	mov	r24, r20
    6b1a:	89 70       	andi	r24, 0x09	; 9
    6b1c:	81 30       	cpi	r24, 0x01	; 1
    6b1e:	31 f0       	breq	.+12     	; 0x6b2c <dtoa_prf+0x4a>
    6b20:	e1 fc       	sbrc	r14, 1
    6b22:	06 c0       	rjmp	.+12     	; 0x6b30 <dtoa_prf+0x4e>
    6b24:	e0 fe       	sbrs	r14, 0
    6b26:	06 c0       	rjmp	.+12     	; 0x6b34 <dtoa_prf+0x52>
    6b28:	90 e2       	ldi	r25, 0x20	; 32
    6b2a:	05 c0       	rjmp	.+10     	; 0x6b36 <dtoa_prf+0x54>
    6b2c:	9d e2       	ldi	r25, 0x2D	; 45
    6b2e:	03 c0       	rjmp	.+6      	; 0x6b36 <dtoa_prf+0x54>
    6b30:	9b e2       	ldi	r25, 0x2B	; 43
    6b32:	01 c0       	rjmp	.+2      	; 0x6b36 <dtoa_prf+0x54>
    6b34:	90 e0       	ldi	r25, 0x00	; 0
    6b36:	5e 2d       	mov	r21, r14
    6b38:	50 71       	andi	r21, 0x10	; 16
    6b3a:	43 ff       	sbrs	r20, 3
    6b3c:	3c c0       	rjmp	.+120    	; 0x6bb6 <dtoa_prf+0xd4>
    6b3e:	91 11       	cpse	r25, r1
    6b40:	02 c0       	rjmp	.+4      	; 0x6b46 <dtoa_prf+0x64>
    6b42:	83 e0       	ldi	r24, 0x03	; 3
    6b44:	01 c0       	rjmp	.+2      	; 0x6b48 <dtoa_prf+0x66>
    6b46:	84 e0       	ldi	r24, 0x04	; 4
    6b48:	81 17       	cp	r24, r17
    6b4a:	18 f4       	brcc	.+6      	; 0x6b52 <dtoa_prf+0x70>
    6b4c:	21 2f       	mov	r18, r17
    6b4e:	28 1b       	sub	r18, r24
    6b50:	01 c0       	rjmp	.+2      	; 0x6b54 <dtoa_prf+0x72>
    6b52:	20 e0       	ldi	r18, 0x00	; 0
    6b54:	51 11       	cpse	r21, r1
    6b56:	0b c0       	rjmp	.+22     	; 0x6b6e <dtoa_prf+0x8c>
    6b58:	f6 01       	movw	r30, r12
    6b5a:	82 2f       	mov	r24, r18
    6b5c:	30 e2       	ldi	r19, 0x20	; 32
    6b5e:	88 23       	and	r24, r24
    6b60:	19 f0       	breq	.+6      	; 0x6b68 <dtoa_prf+0x86>
    6b62:	31 93       	st	Z+, r19
    6b64:	81 50       	subi	r24, 0x01	; 1
    6b66:	fb cf       	rjmp	.-10     	; 0x6b5e <dtoa_prf+0x7c>
    6b68:	c2 0e       	add	r12, r18
    6b6a:	d1 1c       	adc	r13, r1
    6b6c:	20 e0       	ldi	r18, 0x00	; 0
    6b6e:	99 23       	and	r25, r25
    6b70:	29 f0       	breq	.+10     	; 0x6b7c <dtoa_prf+0x9a>
    6b72:	d6 01       	movw	r26, r12
    6b74:	9c 93       	st	X, r25
    6b76:	f6 01       	movw	r30, r12
    6b78:	31 96       	adiw	r30, 0x01	; 1
    6b7a:	6f 01       	movw	r12, r30
    6b7c:	c6 01       	movw	r24, r12
    6b7e:	03 96       	adiw	r24, 0x03	; 3
    6b80:	e2 fe       	sbrs	r14, 2
    6b82:	0a c0       	rjmp	.+20     	; 0x6b98 <dtoa_prf+0xb6>
    6b84:	3e e4       	ldi	r19, 0x4E	; 78
    6b86:	d6 01       	movw	r26, r12
    6b88:	3c 93       	st	X, r19
    6b8a:	41 e4       	ldi	r20, 0x41	; 65
    6b8c:	11 96       	adiw	r26, 0x01	; 1
    6b8e:	4c 93       	st	X, r20
    6b90:	11 97       	sbiw	r26, 0x01	; 1
    6b92:	12 96       	adiw	r26, 0x02	; 2
    6b94:	3c 93       	st	X, r19
    6b96:	06 c0       	rjmp	.+12     	; 0x6ba4 <dtoa_prf+0xc2>
    6b98:	3e e6       	ldi	r19, 0x6E	; 110
    6b9a:	f6 01       	movw	r30, r12
    6b9c:	30 83       	st	Z, r19
    6b9e:	41 e6       	ldi	r20, 0x61	; 97
    6ba0:	41 83       	std	Z+1, r20	; 0x01
    6ba2:	32 83       	std	Z+2, r19	; 0x02
    6ba4:	fc 01       	movw	r30, r24
    6ba6:	32 2f       	mov	r19, r18
    6ba8:	40 e2       	ldi	r20, 0x20	; 32
    6baa:	33 23       	and	r19, r19
    6bac:	09 f4       	brne	.+2      	; 0x6bb0 <dtoa_prf+0xce>
    6bae:	42 c0       	rjmp	.+132    	; 0x6c34 <dtoa_prf+0x152>
    6bb0:	41 93       	st	Z+, r20
    6bb2:	31 50       	subi	r19, 0x01	; 1
    6bb4:	fa cf       	rjmp	.-12     	; 0x6baa <dtoa_prf+0xc8>
    6bb6:	42 ff       	sbrs	r20, 2
    6bb8:	44 c0       	rjmp	.+136    	; 0x6c42 <dtoa_prf+0x160>
    6bba:	91 11       	cpse	r25, r1
    6bbc:	02 c0       	rjmp	.+4      	; 0x6bc2 <dtoa_prf+0xe0>
    6bbe:	83 e0       	ldi	r24, 0x03	; 3
    6bc0:	01 c0       	rjmp	.+2      	; 0x6bc4 <dtoa_prf+0xe2>
    6bc2:	84 e0       	ldi	r24, 0x04	; 4
    6bc4:	81 17       	cp	r24, r17
    6bc6:	18 f4       	brcc	.+6      	; 0x6bce <dtoa_prf+0xec>
    6bc8:	21 2f       	mov	r18, r17
    6bca:	28 1b       	sub	r18, r24
    6bcc:	01 c0       	rjmp	.+2      	; 0x6bd0 <dtoa_prf+0xee>
    6bce:	20 e0       	ldi	r18, 0x00	; 0
    6bd0:	51 11       	cpse	r21, r1
    6bd2:	0b c0       	rjmp	.+22     	; 0x6bea <dtoa_prf+0x108>
    6bd4:	f6 01       	movw	r30, r12
    6bd6:	82 2f       	mov	r24, r18
    6bd8:	30 e2       	ldi	r19, 0x20	; 32
    6bda:	88 23       	and	r24, r24
    6bdc:	19 f0       	breq	.+6      	; 0x6be4 <dtoa_prf+0x102>
    6bde:	31 93       	st	Z+, r19
    6be0:	81 50       	subi	r24, 0x01	; 1
    6be2:	fb cf       	rjmp	.-10     	; 0x6bda <dtoa_prf+0xf8>
    6be4:	c2 0e       	add	r12, r18
    6be6:	d1 1c       	adc	r13, r1
    6be8:	20 e0       	ldi	r18, 0x00	; 0
    6bea:	99 23       	and	r25, r25
    6bec:	29 f0       	breq	.+10     	; 0x6bf8 <dtoa_prf+0x116>
    6bee:	d6 01       	movw	r26, r12
    6bf0:	9c 93       	st	X, r25
    6bf2:	f6 01       	movw	r30, r12
    6bf4:	31 96       	adiw	r30, 0x01	; 1
    6bf6:	6f 01       	movw	r12, r30
    6bf8:	c6 01       	movw	r24, r12
    6bfa:	03 96       	adiw	r24, 0x03	; 3
    6bfc:	e2 fe       	sbrs	r14, 2
    6bfe:	0b c0       	rjmp	.+22     	; 0x6c16 <dtoa_prf+0x134>
    6c00:	39 e4       	ldi	r19, 0x49	; 73
    6c02:	d6 01       	movw	r26, r12
    6c04:	3c 93       	st	X, r19
    6c06:	3e e4       	ldi	r19, 0x4E	; 78
    6c08:	11 96       	adiw	r26, 0x01	; 1
    6c0a:	3c 93       	st	X, r19
    6c0c:	11 97       	sbiw	r26, 0x01	; 1
    6c0e:	36 e4       	ldi	r19, 0x46	; 70
    6c10:	12 96       	adiw	r26, 0x02	; 2
    6c12:	3c 93       	st	X, r19
    6c14:	07 c0       	rjmp	.+14     	; 0x6c24 <dtoa_prf+0x142>
    6c16:	39 e6       	ldi	r19, 0x69	; 105
    6c18:	f6 01       	movw	r30, r12
    6c1a:	30 83       	st	Z, r19
    6c1c:	3e e6       	ldi	r19, 0x6E	; 110
    6c1e:	31 83       	std	Z+1, r19	; 0x01
    6c20:	36 e6       	ldi	r19, 0x66	; 102
    6c22:	32 83       	std	Z+2, r19	; 0x02
    6c24:	fc 01       	movw	r30, r24
    6c26:	32 2f       	mov	r19, r18
    6c28:	40 e2       	ldi	r20, 0x20	; 32
    6c2a:	33 23       	and	r19, r19
    6c2c:	19 f0       	breq	.+6      	; 0x6c34 <dtoa_prf+0x152>
    6c2e:	41 93       	st	Z+, r20
    6c30:	31 50       	subi	r19, 0x01	; 1
    6c32:	fb cf       	rjmp	.-10     	; 0x6c2a <dtoa_prf+0x148>
    6c34:	fc 01       	movw	r30, r24
    6c36:	e2 0f       	add	r30, r18
    6c38:	f1 1d       	adc	r31, r1
    6c3a:	10 82       	st	Z, r1
    6c3c:	8e ef       	ldi	r24, 0xFE	; 254
    6c3e:	9f ef       	ldi	r25, 0xFF	; 255
    6c40:	a6 c0       	rjmp	.+332    	; 0x6d8e <dtoa_prf+0x2ac>
    6c42:	21 e0       	ldi	r18, 0x01	; 1
    6c44:	30 e0       	ldi	r19, 0x00	; 0
    6c46:	91 11       	cpse	r25, r1
    6c48:	02 c0       	rjmp	.+4      	; 0x6c4e <dtoa_prf+0x16c>
    6c4a:	20 e0       	ldi	r18, 0x00	; 0
    6c4c:	30 e0       	ldi	r19, 0x00	; 0
    6c4e:	16 16       	cp	r1, r22
    6c50:	17 06       	cpc	r1, r23
    6c52:	1c f4       	brge	.+6      	; 0x6c5a <dtoa_prf+0x178>
    6c54:	fb 01       	movw	r30, r22
    6c56:	31 96       	adiw	r30, 0x01	; 1
    6c58:	02 c0       	rjmp	.+4      	; 0x6c5e <dtoa_prf+0x17c>
    6c5a:	e1 e0       	ldi	r30, 0x01	; 1
    6c5c:	f0 e0       	ldi	r31, 0x00	; 0
    6c5e:	2e 0f       	add	r18, r30
    6c60:	3f 1f       	adc	r19, r31
    6c62:	bb 20       	and	r11, r11
    6c64:	21 f0       	breq	.+8      	; 0x6c6e <dtoa_prf+0x18c>
    6c66:	eb 2d       	mov	r30, r11
    6c68:	f0 e0       	ldi	r31, 0x00	; 0
    6c6a:	31 96       	adiw	r30, 0x01	; 1
    6c6c:	02 c0       	rjmp	.+4      	; 0x6c72 <dtoa_prf+0x190>
    6c6e:	e0 e0       	ldi	r30, 0x00	; 0
    6c70:	f0 e0       	ldi	r31, 0x00	; 0
    6c72:	2e 0f       	add	r18, r30
    6c74:	3f 1f       	adc	r19, r31
    6c76:	e1 2f       	mov	r30, r17
    6c78:	f0 e0       	ldi	r31, 0x00	; 0
    6c7a:	2e 17       	cp	r18, r30
    6c7c:	3f 07       	cpc	r19, r31
    6c7e:	1c f4       	brge	.+6      	; 0x6c86 <dtoa_prf+0x1a4>
    6c80:	12 1b       	sub	r17, r18
    6c82:	21 2f       	mov	r18, r17
    6c84:	01 c0       	rjmp	.+2      	; 0x6c88 <dtoa_prf+0x1a6>
    6c86:	20 e0       	ldi	r18, 0x00	; 0
    6c88:	8e 2d       	mov	r24, r14
    6c8a:	88 71       	andi	r24, 0x18	; 24
    6c8c:	59 f4       	brne	.+22     	; 0x6ca4 <dtoa_prf+0x1c2>
    6c8e:	f6 01       	movw	r30, r12
    6c90:	82 2f       	mov	r24, r18
    6c92:	30 e2       	ldi	r19, 0x20	; 32
    6c94:	88 23       	and	r24, r24
    6c96:	19 f0       	breq	.+6      	; 0x6c9e <dtoa_prf+0x1bc>
    6c98:	31 93       	st	Z+, r19
    6c9a:	81 50       	subi	r24, 0x01	; 1
    6c9c:	fb cf       	rjmp	.-10     	; 0x6c94 <dtoa_prf+0x1b2>
    6c9e:	c2 0e       	add	r12, r18
    6ca0:	d1 1c       	adc	r13, r1
    6ca2:	20 e0       	ldi	r18, 0x00	; 0
    6ca4:	99 23       	and	r25, r25
    6ca6:	29 f0       	breq	.+10     	; 0x6cb2 <dtoa_prf+0x1d0>
    6ca8:	d6 01       	movw	r26, r12
    6caa:	9c 93       	st	X, r25
    6cac:	f6 01       	movw	r30, r12
    6cae:	31 96       	adiw	r30, 0x01	; 1
    6cb0:	6f 01       	movw	r12, r30
    6cb2:	51 11       	cpse	r21, r1
    6cb4:	0b c0       	rjmp	.+22     	; 0x6ccc <dtoa_prf+0x1ea>
    6cb6:	f6 01       	movw	r30, r12
    6cb8:	82 2f       	mov	r24, r18
    6cba:	90 e3       	ldi	r25, 0x30	; 48
    6cbc:	88 23       	and	r24, r24
    6cbe:	19 f0       	breq	.+6      	; 0x6cc6 <dtoa_prf+0x1e4>
    6cc0:	91 93       	st	Z+, r25
    6cc2:	81 50       	subi	r24, 0x01	; 1
    6cc4:	fb cf       	rjmp	.-10     	; 0x6cbc <dtoa_prf+0x1da>
    6cc6:	c2 0e       	add	r12, r18
    6cc8:	d1 1c       	adc	r13, r1
    6cca:	20 e0       	ldi	r18, 0x00	; 0
    6ccc:	0f 2d       	mov	r16, r15
    6cce:	06 0f       	add	r16, r22
    6cd0:	9a 81       	ldd	r25, Y+2	; 0x02
    6cd2:	34 2f       	mov	r19, r20
    6cd4:	30 71       	andi	r19, 0x10	; 16
    6cd6:	44 ff       	sbrs	r20, 4
    6cd8:	03 c0       	rjmp	.+6      	; 0x6ce0 <dtoa_prf+0x1fe>
    6cda:	91 33       	cpi	r25, 0x31	; 49
    6cdc:	09 f4       	brne	.+2      	; 0x6ce0 <dtoa_prf+0x1fe>
    6cde:	01 50       	subi	r16, 0x01	; 1
    6ce0:	10 16       	cp	r1, r16
    6ce2:	24 f4       	brge	.+8      	; 0x6cec <dtoa_prf+0x20a>
    6ce4:	09 30       	cpi	r16, 0x09	; 9
    6ce6:	18 f0       	brcs	.+6      	; 0x6cee <dtoa_prf+0x20c>
    6ce8:	08 e0       	ldi	r16, 0x08	; 8
    6cea:	01 c0       	rjmp	.+2      	; 0x6cee <dtoa_prf+0x20c>
    6cec:	01 e0       	ldi	r16, 0x01	; 1
    6cee:	ab 01       	movw	r20, r22
    6cf0:	77 ff       	sbrs	r23, 7
    6cf2:	02 c0       	rjmp	.+4      	; 0x6cf8 <dtoa_prf+0x216>
    6cf4:	40 e0       	ldi	r20, 0x00	; 0
    6cf6:	50 e0       	ldi	r21, 0x00	; 0
    6cf8:	fb 01       	movw	r30, r22
    6cfa:	e4 1b       	sub	r30, r20
    6cfc:	f5 0b       	sbc	r31, r21
    6cfe:	a1 e0       	ldi	r26, 0x01	; 1
    6d00:	b0 e0       	ldi	r27, 0x00	; 0
    6d02:	ac 0f       	add	r26, r28
    6d04:	bd 1f       	adc	r27, r29
    6d06:	ea 0f       	add	r30, r26
    6d08:	fb 1f       	adc	r31, r27
    6d0a:	8e e2       	ldi	r24, 0x2E	; 46
    6d0c:	a8 2e       	mov	r10, r24
    6d0e:	4b 01       	movw	r8, r22
    6d10:	80 1a       	sub	r8, r16
    6d12:	91 08       	sbc	r9, r1
    6d14:	0b 2d       	mov	r16, r11
    6d16:	10 e0       	ldi	r17, 0x00	; 0
    6d18:	11 95       	neg	r17
    6d1a:	01 95       	neg	r16
    6d1c:	11 09       	sbc	r17, r1
    6d1e:	4f 3f       	cpi	r20, 0xFF	; 255
    6d20:	bf ef       	ldi	r27, 0xFF	; 255
    6d22:	5b 07       	cpc	r21, r27
    6d24:	21 f4       	brne	.+8      	; 0x6d2e <dtoa_prf+0x24c>
    6d26:	d6 01       	movw	r26, r12
    6d28:	ac 92       	st	X, r10
    6d2a:	11 96       	adiw	r26, 0x01	; 1
    6d2c:	6d 01       	movw	r12, r26
    6d2e:	64 17       	cp	r22, r20
    6d30:	75 07       	cpc	r23, r21
    6d32:	2c f0       	brlt	.+10     	; 0x6d3e <dtoa_prf+0x25c>
    6d34:	84 16       	cp	r8, r20
    6d36:	95 06       	cpc	r9, r21
    6d38:	14 f4       	brge	.+4      	; 0x6d3e <dtoa_prf+0x25c>
    6d3a:	81 81       	ldd	r24, Z+1	; 0x01
    6d3c:	01 c0       	rjmp	.+2      	; 0x6d40 <dtoa_prf+0x25e>
    6d3e:	80 e3       	ldi	r24, 0x30	; 48
    6d40:	41 50       	subi	r20, 0x01	; 1
    6d42:	51 09       	sbc	r21, r1
    6d44:	31 96       	adiw	r30, 0x01	; 1
    6d46:	d6 01       	movw	r26, r12
    6d48:	11 96       	adiw	r26, 0x01	; 1
    6d4a:	7d 01       	movw	r14, r26
    6d4c:	40 17       	cp	r20, r16
    6d4e:	51 07       	cpc	r21, r17
    6d50:	24 f0       	brlt	.+8      	; 0x6d5a <dtoa_prf+0x278>
    6d52:	d6 01       	movw	r26, r12
    6d54:	8c 93       	st	X, r24
    6d56:	67 01       	movw	r12, r14
    6d58:	e2 cf       	rjmp	.-60     	; 0x6d1e <dtoa_prf+0x23c>
    6d5a:	64 17       	cp	r22, r20
    6d5c:	75 07       	cpc	r23, r21
    6d5e:	39 f4       	brne	.+14     	; 0x6d6e <dtoa_prf+0x28c>
    6d60:	96 33       	cpi	r25, 0x36	; 54
    6d62:	20 f4       	brcc	.+8      	; 0x6d6c <dtoa_prf+0x28a>
    6d64:	95 33       	cpi	r25, 0x35	; 53
    6d66:	19 f4       	brne	.+6      	; 0x6d6e <dtoa_prf+0x28c>
    6d68:	31 11       	cpse	r19, r1
    6d6a:	01 c0       	rjmp	.+2      	; 0x6d6e <dtoa_prf+0x28c>
    6d6c:	81 e3       	ldi	r24, 0x31	; 49
    6d6e:	f6 01       	movw	r30, r12
    6d70:	80 83       	st	Z, r24
    6d72:	f7 01       	movw	r30, r14
    6d74:	82 2f       	mov	r24, r18
    6d76:	90 e2       	ldi	r25, 0x20	; 32
    6d78:	88 23       	and	r24, r24
    6d7a:	19 f0       	breq	.+6      	; 0x6d82 <dtoa_prf+0x2a0>
    6d7c:	91 93       	st	Z+, r25
    6d7e:	81 50       	subi	r24, 0x01	; 1
    6d80:	fb cf       	rjmp	.-10     	; 0x6d78 <dtoa_prf+0x296>
    6d82:	f7 01       	movw	r30, r14
    6d84:	e2 0f       	add	r30, r18
    6d86:	f1 1d       	adc	r31, r1
    6d88:	10 82       	st	Z, r1
    6d8a:	80 e0       	ldi	r24, 0x00	; 0
    6d8c:	90 e0       	ldi	r25, 0x00	; 0
    6d8e:	29 96       	adiw	r28, 0x09	; 9
    6d90:	ec e0       	ldi	r30, 0x0C	; 12
    6d92:	0c 94 75 38 	jmp	0x70ea	; 0x70ea <__epilogue_restores__+0xc>

00006d96 <__ftoa_engine>:
    6d96:	28 30       	cpi	r18, 0x08	; 8
    6d98:	08 f0       	brcs	.+2      	; 0x6d9c <__ftoa_engine+0x6>
    6d9a:	27 e0       	ldi	r18, 0x07	; 7
    6d9c:	33 27       	eor	r19, r19
    6d9e:	da 01       	movw	r26, r20
    6da0:	99 0f       	add	r25, r25
    6da2:	31 1d       	adc	r19, r1
    6da4:	87 fd       	sbrc	r24, 7
    6da6:	91 60       	ori	r25, 0x01	; 1
    6da8:	00 96       	adiw	r24, 0x00	; 0
    6daa:	61 05       	cpc	r22, r1
    6dac:	71 05       	cpc	r23, r1
    6dae:	39 f4       	brne	.+14     	; 0x6dbe <__ftoa_engine+0x28>
    6db0:	32 60       	ori	r19, 0x02	; 2
    6db2:	2e 5f       	subi	r18, 0xFE	; 254
    6db4:	3d 93       	st	X+, r19
    6db6:	30 e3       	ldi	r19, 0x30	; 48
    6db8:	2a 95       	dec	r18
    6dba:	e1 f7       	brne	.-8      	; 0x6db4 <__ftoa_engine+0x1e>
    6dbc:	08 95       	ret
    6dbe:	9f 3f       	cpi	r25, 0xFF	; 255
    6dc0:	30 f0       	brcs	.+12     	; 0x6dce <__ftoa_engine+0x38>
    6dc2:	80 38       	cpi	r24, 0x80	; 128
    6dc4:	71 05       	cpc	r23, r1
    6dc6:	61 05       	cpc	r22, r1
    6dc8:	09 f0       	breq	.+2      	; 0x6dcc <__ftoa_engine+0x36>
    6dca:	3c 5f       	subi	r19, 0xFC	; 252
    6dcc:	3c 5f       	subi	r19, 0xFC	; 252
    6dce:	3d 93       	st	X+, r19
    6dd0:	91 30       	cpi	r25, 0x01	; 1
    6dd2:	08 f0       	brcs	.+2      	; 0x6dd6 <__ftoa_engine+0x40>
    6dd4:	80 68       	ori	r24, 0x80	; 128
    6dd6:	91 1d       	adc	r25, r1
    6dd8:	df 93       	push	r29
    6dda:	cf 93       	push	r28
    6ddc:	1f 93       	push	r17
    6dde:	0f 93       	push	r16
    6de0:	ff 92       	push	r15
    6de2:	ef 92       	push	r14
    6de4:	19 2f       	mov	r17, r25
    6de6:	98 7f       	andi	r25, 0xF8	; 248
    6de8:	96 95       	lsr	r25
    6dea:	e9 2f       	mov	r30, r25
    6dec:	96 95       	lsr	r25
    6dee:	96 95       	lsr	r25
    6df0:	e9 0f       	add	r30, r25
    6df2:	ff 27       	eor	r31, r31
    6df4:	e2 51       	subi	r30, 0x12	; 18
    6df6:	ff 4f       	sbci	r31, 0xFF	; 255
    6df8:	99 27       	eor	r25, r25
    6dfa:	33 27       	eor	r19, r19
    6dfc:	ee 24       	eor	r14, r14
    6dfe:	ff 24       	eor	r15, r15
    6e00:	a7 01       	movw	r20, r14
    6e02:	e7 01       	movw	r28, r14
    6e04:	05 90       	lpm	r0, Z+
    6e06:	08 94       	sec
    6e08:	07 94       	ror	r0
    6e0a:	28 f4       	brcc	.+10     	; 0x6e16 <__ftoa_engine+0x80>
    6e0c:	36 0f       	add	r19, r22
    6e0e:	e7 1e       	adc	r14, r23
    6e10:	f8 1e       	adc	r15, r24
    6e12:	49 1f       	adc	r20, r25
    6e14:	51 1d       	adc	r21, r1
    6e16:	66 0f       	add	r22, r22
    6e18:	77 1f       	adc	r23, r23
    6e1a:	88 1f       	adc	r24, r24
    6e1c:	99 1f       	adc	r25, r25
    6e1e:	06 94       	lsr	r0
    6e20:	a1 f7       	brne	.-24     	; 0x6e0a <__ftoa_engine+0x74>
    6e22:	05 90       	lpm	r0, Z+
    6e24:	07 94       	ror	r0
    6e26:	28 f4       	brcc	.+10     	; 0x6e32 <__ftoa_engine+0x9c>
    6e28:	e7 0e       	add	r14, r23
    6e2a:	f8 1e       	adc	r15, r24
    6e2c:	49 1f       	adc	r20, r25
    6e2e:	56 1f       	adc	r21, r22
    6e30:	c1 1d       	adc	r28, r1
    6e32:	77 0f       	add	r23, r23
    6e34:	88 1f       	adc	r24, r24
    6e36:	99 1f       	adc	r25, r25
    6e38:	66 1f       	adc	r22, r22
    6e3a:	06 94       	lsr	r0
    6e3c:	a1 f7       	brne	.-24     	; 0x6e26 <__ftoa_engine+0x90>
    6e3e:	05 90       	lpm	r0, Z+
    6e40:	07 94       	ror	r0
    6e42:	28 f4       	brcc	.+10     	; 0x6e4e <__ftoa_engine+0xb8>
    6e44:	f8 0e       	add	r15, r24
    6e46:	49 1f       	adc	r20, r25
    6e48:	56 1f       	adc	r21, r22
    6e4a:	c7 1f       	adc	r28, r23
    6e4c:	d1 1d       	adc	r29, r1
    6e4e:	88 0f       	add	r24, r24
    6e50:	99 1f       	adc	r25, r25
    6e52:	66 1f       	adc	r22, r22
    6e54:	77 1f       	adc	r23, r23
    6e56:	06 94       	lsr	r0
    6e58:	a1 f7       	brne	.-24     	; 0x6e42 <__ftoa_engine+0xac>
    6e5a:	05 90       	lpm	r0, Z+
    6e5c:	07 94       	ror	r0
    6e5e:	20 f4       	brcc	.+8      	; 0x6e68 <__ftoa_engine+0xd2>
    6e60:	49 0f       	add	r20, r25
    6e62:	56 1f       	adc	r21, r22
    6e64:	c7 1f       	adc	r28, r23
    6e66:	d8 1f       	adc	r29, r24
    6e68:	99 0f       	add	r25, r25
    6e6a:	66 1f       	adc	r22, r22
    6e6c:	77 1f       	adc	r23, r23
    6e6e:	88 1f       	adc	r24, r24
    6e70:	06 94       	lsr	r0
    6e72:	a9 f7       	brne	.-22     	; 0x6e5e <__ftoa_engine+0xc8>
    6e74:	84 91       	lpm	r24, Z
    6e76:	10 95       	com	r17
    6e78:	17 70       	andi	r17, 0x07	; 7
    6e7a:	41 f0       	breq	.+16     	; 0x6e8c <__ftoa_engine+0xf6>
    6e7c:	d6 95       	lsr	r29
    6e7e:	c7 95       	ror	r28
    6e80:	57 95       	ror	r21
    6e82:	47 95       	ror	r20
    6e84:	f7 94       	ror	r15
    6e86:	e7 94       	ror	r14
    6e88:	1a 95       	dec	r17
    6e8a:	c1 f7       	brne	.-16     	; 0x6e7c <__ftoa_engine+0xe6>
    6e8c:	e4 e9       	ldi	r30, 0x94	; 148
    6e8e:	f0 e0       	ldi	r31, 0x00	; 0
    6e90:	68 94       	set
    6e92:	15 90       	lpm	r1, Z+
    6e94:	15 91       	lpm	r17, Z+
    6e96:	35 91       	lpm	r19, Z+
    6e98:	65 91       	lpm	r22, Z+
    6e9a:	95 91       	lpm	r25, Z+
    6e9c:	05 90       	lpm	r0, Z+
    6e9e:	7f e2       	ldi	r23, 0x2F	; 47
    6ea0:	73 95       	inc	r23
    6ea2:	e1 18       	sub	r14, r1
    6ea4:	f1 0a       	sbc	r15, r17
    6ea6:	43 0b       	sbc	r20, r19
    6ea8:	56 0b       	sbc	r21, r22
    6eaa:	c9 0b       	sbc	r28, r25
    6eac:	d0 09       	sbc	r29, r0
    6eae:	c0 f7       	brcc	.-16     	; 0x6ea0 <__ftoa_engine+0x10a>
    6eb0:	e1 0c       	add	r14, r1
    6eb2:	f1 1e       	adc	r15, r17
    6eb4:	43 1f       	adc	r20, r19
    6eb6:	56 1f       	adc	r21, r22
    6eb8:	c9 1f       	adc	r28, r25
    6eba:	d0 1d       	adc	r29, r0
    6ebc:	7e f4       	brtc	.+30     	; 0x6edc <__ftoa_engine+0x146>
    6ebe:	70 33       	cpi	r23, 0x30	; 48
    6ec0:	11 f4       	brne	.+4      	; 0x6ec6 <__ftoa_engine+0x130>
    6ec2:	8a 95       	dec	r24
    6ec4:	e6 cf       	rjmp	.-52     	; 0x6e92 <__ftoa_engine+0xfc>
    6ec6:	e8 94       	clt
    6ec8:	01 50       	subi	r16, 0x01	; 1
    6eca:	30 f0       	brcs	.+12     	; 0x6ed8 <__ftoa_engine+0x142>
    6ecc:	08 0f       	add	r16, r24
    6ece:	0a f4       	brpl	.+2      	; 0x6ed2 <__ftoa_engine+0x13c>
    6ed0:	00 27       	eor	r16, r16
    6ed2:	02 17       	cp	r16, r18
    6ed4:	08 f4       	brcc	.+2      	; 0x6ed8 <__ftoa_engine+0x142>
    6ed6:	20 2f       	mov	r18, r16
    6ed8:	23 95       	inc	r18
    6eda:	02 2f       	mov	r16, r18
    6edc:	7a 33       	cpi	r23, 0x3A	; 58
    6ede:	28 f0       	brcs	.+10     	; 0x6eea <__ftoa_engine+0x154>
    6ee0:	79 e3       	ldi	r23, 0x39	; 57
    6ee2:	7d 93       	st	X+, r23
    6ee4:	2a 95       	dec	r18
    6ee6:	e9 f7       	brne	.-6      	; 0x6ee2 <__ftoa_engine+0x14c>
    6ee8:	10 c0       	rjmp	.+32     	; 0x6f0a <__ftoa_engine+0x174>
    6eea:	7d 93       	st	X+, r23
    6eec:	2a 95       	dec	r18
    6eee:	89 f6       	brne	.-94     	; 0x6e92 <__ftoa_engine+0xfc>
    6ef0:	06 94       	lsr	r0
    6ef2:	97 95       	ror	r25
    6ef4:	67 95       	ror	r22
    6ef6:	37 95       	ror	r19
    6ef8:	17 95       	ror	r17
    6efa:	17 94       	ror	r1
    6efc:	e1 18       	sub	r14, r1
    6efe:	f1 0a       	sbc	r15, r17
    6f00:	43 0b       	sbc	r20, r19
    6f02:	56 0b       	sbc	r21, r22
    6f04:	c9 0b       	sbc	r28, r25
    6f06:	d0 09       	sbc	r29, r0
    6f08:	98 f0       	brcs	.+38     	; 0x6f30 <__ftoa_engine+0x19a>
    6f0a:	23 95       	inc	r18
    6f0c:	7e 91       	ld	r23, -X
    6f0e:	73 95       	inc	r23
    6f10:	7a 33       	cpi	r23, 0x3A	; 58
    6f12:	08 f0       	brcs	.+2      	; 0x6f16 <__ftoa_engine+0x180>
    6f14:	70 e3       	ldi	r23, 0x30	; 48
    6f16:	7c 93       	st	X, r23
    6f18:	20 13       	cpse	r18, r16
    6f1a:	b8 f7       	brcc	.-18     	; 0x6f0a <__ftoa_engine+0x174>
    6f1c:	7e 91       	ld	r23, -X
    6f1e:	70 61       	ori	r23, 0x10	; 16
    6f20:	7d 93       	st	X+, r23
    6f22:	30 f0       	brcs	.+12     	; 0x6f30 <__ftoa_engine+0x19a>
    6f24:	83 95       	inc	r24
    6f26:	71 e3       	ldi	r23, 0x31	; 49
    6f28:	7d 93       	st	X+, r23
    6f2a:	70 e3       	ldi	r23, 0x30	; 48
    6f2c:	2a 95       	dec	r18
    6f2e:	e1 f7       	brne	.-8      	; 0x6f28 <__ftoa_engine+0x192>
    6f30:	11 24       	eor	r1, r1
    6f32:	ef 90       	pop	r14
    6f34:	ff 90       	pop	r15
    6f36:	0f 91       	pop	r16
    6f38:	1f 91       	pop	r17
    6f3a:	cf 91       	pop	r28
    6f3c:	df 91       	pop	r29
    6f3e:	99 27       	eor	r25, r25
    6f40:	87 fd       	sbrc	r24, 7
    6f42:	90 95       	com	r25
    6f44:	08 95       	ret

00006f46 <strnlen_P>:
    6f46:	fc 01       	movw	r30, r24
    6f48:	05 90       	lpm	r0, Z+
    6f4a:	61 50       	subi	r22, 0x01	; 1
    6f4c:	70 40       	sbci	r23, 0x00	; 0
    6f4e:	01 10       	cpse	r0, r1
    6f50:	d8 f7       	brcc	.-10     	; 0x6f48 <strnlen_P+0x2>
    6f52:	80 95       	com	r24
    6f54:	90 95       	com	r25
    6f56:	8e 0f       	add	r24, r30
    6f58:	9f 1f       	adc	r25, r31
    6f5a:	08 95       	ret

00006f5c <strnlen>:
    6f5c:	fc 01       	movw	r30, r24
    6f5e:	61 50       	subi	r22, 0x01	; 1
    6f60:	70 40       	sbci	r23, 0x00	; 0
    6f62:	01 90       	ld	r0, Z+
    6f64:	01 10       	cpse	r0, r1
    6f66:	d8 f7       	brcc	.-10     	; 0x6f5e <strnlen+0x2>
    6f68:	80 95       	com	r24
    6f6a:	90 95       	com	r25
    6f6c:	8e 0f       	add	r24, r30
    6f6e:	9f 1f       	adc	r25, r31
    6f70:	08 95       	ret

00006f72 <fputc>:
    6f72:	0f 93       	push	r16
    6f74:	1f 93       	push	r17
    6f76:	cf 93       	push	r28
    6f78:	df 93       	push	r29
    6f7a:	fb 01       	movw	r30, r22
    6f7c:	23 81       	ldd	r18, Z+3	; 0x03
    6f7e:	21 fd       	sbrc	r18, 1
    6f80:	03 c0       	rjmp	.+6      	; 0x6f88 <fputc+0x16>
    6f82:	8f ef       	ldi	r24, 0xFF	; 255
    6f84:	9f ef       	ldi	r25, 0xFF	; 255
    6f86:	2c c0       	rjmp	.+88     	; 0x6fe0 <fputc+0x6e>
    6f88:	22 ff       	sbrs	r18, 2
    6f8a:	16 c0       	rjmp	.+44     	; 0x6fb8 <fputc+0x46>
    6f8c:	46 81       	ldd	r20, Z+6	; 0x06
    6f8e:	57 81       	ldd	r21, Z+7	; 0x07
    6f90:	24 81       	ldd	r18, Z+4	; 0x04
    6f92:	35 81       	ldd	r19, Z+5	; 0x05
    6f94:	42 17       	cp	r20, r18
    6f96:	53 07       	cpc	r21, r19
    6f98:	44 f4       	brge	.+16     	; 0x6faa <fputc+0x38>
    6f9a:	a0 81       	ld	r26, Z
    6f9c:	b1 81       	ldd	r27, Z+1	; 0x01
    6f9e:	9d 01       	movw	r18, r26
    6fa0:	2f 5f       	subi	r18, 0xFF	; 255
    6fa2:	3f 4f       	sbci	r19, 0xFF	; 255
    6fa4:	31 83       	std	Z+1, r19	; 0x01
    6fa6:	20 83       	st	Z, r18
    6fa8:	8c 93       	st	X, r24
    6faa:	26 81       	ldd	r18, Z+6	; 0x06
    6fac:	37 81       	ldd	r19, Z+7	; 0x07
    6fae:	2f 5f       	subi	r18, 0xFF	; 255
    6fb0:	3f 4f       	sbci	r19, 0xFF	; 255
    6fb2:	37 83       	std	Z+7, r19	; 0x07
    6fb4:	26 83       	std	Z+6, r18	; 0x06
    6fb6:	14 c0       	rjmp	.+40     	; 0x6fe0 <fputc+0x6e>
    6fb8:	8b 01       	movw	r16, r22
    6fba:	ec 01       	movw	r28, r24
    6fbc:	fb 01       	movw	r30, r22
    6fbe:	00 84       	ldd	r0, Z+8	; 0x08
    6fc0:	f1 85       	ldd	r31, Z+9	; 0x09
    6fc2:	e0 2d       	mov	r30, r0
    6fc4:	09 95       	icall
    6fc6:	89 2b       	or	r24, r25
    6fc8:	e1 f6       	brne	.-72     	; 0x6f82 <fputc+0x10>
    6fca:	d8 01       	movw	r26, r16
    6fcc:	16 96       	adiw	r26, 0x06	; 6
    6fce:	8d 91       	ld	r24, X+
    6fd0:	9c 91       	ld	r25, X
    6fd2:	17 97       	sbiw	r26, 0x07	; 7
    6fd4:	01 96       	adiw	r24, 0x01	; 1
    6fd6:	17 96       	adiw	r26, 0x07	; 7
    6fd8:	9c 93       	st	X, r25
    6fda:	8e 93       	st	-X, r24
    6fdc:	16 97       	sbiw	r26, 0x06	; 6
    6fde:	ce 01       	movw	r24, r28
    6fe0:	df 91       	pop	r29
    6fe2:	cf 91       	pop	r28
    6fe4:	1f 91       	pop	r17
    6fe6:	0f 91       	pop	r16
    6fe8:	08 95       	ret

00006fea <__ultoa_invert>:
    6fea:	fa 01       	movw	r30, r20
    6fec:	aa 27       	eor	r26, r26
    6fee:	28 30       	cpi	r18, 0x08	; 8
    6ff0:	51 f1       	breq	.+84     	; 0x7046 <__ultoa_invert+0x5c>
    6ff2:	20 31       	cpi	r18, 0x10	; 16
    6ff4:	81 f1       	breq	.+96     	; 0x7056 <__ultoa_invert+0x6c>
    6ff6:	e8 94       	clt
    6ff8:	6f 93       	push	r22
    6ffa:	6e 7f       	andi	r22, 0xFE	; 254
    6ffc:	6e 5f       	subi	r22, 0xFE	; 254
    6ffe:	7f 4f       	sbci	r23, 0xFF	; 255
    7000:	8f 4f       	sbci	r24, 0xFF	; 255
    7002:	9f 4f       	sbci	r25, 0xFF	; 255
    7004:	af 4f       	sbci	r26, 0xFF	; 255
    7006:	b1 e0       	ldi	r27, 0x01	; 1
    7008:	3e d0       	rcall	.+124    	; 0x7086 <__ultoa_invert+0x9c>
    700a:	b4 e0       	ldi	r27, 0x04	; 4
    700c:	3c d0       	rcall	.+120    	; 0x7086 <__ultoa_invert+0x9c>
    700e:	67 0f       	add	r22, r23
    7010:	78 1f       	adc	r23, r24
    7012:	89 1f       	adc	r24, r25
    7014:	9a 1f       	adc	r25, r26
    7016:	a1 1d       	adc	r26, r1
    7018:	68 0f       	add	r22, r24
    701a:	79 1f       	adc	r23, r25
    701c:	8a 1f       	adc	r24, r26
    701e:	91 1d       	adc	r25, r1
    7020:	a1 1d       	adc	r26, r1
    7022:	6a 0f       	add	r22, r26
    7024:	71 1d       	adc	r23, r1
    7026:	81 1d       	adc	r24, r1
    7028:	91 1d       	adc	r25, r1
    702a:	a1 1d       	adc	r26, r1
    702c:	20 d0       	rcall	.+64     	; 0x706e <__ultoa_invert+0x84>
    702e:	09 f4       	brne	.+2      	; 0x7032 <__ultoa_invert+0x48>
    7030:	68 94       	set
    7032:	3f 91       	pop	r19
    7034:	2a e0       	ldi	r18, 0x0A	; 10
    7036:	26 9f       	mul	r18, r22
    7038:	11 24       	eor	r1, r1
    703a:	30 19       	sub	r19, r0
    703c:	30 5d       	subi	r19, 0xD0	; 208
    703e:	31 93       	st	Z+, r19
    7040:	de f6       	brtc	.-74     	; 0x6ff8 <__ultoa_invert+0xe>
    7042:	cf 01       	movw	r24, r30
    7044:	08 95       	ret
    7046:	46 2f       	mov	r20, r22
    7048:	47 70       	andi	r20, 0x07	; 7
    704a:	40 5d       	subi	r20, 0xD0	; 208
    704c:	41 93       	st	Z+, r20
    704e:	b3 e0       	ldi	r27, 0x03	; 3
    7050:	0f d0       	rcall	.+30     	; 0x7070 <__ultoa_invert+0x86>
    7052:	c9 f7       	brne	.-14     	; 0x7046 <__ultoa_invert+0x5c>
    7054:	f6 cf       	rjmp	.-20     	; 0x7042 <__ultoa_invert+0x58>
    7056:	46 2f       	mov	r20, r22
    7058:	4f 70       	andi	r20, 0x0F	; 15
    705a:	40 5d       	subi	r20, 0xD0	; 208
    705c:	4a 33       	cpi	r20, 0x3A	; 58
    705e:	18 f0       	brcs	.+6      	; 0x7066 <__ultoa_invert+0x7c>
    7060:	49 5d       	subi	r20, 0xD9	; 217
    7062:	31 fd       	sbrc	r19, 1
    7064:	40 52       	subi	r20, 0x20	; 32
    7066:	41 93       	st	Z+, r20
    7068:	02 d0       	rcall	.+4      	; 0x706e <__ultoa_invert+0x84>
    706a:	a9 f7       	brne	.-22     	; 0x7056 <__ultoa_invert+0x6c>
    706c:	ea cf       	rjmp	.-44     	; 0x7042 <__ultoa_invert+0x58>
    706e:	b4 e0       	ldi	r27, 0x04	; 4
    7070:	a6 95       	lsr	r26
    7072:	97 95       	ror	r25
    7074:	87 95       	ror	r24
    7076:	77 95       	ror	r23
    7078:	67 95       	ror	r22
    707a:	ba 95       	dec	r27
    707c:	c9 f7       	brne	.-14     	; 0x7070 <__ultoa_invert+0x86>
    707e:	00 97       	sbiw	r24, 0x00	; 0
    7080:	61 05       	cpc	r22, r1
    7082:	71 05       	cpc	r23, r1
    7084:	08 95       	ret
    7086:	9b 01       	movw	r18, r22
    7088:	ac 01       	movw	r20, r24
    708a:	0a 2e       	mov	r0, r26
    708c:	06 94       	lsr	r0
    708e:	57 95       	ror	r21
    7090:	47 95       	ror	r20
    7092:	37 95       	ror	r19
    7094:	27 95       	ror	r18
    7096:	ba 95       	dec	r27
    7098:	c9 f7       	brne	.-14     	; 0x708c <__ultoa_invert+0xa2>
    709a:	62 0f       	add	r22, r18
    709c:	73 1f       	adc	r23, r19
    709e:	84 1f       	adc	r24, r20
    70a0:	95 1f       	adc	r25, r21
    70a2:	a0 1d       	adc	r26, r0
    70a4:	08 95       	ret

000070a6 <__prologue_saves__>:
    70a6:	2f 92       	push	r2
    70a8:	3f 92       	push	r3
    70aa:	4f 92       	push	r4
    70ac:	5f 92       	push	r5
    70ae:	6f 92       	push	r6
    70b0:	7f 92       	push	r7
    70b2:	8f 92       	push	r8
    70b4:	9f 92       	push	r9
    70b6:	af 92       	push	r10
    70b8:	bf 92       	push	r11
    70ba:	cf 92       	push	r12
    70bc:	df 92       	push	r13
    70be:	ef 92       	push	r14
    70c0:	ff 92       	push	r15
    70c2:	0f 93       	push	r16
    70c4:	1f 93       	push	r17
    70c6:	cf 93       	push	r28
    70c8:	df 93       	push	r29
    70ca:	cd b7       	in	r28, 0x3d	; 61
    70cc:	de b7       	in	r29, 0x3e	; 62
    70ce:	ca 1b       	sub	r28, r26
    70d0:	db 0b       	sbc	r29, r27
    70d2:	0f b6       	in	r0, 0x3f	; 63
    70d4:	f8 94       	cli
    70d6:	de bf       	out	0x3e, r29	; 62
    70d8:	0f be       	out	0x3f, r0	; 63
    70da:	cd bf       	out	0x3d, r28	; 61
    70dc:	09 94       	ijmp

000070de <__epilogue_restores__>:
    70de:	2a 88       	ldd	r2, Y+18	; 0x12
    70e0:	39 88       	ldd	r3, Y+17	; 0x11
    70e2:	48 88       	ldd	r4, Y+16	; 0x10
    70e4:	5f 84       	ldd	r5, Y+15	; 0x0f
    70e6:	6e 84       	ldd	r6, Y+14	; 0x0e
    70e8:	7d 84       	ldd	r7, Y+13	; 0x0d
    70ea:	8c 84       	ldd	r8, Y+12	; 0x0c
    70ec:	9b 84       	ldd	r9, Y+11	; 0x0b
    70ee:	aa 84       	ldd	r10, Y+10	; 0x0a
    70f0:	b9 84       	ldd	r11, Y+9	; 0x09
    70f2:	c8 84       	ldd	r12, Y+8	; 0x08
    70f4:	df 80       	ldd	r13, Y+7	; 0x07
    70f6:	ee 80       	ldd	r14, Y+6	; 0x06
    70f8:	fd 80       	ldd	r15, Y+5	; 0x05
    70fa:	0c 81       	ldd	r16, Y+4	; 0x04
    70fc:	1b 81       	ldd	r17, Y+3	; 0x03
    70fe:	aa 81       	ldd	r26, Y+2	; 0x02
    7100:	b9 81       	ldd	r27, Y+1	; 0x01
    7102:	ce 0f       	add	r28, r30
    7104:	d1 1d       	adc	r29, r1
    7106:	0f b6       	in	r0, 0x3f	; 63
    7108:	f8 94       	cli
    710a:	de bf       	out	0x3e, r29	; 62
    710c:	0f be       	out	0x3f, r0	; 63
    710e:	cd bf       	out	0x3d, r28	; 61
    7110:	ed 01       	movw	r28, r26
    7112:	08 95       	ret

00007114 <__do_global_dtors>:
    7114:	10 e1       	ldi	r17, 0x10	; 16
    7116:	c3 e1       	ldi	r28, 0x13	; 19
    7118:	d0 e1       	ldi	r29, 0x10	; 16
    711a:	04 c0       	rjmp	.+8      	; 0x7124 <__do_global_dtors+0x10>
    711c:	fe 01       	movw	r30, r28
    711e:	0e 94 23 31 	call	0x6246	; 0x6246 <__tablejump2__>
    7122:	21 96       	adiw	r28, 0x01	; 1
    7124:	c4 31       	cpi	r28, 0x14	; 20
    7126:	d1 07       	cpc	r29, r17
    7128:	c9 f7       	brne	.-14     	; 0x711c <__do_global_dtors+0x8>
    712a:	f8 94       	cli

0000712c <__stop_program>:
    712c:	ff cf       	rjmp	.-2      	; 0x712c <__stop_program>
