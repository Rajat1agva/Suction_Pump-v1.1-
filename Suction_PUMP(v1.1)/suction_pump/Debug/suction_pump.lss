
suction_pump.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000134  00800100  000076d2  00007766  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000076d2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002bc  00800234  00800234  0000789a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000789a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000078f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000a28  00000000  00000000  00007938  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0001a850  00000000  00000000  00008360  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000036fc  00000000  00000000  00022bb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00005d47  00000000  00000000  000262ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000026ac  00000000  00000000  0002bff4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000486b  00000000  00000000  0002e6a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000ed27  00000000  00000000  00032f0b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000a08  00000000  00000000  00041c32  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 9c 13 	jmp	0x2738	; 0x2738 <__dtors_end>
       4:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
       8:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
       c:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
      10:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
      14:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
      18:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
      1c:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
      20:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
      24:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
      28:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
      2c:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
      30:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
      34:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
      38:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
      3c:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
      40:	0c 94 c3 1c 	jmp	0x3986	; 0x3986 <__vector_16>
      44:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
      48:	0c 94 8d 1a 	jmp	0x351a	; 0x351a <__vector_18>
      4c:	0c 94 bf 1a 	jmp	0x357e	; 0x357e <__vector_19>
      50:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
      54:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
      58:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
      5c:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
      60:	0c 94 ec 31 	jmp	0x63d8	; 0x63d8 <__vector_24>
      64:	0c 94 c4 13 	jmp	0x2788	; 0x2788 <__bad_interrupt>
      68:	fd 20       	and	r15, r13
      6a:	0c 21       	and	r16, r12
      6c:	10 21       	and	r17, r0
      6e:	14 21       	and	r17, r4
      70:	18 21       	and	r17, r8
      72:	1c 21       	and	r17, r12
      74:	20 21       	and	r18, r0
      76:	24 21       	and	r18, r4
      78:	28 21       	and	r18, r8
      7a:	2c 21       	and	r18, r12
      7c:	30 21       	and	r19, r0
      7e:	34 21       	and	r19, r4
      80:	38 21       	and	r19, r8
      82:	3c 21       	and	r19, r12
      84:	40 21       	and	r20, r0
      86:	44 21       	and	r20, r4
      88:	48 21       	and	r20, r8
      8a:	4c 21       	and	r20, r12
      8c:	50 21       	and	r21, r0
      8e:	54 21       	and	r21, r4
      90:	58 21       	and	r21, r8
      92:	5c 21       	and	r21, r12

00000094 <__trampolines_end>:
      94:	00 40       	sbci	r16, 0x00	; 0
      96:	7a 10       	cpse	r7, r10
      98:	f3 5a       	subi	r31, 0xA3	; 163
      9a:	00 a0       	ldd	r0, Z+32	; 0x20
      9c:	72 4e       	sbci	r23, 0xE2	; 226
      9e:	18 09       	sbc	r17, r8
      a0:	00 10       	cpse	r0, r0
      a2:	a5 d4       	rcall	.+2378   	; 0x9ee <__stack+0xef>
      a4:	e8 00       	.word	0x00e8	; ????
      a6:	00 e8       	ldi	r16, 0x80	; 128
      a8:	76 48       	sbci	r23, 0x86	; 134
      aa:	17 00       	.word	0x0017	; ????
      ac:	00 e4       	ldi	r16, 0x40	; 64
      ae:	0b 54       	subi	r16, 0x4B	; 75
      b0:	02 00       	.word	0x0002	; ????
      b2:	00 ca       	rjmp	.-3072   	; 0xfffff4b4 <__eeprom_end+0xff7ef4b4>
      b4:	9a 3b       	cpi	r25, 0xBA	; 186
      b6:	00 00       	nop
      b8:	00 e1       	ldi	r16, 0x10	; 16
      ba:	f5 05       	cpc	r31, r5
      bc:	00 00       	nop
      be:	80 96       	adiw	r24, 0x20	; 32
      c0:	98 00       	.word	0x0098	; ????
      c2:	00 00       	nop
      c4:	40 42       	sbci	r20, 0x20	; 32
      c6:	0f 00       	.word	0x000f	; ????
      c8:	00 00       	nop
      ca:	a0 86       	std	Z+8, r10	; 0x08
      cc:	01 00       	.word	0x0001	; ????
      ce:	00 00       	nop
      d0:	10 27       	eor	r17, r16
      d2:	00 00       	nop
      d4:	00 00       	nop
      d6:	e8 03       	fmulsu	r22, r16
      d8:	00 00       	nop
      da:	00 00       	nop
      dc:	64 00       	.word	0x0064	; ????
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	0a 00       	.word	0x000a	; ????
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	01 00       	.word	0x0001	; ????
      ea:	00 00       	nop
      ec:	00 00       	nop
      ee:	2c 76       	andi	r18, 0x6C	; 108
      f0:	d8 88       	ldd	r13, Y+16	; 0x10
      f2:	dc 67       	ori	r29, 0x7C	; 124
      f4:	4f 08       	sbc	r4, r15
      f6:	23 df       	rcall	.-442    	; 0xffffff3e <__eeprom_end+0xff7eff3e>
      f8:	c1 df       	rcall	.-126    	; 0x7c <__SREG__+0x3d>
      fa:	ae 59       	subi	r26, 0x9E	; 158
      fc:	e1 b1       	in	r30, 0x01	; 1
      fe:	b7 96       	adiw	r30, 0x27	; 39
     100:	e5 e3       	ldi	r30, 0x35	; 53
     102:	e4 53       	subi	r30, 0x34	; 52
     104:	c6 3a       	cpi	r28, 0xA6	; 166
     106:	e6 51       	subi	r30, 0x16	; 22
     108:	99 76       	andi	r25, 0x69	; 105
     10a:	96 e8       	ldi	r25, 0x86	; 134
     10c:	e6 c2       	rjmp	.+1484   	; 0x6da <_ZL22FreeSerif12pt7bBitmaps+0x25c>
     10e:	84 26       	eor	r8, r20
     110:	eb 89       	ldd	r30, Y+19	; 0x13
     112:	8c 9b       	sbis	0x11, 4	; 17
     114:	62 ed       	ldi	r22, 0xD2	; 210
     116:	40 7c       	andi	r20, 0xC0	; 192
     118:	6f fc       	.word	0xfc6f	; ????
     11a:	ef bc       	out	0x2f, r14	; 47
     11c:	9c 9f       	mul	r25, r28
     11e:	40 f2       	brcs	.-112    	; 0xb0 <__trampolines_end+0x1c>
     120:	ba a5       	ldd	r27, Y+42	; 0x2a
     122:	6f a5       	ldd	r22, Y+47	; 0x2f
     124:	f4 90       	lpm	r15, Z
     126:	05 5a       	subi	r16, 0xA5	; 165
     128:	2a f7       	brpl	.-54     	; 0xf4 <__trampolines_end+0x60>
     12a:	5c 93       	st	X, r21
     12c:	6b 6c       	ori	r22, 0xCB	; 203
     12e:	f9 67       	ori	r31, 0x79	; 121
     130:	6d c1       	rjmp	.+730    	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
     132:	1b fc       	.word	0xfc1b	; ????
     134:	e0 e4       	ldi	r30, 0x40	; 64
     136:	0d 47       	sbci	r16, 0x7D	; 125
     138:	fe f5       	brtc	.+126    	; 0x1b8 <_ZL5batt3+0x2a>
     13a:	20 e6       	ldi	r18, 0x60	; 96
     13c:	b5 00       	.word	0x00b5	; ????
     13e:	d0 ed       	ldi	r29, 0xD0	; 208
     140:	90 2e       	mov	r9, r16
     142:	03 00       	.word	0x0003	; ????
     144:	94 35       	cpi	r25, 0x54	; 84
     146:	77 05       	cpc	r23, r7
     148:	00 80       	ld	r0, Z
     14a:	84 1e       	adc	r8, r20
     14c:	08 00       	.word	0x0008	; ????
     14e:	00 20       	and	r0, r0
     150:	4e 0a       	sbc	r4, r30
     152:	00 00       	nop
     154:	00 c8       	rjmp	.-4096   	; 0xfffff156 <__eeprom_end+0xff7ef156>
     156:	0c 33       	cpi	r16, 0x3C	; 60
     158:	33 33       	cpi	r19, 0x33	; 51
     15a:	33 0f       	add	r19, r19
     15c:	98 6e       	ori	r25, 0xE8	; 232
     15e:	12 83       	std	Z+2, r17	; 0x02
     160:	11 41       	sbci	r17, 0x11	; 17
     162:	ef 8d       	ldd	r30, Y+31	; 0x1f
     164:	21 14       	cp	r2, r1
     166:	89 3b       	cpi	r24, 0xB9	; 185
     168:	e6 55       	subi	r30, 0x56	; 86
     16a:	16 cf       	rjmp	.-468    	; 0xffffff98 <__eeprom_end+0xff7eff98>
     16c:	fe e6       	ldi	r31, 0x6E	; 110
     16e:	db 18       	sub	r13, r11
     170:	d1 84       	ldd	r13, Z+9	; 0x09
     172:	4b 38       	cpi	r20, 0x8B	; 139
     174:	1b f7       	brvc	.-58     	; 0x13c <__trampolines_end+0xa8>
     176:	7c 1d       	adc	r23, r12
     178:	90 1d       	adc	r25, r0
     17a:	a4 bb       	out	0x14, r26	; 20
     17c:	e4 24       	eor	r14, r4
     17e:	20 32       	cpi	r18, 0x20	; 32
     180:	84 72       	andi	r24, 0x24	; 36
     182:	5e 22       	and	r5, r30
     184:	81 00       	.word	0x0081	; ????
     186:	c9 f1       	breq	.+114    	; 0x1fa <_ZL21FreeSerif12pt7bGlyphs+0x15>
     188:	24 ec       	ldi	r18, 0xC4	; 196
     18a:	a1 e5       	ldi	r26, 0x51	; 81
     18c:	3d 27       	eor	r19, r29

0000018e <_ZL5batt3>:
	...
     19a:	3f ff ff 00 3f ff 81 00 3f ff 81 00 3f ff 81 f8     ?...?...?...?...
     1aa:	3f ff 80 08 3f ff 80 08 3f ff 80 08 3f ff 80 08     ?...?...?...?...
     1ba:	3f ff 80 08 3f ff 80 08 3f ff 81 f8 3f ff 81 00     ?...?...?...?...
     1ca:	3f ff 81 00 3f ff ff 00 00 00 00 00 00 00 00 00     ?...?...........
     1da:	00 00 00 00                                         ....

000001de <_ZL15FreeSerif12pt7b>:
     1de:	7e 04 e5 01 20 7e 1d                                ~... ~.

000001e5 <_ZL21FreeSerif12pt7bGlyphs>:
     1e5:	00 00 00 00 06 00 01 00 00 02 10 08 03 f1 04 00     ................
     1f5:	06 06 0a 01 f1 09 00 0c 10 0c 00 f1 21 00 0a 12     ............!...
     205:	0c 01 f0 38 00 12 11 14 01 f0 5f 00 11 10 13 01     ...8......_.....
     215:	f1 81 00 02 06 05 01 f1 83 00 06 14 08 01 f1 92     ................
     225:	00 06 14 08 01 f1 a1 00 08 0a 0c 03 f2 ab 00 0b     ................
     235:	0b 0e 01 f6 bb 00 03 06 06 02 fe be 00 06 01 08     ................
     245:	01 fb bf 00 02 03 06 02 fe c0 00 07 11 07 00 f0     ................
     255:	cf 00 0a 11 0c 01 f0 e5 00 06 11 0c 03 f0 f2 00     ................
     265:	0a 0f 0c 01 f2 05 01 0a 10 0c 01 f1 19 01 0a 10     ................
     275:	0c 01 f1 2d 01 0a 11 0c 01 f0 43 01 0a 11 0c 01     ...-......C.....
     285:	f0 59 01 0a 10 0c 00 f1 6d 01 0a 11 0c 01 f0 83     .Y......m.......
     295:	01 0a 12 0c 01 f0 9a 01 02 0c 06 02 f5 9d 01 04     ................
     2a5:	0f 06 02 f5 a5 01 0c 0d 0e 01 f4 b9 01 0c 06 0e     ................
     2b5:	01 f8 c2 01 0c 0d 0e 01 f5 d6 01 08 11 0b 02 f0     ................
     2c5:	e7 01 11 10 15 02 f1 09 02 11 10 11 00 f1 2b 02     ..............+.
     2d5:	0c 10 0f 01 f1 43 02 0f 10 10 01 f1 61 02 10 10     .....C......a...
     2e5:	11 00 f1 81 02 0e 10 0f 00 f1 9d 02 0e 10 0e 00     ................
     2f5:	f1 b9 02 10 10 11 01 f1 d9 02 10 10 11 00 f1 f9     ................
     305:	02 06 10 08 01 f1 05 03 08 10 09 00 f1 15 03 10     ................
     315:	10 11 01 f1 35 03 0f 10 0f 00 f1 53 03 13 10 15     ....5......S....
     325:	01 f1 79 03 10 10 11 01 f1 99 03 0f 10 11 01 f1     ..y.............
     335:	b7 03 0c 10 0e 00 f1 cf 03 10 14 11 01 f1 f7 03     ................
     345:	0f 10 10 00 f1 15 04 0b 10 0d 00 f1 2b 04 0f 10     ............+...
     355:	0f 00 f1 49 04 10 10 11 01 f1 69 04 11 10 11 00     ...I......i.....
     365:	f1 8b 04 16 10 17 00 f1 b7 04 11 10 11 00 f1 d9     ................
     375:	04 10 10 11 00 f1 f9 04 0e 10 0f 01 f1 15 05 05     ................
     385:	14 08 02 f1 22 05 07 11 07 00 f0 31 05 05 14 08     ...."......1....
     395:	01 f1 3e 05 0a 09 0b 01 f1 4a 05 0c 01 0c 00 03     ..>......J......
     3a5:	4c 05 05 04 06 00 f1 4f 05 0a 0b 0a 01 f6 5d 05     L......O......].
     3b5:	0a 11 0c 01 f0 73 05 08 0b 0b 01 f6 7e 05 0a 11     .....s......~...
     3c5:	0c 01 f0 94 05 0a 0b 0b 01 f6 a2 05 09 11 09 00     ................
     3d5:	f0 b6 05 0c 10 0b 00 f6 ce 05 0b 11 0c 00 f0 e6     ................
     3e5:	05 05 10 07 00 f1 f0 05 06 15 08 00 f1 00 06 0b     ................
     3f5:	11 0c 01 f0 18 06 05 11 06 00 f0 23 06 12 0b 13     ...........#....
     405:	00 f6 3c 06 0b 0b 0c 00 f6 4c 06 0a 0b 0c 01 f6     ..<......L......
     415:	5a 06 0b 10 0c 00 f6 70 06 0a 10 0c 01 f6 84 06     Z......p........
     425:	08 0b 08 00 f6 8f 06 07 0b 09 01 f6 99 06 06 0d     ................
     435:	07 01 f4 a3 06 0a 0b 0c 01 f6 b1 06 0b 0b 0b 00     ................
     445:	f6 c1 06 10 0b 10 00 f6 d7 06 0b 0b 0c 00 f6 e7     ................
     455:	06 0b 10 0b 00 f6 fd 06 0a 0b 0a 00 f6 0b 07 05     ................
     465:	15 0c 02 f0 19 07 01 11 05 02 f0 1c 07 05 15 0c     ................
     475:	05 f1 2a 07 0c 03 0c 00 fa                          ..*......

0000047e <_ZL22FreeSerif12pt7bBitmaps>:
     47e:	ff fe a8 3f cf 3c f3 8a 20 0c 40 c4 08 40 8c 08     ...?.<.. .@..@..
     48e:	c7 ff 18 81 88 10 81 08 ff e1 18 31 03 10 31 02     ...........1..1.
     49e:	10 04 07 c6 5b 12 c4 b1 0f 41 f0 1e 01 e0 58 13     ....[....A....X.
     4ae:	84 e1 3c 4f 96 3f 01 00 00 04 03 83 03 9f 81 c2     ..<O.?..........
     4be:	20 60 90 38 24 0c 12 03 0d 00 c6 47 9e 23 10 09      `.8$......G.#..
     4ce:	84 04 e1 03 30 40 8c 20 43 08 10 c4 08 1e 00 03     ....0@. C.......
     4de:	c0 02 30 03 08 01 84 00 c4 00 7c f8 1c 38 1e 08     ..0.......|..8..
     4ee:	33 0c 31 c4 10 74 18 3a 0c 0e 07 03 83 c3 e2 7e     3.1..t.:.......~
     4fe:	3e ff a0 04 21 08 61 0c 30 c3 0c 30 c1 04 18 20     >...!.a.0..0... 
     50e:	40 81 81 02 04 18 20 83 0c 30 c3 0c 30 86 10 84     @..... ..0..0...
     51e:	20 30 b3 d7 54 38 7c d3 30 30 10 04 00 80 10 02      0..T8|.00......
     52e:	00 41 ff c1 00 20 04 00 80 10 00 df 95 00 fc fc     .A... ..........
     53e:	06 0c 10 60 c1 06 0c 10 60 c1 06 0c 10 60 c0 1e     ...`....`....`..
     54e:	0c c6 19 86 c0 b0 3c 0f 03 c0 f0 3c 0f 03 c0 d8     ......<....<....
     55e:	66 18 cc 1e 00 11 c3 0c 30 c3 0c 30 c3 0c 30 c3     f.......0..0..0.
     56e:	0c fc 1e 18 c4 1a 06 01 80 60 10 0c 02 01 00 c0     .........`......
     57e:	60 30 18 1f f8 1e 18 e8 18 06 01 00 80 f0 7e 03     `0............~.
     58e:	c0 70 0c 03 00 c0 6e 11 f8 01 00 c0 70 2c 0b 04     .p....n.....p,..
     59e:	c2 30 8c 43 20 c8 33 ff 03 00 c0 30 0c 00 03 f1     .0.C .3....0....
     5ae:	00 40 18 0f 80 f8 0e 01 c0 30 0c 03 00 c0 20 1b     .@.......0.... .
     5be:	8c 7c 00 01 c3 c1 c0 c0 70 18 0e f3 ce c1 f0 3c     .|......p......<
     5ce:	0f 03 c0 d8 36 08 c6 1e 00 3f d0 38 08 06 01 80     ....6....?.8....
     5de:	40 10 0c 02 00 80 20 10 04 01 00 80 20 1f 18 6c     @..... ..... ..l
     5ee:	0f 03 c0 f8 67 30 f0 1e 09 e6 3b 07 c0 f0 3c 0d     ....g0....;...<.
     5fe:	86 1f 00 1e 08 c6 1b 02 c0 f0 3c 0f 03 e0 dc 73     ..........<....s
     60e:	ec 06 01 80 c0 70 38 38 18 00 fc 00 3f cc c0 00     .....p88....?...
     61e:	00 06 77 12 40 00 00 07 01 e0 78 1e 07 00 c0 0f     ..w.@.....x.....
     62e:	00 3c 00 f0 03 c0 07 00 10 ff f0 00 00 00 00 00     .<..............
     63e:	0f ff 80 0e 00 3c 00 f0 03 c0 0f 00 30 0e 07 81     .....<......0...
     64e:	e0 78 0e 00 00 00 7c 86 83 c3 03 03 06 0c 08 08     .x....|.........
     65e:	10 10 00 00 30 30 30 03 f0 06 06 06 00 86 00 26     ....000........&
     66e:	0e d3 0c c7 0c 63 84 31 c6 18 e3 08 71 8c 4c c6     .....c.1....q.L.
     67e:	46 3d c1 80 00 30 10 07 f0 00 80 00 60 00 70 00     F=...0......`.p.
     68e:	38 00 2e 00 13 00 19 c0 08 60 04 38 04 0c 03 ff     8........`.8....
     69e:	03 03 81 00 e1 80 70 c0 3d f0 3f ff 83 0c 30 63     ......p.=.?...0c
     6ae:	06 30 63 06 30 c3 f0 30 e3 06 30 33 03 30 33 07     .0c.0..0..03.03.
     6be:	30 ef fc 07 e2 38 3c c0 3b 00 36 00 38 00 30 00     0....8<.;.6.8.0.
     6ce:	60 00 c0 01 80 03 00 03 00 06 00 06 00 47 03 03     `............G..
     6de:	f8 ff c0 30 78 30 1c 30 0e 30 06 30 03 30 03 30     ...0x0.0.0.0.0.0
     6ee:	03 30 03 30 03 30 03 30 06 30 06 30 0c 30 78 ff     .0.0.0.0.0.0.0x.
     6fe:	c0 ff fc c0 33 00 4c 00 30 00 c0 43 03 0f fc 30     ....3.L.0..C...0
     70e:	30 c0 43 00 0c 00 30 08 c0 23 03 bf fe ff fc c0     0.C...0..#......
     71e:	33 00 4c 00 30 00 c0 43 03 0f fc 30 30 c0 43 00     3.L.0..C...00.C.
     72e:	0c 00 30 00 c0 03 00 3f 00 07 e4 1c 3c 30 0c 60     ..0....?....<0.`
     73e:	0c 60 04 c0 00 c0 00 c0 3f c0 0c c0 0c c0 0c 60     .`......?......`
     74e:	0c 60 0c 30 0c 1c 1c 07 e0 fc 3f 30 0c 30 0c 30     .`.0......?0.0.0
     75e:	0c 30 0c 30 0c 30 0c 3f fc 30 0c 30 0c 30 0c 30     .0.0.0.?.0.0.0.0
     76e:	0c 30 0c 30 0c 30 0c fc 3f fc c3 0c 30 c3 0c 30     .0.0.0..?...0..0
     77e:	c3 0c 30 c3 3f 3f 0c 0c 0c 0c 0c 0c 0c 0c 0c 0c     ..0.??..........
     78e:	0c 0c 0c c8 f0 fc fe 30 38 30 20 30 40 30 80 33     .......080 0@0.3
     79e:	00 36 00 3e 00 37 00 33 80 31 c0 30 e0 30 70 30     .6.>.7.3.1.0.0p0
     7ae:	38 30 3c fc 7f fc 00 60 00 c0 01 80 03 00 06 00     80<....`........
     7be:	0c 00 18 00 30 00 60 00 c0 01 80 03 00 26 00 8c     ....0.`......&..
     7ce:	07 7f fe f8 01 e7 00 70 e0 0e 1e 03 c2 c0 58 5c     .......p......X\
     7de:	1b 09 82 61 38 4c 27 11 84 72 30 8e c6 10 d0 c2     ...a8L'..r0.....
     7ee:	1e 18 41 83 1c 30 67 c4 3f f0 1f 78 0e 3c 04 3e     ..A..0g.?..x.<.>
     7fe:	04 2e 04 27 04 23 84 23 c4 21 e4 20 e4 20 74 20     ...'.#.#.!. . t 
     80e:	3c 20 1c 20 0c 70 0c f8 04 07 c0 30 60 c0 63 00     < . .p.....0`.c.
     81e:	66 00 d8 00 f0 01 e0 03 c0 07 80 0f 00 1b 00 66     f..............f
     82e:	00 c6 03 06 0c 03 e0 ff 83 0e 30 73 03 30 33 03     ..........0s.03.
     83e:	30 63 0e 3f 83 00 30 03 00 30 03 00 30 0f c0 0f     0c.?..0..0..0...
     84e:	e0 18 30 30 18 60 0c 60 0c c0 06 c0 06 c0 06 c0     ..00.`.`........
     85e:	06 c0 06 c0 06 60 0c 60 0c 30 18 18 30 07 c0 03     .....`.`.0..0...
     86e:	c0 01 e0 00 78 00 1f ff 80 61 c0 c1 c1 81 83 03     ....x....a......
     87e:	06 06 0c 1c 18 70 3f 80 67 00 c7 01 8f 03 0f 06     .....p?.g.......
     88e:	0e 0c 0e 7e 0f 1f 46 19 81 30 27 02 f0 0f 00 f8     ...~..F..0'.....
     89e:	07 c0 38 03 c0 34 06 80 dc 32 7c ff ff 86 0e 0c     ..8..4...2|.....
     8ae:	1c 18 10 30 00 60 00 c0 01 80 03 00 06 00 0c 00     ...0.`..........
     8be:	18 00 30 00 60 00 c0 07 e0 fc 1f 30 0e 30 04 30     ..0.`......0.0.0
     8ce:	04 30 04 30 04 30 04 30 04 30 04 30 04 30 04 30     .0.0.0.0.0.0.0.0
     8de:	04 30 04 18 08 1c 18 07 e0 fe 0f 9c 03 0e 01 83     .0..............
     8ee:	00 81 c0 40 60 40 38 20 0c 30 07 10 01 98 00 e8     ...@`@8 .0......
     8fe:	00 34 00 1e 00 06 00 03 00 01 00 fc fc 3d e1 c0     .4...........=..
     90e:	63 83 01 86 0e 04 1c 18 10 70 70 80 c3 c2 03 8b     c........pp.....
     91e:	08 06 6e 40 1d 19 00 74 78 00 e1 e0 03 83 80 0e     ..n@...tx.......
     92e:	0c 00 10 10 00 40 40 7f 1f 9e 03 07 03 01 c3 00     .....@@.........
     93e:	71 00 19 00 0f 00 03 80 01 e0 01 b0 01 9c 00 87     q...............
     94e:	00 81 c0 80 e0 c0 79 f8 7f fe 1f 78 0c 38 08 1c     ......y....x.8..
     95e:	18 0e 10 06 20 07 60 03 c0 01 80 01 80 01 80 01     .... .`.........
     96e:	80 01 80 01 80 01 80 07 e0 7f fb 00 c8 07 20 38     .............. 8
     97e:	01 c0 07 00 38 01 c0 07 00 38 01 c0 0e 00 38 05     ....8....8....8.
     98e:	c0 3e 01 bf fe fe 31 8c 63 18 c6 31 8c 63 18 c6     .>....1.c..1.c..
     99e:	31 f0 c1 81 03 06 04 0c 18 10 30 60 40 c1 81 03     1.........0`@...
     9ae:	06 f8 c6 31 8c 63 18 c6 31 8c 63 18 c7 f0 0c 07     ...1.c..1.c.....
     9be:	01 60 d8 23 18 c4 1b 06 80 c0 ff f0 c7 0c 30 3e     .`.#..........0>
     9ce:	31 8c 30 0c 03 07 c6 33 0c c3 31 c7 b8 20 38 06     1.0....3..1.. 8.
     9de:	01 80 60 18 06 f1 c6 61 d8 36 0d 83 60 d8 26 19     ..`....a.6..`.&.
     9ee:	84 3e 00 1e 23 63 c0 c0 c0 c0 c0 e1 72 3c 00 80     .>..#c......r<..
     9fe:	e0 18 06 01 80 61 d8 8e 61 b0 6c 1b 06 c1 b0 6e     .....a..a.l....n
     a0e:	19 ce 3d c0 1e 08 e4 1b fe c0 30 0c 03 81 60 9c     ..=.......0...`.
     a1e:	41 e0 0f 08 c4 06 03 01 81 f0 60 30 18 0c 06 03     A.........`0....
     a2e:	01 80 c0 60 fc 00 1f 03 1f 60 c6 0c 60 c3 18 1f     ...`.....`..`...
     a3e:	02 00 40 07 fc 40 24 02 c0 2c 04 e0 83 f0 30 1e     ..@..@$..,....0.
     a4e:	00 c0 18 03 00 60 0d e1 ce 30 c6 18 c3 18 63 0c     .....`...0....c.
     a5e:	61 8c 31 86 79 e0 31 80 00 09 c6 31 8c 63 18 df     a.1.y.1....1.c..
     a6e:	0c 30 00 00 31 c3 0c 30 c3 0c 30 c3 0c 30 f2 f0     .0..1..0..0..0..
     a7e:	20 1c 01 80 30 06 00 c0 18 fb 08 62 0c 81 e0 3e      ...0......b...>
     a8e:	06 e0 ce 18 c3 0e f3 e0 13 8c 63 18 c6 31 8c 63     ..........c..1.c
     a9e:	18 c6 f8 f7 8f 0e 3c e3 0c 18 c3 06 30 c1 8c 30     ......<.....0..0
     aae:	63 0c 18 c3 06 30 c1 8c 30 67 9e 3c f7 87 18 c3     c....0..0g.<....
     abe:	18 63 0c 61 8c 31 86 30 c6 19 e7 80 1e 18 e4 1b     .c.a.1.0........
     ace:	03 c0 f0 3c 0f 03 60 9c 41 e0 77 87 18 c3 98 33     ...<..`.A.w....3
     ade:	06 60 cc 19 83 30 c7 10 dc 18 03 00 60 0c 07 e0     .`...0......`...
     aee:	1e 8c e6 1b 06 c1 b0 6c 1b 06 e1 98 e3 d8 06 01     .......l........
     afe:	80 60 18 1f 37 7b 30 30 30 30 30 30 30 30 7c 7b     .`..7{00000000|{
     b0e:	0e 1c 1e 0f 07 c3 87 8a e0 21 8f 98 61 86 18 61     .........!..a..a
     b1e:	86 19 38 e3 98 66 19 86 61 98 66 19 86 61 9c e3     ..8..f..a.f..a..
     b2e:	dc f8 ee 08 c1 18 41 88 32 03 40 68 06 00 c0 10     ......A.2.@h....
     b3e:	00 f3 e7 61 83 70 c2 30 c2 30 c4 19 64 19 68 0e     ...a.p.0.0..d.h.
     b4e:	38 0e 38 0c 30 04 10 fb c6 30 64 0f 00 c0 0c 03     8.8.0....0d.....
     b5e:	c0 98 21 8c 3b cf 80 f8 ee 08 c1 18 41 88 31 03     ..!.;.......A.1.
     b6e:	40 68 06 00 c0 08 02 00 40 10 1e 03 80 7f 90 e0     @h......@.......
     b7e:	30 18 0e 03 01 c0 e0 30 5c 3f f8 19 8c 63 18 c6     0......0\?...c..
     b8e:	31 b0 63 18 c6 31 8c 61 80 ff ff 80 c3 18 c6 31     1.c..1.a.......1
     b9e:	8c 63 06 c6 31 8c 63 18 cc 00 38 06 62 41 c0        .c..1.c...8.bA.

00000bad <_ZL15FreeSerif18pt7b>:
     bad:	4d 0e b4 0b 20 7e 2a                                M... ~*

00000bb4 <_ZL21FreeSerif18pt7bGlyphs>:
     bb4:	00 00 00 00 09 00 01 00 00 04 18 0c 05 e9 0c 00     ................
     bc4:	08 09 0e 03 e9 15 00 11 17 11 00 ea 46 00 0d 1b     ............F...
     bd4:	11 02 e8 72 00 19 17 1d 02 ea ba 00 19 19 1b 01     ...r............
     be4:	e8 09 01 03 09 07 02 e9 0d 01 09 1e 0c 02 e9 2f     .............../
     bf4:	01 09 1e 0c 01 ea 51 01 0c 0e 12 03 e9 66 01 10     ......Q......f..
     c04:	12 14 02 ef 8a 01 04 09 09 02 fd 8f 01 08 02 0c     ................
     c14:	01 f8 91 01 04 04 09 02 fd 93 01 0a 18 0a 00 e9     ................
     c24:	b1 01 10 18 12 01 e9 e1 01 0a 18 12 03 e9 ff 01     ................
     c34:	10 18 11 01 e9 2f 02 0d 18 11 02 e9 56 02 10 17     ...../......V...
     c44:	12 00 ea 84 02 0d 18 11 02 e9 ab 02 10 18 12 01     ................
     c54:	e9 db 02 0e 17 12 01 ea 04 03 0c 19 12 02 e8 2a     ...............*
     c64:	03 10 1a 11 01 e8 5e 03 04 11 09 02 f0 67 03 05     ......^......g..
     c74:	16 09 02 f0 75 03 12 12 14 01 ef 9e 03 12 09 14     ....u...........
     c84:	01 f4 b3 03 12 12 14 01 ef dc 03 0d 19 10 02 e8     ................
     c94:	05 04 18 19 1e 03 e8 50 04 18 17 19 01 ea 95 04     .......P........
     ca4:	14 17 16 01 ea cf 04 16 18 17 01 e9 11 05 17 17     ................
     cb4:	19 01 ea 54 05 14 17 15 02 ea 8e 05 11 17 14 02     ...T............
     cc4:	ea bf 05 17 18 19 01 e9 04 06 16 17 19 02 ea 44     ...............D
     cd4:	06 09 17 0b 02 ea 5e 06 0c 17 0d 00 ea 81 06 17     ......^.........
     ce4:	17 19 02 ea c4 06 13 17 15 02 ea fb 06 1d 17 1f     ................
     cf4:	01 ea 4f 07 17 17 19 01 ea 92 07 17 18 19 01 e9     ..O.............
     d04:	d7 07 12 17 14 01 ea 0b 08 17 1e 19 01 e9 62 08     ..............b.
     d14:	15 17 17 02 ea 9f 08 10 18 13 01 e9 cf 08 14 17     ................
     d24:	15 01 ea 09 09 16 17 19 02 ea 49 09 18 17 19 00     ..........I.....
     d34:	ea 8e 09 21 17 21 00 ea ed 09 19 17 19 00 ea 35     ...!.!.........5
     d44:	0a 18 17 19 01 ea 7a 0a 15 17 15 00 ea b7 0a 07     ......z.........
     d54:	1c 0c 03 ea d0 0a 0a 18 0a 00 e9 ee 0a 07 1c 0c     ................
     d64:	02 ea 07 0b 0f 0d 10 01 ea 20 0b 12 02 11 00 03     ......... ......
     d74:	25 0b 08 06 09 01 e9 2b 0b 0d 10 0f 02 f1 45 0b     %......+......E.
     d84:	10 19 11 01 e8 77 0b 0e 10 10 01 f1 93 0b 10 19     .....w..........
     d94:	11 01 e8 c5 0b 0d 10 10 01 f1 df 0b 0d 19 0d 00     ................
     da4:	e8 08 0c 10 18 10 01 f1 38 0c 10 19 11 01 e8 6a     ........8......j
     db4:	0c 08 18 0a 00 e9 82 0c 09 20 0c 00 e9 a6 0c 11     ......... ......
     dc4:	19 12 01 e8 dc 0c 08 19 09 00 e8 f5 0c 1a 10 1b     ................
     dd4:	01 f1 29 0d 10 10 11 01 f1 49 0d 10 10 11 01 f1     ..)......I......
     de4:	69 0d 10 18 11 01 f1 99 0d 10 18 11 01 f1 c9 0d     i...............
     df4:	0b 10 0c 01 f1 df 0d 0a 10 0d 01 f1 f3 0d 08 13     ................
     e04:	0a 02 ee 06 0e 10 10 11 01 f1 26 0e 10 10 10 00     ..........&.....
     e14:	f1 46 0e 18 10 18 00 f1 76 0e 11 10 11 00 f1 98     .F......v.......
     e24:	0e 10 18 10 00 f1 c8 0e 0e 10 0f 00 f1 e4 0e 08     ................
     e34:	1e 11 03 e9 02 0f 02 18 07 02 e9 08 0f 08 1e 11     ................
     e44:	06 ea 26 0f 10 04 11 01 f6                          ..&......

00000e4d <_ZL22FreeSerif18pt7bBitmaps>:
     e4d:	6f ff ff fe 66 66 66 64 40 00 6f f6 e7 e7 e7 e7     o...fffd@.o.....
     e5d:	e7 46 42 42 42 03 06 01 83 00 c1 80 61 c0 30 c0     .FBBB.......a.0.
     e6d:	38 60 18 30 ff ff 7f ff 83 06 01 86 00 c3 00 c1     8`.0............
     e7d:	87 ff ff ff fe 18 30 0c 18 06 18 06 0c 03 06 01     ......0.........
     e8d:	83 00 c1 80 60 c0 02 00 10 03 e0 64 e6 23 61 1b     ....`......d.#a.
     e9d:	08 58 42 e2 03 90 1f 80 7e 00 fc 01 f0 0f c0 4e     .XB.....~......N
     ead:	02 38 10 e0 87 04 3c 21 e1 1b c9 cf fc 1f 80 10     .8....<!........
     ebd:	00 80 07 80 20 0f f0 70 0f 07 d0 0f 02 18 07 01     .... ..p........
     ecd:	18 07 00 8c 03 80 4c 01 80 44 00 c0 26 00 60 22     ......L..D..&.`"
     edd:	0f 30 33 1f cc 73 1e 37 f1 8e 19 e1 8e 04 00 86     .03..s.7........
     eed:	02 00 c7 01 00 c3 80 80 61 80 80 60 c0 40 30 60     ........a..`.@0`
     efd:	40 30 38 e0 30 0f e0 18 03 c0 00 78 00 00 7e 00     @08.0......x..~.
     f0d:	00 61 80 00 60 60 00 30 30 00 18 18 00 0c 0c 00     .a..``.00.......
     f1d:	06 0c 00 03 8e 00 01 ce 00 00 7c 3f c0 38 07 80     ..........|?.8..
     f2d:	3e 03 80 77 01 80 73 c0 80 f0 f0 c0 70 7c c0 78     >..w..s.....p|.x
     f3d:	1e 40 3c 07 c0 1e 01 e0 0f 00 78 0f c0 ff 0d f0     .@<.......x.....
     f4d:	c7 fc 7f c1 fc 1f 80 3c 00 ff fe 92 40 00 80 80     .......<....@...
     f5d:	80 80 80 c0 c0 60 70 30 18 1c 0e 07 03 81 c0 e0     .....`p0........
     f6d:	70 38 0c 06 03 80 c0 60 18 0c 03 00 c0 30 0c 80     p8.....`.....0..
     f7d:	30 0c 03 00 c0 60 18 0c 07 01 80 c0 70 38 1c 0e     0....`......p8..
     f8d:	07 03 81 c0 e0 60 30 38 18 0c 0c 04 04 04 04 04     .....`08........
     f9d:	00 0c 00 c0 0c 0c 46 e4 f7 5e 1f 00 c0 17 8e 4e     ......F..^.....N
     fad:	e4 fc c6 0c 00 c0 01 80 01 80 01 80 01 80 01 80     ................
     fbd:	01 80 01 80 01 80 ff ff ff ff 01 80 01 80 01 80     ................
     fcd:	01 80 01 80 01 80 01 80 01 80 6f ff 11 24 80 ff     ..........o..$..
     fdd:	ff 6f f6 00 c0 60 18 06 03 80 c0 30 1c 06 01 80     .o...`.....0....
     fed:	e0 30 0c 07 01 80 60 38 0c 03 01 c0 60 18 0e 03     .0....`8....`...
     ffd:	00 03 e0 0e 70 1c 38 38 1c 38 1c 78 1e 70 0e f0     ....p.88.8.x.p..
    100d:	0f f0 0f f0 0f f0 0f f0 0f f0 0f f0 0f f0 0f f0     ................
    101d:	0f 70 0e 70 0e 78 1e 38 1c 38 1c 1c 38 0c 30 03     .p.p.x.8.8..8.0.
    102d:	c0 06 03 83 e3 38 0e 03 80 e0 38 0e 03 80 e0 38     .....8....8....8
    103d:	0e 03 80 e0 38 0e 03 80 e0 38 0e 03 81 e1 ff 07     ....8....8......
    104d:	c0 1f f0 3f f8 70 f8 60 3c c0 3c 80 1c 00 1c 00     ...?.p.`<.<.....
    105d:	1c 00 18 00 18 00 30 00 30 00 60 00 c0 00 80 01     ......0.0.`.....
    106d:	00 02 00 04 00 08 01 10 02 3f fe 7f fc ff fc 0f     .........?......
    107d:	c0 ff 0c 3c 80 e4 03 00 18 00 c0 04 00 40 04 00     ...<.........@..
    108d:	f8 1f e0 0f 00 1c 00 e0 03 00 18 00 c0 06 00 60     ...............`
    109d:	03 78 73 ff 0f c0 00 30 00 30 00 70 00 f0 00 b0     .xs....0.0.p....
    10ad:	01 30 03 30 06 30 04 30 08 30 18 30 10 30 20 30     .0.0.0.0.0.0.0 0
    10bd:	60 30 c0 30 ff ff ff ff 00 30 00 30 00 30 00 30     `0.0.....0.0.0.0
    10cd:	00 30 00 30 00 00 7f c3 fe 1f e1 80 08 00 c0 07     .0.0............
    10dd:	c0 7f 81 ff 00 fc 01 e0 07 80 1c 00 60 03 00 18     ............`...
    10ed:	00 c0 06 00 60 07 78 73 ff 0f c0 00 0e 00 f8 03     ....`.xs........
    10fd:	c0 07 80 0f 00 1e 00 3c 00 7c 00 79 f0 7f fc f8     .......<.|.y....
    110d:	3c f0 1e f0 1f f0 0f f0 0f f0 0f f0 0f 70 0f 78     <............p.x
    111d:	0f 78 0e 3c 1e 1e 3c 0f f8 07 e0 3f fd ff f7 ff     .x.<..<....?....
    112d:	f0 06 80 18 00 60 03 00 0c 00 30 01 80 06 00 18     .....`....0.....
    113d:	00 e0 03 00 0c 00 70 01 80 06 00 38 00 c0 03 00     ......p....8....
    114d:	1c 00 60 00 0f 83 fc 70 e6 07 c0 3c 03 c0 3e 03     ..`....p...<..>.
    115d:	70 67 8c 3d 81 f0 0f 81 7c 21 e6 0e c0 7c 03 c0     pg.=....|!...|..
    116d:	3c 03 c0 36 06 70 e3 fc 0f 80 07 c0 1f f0 3c 78     <..6.p........<x
    117d:	38 3c 78 1e 70 1e f0 0e f0 0f f0 0f f0 0f f0 0f     8<x.p...........
    118d:	f0 0f f8 0f 78 0f 3c 3f 1f ee 0f 9e 00 1e 00 3c     ....x.<?.......<
    119d:	00 38 00 78 00 f0 01 e0 07 80 1e 00 70 00 6f f6     .8.x........p.o.
    11ad:	00 00 00 00 06 ff 60 67 bc c0 00 00 00 00 00 19     ......`g........
    11bd:	ef 78 42 22 20 00 00 c0 00 f0 01 f8 01 f8 01 f8     .xB" ...........
    11cd:	01 f0 03 f0 03 f0 00 f0 00 3e 00 07 e0 00 7e 00     .........>....~.
    11dd:	03 e0 00 3e 00 03 f0 00 3f 00 03 c0 00 10 ff ff     ...>....?.......
    11ed:	ff ff f0 00 00 00 00 00 00 00 00 00 00 03 ff ff     ................
    11fd:	ff ff c0 80 00 3c 00 0f c0 00 fc 00 07 c0 00 7c     .....<.........|
    120d:	00 07 e0 00 7e 00 07 c0 00 f0 00 fc 00 fc 00 f8     ....~...........
    121d:	01 f8 01 f8 01 f8 00 f0 00 30 00 00 1f 81 ff 18     .........0......
    122d:	7d 81 ec 07 f0 3f 81 e0 0f 00 70 03 80 38 01 80     }....?....p..8..
    123d:	08 00 c0 04 00 20 02 00 10 00 80 00 00 00 03 00     ..... ..........
    124d:	3c 01 e0 07 00 00 7f 00 01 ff c0 07 80 f0 0f 00     <...............
    125d:	38 1c 00 1c 38 00 0c 38 00 06 70 1e 02 70 3f e3     8...8..8..p..p?.
    126d:	f0 71 e1 e0 e0 c1 e0 c0 c1 e0 c1 c1 e1 81 c1 e1     .q..............
    127d:	81 83 e1 83 82 e1 83 86 71 c7 8c 70 f9 f8 38 f0     ........q..p..8.
    128d:	f0 3c 00 00 1e 00 00 07 80 70 03 ff e0 00 7f 00     .<.......p......
    129d:	00 10 00 00 38 00 00 38 00 00 38 00 00 7c 00 00     ....8..8..8..|..
    12ad:	5c 00 00 de 00 00 8e 00 01 8f 00 01 87 00 03 07     \...............
    12bd:	80 03 03 80 02 03 c0 06 03 c0 07 ff c0 0f ff e0     ................
    12cd:	0c 01 e0 18 00 f0 18 00 f0 30 00 78 30 00 78 70     .........0.x0.xp
    12dd:	00 7c fc 01 ff ff fc 03 ff f8 1e 0f c1 e0 3c 1e     .|............<.
    12ed:	01 e1 e0 1e 1e 01 e1 e0 1e 1e 03 c1 e0 78 1f fe     .............x..
    12fd:	01 ff f0 1e 07 c1 e0 1e 1e 00 f1 e0 0f 1e 00 f1     ................
    130d:	e0 0f 1e 00 f1 e0 1e 1e 07 e3 ff f8 ff fe 00 00     ................
    131d:	fe 08 0f ff 60 fc 1f 87 c0 1e 3c 00 38 f0 00 67     ....`.....<.8..g
    132d:	80 01 9e 00 02 f0 00 03 c0 00 0f 00 00 3c 00 00     .............<..
    133d:	f0 00 03 c0 00 0f 00 00 3c 00 00 78 00 01 e0 00     ........<..x....
    134d:	03 c0 00 0f 00 02 1f 00 38 3f 03 80 7f fc 00 3f     ........8?.....?
    135d:	80 ff fc 00 7f ff 00 78 3f 80 f0 0f 81 e0 0f 83     .......x?.......
    136d:	c0 0f 07 80 0f 0f 00 1e 1e 00 1e 3c 00 3c 78 00     ...........<.<x.
    137d:	78 f0 00 f1 e0 01 e3 c0 03 c7 80 07 8f 00 1e 1e     x...............
    138d:	00 3c 3c 00 f0 78 01 e0 f0 0f 81 e0 7e 07 ff f0     .<<..x......~...
    139d:	3f ff 00 00 ff ff 87 ff f8 3c 01 83 c0 08 3c 00     ?........<....<.
    13ad:	83 c0 00 3c 00 03 c0 00 3c 02 03 c0 60 3f fe 03     ...<....<...`?..
    13bd:	ff e0 3c 06 03 c0 20 3c 00 03 c0 00 3c 00 03 c0     ..<... <....<...
    13cd:	01 3c 00 23 c0 06 3c 01 e7 ff fe ff ff c0 ff ff     .<.#..<.........
    13dd:	bf ff cf 00 67 80 13 c0 09 e0 00 f0 00 78 00 3c     ....g........x.<
    13ed:	02 1e 03 0f ff 87 ff c3 c0 61 e0 10 f0 00 78 00     .........a....x.
    13fd:	3c 00 1e 00 0f 00 07 80 03 c0 03 f0 03 fc 00 00     <...............
    140d:	fe 04 07 ff b8 1f 03 f0 f8 01 e3 e0 01 c7 80 01     ................
    141d:	9e 00 01 3c 00 00 f0 00 01 e0 00 03 c0 00 07 80     ...<............
    142d:	07 ff 00 07 de 00 07 bc 00 0f 78 00 1e 78 00 3c     ..........x..x.<
    143d:	f0 00 78 f0 00 f1 f0 01 e1 f0 03 c1 f8 1f 00 ff     ..x.............
    144d:	fc 00 3f 80 ff 03 fd f8 07 e3 c0 0f 0f 00 3c 3c     ..?...........<<
    145d:	00 f0 f0 03 c3 c0 0f 0f 00 3c 3c 00 f0 f0 03 c3     .........<<.....
    146d:	ff ff 0f ff fc 3c 00 f0 f0 03 c3 c0 0f 0f 00 3c     .....<.........<
    147d:	3c 00 f0 f0 03 c3 c0 0f 0f 00 3c 3c 00 f1 f8 07     <.........<<....
    148d:	ef f0 3f c0 ff bf 0f 07 83 c1 e0 f0 78 3c 1e 0f     ..?.........x<..
    149d:	07 83 c1 e0 f0 78 3c 1e 0f 07 83 c3 f3 fe 0f f0     .....x<.........
    14ad:	7e 03 c0 3c 03 c0 3c 03 c0 3c 03 c0 3c 03 c0 3c     ~..<..<..<..<..<
    14bd:	03 c0 3c 03 c0 3c 03 c0 3c 03 c6 38 f3 8f f0 7c     ..<..<..<..8...|
    14cd:	00 ff 07 fc fc 03 c0 f0 07 01 e0 1c 03 c0 60 07     ..............`.
    14dd:	81 80 0f 06 00 1e 18 00 3c 60 00 79 80 00 ff 00     ........<`.y....
    14ed:	01 ff 00 03 df 00 07 8f 00 0f 0f 00 1e 0f 00 3c     ...............<
    14fd:	0f 00 78 0f 00 f0 1f 01 e0 1f 03 c0 1f 0f c0 3f     ..x............?
    150d:	3f c1 ff 80 ff 00 0f c0 00 f0 00 1e 00 03 c0 00     ?...............
    151d:	78 00 0f 00 01 e0 00 3c 00 07 80 00 f0 00 1e 00     x......<........
    152d:	03 c0 00 78 00 0f 00 01 e0 00 3c 00 07 80 04 f0     ...x......<.....
    153d:	01 1e 00 63 c0 3c ff ff bf ff e0 fc 00 03 f9 f0     ...c.<..........
    154d:	00 1f 87 80 01 f8 3e 00 0f c1 f0 00 5e 0b c0 06     ......>.....^...
    155d:	f0 5e 00 37 82 78 03 3c 13 c0 19 e0 8f 01 8f 04     .^.7.x.<........
    156d:	78 0c 78 21 e0 c3 c1 0f 06 1e 08 3c 60 f0 41 e3     x.x!.......<`.A.
    157d:	07 82 07 b0 3c 10 3d 81 e0 81 f8 0f 04 07 c0 78     ....<.=........x
    158d:	20 3c 03 c1 00 e0 1e 1c 06 01 fb f8 10 1f e0 fc      <..............
    159d:	00 fe 78 00 70 78 00 40 f8 00 81 f8 01 02 f8 02     ..x.px.@........
    15ad:	04 f8 04 08 f0 08 11 f0 10 21 f0 20 41 f0 40 81     .........!. A.@.
    15bd:	f0 81 01 f1 02 01 e2 04 03 e4 08 03 e8 10 03 f0     ................
    15cd:	20 03 e0 40 03 c0 80 03 81 00 07 07 00 06 3f 80      ..@..........?.
    15dd:	04 00 00 fe 00 07 ff 00 3e 0f 80 f0 07 83 c0 07     ........>.......
    15ed:	87 80 07 1e 00 0f 3c 00 1e f0 00 1f e0 00 3f c0     ......<.......?.
    15fd:	00 7f 80 00 ff 00 01 fe 00 03 fc 00 07 f8 00 0f     ................
    160d:	78 00 3c f0 00 78 e0 01 e1 e0 03 c1 e0 0f 01 f0     x.<..x..........
    161d:	7c 00 ff e0 00 7f 00 ff f8 1f ff 83 c1 f0 f0 1e     |...............
    162d:	3c 07 cf 00 f3 c0 3c f0 0f 3c 03 cf 01 f3 c0 78     <.....<..<.....x
    163d:	f0 7c 3f fe 0f fe 03 c0 00 f0 00 3c 00 0f 00 03     .|?........<....
    164d:	c0 00 f0 00 3c 00 1f 00 0f f0 00 00 fe 00 07 ff     ....<...........
    165d:	00 3e 0f 80 f0 07 83 c0 07 87 80 0f 1e 00 0f 3c     .>.............<
    166d:	00 1e f0 00 1d e0 00 3f c0 00 7f 80 00 ff 00 01     .......?........
    167d:	fe 00 03 fc 00 07 f8 00 0f 70 00 1c f0 00 79 e0     .........p....y.
    168d:	00 f1 e0 03 c1 c0 07 01 c0 1c 01 e0 f0 00 7f 00     ................
    169d:	00 7c 00 00 7c 00 00 7c 00 00 7e 00 00 1f 00 00     .|..|..|..~.....
    16ad:	0f c0 ff f0 03 ff f0 0f 07 c0 78 1e 03 c0 78 1e     ..........x...x.
    16bd:	03 c0 f0 1e 07 80 f0 3c 07 81 e0 78 0f 0f 80 7f     .......<...x....
    16cd:	f8 03 fe 00 1e 78 00 f1 e0 07 87 80 3c 3c 01 e0     .....x......<<..
    16dd:	f0 0f 03 c0 78 0f 03 c0 7c 3f 01 f3 fc 07 e0 07     ....x...|?......
    16ed:	84 1f fc 3c 3e 30 0e 70 06 70 06 70 02 78 00 7c     ...<>0.p.p.p.x.|
    16fd:	00 3f 00 1f c0 0f e0 03 f8 00 fc 00 3e 00 1f 80     .?..........>...
    170d:	0f 80 0f c0 0f e0 0f 70 1e 78 3c 4f f8 43 f0 ff     .......p.x<O.C..
    171d:	ff ff ff ff e0 f0 7c 0f 03 80 f0 10 0f 00 00 f0     ......|.........
    172d:	00 0f 00 00 f0 00 0f 00 00 f0 00 0f 00 00 f0 00     ................
    173d:	0f 00 00 f0 00 0f 00 00 f0 00 0f 00 00 f0 00 0f     ................
    174d:	00 00 f0 00 1f 80 03 fc 00 ff 01 fd f8 01 c3 c0     ................
    175d:	02 0f 00 08 3c 00 20 f0 00 83 c0 02 0f 00 08 3c     ....<. ........<
    176d:	00 20 f0 00 83 c0 02 0f 00 08 3c 00 20 f0 00 83     . ........<. ...
    177d:	c0 02 0f 00 08 3c 00 20 f0 00 81 e0 04 07 80 30     .....<. .......0
    178d:	0f 81 80 1f fc 00 1f c0 00 ff c0 7f 3e 00 1e 1e     ............>...
    179d:	00 0c 0e 00 18 0f 00 18 07 00 10 07 80 30 07 80     .............0..
    17ad:	30 03 c0 60 03 c0 60 01 e0 40 01 e0 c0 00 f0 c0     0..`..`..@......
    17bd:	00 f1 80 00 71 80 00 7b 00 00 3b 00 00 3e 00 00     ....q..{..;..>..
    17cd:	1e 00 00 1e 00 00 0c 00 00 0c 00 00 08 00 ff 9f     ................
    17dd:	f0 3f 9f 03 e0 07 07 80 f0 03 03 c0 78 01 80 e0     .?..........x...
    17ed:	1e 00 80 78 0f 00 c0 1c 03 80 60 0f 01 e0 20 07     ...x......`... .
    17fd:	81 f0 30 01 c0 bc 18 00 f0 de 08 00 78 67 0c 00     ..0.........xg..
    180d:	1e 23 c4 00 0f 31 e6 00 03 90 7b 00 01 f8 3d 00     .#...1....{...=.
    181d:	00 fc 0f 80 00 3c 07 c0 00 1e 03 c0 00 0f 00 e0     .....<..........
    182d:	00 03 00 70 00 01 80 10 00 00 80 08 00 7f e0 ff     ...p............
    183d:	0f c0 1e 03 e0 0e 00 f0 06 00 3c 06 00 0f 06 00     ..........<.....
    184d:	07 86 00 01 e6 00 00 7b 00 00 3f 00 00 0f 00 00     .......{..?.....
    185d:	03 c0 00 03 f0 00 03 78 00 01 9e 00 01 87 80 01     .......x........
    186d:	83 e0 01 80 f0 01 80 3c 01 80 1f 01 c0 07 c1 e0     .......<........
    187d:	03 f3 fe 0f fe ff c0 ff 7e 00 1c 1e 00 18 1f 00     ........~.......
    188d:	30 0f 00 60 07 80 60 03 c0 c0 03 e1 80 01 e1 80     0..`..`.........
    189d:	00 f3 00 00 fe 00 00 7e 00 00 3c 00 00 3c 00 00     .......~..<..<..
    18ad:	3c 00 00 3c 00 00 3c 00 00 3c 00 00 3c 00 00 3c     <..<..<..<..<..<
    18bd:	00 00 3c 00 00 7e 00 01 ff 80 3f ff f1 ff ff 9c     ..<..~....?.....
    18cd:	00 78 c0 07 84 00 38 00 03 c0 00 3c 00 03 c0 00     .x....8....<....
    18dd:	1c 00 01 e0 00 1e 00 01 e0 00 0e 00 00 f0 00 0f     ................
    18ed:	00 00 f0 00 07 00 00 78 00 47 80 06 78 00 33 80     .......x.G..x.3.
    18fd:	07 3f ff fb ff ff c0 ff 83 06 0c 18 30 60 c1 83     .?..........0`..
    190d:	06 0c 18 30 60 c1 83 06 0c 18 30 60 c1 83 07 f0     ...0`.....0`....
    191d:	c0 18 06 01 80 70 0c 03 00 e0 18 06 01 c0 30 0c     .....p........0.
    192d:	03 80 60 18 07 00 c0 30 0e 01 80 60 1c 03 fe 0c     ..`....0...`....
    193d:	18 30 60 c1 83 06 0c 18 30 60 c1 83 06 0c 18 30     .0`.....0`.....0
    194d:	60 c1 83 06 0c 1f f0 03 80 0f 00 1f 00 76 00 ce     `............v..
    195d:	03 8c 06 1c 1c 18 30 30 e0 31 80 67 00 6c 00 c0     ......00.1.g.l..
    196d:	ff ff ff ff f0 c0 e0 70 18 0c 03 1f 03 8c 38 31     .......p......81
    197d:	c1 8e 0c 00 60 0f 01 98 30 c3 86 38 31 c1 8e 0c     ....`...0..81...
    198d:	78 e5 fb cf 0c 00 00 38 00 f8 00 38 00 38 00 38     x......8...8.8.8
    199d:	00 38 00 38 00 38 00 39 f0 3b fc 3c 3e 38 0e 38     .8.8.8.9.;.<>8.8
    19ad:	0f 38 07 38 07 38 07 38 07 38 07 38 06 38 0e 38     .8.8.8.8.8.8.8.8
    19bd:	0c 3c 1c 1f f0 07 e0 07 e0 7f e3 87 d8 0f 60 1b     .<............`.
    19cd:	00 0c 00 30 00 c0 03 00 0e 00 3c 01 78 19 ff c3     ...0......<.x...
    19dd:	fe 03 e0 00 00 00 1c 00 7c 00 1c 00 1c 00 1c 00     ........|.......
    19ed:	1c 00 1c 00 1c 07 9c 1f dc 38 7c 70 3c 70 1c 60     .........8|p<p.`
    19fd:	1c e0 1c e0 1c e0 1c e0 1c e0 1c f0 1c 70 1c 7c     .............p.|
    1a0d:	3e 3f df 0f 90 0f 81 ff 08 3c 80 e7 ff 7f ff 00     >?.......<......
    1a1d:	18 00 c0 07 00 38 03 e0 37 83 3f f0 ff 03 f0 01     .....8..7.?.....
    1a2d:	f0 3f c3 8e 18 00 c0 0e 00 70 03 80 1c 03 fe 1f     .?.......p......
    1a3d:	f0 38 01 c0 0e 00 70 03 80 1c 00 e0 07 00 38 01     .8....p.......8.
    1a4d:	c0 0e 00 70 07 c0 ff 80 0f c0 1f ff 38 ff 70 70     ...p........8.pp
    1a5d:	70 70 70 30 70 30 70 30 38 20 1c 60 0f 80 10 00     ppp0p0p08 .`....
    1a6d:	20 00 60 00 7f e0 3f fc 1f fe 20 06 40 02 c0 02      .`...?... .@...
    1a7d:	c0 04 f0 18 7f f0 1f 80 00 00 38 00 f8 00 38 00     ..........8...8.
    1a8d:	38 00 38 00 38 00 38 00 38 00 38 f0 3b f8 3e 3c     8.8.8.8.8.8.;.><
    1a9d:	3c 1c 38 1c 38 1c 38 1c 38 1c 38 1c 38 1c 38 1c     <.8.8.8.8.8.8.8.
    1aad:	38 1c 38 1c 38 1c 7c 3e fe 7f 18 3c 3c 18 00 00     8.8.8.|>...<<...
    1abd:	00 00 04 3c 7c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c     ...<|...........
    1acd:	3c ff 03 03 c1 e0 60 00 00 00 00 00 83 c3 e0 70     <.....`........p
    1add:	38 1c 0e 07 03 81 c0 e0 70 38 1c 0e 07 03 81 c0     8.......p8......
    1aed:	e0 70 37 3b f8 f8 00 00 1c 00 3e 00 07 00 03 80     .p7;......>.....
    1afd:	01 c0 00 e0 00 70 00 38 00 1c 3f 8e 0f 07 06 03     .....p.8..?.....
    1b0d:	86 01 c4 00 e4 00 7e 00 3f 80 1d c0 0e 70 07 1c     ......~.?....p..
    1b1d:	03 8f 01 c3 c0 e0 f0 f8 3c fe 7f 80 00 1c 7c 1c     ........<.....|.
    1b2d:	1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c     ................
    1b3d:	1c 1c 1c 3c ff 38 f0 7c 3e fe 7f 83 e3 f0 e0 e0     ...<.8.|>.......
    1b4d:	70 1c 38 1c 07 0e 07 01 c3 81 c0 70 e0 70 1c 38     p.8........p.p.8
    1b5d:	1c 07 0e 07 01 c3 81 c0 70 e0 70 1c 38 1c 07 0e     ........p.p.8...
    1b6d:	07 01 c3 81 e0 73 f9 fc 7f 38 f0 fb f8 3e 3c 38     .....s...8...><8
    1b7d:	1c 38 1c 38 1c 38 1c 38 1c 38 1c 38 1c 38 1c 38     .8.8.8.8.8.8.8.8
    1b8d:	1c 38 1c 38 1c 78 3c fe 7f 07 e0 1f f8 3c 7c 78     .8.8.x<......<|x
    1b9d:	3e 70 1e f0 0f f0 0f f0 0f f0 0f f0 0f f8 0f 78     >p.............x
    1bad:	0e 7c 1c 3e 3c 0f f0 07 c0 18 f0 fb fc 3e 1e 38     .|.><........>.8
    1bbd:	0e 38 0f 38 07 38 07 38 07 38 07 38 07 38 06 38     .8.8.8.8.8.8.8.8
    1bcd:	0e 38 0c 3e 1c 3b f8 39 e0 38 00 38 00 38 00 38     .8.>.;.9.8.8.8.8
    1bdd:	00 38 00 38 00 7c 00 ff 00 07 c4 1f ec 3c 3c 70     .8.8.|.......<<p
    1bed:	1c 70 1c 60 1c e0 1c e0 1c e0 1c e0 1c e0 1c f0     .p.`............
    1bfd:	1c 70 1c 78 3c 3f dc 1f 1c 00 1c 00 1c 00 1c 00     .p.x<?..........
    1c0d:	1c 00 1c 00 1c 00 3e 00 ff 19 ff 7c f3 9c 03 80     ......>....|....
    1c1d:	70 0e 01 c0 38 07 00 e0 1c 03 80 70 1f 07 f0 3e     p...8......p...>
    1c2d:	58 7c 0f 03 c0 7c 07 80 f8 1f 81 f8 1e 03 c0 f0     X|...|..........
    1c3d:	3e 1a 7c 10 30 70 fe fe 70 70 70 70 70 70 70 70     >.|.0p..pppppppp
    1c4d:	70 70 70 79 7e 3c f8 7c 38 3c 38 1c 38 1c 38 1c     pppy~<.|8<8.8.8.
    1c5d:	38 1c 38 1c 38 1c 38 1c 38 1c 38 1c 38 1c 38 1c     8.8.8.8.8.8.8.8.
    1c6d:	3c 7c 1f df 0f 18 fe 1f 7c 06 38 04 1c 04 1c 0c     <|......|.8.....
    1c7d:	0e 08 0e 18 07 10 07 10 07 20 03 a0 03 e0 01 c0     ......... ......
    1c8d:	01 c0 00 80 00 80 fc 7f 1f 78 3c 06 38 1c 04 38     .........x<.8..8
    1c9d:	1c 04 1c 1c 0c 1c 0e 08 1c 1e 18 0e 17 10 0e 37     ...............7
    1cad:	10 07 23 30 07 63 a0 07 43 e0 03 c1 c0 03 81 c0     ..#0.c..C.......
    1cbd:	01 80 80 01 00 80 7f 7e 1e 0c 07 8c 01 c4 00 76     .......~.......v
    1ccd:	00 3e 00 0e 00 03 80 03 e0 01 70 01 1c 01 8f 01     .>........p.....
    1cdd:	83 80 80 e0 c0 79 f0 ff fe 0f 7c 06 38 06 1c 04     .....y....|.8...
    1ced:	1c 0c 0e 0c 0e 08 0f 18 07 10 07 90 03 b0 03 a0     ................
    1cfd:	01 e0 01 e0 00 c0 00 c0 00 80 00 80 01 80 01 00     ................
    1d0d:	03 00 7e 00 7c 00 78 00 7f f9 ff e6 07 10 38 00     ..~.|.x.......8.
    1d1d:	e0 07 00 38 01 e0 07 00 38 01 e0 07 01 38 0d c0     ...8....8....8..
    1d2d:	3f ff bf fe 07 0e 1c 18 18 18 18 18 18 18 18 18     ?...............
    1d3d:	18 30 60 60 10 18 18 18 18 18 18 18 18 18 18 1c     .0``............
    1d4d:	0e 07 ff ff ff ff ff ff e0 70 38 18 18 18 18 18     .........p8.....
    1d5d:	18 18 18 18 18 08 06 06 08 18 18 18 18 18 18 18     ................
    1d6d:	18 18 18 38 70 e0 3e 00 7f 87 e3 fe 00 7c           ...8p.>......|

00001d7b <Terminal12x16>:
    1d7b:	0c 10 20 60 07 00 00 00 00 00 00 00 00 00 00 00     .. `............
	...
    1d97:	00 08 00 00 00 00 00 00 7c 00 ff 33 ff 33 ff 33     ........|..3.3.3
    1da7:	7c 00 00 00 00 00 00 00 00 00 09 00 00 00 00 3c     |..............<
    1db7:	00 3c 00 3c 00 00 00 3c 00 3c 00 3c 00 00 00 00     .<.<...<.<.<....
    1dc7:	00 00 00 0c 00 02 10 1e 90 1f f0 1f fe 03 7e 1e     ..............~.
    1dd7:	9e 1f f0 1f fe 03 7e 02 1e 00 10 00 0a 00 00 78     ......~........x
    1de7:	04 fc 0c fc 0c ff 3f ff 3f ff 3f cc 0f cc 0f 88     ......?.?.?.....
    1df7:	07 00 00 00 00 0c 00 30 38 38 38 3c 38 1e 38 0f     .......0888<8.8.
    1e07:	80 07 c0 03 e0 39 f0 38 78 38 3c 38 1c 00 0b 00     .....9.8x8<8....
    1e17:	00 00 1f b8 3f fc 3f fe 31 e6 37 fe 3f 3e 1e 1c     ....?.?.1.7.?>..
    1e27:	3e 00 36 00 22 00 00 07 00 00 00 00 00 00 27 00     >.6.".........'.
    1e37:	3f 00 3f 00 1f 00 00 00 00 00 00 00 00 00 00 00     ?.?.............
    1e47:	09 00 00 00 00 f0 03 fc 0f fe 1f ff 3f 07 38 01     ............?.8.
    1e57:	20 01 20 00 00 00 00 00 00 09 00 00 00 00 01 20      . ............ 
    1e67:	01 20 07 38 ff 3f fe 1f fc 0f f0 03 00 00 00 00     . .8.?..........
    1e77:	00 00 0a 00 00 98 0c b8 0e f8 0f f8 0f f8 0f f8     ................
    1e87:	0f f8 0f b8 0e 98 0c 00 00 00 00 0a 00 00 80 01     ................
    1e97:	80 01 80 01 f0 0f f0 0f f0 0f 80 01 80 01 80 01     ................
    1ea7:	00 00 00 00 07 00 00 00 00 00 00 00 b8 00 f8 00     ................
    1eb7:	f8 00 78 00 00 00 00 00 00 00 00 00 00 0a 00 00     ..x.............
    1ec7:	80 01 80 01 80 01 80 01 80 01 80 01 80 01 80 01     ................
    1ed7:	80 01 00 00 00 00 07 00 00 00 00 00 00 00 38 00     ..............8.
    1ee7:	38 00 38 00 38 00 00 00 00 00 00 00 00 00 00 0c     8.8.8...........
    1ef7:	00 18 00 1c 00 1e 00 0f 80 07 c0 03 e0 01 f0 00     ................
    1f07:	78 00 3c 00 1e 00 0e 00 0c f8 07 fe 1f fe 1f 07     x.<.............
    1f17:	3f 83 33 c3 31 e3 30 73 30 3f 38 fe 1f fe 1f f8     ?.3.1.0s0?8.....
    1f27:	07 0b 00 00 00 00 0c 30 0c 30 0e 30 ff 3f ff 3f     .......0.0.0.?.?
    1f37:	ff 3f 00 30 00 30 00 30 00 00 0c 1c 30 1e 38 1f     .?.0.0.0....0.8.
    1f47:	3c 07 3e 03 3f 83 37 c3 33 e3 31 f7 30 7f 30 3e     <.>.?.7.3.1.0.0>
    1f57:	30 1c 30 0c 0c 0c 0e 1c 0f 3c c7 38 c3 30 c3 30     0.0......<.8.0.0
    1f67:	c3 30 c3 30 e7 39 ff 3f 7e 1f 3c 0e 0c c0 03 e0     .0.0.9.?~.<.....
    1f77:	03 f0 03 78 03 3c 03 1e 03 0f 03 ff 3f ff 3f ff     ...x.<......?.?.
    1f87:	3f 00 03 00 03 0c 3f 0c 7f 1c 7f 3c 63 38 63 30     ?.....?....<c8c0
    1f97:	63 30 63 30 63 30 e3 38 e3 3f c3 1f 83 0f 0c c0     c0c0c0.8.?......
    1fa7:	0f f0 1f f8 3f fc 39 de 30 cf 30 c7 30 c3 30 c3     ....?.9.0.0.0.0.
    1fb7:	39 c3 3f 80 1f 00 0f 0c 03 00 03 00 03 00 03 30     9.?............0
    1fc7:	03 3c 03 3f c3 0f f3 03 ff 00 3f 00 0f 00 03 00     .<.?......?.....
    1fd7:	0c 00 0f bc 1f fe 3f ff 39 e7 30 c3 30 c3 30 e7     ......?.9.0.0.0.
    1fe7:	30 ff 39 fe 3f bc 1f 00 0f 0c 3c 00 7e 00 ff 30     0.9.?.....<.~..0
    1ff7:	e7 30 c3 30 c3 38 c3 3c c3 1e e7 0f ff 07 fe 03     .0.0.8.<........
    2007:	fc 00 07 00 00 00 00 00 00 70 1c 70 1c 70 1c 70     .........p.p.p.p
    2017:	1c 00 00 00 00 00 00 00 00 00 00 07 00 00 00 00     ................
    2027:	00 00 70 9c 70 fc 70 fc 70 7c 00 00 00 00 00 00     ..p.p.p.p|......
    2037:	00 00 00 00 0a 00 00 c0 00 e0 01 f0 03 f8 07 3c     ...............<
    2047:	0f 1e 1e 0f 3c 07 38 03 30 00 00 00 00 0b 00 00     ....<.8.0.......
    2057:	60 06 60 06 60 06 60 06 60 06 60 06 60 06 60 06     `.`.`.`.`.`.`.`.
    2067:	60 06 60 06 00 00 0a 00 00 03 30 07 38 0f 3c 1e     `.`.......0.8.<.
    2077:	1e 3c 0f f8 07 f0 03 e0 01 c0 00 00 00 00 00 0b     .<..............
    2087:	1c 00 1e 00 1f 00 07 00 83 37 c3 37 e3 37 f7 00     .........7.7.7..
    2097:	7f 00 3e 00 1c 00 00 00 0c f8 0f fe 1f ff 1f f7     ..>.............
    20a7:	3b fb 37 fb 37 fb 37 fb 37 ff 37 ff 37 fe 03 f8     ;.7.7.7.7.7.7...
    20b7:	01 0b 00 38 00 3f e0 3f fc 07 ff 06 1f 06 ff 06     ...8.?.?........
    20c7:	fc 07 e0 3f 00 3f 00 38 00 00 0b ff 3f ff 3f ff     ...?.?.8....?.?.
    20d7:	3f c3 30 c3 30 c3 30 e7 30 ff 39 fe 3f bc 1f 00     ?.0.0.0.0.9.?...
    20e7:	0f 00 00 0b f0 03 fc 0f fe 1f 0f 3c 07 38 03 30     ...........<.8.0
    20f7:	03 30 07 38 0f 3c 0e 1c 0c 0c 00 00 0b ff 3f ff     .0.8.<........?.
    2107:	3f ff 3f 03 30 03 30 03 30 07 38 0f 3c fe 1f fc     ?.?.0.0.0.8.<...
    2117:	0f f0 03 00 00 0b ff 3f ff 3f ff 3f c3 30 c3 30     .......?.?.?.0.0
    2127:	c3 30 c3 30 c3 30 c3 30 03 30 03 30 00 00 0b ff     .0.0.0.0.0.0....
    2137:	3f ff 3f ff 3f c3 00 c3 00 c3 00 c3 00 c3 00 c3     ?.?.?...........
    2147:	00 03 00 03 00 00 00 0b f0 03 fc 0f fe 1f 0f 3c     ...............<
    2157:	07 38 c3 30 c3 30 c3 30 c7 3f c7 3f c6 3f 00 00     .8.0.0.0.?.?.?..
    2167:	0b ff 3f ff 3f ff 3f c0 00 c0 00 c0 00 c0 00 c0     ..?.?.?.........
    2177:	00 ff 3f ff 3f ff 3f 00 00 09 00 00 00 00 03 30     ..?.?.?........0
    2187:	03 30 ff 3f ff 3f ff 3f 03 30 03 30 00 00 00 00     .0.?.?.?.0.0....
    2197:	00 00 0b 00 0e 00 1e 00 3e 00 38 00 30 00 30 00     ........>.8.0.0.
    21a7:	30 00 38 ff 3f ff 1f ff 07 00 00 0b ff 3f ff 3f     0.8.?........?.?
    21b7:	ff 3f e0 01 f0 03 f8 07 3c 0f 1e 1e 0f 3c 07 38     .?......<....<.8
    21c7:	03 30 00 00 0b ff 3f ff 3f ff 3f 00 30 00 30 00     .0....?.?.?.0.0.
    21d7:	30 00 30 00 30 00 30 00 30 00 30 00 00 0b ff 3f     0.0.0.0.0.0....?
    21e7:	ff 3f ff 3f 7e 00 f8 01 e0 01 f8 01 7e 00 ff 3f     .?.?~.......~..?
    21f7:	ff 3f ff 3f 00 00 0b ff 3f ff 3f ff 3f 3e 00 f8     .?.?....?.?.?>..
    2207:	00 f0 03 c0 07 00 1f ff 3f ff 3f ff 3f 00 00 0b     ........?.?.?...
    2217:	f0 03 fc 0f fe 1f 0f 3c 07 38 03 30 07 38 0f 3c     .......<.8.0.8.<
    2227:	fe 1f fc 0f f0 03 00 00 0b ff 3f ff 3f ff 3f 83     ..........?.?.?.
    2237:	01 83 01 83 01 83 01 c7 01 ff 01 fe 00 7c 00 00     .............|..
    2247:	00 0b f0 03 fc 0f fe 1f 0f 3c 07 38 03 36 07 3e     .........<.8.6.>
    2257:	0f 3e fe 3f fc 3f f0 33 00 00 0b ff 3f ff 3f ff     .>.?.?.3....?.?.
    2267:	3f 83 01 83 03 83 07 83 0f c7 1f ff 3d fe 38 7c     ?...........=.8|
    2277:	30 00 00 0b 3c 0c 7e 1c ff 3c e7 38 c3 30 c3 30     0...<.~..<.8.0.0
    2287:	c3 30 c7 39 cf 3f 8e 1f 0c 0f 00 00 0a 00 00 03     .0.9.?..........
    2297:	00 03 00 03 00 ff 3f ff 3f ff 3f 03 00 03 00 03     ......?.?.?.....
    22a7:	00 00 00 00 00 0b ff 07 ff 1f ff 3f 00 38 00 30     ...........?.8.0
    22b7:	00 30 00 30 00 38 ff 3f ff 1f ff 07 00 00 0b 07     .0.0.8.?........
    22c7:	00 3f 00 ff 01 f8 0f c0 3f 00 3e c0 3f f8 0f ff     .?......?.>.?...
    22d7:	01 3f 00 07 00 00 00 0b ff 3f ff 3f ff 3f 00 1e     .?.......?.?.?..
    22e7:	80 07 80 03 80 07 00 1e ff 3f ff 3f ff 3f 00 00     .........?.?.?..
    22f7:	0b 03 30 0f 3c 1f 3e 3c 0f f0 03 e0 01 f0 03 3c     ..0.<.><.......<
    2307:	0f 1f 3e 0f 3c 03 30 00 00 0b 03 00 0f 00 3f 00     ..>.<.0.......?.
    2317:	fc 00 f0 3f c0 3f f0 3f fc 00 3f 00 0f 00 03 00     ...?.?.?..?.....
    2327:	00 00 0b 03 30 03 3c 03 3e 03 3f c3 33 e3 31 f3     ....0.<.>.?.3.1.
    2337:	30 3f 30 1f 30 0f 30 03 30 00 00 09 00 00 00 00     0?0.0.0.0.......
    2347:	ff 3f ff 3f ff 3f 03 30 03 30 03 30 03 30 00 00     .?.?.?.0.0.0.0..
    2357:	00 00 00 00 0c 0e 00 1e 00 3c 00 78 00 f0 00 e0     .........<.x....
    2367:	01 c0 03 80 07 00 0f 00 1e 00 1c 00 18 09 00 00     ................
    2377:	00 00 03 30 03 30 03 30 03 30 ff 3f ff 3f ff 3f     ...0.0.0.0.?.?.?
    2387:	00 00 00 00 00 00 0c 60 00 70 00 78 00 3c 00 1e     .......`.p.x.<..
    2397:	00 0f 00 0f 00 1e 00 3c 00 78 00 70 00 60 00 0c     .......<.x.p.`..
    23a7:	00 c0 00 c0 00 c0 00 c0 00 c0 00 c0 00 c0 00 c0     ................
    23b7:	00 c0 00 c0 00 c0 00 c0 08 00 00 00 00 00 00 00     ................
    23c7:	00 3e 00 7e 00 7e 00 4e 00 00 00 00 00 00 00 00     .>.~.~.N........
    23d7:	00 0b 00 1c 40 3e 60 3f 60 33 60 33 60 33 60 33     ....@>`?`3`3`3`3
    23e7:	60 33 e0 3f e0 3f c0 3f 00 00 0b ff 3f ff 3f ff     `3.?.?.?....?.?.
    23f7:	3f e0 30 60 30 60 30 60 30 e0 38 e0 3f c0 1f 80     ?.0`0`0`0.8.?...
    2407:	0f 00 00 0b 80 0f c0 1f e0 3f e0 38 60 30 60 30     .........?.8`0`0
    2417:	60 30 60 30 e0 38 c0 18 80 08 00 00 0b 80 0f c0     `0`0.8..........
    2427:	1f e0 3f e0 38 60 30 60 30 e0 30 e0 30 ff 3f ff     ..?.8`0`0.0.0.?.
    2437:	3f ff 3f 00 00 0b 80 0f c0 1f e0 3f e0 3b 60 33     ?.?........?.;`3
    2447:	60 33 60 33 60 33 e0 33 c0 13 80 01 00 00 09 c0     `3`3`3.3........
    2457:	00 c0 00 fc 3f fe 3f ff 3f c7 00 c3 00 c3 00 03     ....?.?.?.......
    2467:	00 00 00 00 00 00 00 0b 80 03 c0 c7 e0 cf e0 ce     ................
    2477:	60 cc 60 cc 60 cc 60 ee e0 ff e0 7f e0 3f 00 00     `.`.`.`......?..
    2487:	0a ff 3f ff 3f ff 3f e0 00 60 00 60 00 e0 00 e0     ..?.?.?..`.`....
    2497:	3f c0 3f 80 3f 00 00 00 00 09 00 00 00 00 00 30     ?.?.?..........0
    24a7:	60 30 ec 3f ec 3f ec 3f 00 30 00 30 00 00 00 00     `0.?.?.?.0.0....
    24b7:	00 00 09 00 00 00 00 00 60 00 e0 00 e0 60 c0 ec     ........`....`..
    24c7:	ff ec ff ec 7f 00 00 00 00 00 00 0a 00 00 ff 3f     ...............?
    24d7:	ff 3f ff 3f 80 07 c0 0f e0 1f e0 3c 60 38 00 30     .?.?.......<`8.0
    24e7:	00 00 00 00 09 00 00 00 00 00 30 03 30 ff 3f ff     ..........0.0.?.
    24f7:	3f ff 3f 00 30 00 30 00 00 00 00 00 00 0b e0 3f     ?.?.0.0........?
    2507:	e0 3f e0 3f e0 00 e0 3f c0 3f e0 3f e0 00 e0 3f     .?.?...?.?.?...?
    2517:	c0 3f 80 3f 00 00 0b 00 00 e0 3f e0 3f e0 3f 60     .?.?......?.?.?`
    2527:	00 60 00 60 00 e0 00 e0 3f c0 3f 80 3f 00 00 0b     .`.`....?.?.?...
    2537:	80 0f c0 1f e0 3f e0 38 60 30 60 30 60 30 e0 38     .....?.8`0`0`0.8
    2547:	e0 3f c0 1f 80 0f 00 00 0b e0 ff e0 ff e0 ff 60     .?.............`
    2557:	1c 60 18 60 18 60 18 e0 1c e0 1f c0 0f 80 07 00     .`.`.`..........
    2567:	00 0b 80 07 c0 0f e0 1f e0 1c 60 18 60 18 60 18     ..........`.`.`.
    2577:	60 1c e0 ff e0 ff e0 ff 00 00 0b 00 00 e0 3f e0     `.............?.
    2587:	3f e0 3f e0 00 60 00 60 00 60 00 e0 00 e0 00 c0     ?.?..`.`.`......
    2597:	00 00 00 09 c0 11 e0 33 e0 33 60 33 60 33 60 33     .......3.3`3`3`3
    25a7:	60 3f 60 3f 40 1e 00 00 00 00 00 00 09 60 00 60     `?`?@........`.`
    25b7:	00 fe 1f fe 3f fe 3f 60 30 60 30 60 30 00 30 00     ....?.?`0`0`0.0.
    25c7:	00 00 00 00 00 0b e0 0f e0 1f e0 3f 00 38 00 30     ...........?.8.0
    25d7:	00 30 00 30 00 38 e0 3f e0 3f e0 3f 00 00 0b 60     .0.0.8.?.?.?...`
    25e7:	00 e0 01 e0 07 80 1f 00 3e 00 38 00 3e 80 1f e0     ........>.8.>...
    25f7:	07 e0 01 60 00 00 00 0b e0 07 e0 1f e0 3f 00 3c     ...`.........?.<
    2607:	e0 1f e0 0f e0 1f 00 3c e0 3f e0 1f e0 07 00 00     .......<.?......
    2617:	0a 60 30 e0 38 e0 3d c0 1f 80 0f 80 0f c0 1f e0     .`0.8.=.........
    2627:	3d e0 38 60 30 00 00 00 00 0a 00 00 60 00 e0 81     =.8`0.......`...
    2637:	e0 e7 80 ff 00 7e 80 1f e0 07 e0 01 60 00 00 00     .....~......`...
    2647:	00 00 0a 60 30 60 38 60 3c 60 3e 60 37 e0 33 e0     ...`0`8`<`>`7.3.
    2657:	31 e0 30 60 30 20 30 00 00 00 00 0a 00 00 80 00     1.0`0 0.........
    2667:	c0 01 fc 1f fe 3f 7f 7f 07 70 03 60 03 60 03 60     .....?...p.`.`.`
    2677:	00 00 00 00 07 00 00 00 00 00 00 00 00 ff 3f ff     ..............?.
    2687:	3f ff 3f 00 00 00 00 00 00 00 00 00 00 0a 00 00     ?.?.............
    2697:	03 60 03 60 03 60 07 70 7f 7f fe 3f fc 1f c0 01     .`.`.`.p...?....
    26a7:	80 00 00 00 00 00 0b 10 00 18 00 1c 00 0c 00 0c     ................
    26b7:	00 1c 00 18 00 18 00 1c 00 0c 00 04 00 00 00 0b     ................
    26c7:	00 0f 80 0f c0 0f e0 0c 70 0c 30 0c 70 0c e0 0c     ........p.0.p...
    26d7:	c0 0f 80 0f 00 0f 00 00                             ........

000026df <digital_pin_to_timer_PGM>:
    26df:	00 00 00 08 00 02 01 00 00 03 04 07 00 00 00 00     ................
    26ef:	00 00 00 00                                         ....

000026f3 <digital_pin_to_bit_mask_PGM>:
    26f3:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
    2703:	04 08 10 20                                         ... 

00002707 <digital_pin_to_port_PGM>:
    2707:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
    2717:	03 03 03 03                                         ....

0000271b <port_to_output_PGM>:
    271b:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

00002725 <port_to_mode_PGM>:
    2725:	00 00 00 00 24 00 27 00 2a 00 00                    ....$.'.*..

00002730 <__ctors_start>:
    2730:	5d 17       	cp	r21, r29
    2732:	ef 1a       	sub	r14, r31
    2734:	20 2e       	mov	r2, r16

00002736 <__ctors_end>:
    2736:	79 17       	cp	r23, r25

00002738 <__dtors_end>:
    2738:	11 24       	eor	r1, r1
    273a:	1f be       	out	0x3f, r1	; 63
    273c:	cf ef       	ldi	r28, 0xFF	; 255
    273e:	d8 e0       	ldi	r29, 0x08	; 8
    2740:	de bf       	out	0x3e, r29	; 62
    2742:	cd bf       	out	0x3d, r28	; 61

00002744 <__do_copy_data>:
    2744:	12 e0       	ldi	r17, 0x02	; 2
    2746:	a0 e0       	ldi	r26, 0x00	; 0
    2748:	b1 e0       	ldi	r27, 0x01	; 1
    274a:	e2 ed       	ldi	r30, 0xD2	; 210
    274c:	f6 e7       	ldi	r31, 0x76	; 118
    274e:	02 c0       	rjmp	.+4      	; 0x2754 <__do_copy_data+0x10>
    2750:	05 90       	lpm	r0, Z+
    2752:	0d 92       	st	X+, r0
    2754:	a4 33       	cpi	r26, 0x34	; 52
    2756:	b1 07       	cpc	r27, r17
    2758:	d9 f7       	brne	.-10     	; 0x2750 <__do_copy_data+0xc>

0000275a <__do_clear_bss>:
    275a:	24 e0       	ldi	r18, 0x04	; 4
    275c:	a4 e3       	ldi	r26, 0x34	; 52
    275e:	b2 e0       	ldi	r27, 0x02	; 2
    2760:	01 c0       	rjmp	.+2      	; 0x2764 <.do_clear_bss_start>

00002762 <.do_clear_bss_loop>:
    2762:	1d 92       	st	X+, r1

00002764 <.do_clear_bss_start>:
    2764:	a0 3f       	cpi	r26, 0xF0	; 240
    2766:	b2 07       	cpc	r27, r18
    2768:	e1 f7       	brne	.-8      	; 0x2762 <.do_clear_bss_loop>

0000276a <__do_global_ctors>:
    276a:	13 e1       	ldi	r17, 0x13	; 19
    276c:	cb e9       	ldi	r28, 0x9B	; 155
    276e:	d3 e1       	ldi	r29, 0x13	; 19
    2770:	04 c0       	rjmp	.+8      	; 0x277a <__do_global_ctors+0x10>
    2772:	21 97       	sbiw	r28, 0x01	; 1
    2774:	fe 01       	movw	r30, r28
    2776:	0e 94 f5 33 	call	0x67ea	; 0x67ea <__tablejump2__>
    277a:	c8 39       	cpi	r28, 0x98	; 152
    277c:	d1 07       	cpc	r29, r17
    277e:	c9 f7       	brne	.-14     	; 0x2772 <__do_global_ctors+0x8>
    2780:	0e 94 1d 1b 	call	0x363a	; 0x363a <main>
    2784:	0c 94 5c 3b 	jmp	0x76b8	; 0x76b8 <__do_global_dtors>

00002788 <__bad_interrupt>:
    2788:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000278c <setup>:
TFT_22_ILI9225 tft = TFT_22_ILI9225(TFT_RST, TFT_RS, TFT_CS, TFT_LED, TFT_BRIGHTNESS);
AMS5812 dPress(Wire,0x10,AMS5812::AMS5812_1000_D);
void fill_area(int area,uint16_t colour);
void AgVa_logo(void);
/**************************************************************************************/
void setup() {
    278c:	cf 92       	push	r12
    278e:	df 92       	push	r13
    2790:	ef 92       	push	r14
    2792:	ff 92       	push	r15
    2794:	0f 93       	push	r16
    2796:	1f 93       	push	r17
    2798:	cf 93       	push	r28
    279a:	df 93       	push	r29
    279c:	cd b7       	in	r28, 0x3d	; 61
    279e:	de b7       	in	r29, 0x3e	; 62
    27a0:	2c 97       	sbiw	r28, 0x0c	; 12
    27a2:	0f b6       	in	r0, 0x3f	; 63
    27a4:	f8 94       	cli
    27a6:	de bf       	out	0x3e, r29	; 62
    27a8:	0f be       	out	0x3f, r0	; 63
    27aa:	cd bf       	out	0x3d, r28	; 61
  public:
    inline HardwareSerial(
      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
      volatile uint8_t *ucsrc, volatile uint8_t *udr);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
    27ac:	26 e0       	ldi	r18, 0x06	; 6
    27ae:	40 e8       	ldi	r20, 0x80	; 128
    27b0:	55 e2       	ldi	r21, 0x25	; 37
    27b2:	60 e0       	ldi	r22, 0x00	; 0
    27b4:	70 e0       	ldi	r23, 0x00	; 0
    27b6:	88 e7       	ldi	r24, 0x78	; 120
    27b8:	93 e0       	ldi	r25, 0x03	; 3
    27ba:	0e 94 25 1a 	call	0x344a	; 0x344a <_ZN14HardwareSerial5beginEmh>
  Serial.begin(9600);
  tft.begin();  //Tft initialize 
    27be:	8e e1       	ldi	r24, 0x1E	; 30
    27c0:	93 e0       	ldi	r25, 0x03	; 3
    27c2:	0e 94 a8 26 	call	0x4d50	; 0x4d50 <_ZN14TFT_22_ILI92255beginEv>
  tft.setOrientation(3);  //Set tft Orientation
    27c6:	63 e0       	ldi	r22, 0x03	; 3
    27c8:	8e e1       	ldi	r24, 0x1E	; 30
    27ca:	93 e0       	ldi	r25, 0x03	; 3
    27cc:	0e 94 3a 23 	call	0x4674	; 0x4674 <_ZN14TFT_22_ILI922514setOrientationEh>
  tft.setBacklight(HIGH); //Set back light high
    27d0:	61 e0       	ldi	r22, 0x01	; 1
    27d2:	8e e1       	ldi	r24, 0x1E	; 30
    27d4:	93 e0       	ldi	r25, 0x03	; 3
    27d6:	0e 94 2b 23 	call	0x4656	; 0x4656 <_ZN14TFT_22_ILI922512setBacklightEb>
  String s2;
    27da:	61 e8       	ldi	r22, 0x81	; 129
    27dc:	71 e0       	ldi	r23, 0x01	; 1
    27de:	ce 01       	movw	r24, r28
    27e0:	07 96       	adiw	r24, 0x07	; 7
    27e2:	0e 94 5c 1e 	call	0x3cb8	; 0x3cb8 <_ZN6StringC1EPKc>
  //Printing AgVa logo on screen
  tft.fillRectangle(0,0,219,176,COLOR_WHITE);
    27e6:	ee 24       	eor	r14, r14
    27e8:	ea 94       	dec	r14
    27ea:	fe 2c       	mov	r15, r14
    27ec:	00 eb       	ldi	r16, 0xB0	; 176
    27ee:	10 e0       	ldi	r17, 0x00	; 0
    27f0:	2b ed       	ldi	r18, 0xDB	; 219
    27f2:	30 e0       	ldi	r19, 0x00	; 0
    27f4:	40 e0       	ldi	r20, 0x00	; 0
    27f6:	50 e0       	ldi	r21, 0x00	; 0
    27f8:	60 e0       	ldi	r22, 0x00	; 0
    27fa:	70 e0       	ldi	r23, 0x00	; 0
    27fc:	8e e1       	ldi	r24, 0x1E	; 30
    27fe:	93 e0       	ldi	r25, 0x03	; 3
    2800:	0e 94 34 26 	call	0x4c68	; 0x4c68 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj>
  tft.setGFXFont(&FreeSerif12pt7b);    //Set gfx font free serif
    2804:	6e ed       	ldi	r22, 0xDE	; 222
    2806:	71 e0       	ldi	r23, 0x01	; 1
    2808:	8e e1       	ldi	r24, 0x1E	; 30
    280a:	93 e0       	ldi	r25, 0x03	; 3
    280c:	0e 94 d5 2b 	call	0x57aa	; 0x57aa <_ZN14TFT_22_ILI922510setGFXFontEPK7GFXfont>
  s2="AgVa";
    2810:	6e e1       	ldi	r22, 0x1E	; 30
    2812:	71 e0       	ldi	r23, 0x01	; 1
    2814:	ce 01       	movw	r24, r28
    2816:	07 96       	adiw	r24, 0x07	; 7
    2818:	0e 94 da 1e 	call	0x3db4	; 0x3db4 <_ZN6StringaSEPKc>
  tft.drawGFXText(20,90, s2,COLOR_DEEP_PINK);
    281c:	be 01       	movw	r22, r28
    281e:	69 5f       	subi	r22, 0xF9	; 249
    2820:	7f 4f       	sbci	r23, 0xFF	; 255
    2822:	ce 01       	movw	r24, r28
    2824:	01 96       	adiw	r24, 0x01	; 1
    2826:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <_ZN6StringC1ERKS_>
    282a:	0b ee       	ldi	r16, 0xEB	; 235
    282c:	18 ef       	ldi	r17, 0xF8	; 248
    282e:	9e 01       	movw	r18, r28
    2830:	2f 5f       	subi	r18, 0xFF	; 255
    2832:	3f 4f       	sbci	r19, 0xFF	; 255
    2834:	4a e5       	ldi	r20, 0x5A	; 90
    2836:	50 e0       	ldi	r21, 0x00	; 0
    2838:	64 e1       	ldi	r22, 0x14	; 20
    283a:	70 e0       	ldi	r23, 0x00	; 0
    283c:	8e e1       	ldi	r24, 0x1E	; 30
    283e:	93 e0       	ldi	r25, 0x03	; 3
    2840:	0e 94 79 2c 	call	0x58f2	; 0x58f2 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj>
    2844:	ce 01       	movw	r24, r28
    2846:	01 96       	adiw	r24, 0x01	; 1
    2848:	0e 94 eb 1d 	call	0x3bd6	; 0x3bd6 <_ZN6StringD1Ev>
  s2="Healthcare";
    284c:	63 e2       	ldi	r22, 0x23	; 35
    284e:	71 e0       	ldi	r23, 0x01	; 1
    2850:	ce 01       	movw	r24, r28
    2852:	07 96       	adiw	r24, 0x07	; 7
    2854:	0e 94 da 1e 	call	0x3db4	; 0x3db4 <_ZN6StringaSEPKc>
  tft.drawGFXText(100,90, s2,COLOR_BLACK);
    2858:	be 01       	movw	r22, r28
    285a:	69 5f       	subi	r22, 0xF9	; 249
    285c:	7f 4f       	sbci	r23, 0xFF	; 255
    285e:	ce 01       	movw	r24, r28
    2860:	01 96       	adiw	r24, 0x01	; 1
    2862:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <_ZN6StringC1ERKS_>
    2866:	00 e0       	ldi	r16, 0x00	; 0
    2868:	10 e0       	ldi	r17, 0x00	; 0
    286a:	9e 01       	movw	r18, r28
    286c:	2f 5f       	subi	r18, 0xFF	; 255
    286e:	3f 4f       	sbci	r19, 0xFF	; 255
    2870:	4a e5       	ldi	r20, 0x5A	; 90
    2872:	50 e0       	ldi	r21, 0x00	; 0
    2874:	64 e6       	ldi	r22, 0x64	; 100
    2876:	70 e0       	ldi	r23, 0x00	; 0
    2878:	8e e1       	ldi	r24, 0x1E	; 30
    287a:	93 e0       	ldi	r25, 0x03	; 3
    287c:	0e 94 79 2c 	call	0x58f2	; 0x58f2 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj>
    2880:	ce 01       	movw	r24, r28
    2882:	01 96       	adiw	r24, 0x01	; 1
    2884:	0e 94 eb 1d 	call	0x3bd6	; 0x3bd6 <_ZN6StringD1Ev>
  delay(5000);
    2888:	68 e8       	ldi	r22, 0x88	; 136
    288a:	73 e1       	ldi	r23, 0x13	; 19
    288c:	80 e0       	ldi	r24, 0x00	; 0
    288e:	90 e0       	ldi	r25, 0x00	; 0
    2890:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <delay>
  tft.clear();
    2894:	8e e1       	ldi	r24, 0x1E	; 30
    2896:	93 e0       	ldi	r25, 0x03	; 3
    2898:	0e 94 7a 26 	call	0x4cf4	; 0x4cf4 <_ZN14TFT_22_ILI92255clearEv>
 //   tft.drawRectangle(0, 0, tft.maxX() - 1, tft.maxY() - 1, COLOR_GREEN);  //Drawing rectangle at boundary of tft screen.
//   tft.drawRectangle(1, 1, tft.maxX() - 2, tft.maxY() - 2, COLOR_GREEN);
//   tft.drawRectangle(2, 2, tft.maxX() - 3, tft.maxY() - 3, COLOR_GREEN);
//   
  tft.drawRectangle(30, 100, 190, 140,primary_color);  //Draw rectangle to show pressure display pressure value
    289c:	0c e8       	ldi	r16, 0x8C	; 140
    289e:	10 e0       	ldi	r17, 0x00	; 0
    28a0:	2e eb       	ldi	r18, 0xBE	; 190
    28a2:	30 e0       	ldi	r19, 0x00	; 0
    28a4:	44 e6       	ldi	r20, 0x64	; 100
    28a6:	50 e0       	ldi	r21, 0x00	; 0
    28a8:	6e e1       	ldi	r22, 0x1E	; 30
    28aa:	70 e0       	ldi	r23, 0x00	; 0
    28ac:	8e e1       	ldi	r24, 0x1E	; 30
    28ae:	93 e0       	ldi	r25, 0x03	; 3
    28b0:	0e 94 e8 29 	call	0x53d0	; 0x53d0 <_ZN14TFT_22_ILI922513drawRectangleEjjjjj>
  tft.drawRectangle(29, 99, 191, 141, primary_color);
    28b4:	0d e8       	ldi	r16, 0x8D	; 141
    28b6:	10 e0       	ldi	r17, 0x00	; 0
    28b8:	2f eb       	ldi	r18, 0xBF	; 191
    28ba:	30 e0       	ldi	r19, 0x00	; 0
    28bc:	43 e6       	ldi	r20, 0x63	; 99
    28be:	50 e0       	ldi	r21, 0x00	; 0
    28c0:	6d e1       	ldi	r22, 0x1D	; 29
    28c2:	70 e0       	ldi	r23, 0x00	; 0
    28c4:	8e e1       	ldi	r24, 0x1E	; 30
    28c6:	93 e0       	ldi	r25, 0x03	; 3
    28c8:	0e 94 e8 29 	call	0x53d0	; 0x53d0 <_ZN14TFT_22_ILI922513drawRectangleEjjjjj>
  tft.drawRectangle(28, 98, 192, 142, primary_color);
    28cc:	0e e8       	ldi	r16, 0x8E	; 142
    28ce:	10 e0       	ldi	r17, 0x00	; 0
    28d0:	20 ec       	ldi	r18, 0xC0	; 192
    28d2:	30 e0       	ldi	r19, 0x00	; 0
    28d4:	42 e6       	ldi	r20, 0x62	; 98
    28d6:	50 e0       	ldi	r21, 0x00	; 0
    28d8:	6c e1       	ldi	r22, 0x1C	; 28
    28da:	70 e0       	ldi	r23, 0x00	; 0
    28dc:	8e e1       	ldi	r24, 0x1E	; 30
    28de:	93 e0       	ldi	r25, 0x03	; 3
    28e0:	0e 94 e8 29 	call	0x53d0	; 0x53d0 <_ZN14TFT_22_ILI922513drawRectangleEjjjjj>
  tft.drawRectangle(27, 97, 193, 143, primary_color);
    28e4:	0f e8       	ldi	r16, 0x8F	; 143
    28e6:	10 e0       	ldi	r17, 0x00	; 0
    28e8:	21 ec       	ldi	r18, 0xC1	; 193
    28ea:	30 e0       	ldi	r19, 0x00	; 0
    28ec:	41 e6       	ldi	r20, 0x61	; 97
    28ee:	50 e0       	ldi	r21, 0x00	; 0
    28f0:	6b e1       	ldi	r22, 0x1B	; 27
    28f2:	70 e0       	ldi	r23, 0x00	; 0
    28f4:	8e e1       	ldi	r24, 0x1E	; 30
    28f6:	93 e0       	ldi	r25, 0x03	; 3
    28f8:	0e 94 e8 29 	call	0x53d0	; 0x53d0 <_ZN14TFT_22_ILI922513drawRectangleEjjjjj>
  //Scale
  tft.drawLine(30,140,30,155,primary_color);
    28fc:	0b e9       	ldi	r16, 0x9B	; 155
    28fe:	10 e0       	ldi	r17, 0x00	; 0
    2900:	2e e1       	ldi	r18, 0x1E	; 30
    2902:	30 e0       	ldi	r19, 0x00	; 0
    2904:	4c e8       	ldi	r20, 0x8C	; 140
    2906:	50 e0       	ldi	r21, 0x00	; 0
    2908:	6e e1       	ldi	r22, 0x1E	; 30
    290a:	70 e0       	ldi	r23, 0x00	; 0
    290c:	8e e1       	ldi	r24, 0x1E	; 30
    290e:	93 e0       	ldi	r25, 0x03	; 3
    2910:	0e 94 37 29 	call	0x526e	; 0x526e <_ZN14TFT_22_ILI92258drawLineEjjjjj>
  tft.drawLine(50,140,50,150,primary_color);
    2914:	06 e9       	ldi	r16, 0x96	; 150
    2916:	10 e0       	ldi	r17, 0x00	; 0
    2918:	22 e3       	ldi	r18, 0x32	; 50
    291a:	30 e0       	ldi	r19, 0x00	; 0
    291c:	4c e8       	ldi	r20, 0x8C	; 140
    291e:	50 e0       	ldi	r21, 0x00	; 0
    2920:	62 e3       	ldi	r22, 0x32	; 50
    2922:	70 e0       	ldi	r23, 0x00	; 0
    2924:	8e e1       	ldi	r24, 0x1E	; 30
    2926:	93 e0       	ldi	r25, 0x03	; 3
    2928:	0e 94 37 29 	call	0x526e	; 0x526e <_ZN14TFT_22_ILI92258drawLineEjjjjj>
  tft.drawLine(70,140,70,150,primary_color);
    292c:	26 e4       	ldi	r18, 0x46	; 70
    292e:	30 e0       	ldi	r19, 0x00	; 0
    2930:	4c e8       	ldi	r20, 0x8C	; 140
    2932:	50 e0       	ldi	r21, 0x00	; 0
    2934:	66 e4       	ldi	r22, 0x46	; 70
    2936:	70 e0       	ldi	r23, 0x00	; 0
    2938:	8e e1       	ldi	r24, 0x1E	; 30
    293a:	93 e0       	ldi	r25, 0x03	; 3
    293c:	0e 94 37 29 	call	0x526e	; 0x526e <_ZN14TFT_22_ILI92258drawLineEjjjjj>
  tft.drawLine(90,140,90,150,primary_color);
    2940:	2a e5       	ldi	r18, 0x5A	; 90
    2942:	30 e0       	ldi	r19, 0x00	; 0
    2944:	4c e8       	ldi	r20, 0x8C	; 140
    2946:	50 e0       	ldi	r21, 0x00	; 0
    2948:	6a e5       	ldi	r22, 0x5A	; 90
    294a:	70 e0       	ldi	r23, 0x00	; 0
    294c:	8e e1       	ldi	r24, 0x1E	; 30
    294e:	93 e0       	ldi	r25, 0x03	; 3
    2950:	0e 94 37 29 	call	0x526e	; 0x526e <_ZN14TFT_22_ILI92258drawLineEjjjjj>
  
  tft.drawLine(110,140,110,155,primary_color);
    2954:	0b e9       	ldi	r16, 0x9B	; 155
    2956:	10 e0       	ldi	r17, 0x00	; 0
    2958:	2e e6       	ldi	r18, 0x6E	; 110
    295a:	30 e0       	ldi	r19, 0x00	; 0
    295c:	4c e8       	ldi	r20, 0x8C	; 140
    295e:	50 e0       	ldi	r21, 0x00	; 0
    2960:	6e e6       	ldi	r22, 0x6E	; 110
    2962:	70 e0       	ldi	r23, 0x00	; 0
    2964:	8e e1       	ldi	r24, 0x1E	; 30
    2966:	93 e0       	ldi	r25, 0x03	; 3
    2968:	0e 94 37 29 	call	0x526e	; 0x526e <_ZN14TFT_22_ILI92258drawLineEjjjjj>
  tft.drawLine(130,140,130,150,primary_color);
    296c:	06 e9       	ldi	r16, 0x96	; 150
    296e:	10 e0       	ldi	r17, 0x00	; 0
    2970:	22 e8       	ldi	r18, 0x82	; 130
    2972:	30 e0       	ldi	r19, 0x00	; 0
    2974:	4c e8       	ldi	r20, 0x8C	; 140
    2976:	50 e0       	ldi	r21, 0x00	; 0
    2978:	62 e8       	ldi	r22, 0x82	; 130
    297a:	70 e0       	ldi	r23, 0x00	; 0
    297c:	8e e1       	ldi	r24, 0x1E	; 30
    297e:	93 e0       	ldi	r25, 0x03	; 3
    2980:	0e 94 37 29 	call	0x526e	; 0x526e <_ZN14TFT_22_ILI92258drawLineEjjjjj>
  tft.drawLine(150,140,150,150,primary_color);
    2984:	26 e9       	ldi	r18, 0x96	; 150
    2986:	30 e0       	ldi	r19, 0x00	; 0
    2988:	4c e8       	ldi	r20, 0x8C	; 140
    298a:	50 e0       	ldi	r21, 0x00	; 0
    298c:	66 e9       	ldi	r22, 0x96	; 150
    298e:	70 e0       	ldi	r23, 0x00	; 0
    2990:	8e e1       	ldi	r24, 0x1E	; 30
    2992:	93 e0       	ldi	r25, 0x03	; 3
    2994:	0e 94 37 29 	call	0x526e	; 0x526e <_ZN14TFT_22_ILI92258drawLineEjjjjj>
  tft.drawLine(170,140,170,150,primary_color);
    2998:	2a ea       	ldi	r18, 0xAA	; 170
    299a:	30 e0       	ldi	r19, 0x00	; 0
    299c:	4c e8       	ldi	r20, 0x8C	; 140
    299e:	50 e0       	ldi	r21, 0x00	; 0
    29a0:	6a ea       	ldi	r22, 0xAA	; 170
    29a2:	70 e0       	ldi	r23, 0x00	; 0
    29a4:	8e e1       	ldi	r24, 0x1E	; 30
    29a6:	93 e0       	ldi	r25, 0x03	; 3
    29a8:	0e 94 37 29 	call	0x526e	; 0x526e <_ZN14TFT_22_ILI92258drawLineEjjjjj>
  tft.drawLine(190,140,190,155,primary_color);
    29ac:	0b e9       	ldi	r16, 0x9B	; 155
    29ae:	10 e0       	ldi	r17, 0x00	; 0
    29b0:	2e eb       	ldi	r18, 0xBE	; 190
    29b2:	30 e0       	ldi	r19, 0x00	; 0
    29b4:	4c e8       	ldi	r20, 0x8C	; 140
    29b6:	50 e0       	ldi	r21, 0x00	; 0
    29b8:	6e eb       	ldi	r22, 0xBE	; 190
    29ba:	70 e0       	ldi	r23, 0x00	; 0
    29bc:	8e e1       	ldi	r24, 0x1E	; 30
    29be:	93 e0       	ldi	r25, 0x03	; 3
    29c0:	0e 94 37 29 	call	0x526e	; 0x526e <_ZN14TFT_22_ILI92258drawLineEjjjjj>
  
  
  tft.setGFXFont(&FreeSerif18pt7b);
    29c4:	6d ea       	ldi	r22, 0xAD	; 173
    29c6:	7b e0       	ldi	r23, 0x0B	; 11
    29c8:	8e e1       	ldi	r24, 0x1E	; 30
    29ca:	93 e0       	ldi	r25, 0x03	; 3
    29cc:	0e 94 d5 2b 	call	0x57aa	; 0x57aa <_ZN14TFT_22_ILI922510setGFXFontEPK7GFXfont>
  tft.setFont(Terminal12x16);
    29d0:	40 e0       	ldi	r20, 0x00	; 0
    29d2:	6b e7       	ldi	r22, 0x7B	; 123
    29d4:	7d e1       	ldi	r23, 0x1D	; 29
    29d6:	8e e1       	ldi	r24, 0x1E	; 30
    29d8:	93 e0       	ldi	r25, 0x03	; 3
    29da:	0e 94 16 24 	call	0x482c	; 0x482c <_ZN14TFT_22_ILI92257setFontEPhb>
  s2="0.000";
    29de:	6e e2       	ldi	r22, 0x2E	; 46
    29e0:	71 e0       	ldi	r23, 0x01	; 1
    29e2:	ce 01       	movw	r24, r28
    29e4:	07 96       	adiw	r24, 0x07	; 7
    29e6:	0e 94 da 1e 	call	0x3db4	; 0x3db4 <_ZN6StringaSEPKc>
  tft.drawGFXText(30,70, s2,primary_color); //Initially  show pressure zero
    29ea:	be 01       	movw	r22, r28
    29ec:	69 5f       	subi	r22, 0xF9	; 249
    29ee:	7f 4f       	sbci	r23, 0xFF	; 255
    29f0:	ce 01       	movw	r24, r28
    29f2:	01 96       	adiw	r24, 0x01	; 1
    29f4:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <_ZN6StringC1ERKS_>
    29f8:	0f ef       	ldi	r16, 0xFF	; 255
    29fa:	1f ef       	ldi	r17, 0xFF	; 255
    29fc:	9e 01       	movw	r18, r28
    29fe:	2f 5f       	subi	r18, 0xFF	; 255
    2a00:	3f 4f       	sbci	r19, 0xFF	; 255
    2a02:	46 e4       	ldi	r20, 0x46	; 70
    2a04:	50 e0       	ldi	r21, 0x00	; 0
    2a06:	6e e1       	ldi	r22, 0x1E	; 30
    2a08:	70 e0       	ldi	r23, 0x00	; 0
    2a0a:	8e e1       	ldi	r24, 0x1E	; 30
    2a0c:	93 e0       	ldi	r25, 0x03	; 3
    2a0e:	0e 94 79 2c 	call	0x58f2	; 0x58f2 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj>
    2a12:	ce 01       	movw	r24, r28
    2a14:	01 96       	adiw	r24, 0x01	; 1
    2a16:	0e 94 eb 1d 	call	0x3bd6	; 0x3bd6 <_ZN6StringD1Ev>
  tft.setGFXFont(&FreeSerif12pt7b);
    2a1a:	6e ed       	ldi	r22, 0xDE	; 222
    2a1c:	71 e0       	ldi	r23, 0x01	; 1
    2a1e:	8e e1       	ldi	r24, 0x1E	; 30
    2a20:	93 e0       	ldi	r25, 0x03	; 3
    2a22:	0e 94 d5 2b 	call	0x57aa	; 0x57aa <_ZN14TFT_22_ILI922510setGFXFontEPK7GFXfont>
  s2="MPa";
    2a26:	64 e3       	ldi	r22, 0x34	; 52
    2a28:	71 e0       	ldi	r23, 0x01	; 1
    2a2a:	ce 01       	movw	r24, r28
    2a2c:	07 96       	adiw	r24, 0x07	; 7
    2a2e:	0e 94 da 1e 	call	0x3db4	; 0x3db4 <_ZN6StringaSEPKc>
  tft.drawGFXText(130,65, s2,primary_color); //Draw MPa text on screen
    2a32:	be 01       	movw	r22, r28
    2a34:	69 5f       	subi	r22, 0xF9	; 249
    2a36:	7f 4f       	sbci	r23, 0xFF	; 255
    2a38:	ce 01       	movw	r24, r28
    2a3a:	01 96       	adiw	r24, 0x01	; 1
    2a3c:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <_ZN6StringC1ERKS_>
    2a40:	9e 01       	movw	r18, r28
    2a42:	2f 5f       	subi	r18, 0xFF	; 255
    2a44:	3f 4f       	sbci	r19, 0xFF	; 255
    2a46:	41 e4       	ldi	r20, 0x41	; 65
    2a48:	50 e0       	ldi	r21, 0x00	; 0
    2a4a:	62 e8       	ldi	r22, 0x82	; 130
    2a4c:	70 e0       	ldi	r23, 0x00	; 0
    2a4e:	8e e1       	ldi	r24, 0x1E	; 30
    2a50:	93 e0       	ldi	r25, 0x03	; 3
    2a52:	0e 94 79 2c 	call	0x58f2	; 0x58f2 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj>
    2a56:	ce 01       	movw	r24, r28
    2a58:	01 96       	adiw	r24, 0x01	; 1
    2a5a:	0e 94 eb 1d 	call	0x3bd6	; 0x3bd6 <_ZN6StringD1Ev>
  tft.setGFXFont(&FreeSerif18pt7b); 
    2a5e:	6d ea       	ldi	r22, 0xAD	; 173
    2a60:	7b e0       	ldi	r23, 0x0B	; 11
    2a62:	8e e1       	ldi	r24, 0x1E	; 30
    2a64:	93 e0       	ldi	r25, 0x03	; 3
    2a66:	0e 94 d5 2b 	call	0x57aa	; 0x57aa <_ZN14TFT_22_ILI922510setGFXFontEPK7GFXfont>
  tft.drawBitmap(170, 10, batt3, 30, 20, primary_color); //Battery icon
    2a6a:	cc 24       	eor	r12, r12
    2a6c:	ca 94       	dec	r12
    2a6e:	dc 2c       	mov	r13, r12
    2a70:	24 e1       	ldi	r18, 0x14	; 20
    2a72:	e2 2e       	mov	r14, r18
    2a74:	f1 2c       	mov	r15, r1
    2a76:	0e e1       	ldi	r16, 0x1E	; 30
    2a78:	10 e0       	ldi	r17, 0x00	; 0
    2a7a:	2e e8       	ldi	r18, 0x8E	; 142
    2a7c:	31 e0       	ldi	r19, 0x01	; 1
    2a7e:	4a e0       	ldi	r20, 0x0A	; 10
    2a80:	50 e0       	ldi	r21, 0x00	; 0
    2a82:	6a ea       	ldi	r22, 0xAA	; 170
    2a84:	70 e0       	ldi	r23, 0x00	; 0
    2a86:	8e e1       	ldi	r24, 0x1E	; 30
    2a88:	93 e0       	ldi	r25, 0x03	; 3
    2a8a:	0e 94 b7 2b 	call	0x576e	; 0x576e <_ZN14TFT_22_ILI922510drawBitmapEiiPKhiij>
 
  while(!Serial){}
  // starting communication with the 
  // static pressure transducer
  if (dPress.begin() < 0) {
    2a8e:	84 e3       	ldi	r24, 0x34	; 52
    2a90:	92 e0       	ldi	r25, 0x02	; 2
    2a92:	0e 94 d8 21 	call	0x43b0	; 0x43b0 <_ZN7AMS58125beginEv>
    2a96:	97 ff       	sbrs	r25, 7
    2a98:	07 c0       	rjmp	.+14     	; 0x2aa8 <setup+0x31c>
    Serial.println("Error communicating with sensor, check wiring and I2C address");
    2a9a:	68 e3       	ldi	r22, 0x38	; 56
    2a9c:	71 e0       	ldi	r23, 0x01	; 1
    2a9e:	88 e7       	ldi	r24, 0x78	; 120
    2aa0:	93 e0       	ldi	r25, 0x03	; 3
    2aa2:	0e 94 78 1b 	call	0x36f0	; 0x36f0 <_ZN5Print7printlnEPKc>
    2aa6:	ff cf       	rjmp	.-2      	; 0x2aa6 <setup+0x31a>
void setup() {
  Serial.begin(9600);
  tft.begin();  //Tft initialize 
  tft.setOrientation(3);  //Set tft Orientation
  tft.setBacklight(HIGH); //Set back light high
  String s2;
    2aa8:	ce 01       	movw	r24, r28
    2aaa:	07 96       	adiw	r24, 0x07	; 7
    2aac:	0e 94 eb 1d 	call	0x3bd6	; 0x3bd6 <_ZN6StringD1Ev>
  // static pressure transducer
  if (dPress.begin() < 0) {
    Serial.println("Error communicating with sensor, check wiring and I2C address");
    while(1){}
  }
}
    2ab0:	2c 96       	adiw	r28, 0x0c	; 12
    2ab2:	0f b6       	in	r0, 0x3f	; 63
    2ab4:	f8 94       	cli
    2ab6:	de bf       	out	0x3e, r29	; 62
    2ab8:	0f be       	out	0x3f, r0	; 63
    2aba:	cd bf       	out	0x3d, r28	; 61
    2abc:	df 91       	pop	r29
    2abe:	cf 91       	pop	r28
    2ac0:	1f 91       	pop	r17
    2ac2:	0f 91       	pop	r16
    2ac4:	ff 90       	pop	r15
    2ac6:	ef 90       	pop	r14
    2ac8:	df 90       	pop	r13
    2aca:	cf 90       	pop	r12
    2acc:	08 95       	ret

00002ace <_Z9fill_areaij>:
  Previous_Area = Current_Area;
}
}

void fill_area(int area,uint16_t colour)
{
    2ace:	ef 92       	push	r14
    2ad0:	ff 92       	push	r15
    2ad2:	0f 93       	push	r16
    2ad4:	1f 93       	push	r17
    2ad6:	7b 01       	movw	r14, r22
  
  int length = area/rectangle_width;
  tft.fillRectangle(35, 105, 35+length, 135, colour);
    2ad8:	6e e1       	ldi	r22, 0x1E	; 30
    2ada:	70 e0       	ldi	r23, 0x00	; 0
    2adc:	0e 94 a0 33 	call	0x6740	; 0x6740 <__divmodhi4>
    2ae0:	9b 01       	movw	r18, r22
    2ae2:	2d 5d       	subi	r18, 0xDD	; 221
    2ae4:	3f 4f       	sbci	r19, 0xFF	; 255
    2ae6:	07 e8       	ldi	r16, 0x87	; 135
    2ae8:	10 e0       	ldi	r17, 0x00	; 0
    2aea:	49 e6       	ldi	r20, 0x69	; 105
    2aec:	50 e0       	ldi	r21, 0x00	; 0
    2aee:	63 e2       	ldi	r22, 0x23	; 35
    2af0:	70 e0       	ldi	r23, 0x00	; 0
    2af2:	8e e1       	ldi	r24, 0x1E	; 30
    2af4:	93 e0       	ldi	r25, 0x03	; 3
    2af6:	0e 94 34 26 	call	0x4c68	; 0x4c68 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj>
  
}
    2afa:	1f 91       	pop	r17
    2afc:	0f 91       	pop	r16
    2afe:	ff 90       	pop	r15
    2b00:	ef 90       	pop	r14
    2b02:	08 95       	ret

00002b04 <loop>:
    while(1){}
  }
}


void loop() {
    2b04:	4f 92       	push	r4
    2b06:	5f 92       	push	r5
    2b08:	6f 92       	push	r6
    2b0a:	7f 92       	push	r7
    2b0c:	af 92       	push	r10
    2b0e:	bf 92       	push	r11
    2b10:	cf 92       	push	r12
    2b12:	df 92       	push	r13
    2b14:	ef 92       	push	r14
    2b16:	ff 92       	push	r15
    2b18:	0f 93       	push	r16
    2b1a:	1f 93       	push	r17
    2b1c:	cf 93       	push	r28
    2b1e:	df 93       	push	r29
    2b20:	00 d0       	rcall	.+0      	; 0x2b22 <loop+0x1e>
    2b22:	00 d0       	rcall	.+0      	; 0x2b24 <loop+0x20>
    2b24:	00 d0       	rcall	.+0      	; 0x2b26 <loop+0x22>
    2b26:	cd b7       	in	r28, 0x3d	; 61
    2b28:	de b7       	in	r29, 0x3e	; 62
  
  dPress.readSensor();
    2b2a:	84 e3       	ldi	r24, 0x34	; 52
    2b2c:	92 e0       	ldi	r25, 0x02	; 2
    2b2e:	0e 94 1d 22 	call	0x443a	; 0x443a <_ZN7AMS581210readSensorEv>
  pressure = dPress.getPressure_Pa(); //Pressure in pascal
    2b32:	84 e3       	ldi	r24, 0x34	; 52
    2b34:	92 e0       	ldi	r25, 0x02	; 2
    2b36:	0e 94 e8 20 	call	0x41d0	; 0x41d0 <_ZN7AMS581214getPressure_PaEv>
    2b3a:	6b 01       	movw	r12, r22
    2b3c:	7c 01       	movw	r14, r24
  if(pressure >= 1700000)
    2b3e:	20 e0       	ldi	r18, 0x00	; 0
    2b40:	35 e8       	ldi	r19, 0x85	; 133
    2b42:	4f ec       	ldi	r20, 0xCF	; 207
    2b44:	59 e4       	ldi	r21, 0x49	; 73
    2b46:	0e 94 20 19 	call	0x3240	; 0x3240 <__gesf2>
    2b4a:	87 ff       	sbrs	r24, 7
    2b4c:	09 c0       	rjmp	.+18     	; 0x2b60 <loop+0x5c>


void loop() {
  
  dPress.readSensor();
  pressure = dPress.getPressure_Pa(); //Pressure in pascal
    2b4e:	c0 92 74 03 	sts	0x0374, r12	; 0x800374 <pressure>
    2b52:	d0 92 75 03 	sts	0x0375, r13	; 0x800375 <pressure+0x1>
    2b56:	e0 92 76 03 	sts	0x0376, r14	; 0x800376 <pressure+0x2>
    2b5a:	f0 92 77 03 	sts	0x0377, r15	; 0x800377 <pressure+0x3>
    2b5e:	08 c0       	rjmp	.+16     	; 0x2b70 <loop+0x6c>
  if(pressure >= 1700000)
  {
    pressure=0;
    2b60:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <pressure>
    2b64:	10 92 75 03 	sts	0x0375, r1	; 0x800375 <pressure+0x1>
    2b68:	10 92 76 03 	sts	0x0376, r1	; 0x800376 <pressure+0x2>
    2b6c:	10 92 77 03 	sts	0x0377, r1	; 0x800377 <pressure+0x3>
  }
  
  float kPa = (pressure/1000); //pressure in Kilo  pascal
    2b70:	20 e0       	ldi	r18, 0x00	; 0
    2b72:	30 e0       	ldi	r19, 0x00	; 0
    2b74:	4a e7       	ldi	r20, 0x7A	; 122
    2b76:	54 e4       	ldi	r21, 0x44	; 68
    2b78:	60 91 74 03 	lds	r22, 0x0374	; 0x800374 <pressure>
    2b7c:	70 91 75 03 	lds	r23, 0x0375	; 0x800375 <pressure+0x1>
    2b80:	80 91 76 03 	lds	r24, 0x0376	; 0x800376 <pressure+0x2>
    2b84:	90 91 77 03 	lds	r25, 0x0377	; 0x800377 <pressure+0x3>
    2b88:	0e 94 ea 17 	call	0x2fd4	; 0x2fd4 <__divsf3>
    2b8c:	6b 01       	movw	r12, r22
    2b8e:	7c 01       	movw	r14, r24
    2b90:	08 ec       	ldi	r16, 0xC8	; 200
    2b92:	10 e0       	ldi	r17, 0x00	; 0
  float final_pressure = 0;
    2b94:	41 2c       	mov	r4, r1
    2b96:	51 2c       	mov	r5, r1
    2b98:	32 01       	movw	r6, r4
  int i = 200;
  
 //Taking 2oo pressure value samples 
  while(i)
  {
    final_pressure = final_pressure+kPa;  
    2b9a:	a7 01       	movw	r20, r14
    2b9c:	96 01       	movw	r18, r12
    2b9e:	c3 01       	movw	r24, r6
    2ba0:	b2 01       	movw	r22, r4
    2ba2:	0e 94 7e 17 	call	0x2efc	; 0x2efc <__addsf3>
    2ba6:	2b 01       	movw	r4, r22
    2ba8:	3c 01       	movw	r6, r24
    i--;
    delay(1);
    2baa:	61 e0       	ldi	r22, 0x01	; 1
    2bac:	70 e0       	ldi	r23, 0x00	; 0
    2bae:	80 e0       	ldi	r24, 0x00	; 0
    2bb0:	90 e0       	ldi	r25, 0x00	; 0
    2bb2:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <delay>
    2bb6:	01 50       	subi	r16, 0x01	; 1
    2bb8:	11 09       	sbc	r17, r1
  float kPa = (pressure/1000); //pressure in Kilo  pascal
  float final_pressure = 0;
  int i = 200;
  
 //Taking 2oo pressure value samples 
  while(i)
    2bba:	79 f7       	brne	.-34     	; 0x2b9a <loop+0x96>
  {
    final_pressure = final_pressure+kPa;  
    i--;
    delay(1);
  }
  final_pressure = final_pressure/200;
    2bbc:	20 e0       	ldi	r18, 0x00	; 0
    2bbe:	30 e0       	ldi	r19, 0x00	; 0
    2bc0:	48 e4       	ldi	r20, 0x48	; 72
    2bc2:	53 e4       	ldi	r21, 0x43	; 67
    2bc4:	c3 01       	movw	r24, r6
    2bc6:	b2 01       	movw	r22, r4
    2bc8:	0e 94 ea 17 	call	0x2fd4	; 0x2fd4 <__divsf3>
    2bcc:	2b 01       	movw	r4, r22
    2bce:	3c 01       	movw	r6, r24

  
  Serial.print("Pressure =\t");
    2bd0:	66 e7       	ldi	r22, 0x76	; 118
    2bd2:	71 e0       	ldi	r23, 0x01	; 1
    2bd4:	88 e7       	ldi	r24, 0x78	; 120
    2bd6:	93 e0       	ldi	r25, 0x03	; 3
    2bd8:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <_ZN5Print5printEPKc>
  Serial.print(final_pressure,4);
    2bdc:	24 e0       	ldi	r18, 0x04	; 4
    2bde:	30 e0       	ldi	r19, 0x00	; 0
    2be0:	b3 01       	movw	r22, r6
    2be2:	a2 01       	movw	r20, r4
    2be4:	88 e7       	ldi	r24, 0x78	; 120
    2be6:	93 e0       	ldi	r25, 0x03	; 3
    2be8:	0e 94 c1 1c 	call	0x3982	; 0x3982 <_ZN5Print5printEdi>
  Serial.print("kPa");
    2bec:	62 e8       	ldi	r22, 0x82	; 130
    2bee:	71 e0       	ldi	r23, 0x01	; 1
    2bf0:	88 e7       	ldi	r24, 0x78	; 120
    2bf2:	93 e0       	ldi	r25, 0x03	; 3
    2bf4:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <_ZN5Print5printEPKc>
  //Serial.print(Angle);
  Serial.print("\n");
    2bf8:	69 e9       	ldi	r22, 0x99	; 153
    2bfa:	71 e0       	ldi	r23, 0x01	; 1
    2bfc:	88 e7       	ldi	r24, 0x78	; 120
    2bfe:	93 e0       	ldi	r25, 0x03	; 3
    2c00:	0e 94 6b 1b 	call	0x36d6	; 0x36d6 <_ZN5Print5printEPKc>

  Current_Area = map(final_pressure,0,100,0,4500);
    2c04:	c3 01       	movw	r24, r6
    2c06:	b2 01       	movw	r22, r4
    2c08:	0e 94 5c 18 	call	0x30b8	; 0x30b8 <__fixsfsi>
    2c0c:	1f 92       	push	r1
    2c0e:	1f 92       	push	r1
    2c10:	21 e1       	ldi	r18, 0x11	; 17
    2c12:	2f 93       	push	r18
    2c14:	24 e9       	ldi	r18, 0x94	; 148
    2c16:	2f 93       	push	r18
    2c18:	a1 2c       	mov	r10, r1
    2c1a:	b1 2c       	mov	r11, r1
    2c1c:	65 01       	movw	r12, r10
    2c1e:	14 e6       	ldi	r17, 0x64	; 100
    2c20:	e1 2e       	mov	r14, r17
    2c22:	f1 2c       	mov	r15, r1
    2c24:	00 e0       	ldi	r16, 0x00	; 0
    2c26:	10 e0       	ldi	r17, 0x00	; 0
    2c28:	20 e0       	ldi	r18, 0x00	; 0
    2c2a:	30 e0       	ldi	r19, 0x00	; 0
    2c2c:	a9 01       	movw	r20, r18
    2c2e:	0e 94 a9 1d 	call	0x3b52	; 0x3b52 <_Z3maplllll>
    2c32:	70 93 69 03 	sts	0x0369, r23	; 0x800369 <Current_Area+0x1>
    2c36:	60 93 68 03 	sts	0x0368, r22	; 0x800368 <Current_Area>
  
  Current_Pressure = final_pressure; 
    2c3a:	40 92 6c 03 	sts	0x036C, r4	; 0x80036c <Current_Pressure>
    2c3e:	50 92 6d 03 	sts	0x036D, r5	; 0x80036d <Current_Pressure+0x1>
    2c42:	60 92 6e 03 	sts	0x036E, r6	; 0x80036e <Current_Pressure+0x2>
    2c46:	70 92 6f 03 	sts	0x036F, r7	; 0x80036f <Current_Pressure+0x3>
  stringTwo =  String(Current_Pressure/1000, 3); 
    2c4a:	20 e0       	ldi	r18, 0x00	; 0
    2c4c:	30 e0       	ldi	r19, 0x00	; 0
    2c4e:	4a e7       	ldi	r20, 0x7A	; 122
    2c50:	54 e4       	ldi	r21, 0x44	; 68
    2c52:	c3 01       	movw	r24, r6
    2c54:	b2 01       	movw	r22, r4
    2c56:	0e 94 ea 17 	call	0x2fd4	; 0x2fd4 <__divsf3>
    2c5a:	ab 01       	movw	r20, r22
    2c5c:	bc 01       	movw	r22, r24
    2c5e:	23 e0       	ldi	r18, 0x03	; 3
    2c60:	ce 01       	movw	r24, r28
    2c62:	01 96       	adiw	r24, 0x01	; 1
    2c64:	0e 94 f1 1e 	call	0x3de2	; 0x3de2 <_ZN6StringC1Efh>
    2c68:	be 01       	movw	r22, r28
    2c6a:	6f 5f       	subi	r22, 0xFF	; 255
    2c6c:	7f 4f       	sbci	r23, 0xFF	; 255
    2c6e:	82 e6       	ldi	r24, 0x62	; 98
    2c70:	93 e0       	ldi	r25, 0x03	; 3
    2c72:	0e 94 ce 1e 	call	0x3d9c	; 0x3d9c <_ZN6StringaSEOS_>
    2c76:	ce 01       	movw	r24, r28
    2c78:	01 96       	adiw	r24, 0x01	; 1
    2c7a:	0e 94 eb 1d 	call	0x3bd6	; 0x3bd6 <_ZN6StringD1Ev>
  
  if((Current_Pressure-Previous_Pressure > 1)||(Previous_Pressure-Current_Pressure > 1))
    2c7e:	40 90 6c 03 	lds	r4, 0x036C	; 0x80036c <Current_Pressure>
    2c82:	50 90 6d 03 	lds	r5, 0x036D	; 0x80036d <Current_Pressure+0x1>
    2c86:	60 90 6e 03 	lds	r6, 0x036E	; 0x80036e <Current_Pressure+0x2>
    2c8a:	70 90 6f 03 	lds	r7, 0x036F	; 0x80036f <Current_Pressure+0x3>
    2c8e:	c0 90 70 03 	lds	r12, 0x0370	; 0x800370 <Previous_Pressure>
    2c92:	d0 90 71 03 	lds	r13, 0x0371	; 0x800371 <Previous_Pressure+0x1>
    2c96:	e0 90 72 03 	lds	r14, 0x0372	; 0x800372 <Previous_Pressure+0x2>
    2c9a:	f0 90 73 03 	lds	r15, 0x0373	; 0x800373 <Previous_Pressure+0x3>
    2c9e:	a7 01       	movw	r20, r14
    2ca0:	96 01       	movw	r18, r12
    2ca2:	c3 01       	movw	r24, r6
    2ca4:	b2 01       	movw	r22, r4
    2ca6:	0e 94 7d 17 	call	0x2efa	; 0x2efa <__subsf3>
    2caa:	0f 90       	pop	r0
    2cac:	0f 90       	pop	r0
    2cae:	0f 90       	pop	r0
    2cb0:	0f 90       	pop	r0
    2cb2:	20 e0       	ldi	r18, 0x00	; 0
    2cb4:	30 e0       	ldi	r19, 0x00	; 0
    2cb6:	40 e8       	ldi	r20, 0x80	; 128
    2cb8:	5f e3       	ldi	r21, 0x3F	; 63
    2cba:	0e 94 20 19 	call	0x3240	; 0x3240 <__gesf2>
    2cbe:	18 16       	cp	r1, r24
    2cc0:	74 f0       	brlt	.+28     	; 0x2cde <loop+0x1da>
    2cc2:	a3 01       	movw	r20, r6
    2cc4:	92 01       	movw	r18, r4
    2cc6:	c7 01       	movw	r24, r14
    2cc8:	b6 01       	movw	r22, r12
    2cca:	0e 94 7d 17 	call	0x2efa	; 0x2efa <__subsf3>
    2cce:	20 e0       	ldi	r18, 0x00	; 0
    2cd0:	30 e0       	ldi	r19, 0x00	; 0
    2cd2:	40 e8       	ldi	r20, 0x80	; 128
    2cd4:	5f e3       	ldi	r21, 0x3F	; 63
    2cd6:	0e 94 20 19 	call	0x3240	; 0x3240 <__gesf2>
    2cda:	18 16       	cp	r1, r24
    2cdc:	2c f5       	brge	.+74     	; 0x2d28 <loop+0x224>
  {
  tft.fillRectangle(30, 40, 120, 80, COLOR_BLACK); //Removing previous pressure valve from screen
    2cde:	e1 2c       	mov	r14, r1
    2ce0:	f1 2c       	mov	r15, r1
    2ce2:	00 e5       	ldi	r16, 0x50	; 80
    2ce4:	10 e0       	ldi	r17, 0x00	; 0
    2ce6:	28 e7       	ldi	r18, 0x78	; 120
    2ce8:	30 e0       	ldi	r19, 0x00	; 0
    2cea:	48 e2       	ldi	r20, 0x28	; 40
    2cec:	50 e0       	ldi	r21, 0x00	; 0
    2cee:	6e e1       	ldi	r22, 0x1E	; 30
    2cf0:	70 e0       	ldi	r23, 0x00	; 0
    2cf2:	8e e1       	ldi	r24, 0x1E	; 30
    2cf4:	93 e0       	ldi	r25, 0x03	; 3
    2cf6:	0e 94 34 26 	call	0x4c68	; 0x4c68 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj>
  
  tft.drawGFXText(30,70, stringTwo,primary_color);  //Writing new value from screen
    2cfa:	62 e6       	ldi	r22, 0x62	; 98
    2cfc:	73 e0       	ldi	r23, 0x03	; 3
    2cfe:	ce 01       	movw	r24, r28
    2d00:	01 96       	adiw	r24, 0x01	; 1
    2d02:	0e 94 c5 1e 	call	0x3d8a	; 0x3d8a <_ZN6StringC1ERKS_>
    2d06:	0f ef       	ldi	r16, 0xFF	; 255
    2d08:	1f ef       	ldi	r17, 0xFF	; 255
    2d0a:	9e 01       	movw	r18, r28
    2d0c:	2f 5f       	subi	r18, 0xFF	; 255
    2d0e:	3f 4f       	sbci	r19, 0xFF	; 255
    2d10:	46 e4       	ldi	r20, 0x46	; 70
    2d12:	50 e0       	ldi	r21, 0x00	; 0
    2d14:	6e e1       	ldi	r22, 0x1E	; 30
    2d16:	70 e0       	ldi	r23, 0x00	; 0
    2d18:	8e e1       	ldi	r24, 0x1E	; 30
    2d1a:	93 e0       	ldi	r25, 0x03	; 3
    2d1c:	0e 94 79 2c 	call	0x58f2	; 0x58f2 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj>
    2d20:	ce 01       	movw	r24, r28
    2d22:	01 96       	adiw	r24, 0x01	; 1
    2d24:	0e 94 eb 1d 	call	0x3bd6	; 0x3bd6 <_ZN6StringD1Ev>
  }
  if((Current_Pressure-Previous_Pressure > 1))   //When Pressure is increasing.
    2d28:	c0 90 6c 03 	lds	r12, 0x036C	; 0x80036c <Current_Pressure>
    2d2c:	d0 90 6d 03 	lds	r13, 0x036D	; 0x80036d <Current_Pressure+0x1>
    2d30:	e0 90 6e 03 	lds	r14, 0x036E	; 0x80036e <Current_Pressure+0x2>
    2d34:	f0 90 6f 03 	lds	r15, 0x036F	; 0x80036f <Current_Pressure+0x3>
    2d38:	40 90 70 03 	lds	r4, 0x0370	; 0x800370 <Previous_Pressure>
    2d3c:	50 90 71 03 	lds	r5, 0x0371	; 0x800371 <Previous_Pressure+0x1>
    2d40:	60 90 72 03 	lds	r6, 0x0372	; 0x800372 <Previous_Pressure+0x2>
    2d44:	70 90 73 03 	lds	r7, 0x0373	; 0x800373 <Previous_Pressure+0x3>
    2d48:	a3 01       	movw	r20, r6
    2d4a:	92 01       	movw	r18, r4
    2d4c:	c7 01       	movw	r24, r14
    2d4e:	b6 01       	movw	r22, r12
    2d50:	0e 94 7d 17 	call	0x2efa	; 0x2efa <__subsf3>
    2d54:	20 e0       	ldi	r18, 0x00	; 0
    2d56:	30 e0       	ldi	r19, 0x00	; 0
    2d58:	40 e8       	ldi	r20, 0x80	; 128
    2d5a:	5f e3       	ldi	r21, 0x3F	; 63
    2d5c:	0e 94 20 19 	call	0x3240	; 0x3240 <__gesf2>
    2d60:	18 16       	cp	r1, r24
    2d62:	b4 f4       	brge	.+44     	; 0x2d90 <loop+0x28c>
 {
  
  if(Current_Area >= 0 && Current_Area < 900)
    2d64:	80 91 68 03 	lds	r24, 0x0368	; 0x800368 <Current_Area>
    2d68:	90 91 69 03 	lds	r25, 0x0369	; 0x800369 <Current_Area+0x1>
    2d6c:	84 38       	cpi	r24, 0x84	; 132
    2d6e:	23 e0       	ldi	r18, 0x03	; 3
    2d70:	92 07       	cpc	r25, r18
    2d72:	08 f4       	brcc	.+2      	; 0x2d76 <loop+0x272>
    2d74:	65 c0       	rjmp	.+202    	; 0x2e40 <loop+0x33c>
  {fill_area(Current_Area,COLOR_GOLD);
  }
  else if(Current_Area >=900 && Current_Area <3600)
    2d76:	9c 01       	movw	r18, r24
    2d78:	24 58       	subi	r18, 0x84	; 132
    2d7a:	33 40       	sbci	r19, 0x03	; 3
    2d7c:	2c 38       	cpi	r18, 0x8C	; 140
    2d7e:	3a 40       	sbci	r19, 0x0A	; 10
    2d80:	08 f4       	brcc	.+2      	; 0x2d84 <loop+0x280>
    2d82:	67 c0       	rjmp	.+206    	; 0x2e52 <loop+0x34e>
  {
    fill_area(Current_Area,COLOR_GREEN);
  }
  else if(Current_Area >= 3600 )
    2d84:	80 31       	cpi	r24, 0x10	; 16
    2d86:	2e e0       	ldi	r18, 0x0E	; 14
    2d88:	92 07       	cpc	r25, r18
    2d8a:	0c f4       	brge	.+2      	; 0x2d8e <loop+0x28a>
    2d8c:	69 c0       	rjmp	.+210    	; 0x2e60 <loop+0x35c>
    2d8e:	64 c0       	rjmp	.+200    	; 0x2e58 <loop+0x354>
  }
  Previous_Pressure = Current_Pressure;
  Previous_Area = Current_Area;
}

else if(Previous_Pressure-Current_Pressure > 1)  //Pressure is decreasing.
    2d90:	a7 01       	movw	r20, r14
    2d92:	96 01       	movw	r18, r12
    2d94:	c3 01       	movw	r24, r6
    2d96:	b2 01       	movw	r22, r4
    2d98:	0e 94 7d 17 	call	0x2efa	; 0x2efa <__subsf3>
    2d9c:	20 e0       	ldi	r18, 0x00	; 0
    2d9e:	30 e0       	ldi	r19, 0x00	; 0
    2da0:	40 e8       	ldi	r20, 0x80	; 128
    2da2:	5f e3       	ldi	r21, 0x3F	; 63
    2da4:	0e 94 20 19 	call	0x3240	; 0x3240 <__gesf2>
    2da8:	18 16       	cp	r1, r24
    2daa:	0c f0       	brlt	.+2      	; 0x2dae <loop+0x2aa>
    2dac:	71 c0       	rjmp	.+226    	; 0x2e90 <loop+0x38c>
{
 float Previous_length = Previous_Area/rectangle_width;
 float Current_length =  Current_Area/rectangle_width;
 tft.fillRectangle(35+Current_length, 105, 35+Previous_length, 135,COLOR_BLACK);
    2dae:	80 91 6a 03 	lds	r24, 0x036A	; 0x80036a <Previous_Area>
    2db2:	90 91 6b 03 	lds	r25, 0x036B	; 0x80036b <Previous_Area+0x1>
    2db6:	0e e1       	ldi	r16, 0x1E	; 30
    2db8:	10 e0       	ldi	r17, 0x00	; 0
    2dba:	b8 01       	movw	r22, r16
    2dbc:	0e 94 a0 33 	call	0x6740	; 0x6740 <__divmodhi4>
    2dc0:	07 2e       	mov	r0, r23
    2dc2:	00 0c       	add	r0, r0
    2dc4:	88 0b       	sbc	r24, r24
    2dc6:	99 0b       	sbc	r25, r25
    2dc8:	0e 94 94 18 	call	0x3128	; 0x3128 <__floatsisf>
    2dcc:	20 e0       	ldi	r18, 0x00	; 0
    2dce:	30 e0       	ldi	r19, 0x00	; 0
    2dd0:	4c e0       	ldi	r20, 0x0C	; 12
    2dd2:	52 e4       	ldi	r21, 0x42	; 66
    2dd4:	0e 94 7e 17 	call	0x2efc	; 0x2efc <__addsf3>
    2dd8:	0e 94 63 18 	call	0x30c6	; 0x30c6 <__fixunssfsi>
    2ddc:	2b 01       	movw	r4, r22
    2dde:	3c 01       	movw	r6, r24
    2de0:	80 91 68 03 	lds	r24, 0x0368	; 0x800368 <Current_Area>
    2de4:	90 91 69 03 	lds	r25, 0x0369	; 0x800369 <Current_Area+0x1>
    2de8:	b8 01       	movw	r22, r16
    2dea:	0e 94 a0 33 	call	0x6740	; 0x6740 <__divmodhi4>
    2dee:	07 2e       	mov	r0, r23
    2df0:	00 0c       	add	r0, r0
    2df2:	88 0b       	sbc	r24, r24
    2df4:	99 0b       	sbc	r25, r25
    2df6:	0e 94 94 18 	call	0x3128	; 0x3128 <__floatsisf>
    2dfa:	20 e0       	ldi	r18, 0x00	; 0
    2dfc:	30 e0       	ldi	r19, 0x00	; 0
    2dfe:	4c e0       	ldi	r20, 0x0C	; 12
    2e00:	52 e4       	ldi	r21, 0x42	; 66
    2e02:	0e 94 7e 17 	call	0x2efc	; 0x2efc <__addsf3>
    2e06:	0e 94 63 18 	call	0x30c6	; 0x30c6 <__fixunssfsi>
    2e0a:	e1 2c       	mov	r14, r1
    2e0c:	f1 2c       	mov	r15, r1
    2e0e:	07 e8       	ldi	r16, 0x87	; 135
    2e10:	10 e0       	ldi	r17, 0x00	; 0
    2e12:	92 01       	movw	r18, r4
    2e14:	49 e6       	ldi	r20, 0x69	; 105
    2e16:	50 e0       	ldi	r21, 0x00	; 0
    2e18:	8e e1       	ldi	r24, 0x1E	; 30
    2e1a:	93 e0       	ldi	r25, 0x03	; 3
    2e1c:	0e 94 34 26 	call	0x4c68	; 0x4c68 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj>
  if (Current_Area<50)
    2e20:	80 91 68 03 	lds	r24, 0x0368	; 0x800368 <Current_Area>
    2e24:	90 91 69 03 	lds	r25, 0x0369	; 0x800369 <Current_Area+0x1>
    2e28:	82 33       	cpi	r24, 0x32	; 50
    2e2a:	91 05       	cpc	r25, r1
    2e2c:	1c f4       	brge	.+6      	; 0x2e34 <loop+0x330>
  {
	fill_area(Current_Area,COLOR_BLACK); 
    2e2e:	60 e0       	ldi	r22, 0x00	; 0
    2e30:	70 e0       	ldi	r23, 0x00	; 0
    2e32:	14 c0       	rjmp	.+40     	; 0x2e5c <loop+0x358>
  }
  else if(Current_Area >= 50 && Current_Area < 900)
    2e34:	9c 01       	movw	r18, r24
    2e36:	22 53       	subi	r18, 0x32	; 50
    2e38:	31 09       	sbc	r19, r1
    2e3a:	22 35       	cpi	r18, 0x52	; 82
    2e3c:	33 40       	sbci	r19, 0x03	; 3
    2e3e:	18 f4       	brcc	.+6      	; 0x2e46 <loop+0x342>
  {
    fill_area(Current_Area,COLOR_GOLD);
    2e40:	60 ea       	ldi	r22, 0xA0	; 160
    2e42:	7e ef       	ldi	r23, 0xFE	; 254
    2e44:	0b c0       	rjmp	.+22     	; 0x2e5c <loop+0x358>
  }
  else if(Current_Area >=900 && Current_Area <3600)
    2e46:	9c 01       	movw	r18, r24
    2e48:	24 58       	subi	r18, 0x84	; 132
    2e4a:	33 40       	sbci	r19, 0x03	; 3
    2e4c:	2c 38       	cpi	r18, 0x8C	; 140
    2e4e:	3a 40       	sbci	r19, 0x0A	; 10
    2e50:	18 f4       	brcc	.+6      	; 0x2e58 <loop+0x354>
  {
    fill_area(Current_Area,COLOR_GREEN);
    2e52:	60 ee       	ldi	r22, 0xE0	; 224
    2e54:	77 e0       	ldi	r23, 0x07	; 7
    2e56:	02 c0       	rjmp	.+4      	; 0x2e5c <loop+0x358>
  }
  else if(Current_Area >= 3600 )
  {
   fill_area(Current_Area,COLOR_RED); 
    2e58:	60 e0       	ldi	r22, 0x00	; 0
    2e5a:	78 ef       	ldi	r23, 0xF8	; 248
    2e5c:	0e 94 67 15 	call	0x2ace	; 0x2ace <_Z9fill_areaij>
  }
  Previous_Pressure = Current_Pressure;
    2e60:	80 91 6c 03 	lds	r24, 0x036C	; 0x80036c <Current_Pressure>
    2e64:	90 91 6d 03 	lds	r25, 0x036D	; 0x80036d <Current_Pressure+0x1>
    2e68:	a0 91 6e 03 	lds	r26, 0x036E	; 0x80036e <Current_Pressure+0x2>
    2e6c:	b0 91 6f 03 	lds	r27, 0x036F	; 0x80036f <Current_Pressure+0x3>
    2e70:	80 93 70 03 	sts	0x0370, r24	; 0x800370 <Previous_Pressure>
    2e74:	90 93 71 03 	sts	0x0371, r25	; 0x800371 <Previous_Pressure+0x1>
    2e78:	a0 93 72 03 	sts	0x0372, r26	; 0x800372 <Previous_Pressure+0x2>
    2e7c:	b0 93 73 03 	sts	0x0373, r27	; 0x800373 <Previous_Pressure+0x3>
  Previous_Area = Current_Area;
    2e80:	80 91 68 03 	lds	r24, 0x0368	; 0x800368 <Current_Area>
    2e84:	90 91 69 03 	lds	r25, 0x0369	; 0x800369 <Current_Area+0x1>
    2e88:	90 93 6b 03 	sts	0x036B, r25	; 0x80036b <Previous_Area+0x1>
    2e8c:	80 93 6a 03 	sts	0x036A, r24	; 0x80036a <Previous_Area>
}
}
    2e90:	26 96       	adiw	r28, 0x06	; 6
    2e92:	0f b6       	in	r0, 0x3f	; 63
    2e94:	f8 94       	cli
    2e96:	de bf       	out	0x3e, r29	; 62
    2e98:	0f be       	out	0x3f, r0	; 63
    2e9a:	cd bf       	out	0x3d, r28	; 61
    2e9c:	df 91       	pop	r29
    2e9e:	cf 91       	pop	r28
    2ea0:	1f 91       	pop	r17
    2ea2:	0f 91       	pop	r16
    2ea4:	ff 90       	pop	r15
    2ea6:	ef 90       	pop	r14
    2ea8:	df 90       	pop	r13
    2eaa:	cf 90       	pop	r12
    2eac:	bf 90       	pop	r11
    2eae:	af 90       	pop	r10
    2eb0:	7f 90       	pop	r7
    2eb2:	6f 90       	pop	r6
    2eb4:	5f 90       	pop	r5
    2eb6:	4f 90       	pop	r4
    2eb8:	08 95       	ret

00002eba <_GLOBAL__sub_I_pressure>:
{
  
  int length = area/rectangle_width;
  tft.fillRectangle(35, 105, 35+length, 135, colour);
  
}
    2eba:	ef 92       	push	r14
    2ebc:	0f 93       	push	r16
float Current_Pressure = 0;
int Previous_Area = 0;
int Current_Area = 0;
int w = 10;
int h = 15;
String stringTwo;
    2ebe:	61 e8       	ldi	r22, 0x81	; 129
    2ec0:	71 e0       	ldi	r23, 0x01	; 1
    2ec2:	82 e6       	ldi	r24, 0x62	; 98
    2ec4:	93 e0       	ldi	r25, 0x03	; 3
    2ec6:	0e 94 5c 1e 	call	0x3cb8	; 0x3cb8 <_ZN6StringC1EPKc>
/******************************************/


/***************************************************************************************/
TFT_22_ILI9225 tft = TFT_22_ILI9225(TFT_RST, TFT_RS, TFT_CS, TFT_LED, TFT_BRIGHTNESS);
    2eca:	88 ec       	ldi	r24, 0xC8	; 200
    2ecc:	e8 2e       	mov	r14, r24
    2ece:	03 e0       	ldi	r16, 0x03	; 3
    2ed0:	2a e0       	ldi	r18, 0x0A	; 10
    2ed2:	49 e0       	ldi	r20, 0x09	; 9
    2ed4:	68 e0       	ldi	r22, 0x08	; 8
    2ed6:	8e e1       	ldi	r24, 0x1E	; 30
    2ed8:	93 e0       	ldi	r25, 0x03	; 3
    2eda:	0e 94 c1 22 	call	0x4582	; 0x4582 <_ZN14TFT_22_ILI9225C1Eaaaah>
AMS5812 dPress(Wire,0x10,AMS5812::AMS5812_1000_D);
    2ede:	2f e0       	ldi	r18, 0x0F	; 15
    2ee0:	40 e1       	ldi	r20, 0x10	; 16
    2ee2:	6e e1       	ldi	r22, 0x1E	; 30
    2ee4:	74 e0       	ldi	r23, 0x04	; 4
    2ee6:	84 e3       	ldi	r24, 0x34	; 52
    2ee8:	92 e0       	ldi	r25, 0x02	; 2
{
  
  int length = area/rectangle_width;
  tft.fillRectangle(35, 105, 35+length, 135, colour);
  
}
    2eea:	0f 91       	pop	r16
    2eec:	ef 90       	pop	r14
/******************************************/


/***************************************************************************************/
TFT_22_ILI9225 tft = TFT_22_ILI9225(TFT_RST, TFT_RS, TFT_CS, TFT_LED, TFT_BRIGHTNESS);
AMS5812 dPress(Wire,0x10,AMS5812::AMS5812_1000_D);
    2eee:	0c 94 34 1f 	jmp	0x3e68	; 0x3e68 <_ZN7AMS5812C1ER7TwoWirehNS_10TransducerE>

00002ef2 <_GLOBAL__sub_D_pressure>:
float Current_Pressure = 0;
int Previous_Area = 0;
int Current_Area = 0;
int w = 10;
int h = 15;
String stringTwo;
    2ef2:	82 e6       	ldi	r24, 0x62	; 98
    2ef4:	93 e0       	ldi	r25, 0x03	; 3
    2ef6:	0c 94 eb 1d 	jmp	0x3bd6	; 0x3bd6 <_ZN6StringD1Ev>

00002efa <__subsf3>:
    2efa:	50 58       	subi	r21, 0x80	; 128

00002efc <__addsf3>:
    2efc:	bb 27       	eor	r27, r27
    2efe:	aa 27       	eor	r26, r26
    2f00:	0e 94 95 17 	call	0x2f2a	; 0x2f2a <__addsf3x>
    2f04:	0c 94 e6 18 	jmp	0x31cc	; 0x31cc <__fp_round>
    2f08:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <__fp_pscA>
    2f0c:	38 f0       	brcs	.+14     	; 0x2f1c <__addsf3+0x20>
    2f0e:	0e 94 df 18 	call	0x31be	; 0x31be <__fp_pscB>
    2f12:	20 f0       	brcs	.+8      	; 0x2f1c <__addsf3+0x20>
    2f14:	39 f4       	brne	.+14     	; 0x2f24 <__addsf3+0x28>
    2f16:	9f 3f       	cpi	r25, 0xFF	; 255
    2f18:	19 f4       	brne	.+6      	; 0x2f20 <__addsf3+0x24>
    2f1a:	26 f4       	brtc	.+8      	; 0x2f24 <__addsf3+0x28>
    2f1c:	0c 94 d5 18 	jmp	0x31aa	; 0x31aa <__fp_nan>
    2f20:	0e f4       	brtc	.+2      	; 0x2f24 <__addsf3+0x28>
    2f22:	e0 95       	com	r30
    2f24:	e7 fb       	bst	r30, 7
    2f26:	0c 94 cf 18 	jmp	0x319e	; 0x319e <__fp_inf>

00002f2a <__addsf3x>:
    2f2a:	e9 2f       	mov	r30, r25
    2f2c:	0e 94 f7 18 	call	0x31ee	; 0x31ee <__fp_split3>
    2f30:	58 f3       	brcs	.-42     	; 0x2f08 <__addsf3+0xc>
    2f32:	ba 17       	cp	r27, r26
    2f34:	62 07       	cpc	r22, r18
    2f36:	73 07       	cpc	r23, r19
    2f38:	84 07       	cpc	r24, r20
    2f3a:	95 07       	cpc	r25, r21
    2f3c:	20 f0       	brcs	.+8      	; 0x2f46 <__addsf3x+0x1c>
    2f3e:	79 f4       	brne	.+30     	; 0x2f5e <__addsf3x+0x34>
    2f40:	a6 f5       	brtc	.+104    	; 0x2faa <__addsf3x+0x80>
    2f42:	0c 94 19 19 	jmp	0x3232	; 0x3232 <__fp_zero>
    2f46:	0e f4       	brtc	.+2      	; 0x2f4a <__addsf3x+0x20>
    2f48:	e0 95       	com	r30
    2f4a:	0b 2e       	mov	r0, r27
    2f4c:	ba 2f       	mov	r27, r26
    2f4e:	a0 2d       	mov	r26, r0
    2f50:	0b 01       	movw	r0, r22
    2f52:	b9 01       	movw	r22, r18
    2f54:	90 01       	movw	r18, r0
    2f56:	0c 01       	movw	r0, r24
    2f58:	ca 01       	movw	r24, r20
    2f5a:	a0 01       	movw	r20, r0
    2f5c:	11 24       	eor	r1, r1
    2f5e:	ff 27       	eor	r31, r31
    2f60:	59 1b       	sub	r21, r25
    2f62:	99 f0       	breq	.+38     	; 0x2f8a <__addsf3x+0x60>
    2f64:	59 3f       	cpi	r21, 0xF9	; 249
    2f66:	50 f4       	brcc	.+20     	; 0x2f7c <__addsf3x+0x52>
    2f68:	50 3e       	cpi	r21, 0xE0	; 224
    2f6a:	68 f1       	brcs	.+90     	; 0x2fc6 <__addsf3x+0x9c>
    2f6c:	1a 16       	cp	r1, r26
    2f6e:	f0 40       	sbci	r31, 0x00	; 0
    2f70:	a2 2f       	mov	r26, r18
    2f72:	23 2f       	mov	r18, r19
    2f74:	34 2f       	mov	r19, r20
    2f76:	44 27       	eor	r20, r20
    2f78:	58 5f       	subi	r21, 0xF8	; 248
    2f7a:	f3 cf       	rjmp	.-26     	; 0x2f62 <__addsf3x+0x38>
    2f7c:	46 95       	lsr	r20
    2f7e:	37 95       	ror	r19
    2f80:	27 95       	ror	r18
    2f82:	a7 95       	ror	r26
    2f84:	f0 40       	sbci	r31, 0x00	; 0
    2f86:	53 95       	inc	r21
    2f88:	c9 f7       	brne	.-14     	; 0x2f7c <__addsf3x+0x52>
    2f8a:	7e f4       	brtc	.+30     	; 0x2faa <__addsf3x+0x80>
    2f8c:	1f 16       	cp	r1, r31
    2f8e:	ba 0b       	sbc	r27, r26
    2f90:	62 0b       	sbc	r22, r18
    2f92:	73 0b       	sbc	r23, r19
    2f94:	84 0b       	sbc	r24, r20
    2f96:	ba f0       	brmi	.+46     	; 0x2fc6 <__addsf3x+0x9c>
    2f98:	91 50       	subi	r25, 0x01	; 1
    2f9a:	a1 f0       	breq	.+40     	; 0x2fc4 <__addsf3x+0x9a>
    2f9c:	ff 0f       	add	r31, r31
    2f9e:	bb 1f       	adc	r27, r27
    2fa0:	66 1f       	adc	r22, r22
    2fa2:	77 1f       	adc	r23, r23
    2fa4:	88 1f       	adc	r24, r24
    2fa6:	c2 f7       	brpl	.-16     	; 0x2f98 <__addsf3x+0x6e>
    2fa8:	0e c0       	rjmp	.+28     	; 0x2fc6 <__addsf3x+0x9c>
    2faa:	ba 0f       	add	r27, r26
    2fac:	62 1f       	adc	r22, r18
    2fae:	73 1f       	adc	r23, r19
    2fb0:	84 1f       	adc	r24, r20
    2fb2:	48 f4       	brcc	.+18     	; 0x2fc6 <__addsf3x+0x9c>
    2fb4:	87 95       	ror	r24
    2fb6:	77 95       	ror	r23
    2fb8:	67 95       	ror	r22
    2fba:	b7 95       	ror	r27
    2fbc:	f7 95       	ror	r31
    2fbe:	9e 3f       	cpi	r25, 0xFE	; 254
    2fc0:	08 f0       	brcs	.+2      	; 0x2fc4 <__addsf3x+0x9a>
    2fc2:	b0 cf       	rjmp	.-160    	; 0x2f24 <__addsf3+0x28>
    2fc4:	93 95       	inc	r25
    2fc6:	88 0f       	add	r24, r24
    2fc8:	08 f0       	brcs	.+2      	; 0x2fcc <__addsf3x+0xa2>
    2fca:	99 27       	eor	r25, r25
    2fcc:	ee 0f       	add	r30, r30
    2fce:	97 95       	ror	r25
    2fd0:	87 95       	ror	r24
    2fd2:	08 95       	ret

00002fd4 <__divsf3>:
    2fd4:	0e 94 fe 17 	call	0x2ffc	; 0x2ffc <__divsf3x>
    2fd8:	0c 94 e6 18 	jmp	0x31cc	; 0x31cc <__fp_round>
    2fdc:	0e 94 df 18 	call	0x31be	; 0x31be <__fp_pscB>
    2fe0:	58 f0       	brcs	.+22     	; 0x2ff8 <__divsf3+0x24>
    2fe2:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <__fp_pscA>
    2fe6:	40 f0       	brcs	.+16     	; 0x2ff8 <__divsf3+0x24>
    2fe8:	29 f4       	brne	.+10     	; 0x2ff4 <__divsf3+0x20>
    2fea:	5f 3f       	cpi	r21, 0xFF	; 255
    2fec:	29 f0       	breq	.+10     	; 0x2ff8 <__divsf3+0x24>
    2fee:	0c 94 cf 18 	jmp	0x319e	; 0x319e <__fp_inf>
    2ff2:	51 11       	cpse	r21, r1
    2ff4:	0c 94 1a 19 	jmp	0x3234	; 0x3234 <__fp_szero>
    2ff8:	0c 94 d5 18 	jmp	0x31aa	; 0x31aa <__fp_nan>

00002ffc <__divsf3x>:
    2ffc:	0e 94 f7 18 	call	0x31ee	; 0x31ee <__fp_split3>
    3000:	68 f3       	brcs	.-38     	; 0x2fdc <__divsf3+0x8>

00003002 <__divsf3_pse>:
    3002:	99 23       	and	r25, r25
    3004:	b1 f3       	breq	.-20     	; 0x2ff2 <__divsf3+0x1e>
    3006:	55 23       	and	r21, r21
    3008:	91 f3       	breq	.-28     	; 0x2fee <__divsf3+0x1a>
    300a:	95 1b       	sub	r25, r21
    300c:	55 0b       	sbc	r21, r21
    300e:	bb 27       	eor	r27, r27
    3010:	aa 27       	eor	r26, r26
    3012:	62 17       	cp	r22, r18
    3014:	73 07       	cpc	r23, r19
    3016:	84 07       	cpc	r24, r20
    3018:	38 f0       	brcs	.+14     	; 0x3028 <__divsf3_pse+0x26>
    301a:	9f 5f       	subi	r25, 0xFF	; 255
    301c:	5f 4f       	sbci	r21, 0xFF	; 255
    301e:	22 0f       	add	r18, r18
    3020:	33 1f       	adc	r19, r19
    3022:	44 1f       	adc	r20, r20
    3024:	aa 1f       	adc	r26, r26
    3026:	a9 f3       	breq	.-22     	; 0x3012 <__divsf3_pse+0x10>
    3028:	35 d0       	rcall	.+106    	; 0x3094 <__divsf3_pse+0x92>
    302a:	0e 2e       	mov	r0, r30
    302c:	3a f0       	brmi	.+14     	; 0x303c <__divsf3_pse+0x3a>
    302e:	e0 e8       	ldi	r30, 0x80	; 128
    3030:	32 d0       	rcall	.+100    	; 0x3096 <__divsf3_pse+0x94>
    3032:	91 50       	subi	r25, 0x01	; 1
    3034:	50 40       	sbci	r21, 0x00	; 0
    3036:	e6 95       	lsr	r30
    3038:	00 1c       	adc	r0, r0
    303a:	ca f7       	brpl	.-14     	; 0x302e <__divsf3_pse+0x2c>
    303c:	2b d0       	rcall	.+86     	; 0x3094 <__divsf3_pse+0x92>
    303e:	fe 2f       	mov	r31, r30
    3040:	29 d0       	rcall	.+82     	; 0x3094 <__divsf3_pse+0x92>
    3042:	66 0f       	add	r22, r22
    3044:	77 1f       	adc	r23, r23
    3046:	88 1f       	adc	r24, r24
    3048:	bb 1f       	adc	r27, r27
    304a:	26 17       	cp	r18, r22
    304c:	37 07       	cpc	r19, r23
    304e:	48 07       	cpc	r20, r24
    3050:	ab 07       	cpc	r26, r27
    3052:	b0 e8       	ldi	r27, 0x80	; 128
    3054:	09 f0       	breq	.+2      	; 0x3058 <__divsf3_pse+0x56>
    3056:	bb 0b       	sbc	r27, r27
    3058:	80 2d       	mov	r24, r0
    305a:	bf 01       	movw	r22, r30
    305c:	ff 27       	eor	r31, r31
    305e:	93 58       	subi	r25, 0x83	; 131
    3060:	5f 4f       	sbci	r21, 0xFF	; 255
    3062:	3a f0       	brmi	.+14     	; 0x3072 <__divsf3_pse+0x70>
    3064:	9e 3f       	cpi	r25, 0xFE	; 254
    3066:	51 05       	cpc	r21, r1
    3068:	78 f0       	brcs	.+30     	; 0x3088 <__divsf3_pse+0x86>
    306a:	0c 94 cf 18 	jmp	0x319e	; 0x319e <__fp_inf>
    306e:	0c 94 1a 19 	jmp	0x3234	; 0x3234 <__fp_szero>
    3072:	5f 3f       	cpi	r21, 0xFF	; 255
    3074:	e4 f3       	brlt	.-8      	; 0x306e <__divsf3_pse+0x6c>
    3076:	98 3e       	cpi	r25, 0xE8	; 232
    3078:	d4 f3       	brlt	.-12     	; 0x306e <__divsf3_pse+0x6c>
    307a:	86 95       	lsr	r24
    307c:	77 95       	ror	r23
    307e:	67 95       	ror	r22
    3080:	b7 95       	ror	r27
    3082:	f7 95       	ror	r31
    3084:	9f 5f       	subi	r25, 0xFF	; 255
    3086:	c9 f7       	brne	.-14     	; 0x307a <__divsf3_pse+0x78>
    3088:	88 0f       	add	r24, r24
    308a:	91 1d       	adc	r25, r1
    308c:	96 95       	lsr	r25
    308e:	87 95       	ror	r24
    3090:	97 f9       	bld	r25, 7
    3092:	08 95       	ret
    3094:	e1 e0       	ldi	r30, 0x01	; 1
    3096:	66 0f       	add	r22, r22
    3098:	77 1f       	adc	r23, r23
    309a:	88 1f       	adc	r24, r24
    309c:	bb 1f       	adc	r27, r27
    309e:	62 17       	cp	r22, r18
    30a0:	73 07       	cpc	r23, r19
    30a2:	84 07       	cpc	r24, r20
    30a4:	ba 07       	cpc	r27, r26
    30a6:	20 f0       	brcs	.+8      	; 0x30b0 <__divsf3_pse+0xae>
    30a8:	62 1b       	sub	r22, r18
    30aa:	73 0b       	sbc	r23, r19
    30ac:	84 0b       	sbc	r24, r20
    30ae:	ba 0b       	sbc	r27, r26
    30b0:	ee 1f       	adc	r30, r30
    30b2:	88 f7       	brcc	.-30     	; 0x3096 <__divsf3_pse+0x94>
    30b4:	e0 95       	com	r30
    30b6:	08 95       	ret

000030b8 <__fixsfsi>:
    30b8:	0e 94 63 18 	call	0x30c6	; 0x30c6 <__fixunssfsi>
    30bc:	68 94       	set
    30be:	b1 11       	cpse	r27, r1
    30c0:	0c 94 1a 19 	jmp	0x3234	; 0x3234 <__fp_szero>
    30c4:	08 95       	ret

000030c6 <__fixunssfsi>:
    30c6:	0e 94 ff 18 	call	0x31fe	; 0x31fe <__fp_splitA>
    30ca:	88 f0       	brcs	.+34     	; 0x30ee <__fixunssfsi+0x28>
    30cc:	9f 57       	subi	r25, 0x7F	; 127
    30ce:	98 f0       	brcs	.+38     	; 0x30f6 <__fixunssfsi+0x30>
    30d0:	b9 2f       	mov	r27, r25
    30d2:	99 27       	eor	r25, r25
    30d4:	b7 51       	subi	r27, 0x17	; 23
    30d6:	b0 f0       	brcs	.+44     	; 0x3104 <__fixunssfsi+0x3e>
    30d8:	e1 f0       	breq	.+56     	; 0x3112 <__fixunssfsi+0x4c>
    30da:	66 0f       	add	r22, r22
    30dc:	77 1f       	adc	r23, r23
    30de:	88 1f       	adc	r24, r24
    30e0:	99 1f       	adc	r25, r25
    30e2:	1a f0       	brmi	.+6      	; 0x30ea <__fixunssfsi+0x24>
    30e4:	ba 95       	dec	r27
    30e6:	c9 f7       	brne	.-14     	; 0x30da <__fixunssfsi+0x14>
    30e8:	14 c0       	rjmp	.+40     	; 0x3112 <__fixunssfsi+0x4c>
    30ea:	b1 30       	cpi	r27, 0x01	; 1
    30ec:	91 f0       	breq	.+36     	; 0x3112 <__fixunssfsi+0x4c>
    30ee:	0e 94 19 19 	call	0x3232	; 0x3232 <__fp_zero>
    30f2:	b1 e0       	ldi	r27, 0x01	; 1
    30f4:	08 95       	ret
    30f6:	0c 94 19 19 	jmp	0x3232	; 0x3232 <__fp_zero>
    30fa:	67 2f       	mov	r22, r23
    30fc:	78 2f       	mov	r23, r24
    30fe:	88 27       	eor	r24, r24
    3100:	b8 5f       	subi	r27, 0xF8	; 248
    3102:	39 f0       	breq	.+14     	; 0x3112 <__fixunssfsi+0x4c>
    3104:	b9 3f       	cpi	r27, 0xF9	; 249
    3106:	cc f3       	brlt	.-14     	; 0x30fa <__fixunssfsi+0x34>
    3108:	86 95       	lsr	r24
    310a:	77 95       	ror	r23
    310c:	67 95       	ror	r22
    310e:	b3 95       	inc	r27
    3110:	d9 f7       	brne	.-10     	; 0x3108 <__fixunssfsi+0x42>
    3112:	3e f4       	brtc	.+14     	; 0x3122 <__fixunssfsi+0x5c>
    3114:	90 95       	com	r25
    3116:	80 95       	com	r24
    3118:	70 95       	com	r23
    311a:	61 95       	neg	r22
    311c:	7f 4f       	sbci	r23, 0xFF	; 255
    311e:	8f 4f       	sbci	r24, 0xFF	; 255
    3120:	9f 4f       	sbci	r25, 0xFF	; 255
    3122:	08 95       	ret

00003124 <__floatunsisf>:
    3124:	e8 94       	clt
    3126:	09 c0       	rjmp	.+18     	; 0x313a <__floatsisf+0x12>

00003128 <__floatsisf>:
    3128:	97 fb       	bst	r25, 7
    312a:	3e f4       	brtc	.+14     	; 0x313a <__floatsisf+0x12>
    312c:	90 95       	com	r25
    312e:	80 95       	com	r24
    3130:	70 95       	com	r23
    3132:	61 95       	neg	r22
    3134:	7f 4f       	sbci	r23, 0xFF	; 255
    3136:	8f 4f       	sbci	r24, 0xFF	; 255
    3138:	9f 4f       	sbci	r25, 0xFF	; 255
    313a:	99 23       	and	r25, r25
    313c:	a9 f0       	breq	.+42     	; 0x3168 <__floatsisf+0x40>
    313e:	f9 2f       	mov	r31, r25
    3140:	96 e9       	ldi	r25, 0x96	; 150
    3142:	bb 27       	eor	r27, r27
    3144:	93 95       	inc	r25
    3146:	f6 95       	lsr	r31
    3148:	87 95       	ror	r24
    314a:	77 95       	ror	r23
    314c:	67 95       	ror	r22
    314e:	b7 95       	ror	r27
    3150:	f1 11       	cpse	r31, r1
    3152:	f8 cf       	rjmp	.-16     	; 0x3144 <__floatsisf+0x1c>
    3154:	fa f4       	brpl	.+62     	; 0x3194 <__floatsisf+0x6c>
    3156:	bb 0f       	add	r27, r27
    3158:	11 f4       	brne	.+4      	; 0x315e <__floatsisf+0x36>
    315a:	60 ff       	sbrs	r22, 0
    315c:	1b c0       	rjmp	.+54     	; 0x3194 <__floatsisf+0x6c>
    315e:	6f 5f       	subi	r22, 0xFF	; 255
    3160:	7f 4f       	sbci	r23, 0xFF	; 255
    3162:	8f 4f       	sbci	r24, 0xFF	; 255
    3164:	9f 4f       	sbci	r25, 0xFF	; 255
    3166:	16 c0       	rjmp	.+44     	; 0x3194 <__floatsisf+0x6c>
    3168:	88 23       	and	r24, r24
    316a:	11 f0       	breq	.+4      	; 0x3170 <__floatsisf+0x48>
    316c:	96 e9       	ldi	r25, 0x96	; 150
    316e:	11 c0       	rjmp	.+34     	; 0x3192 <__floatsisf+0x6a>
    3170:	77 23       	and	r23, r23
    3172:	21 f0       	breq	.+8      	; 0x317c <__floatsisf+0x54>
    3174:	9e e8       	ldi	r25, 0x8E	; 142
    3176:	87 2f       	mov	r24, r23
    3178:	76 2f       	mov	r23, r22
    317a:	05 c0       	rjmp	.+10     	; 0x3186 <__floatsisf+0x5e>
    317c:	66 23       	and	r22, r22
    317e:	71 f0       	breq	.+28     	; 0x319c <__floatsisf+0x74>
    3180:	96 e8       	ldi	r25, 0x86	; 134
    3182:	86 2f       	mov	r24, r22
    3184:	70 e0       	ldi	r23, 0x00	; 0
    3186:	60 e0       	ldi	r22, 0x00	; 0
    3188:	2a f0       	brmi	.+10     	; 0x3194 <__floatsisf+0x6c>
    318a:	9a 95       	dec	r25
    318c:	66 0f       	add	r22, r22
    318e:	77 1f       	adc	r23, r23
    3190:	88 1f       	adc	r24, r24
    3192:	da f7       	brpl	.-10     	; 0x318a <__floatsisf+0x62>
    3194:	88 0f       	add	r24, r24
    3196:	96 95       	lsr	r25
    3198:	87 95       	ror	r24
    319a:	97 f9       	bld	r25, 7
    319c:	08 95       	ret

0000319e <__fp_inf>:
    319e:	97 f9       	bld	r25, 7
    31a0:	9f 67       	ori	r25, 0x7F	; 127
    31a2:	80 e8       	ldi	r24, 0x80	; 128
    31a4:	70 e0       	ldi	r23, 0x00	; 0
    31a6:	60 e0       	ldi	r22, 0x00	; 0
    31a8:	08 95       	ret

000031aa <__fp_nan>:
    31aa:	9f ef       	ldi	r25, 0xFF	; 255
    31ac:	80 ec       	ldi	r24, 0xC0	; 192
    31ae:	08 95       	ret

000031b0 <__fp_pscA>:
    31b0:	00 24       	eor	r0, r0
    31b2:	0a 94       	dec	r0
    31b4:	16 16       	cp	r1, r22
    31b6:	17 06       	cpc	r1, r23
    31b8:	18 06       	cpc	r1, r24
    31ba:	09 06       	cpc	r0, r25
    31bc:	08 95       	ret

000031be <__fp_pscB>:
    31be:	00 24       	eor	r0, r0
    31c0:	0a 94       	dec	r0
    31c2:	12 16       	cp	r1, r18
    31c4:	13 06       	cpc	r1, r19
    31c6:	14 06       	cpc	r1, r20
    31c8:	05 06       	cpc	r0, r21
    31ca:	08 95       	ret

000031cc <__fp_round>:
    31cc:	09 2e       	mov	r0, r25
    31ce:	03 94       	inc	r0
    31d0:	00 0c       	add	r0, r0
    31d2:	11 f4       	brne	.+4      	; 0x31d8 <__fp_round+0xc>
    31d4:	88 23       	and	r24, r24
    31d6:	52 f0       	brmi	.+20     	; 0x31ec <__fp_round+0x20>
    31d8:	bb 0f       	add	r27, r27
    31da:	40 f4       	brcc	.+16     	; 0x31ec <__fp_round+0x20>
    31dc:	bf 2b       	or	r27, r31
    31de:	11 f4       	brne	.+4      	; 0x31e4 <__fp_round+0x18>
    31e0:	60 ff       	sbrs	r22, 0
    31e2:	04 c0       	rjmp	.+8      	; 0x31ec <__fp_round+0x20>
    31e4:	6f 5f       	subi	r22, 0xFF	; 255
    31e6:	7f 4f       	sbci	r23, 0xFF	; 255
    31e8:	8f 4f       	sbci	r24, 0xFF	; 255
    31ea:	9f 4f       	sbci	r25, 0xFF	; 255
    31ec:	08 95       	ret

000031ee <__fp_split3>:
    31ee:	57 fd       	sbrc	r21, 7
    31f0:	90 58       	subi	r25, 0x80	; 128
    31f2:	44 0f       	add	r20, r20
    31f4:	55 1f       	adc	r21, r21
    31f6:	59 f0       	breq	.+22     	; 0x320e <__fp_splitA+0x10>
    31f8:	5f 3f       	cpi	r21, 0xFF	; 255
    31fa:	71 f0       	breq	.+28     	; 0x3218 <__fp_splitA+0x1a>
    31fc:	47 95       	ror	r20

000031fe <__fp_splitA>:
    31fe:	88 0f       	add	r24, r24
    3200:	97 fb       	bst	r25, 7
    3202:	99 1f       	adc	r25, r25
    3204:	61 f0       	breq	.+24     	; 0x321e <__fp_splitA+0x20>
    3206:	9f 3f       	cpi	r25, 0xFF	; 255
    3208:	79 f0       	breq	.+30     	; 0x3228 <__fp_splitA+0x2a>
    320a:	87 95       	ror	r24
    320c:	08 95       	ret
    320e:	12 16       	cp	r1, r18
    3210:	13 06       	cpc	r1, r19
    3212:	14 06       	cpc	r1, r20
    3214:	55 1f       	adc	r21, r21
    3216:	f2 cf       	rjmp	.-28     	; 0x31fc <__fp_split3+0xe>
    3218:	46 95       	lsr	r20
    321a:	f1 df       	rcall	.-30     	; 0x31fe <__fp_splitA>
    321c:	08 c0       	rjmp	.+16     	; 0x322e <__fp_splitA+0x30>
    321e:	16 16       	cp	r1, r22
    3220:	17 06       	cpc	r1, r23
    3222:	18 06       	cpc	r1, r24
    3224:	99 1f       	adc	r25, r25
    3226:	f1 cf       	rjmp	.-30     	; 0x320a <__fp_splitA+0xc>
    3228:	86 95       	lsr	r24
    322a:	71 05       	cpc	r23, r1
    322c:	61 05       	cpc	r22, r1
    322e:	08 94       	sec
    3230:	08 95       	ret

00003232 <__fp_zero>:
    3232:	e8 94       	clt

00003234 <__fp_szero>:
    3234:	bb 27       	eor	r27, r27
    3236:	66 27       	eor	r22, r22
    3238:	77 27       	eor	r23, r23
    323a:	cb 01       	movw	r24, r22
    323c:	97 f9       	bld	r25, 7
    323e:	08 95       	ret

00003240 <__gesf2>:
    3240:	0e 94 25 19 	call	0x324a	; 0x324a <__fp_cmp>
    3244:	08 f4       	brcc	.+2      	; 0x3248 <__gesf2+0x8>
    3246:	8f ef       	ldi	r24, 0xFF	; 255
    3248:	08 95       	ret

0000324a <__fp_cmp>:
    324a:	99 0f       	add	r25, r25
    324c:	00 08       	sbc	r0, r0
    324e:	55 0f       	add	r21, r21
    3250:	aa 0b       	sbc	r26, r26
    3252:	e0 e8       	ldi	r30, 0x80	; 128
    3254:	fe ef       	ldi	r31, 0xFE	; 254
    3256:	16 16       	cp	r1, r22
    3258:	17 06       	cpc	r1, r23
    325a:	e8 07       	cpc	r30, r24
    325c:	f9 07       	cpc	r31, r25
    325e:	c0 f0       	brcs	.+48     	; 0x3290 <__fp_cmp+0x46>
    3260:	12 16       	cp	r1, r18
    3262:	13 06       	cpc	r1, r19
    3264:	e4 07       	cpc	r30, r20
    3266:	f5 07       	cpc	r31, r21
    3268:	98 f0       	brcs	.+38     	; 0x3290 <__fp_cmp+0x46>
    326a:	62 1b       	sub	r22, r18
    326c:	73 0b       	sbc	r23, r19
    326e:	84 0b       	sbc	r24, r20
    3270:	95 0b       	sbc	r25, r21
    3272:	39 f4       	brne	.+14     	; 0x3282 <__fp_cmp+0x38>
    3274:	0a 26       	eor	r0, r26
    3276:	61 f0       	breq	.+24     	; 0x3290 <__fp_cmp+0x46>
    3278:	23 2b       	or	r18, r19
    327a:	24 2b       	or	r18, r20
    327c:	25 2b       	or	r18, r21
    327e:	21 f4       	brne	.+8      	; 0x3288 <__fp_cmp+0x3e>
    3280:	08 95       	ret
    3282:	0a 26       	eor	r0, r26
    3284:	09 f4       	brne	.+2      	; 0x3288 <__fp_cmp+0x3e>
    3286:	a1 40       	sbci	r26, 0x01	; 1
    3288:	a6 95       	lsr	r26
    328a:	8f ef       	ldi	r24, 0xFF	; 255
    328c:	81 1d       	adc	r24, r1
    328e:	81 1d       	adc	r24, r1
    3290:	08 95       	ret

00003292 <_ZN14HardwareSerial9availableEv>:
  // clear any received data
  _rx_buffer_head = _rx_buffer_tail;
}

int HardwareSerial::available(void)
{
    3292:	fc 01       	movw	r30, r24
  return ((unsigned int)(SERIAL_RX_BUFFER_SIZE + _rx_buffer_head - _rx_buffer_tail)) % SERIAL_RX_BUFFER_SIZE;
    3294:	91 8d       	ldd	r25, Z+25	; 0x19
    3296:	22 8d       	ldd	r18, Z+26	; 0x1a
    3298:	89 2f       	mov	r24, r25
    329a:	90 e0       	ldi	r25, 0x00	; 0
    329c:	80 5c       	subi	r24, 0xC0	; 192
    329e:	9f 4f       	sbci	r25, 0xFF	; 255
    32a0:	82 1b       	sub	r24, r18
    32a2:	91 09       	sbc	r25, r1
}
    32a4:	8f 73       	andi	r24, 0x3F	; 63
    32a6:	99 27       	eor	r25, r25
    32a8:	08 95       	ret

000032aa <_ZN14HardwareSerial4peekEv>:

int HardwareSerial::peek(void)
{
    32aa:	fc 01       	movw	r30, r24
  if (_rx_buffer_head == _rx_buffer_tail) {
    32ac:	91 8d       	ldd	r25, Z+25	; 0x19
    32ae:	82 8d       	ldd	r24, Z+26	; 0x1a
    32b0:	98 17       	cp	r25, r24
    32b2:	31 f0       	breq	.+12     	; 0x32c0 <_ZN14HardwareSerial4peekEv+0x16>
    return -1;
  } else {
    return _rx_buffer[_rx_buffer_tail];
    32b4:	82 8d       	ldd	r24, Z+26	; 0x1a
    32b6:	e8 0f       	add	r30, r24
    32b8:	f1 1d       	adc	r31, r1
    32ba:	85 8d       	ldd	r24, Z+29	; 0x1d
    32bc:	90 e0       	ldi	r25, 0x00	; 0
    32be:	08 95       	ret
}

int HardwareSerial::peek(void)
{
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    32c0:	8f ef       	ldi	r24, 0xFF	; 255
    32c2:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    return _rx_buffer[_rx_buffer_tail];
  }
}
    32c4:	08 95       	ret

000032c6 <_ZN14HardwareSerial4readEv>:

int HardwareSerial::read(void)
{
    32c6:	fc 01       	movw	r30, r24
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    32c8:	91 8d       	ldd	r25, Z+25	; 0x19
    32ca:	82 8d       	ldd	r24, Z+26	; 0x1a
    32cc:	98 17       	cp	r25, r24
    32ce:	61 f0       	breq	.+24     	; 0x32e8 <_ZN14HardwareSerial4readEv+0x22>
    return -1;
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    32d0:	82 8d       	ldd	r24, Z+26	; 0x1a
    32d2:	df 01       	movw	r26, r30
    32d4:	a8 0f       	add	r26, r24
    32d6:	b1 1d       	adc	r27, r1
    32d8:	5d 96       	adiw	r26, 0x1d	; 29
    32da:	8c 91       	ld	r24, X
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    32dc:	92 8d       	ldd	r25, Z+26	; 0x1a
    32de:	9f 5f       	subi	r25, 0xFF	; 255
    32e0:	9f 73       	andi	r25, 0x3F	; 63
    32e2:	92 8f       	std	Z+26, r25	; 0x1a
    return c;
    32e4:	90 e0       	ldi	r25, 0x00	; 0
    32e6:	08 95       	ret

int HardwareSerial::read(void)
{
  // if the head isn't ahead of the tail, we don't have any characters
  if (_rx_buffer_head == _rx_buffer_tail) {
    return -1;
    32e8:	8f ef       	ldi	r24, 0xFF	; 255
    32ea:	9f ef       	ldi	r25, 0xFF	; 255
  } else {
    unsigned char c = _rx_buffer[_rx_buffer_tail];
    _rx_buffer_tail = (rx_buffer_index_t)(_rx_buffer_tail + 1) % SERIAL_RX_BUFFER_SIZE;
    return c;
  }
}
    32ec:	08 95       	ret

000032ee <_ZN14HardwareSerial17availableForWriteEv>:
{
  tx_buffer_index_t head;
  tx_buffer_index_t tail;

  TX_BUFFER_ATOMIC {
    head = _tx_buffer_head;
    32ee:	fc 01       	movw	r30, r24
    32f0:	53 8d       	ldd	r21, Z+27	; 0x1b
    tail = _tx_buffer_tail;
    32f2:	44 8d       	ldd	r20, Z+28	; 0x1c
    32f4:	25 2f       	mov	r18, r21
    32f6:	30 e0       	ldi	r19, 0x00	; 0
    32f8:	84 2f       	mov	r24, r20
    32fa:	90 e0       	ldi	r25, 0x00	; 0
  }
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
    32fc:	82 1b       	sub	r24, r18
    32fe:	93 0b       	sbc	r25, r19
    3300:	54 17       	cp	r21, r20
    3302:	10 f0       	brcs	.+4      	; 0x3308 <_ZN14HardwareSerial17availableForWriteEv+0x1a>
    3304:	cf 96       	adiw	r24, 0x3f	; 63
    3306:	08 95       	ret
  return tail - head - 1;
    3308:	01 97       	sbiw	r24, 0x01	; 1
}
    330a:	08 95       	ret

0000330c <_Z14serialEventRunv>:
#endif

void serialEventRun(void)
{
#if defined(HAVE_HWSERIAL0)
  if (Serial0_available && serialEvent && Serial0_available()) serialEvent();
    330c:	85 ee       	ldi	r24, 0xE5	; 229
    330e:	9a e1       	ldi	r25, 0x1A	; 26
    3310:	89 2b       	or	r24, r25
    3312:	49 f0       	breq	.+18     	; 0x3326 <_Z14serialEventRunv+0x1a>
    3314:	80 e0       	ldi	r24, 0x00	; 0
    3316:	90 e0       	ldi	r25, 0x00	; 0
    3318:	89 2b       	or	r24, r25
    331a:	29 f0       	breq	.+10     	; 0x3326 <_Z14serialEventRunv+0x1a>
    331c:	0e 94 e5 1a 	call	0x35ca	; 0x35ca <_Z17Serial0_availablev>
    3320:	81 11       	cpse	r24, r1
    3322:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    3326:	08 95       	ret

00003328 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
    3328:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
    332a:	84 8d       	ldd	r24, Z+28	; 0x1c
    332c:	df 01       	movw	r26, r30
    332e:	a8 0f       	add	r26, r24
    3330:	b1 1d       	adc	r27, r1
    3332:	a3 5a       	subi	r26, 0xA3	; 163
    3334:	bf 4f       	sbci	r27, 0xFF	; 255
    3336:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
    3338:	84 8d       	ldd	r24, Z+28	; 0x1c
    333a:	90 e0       	ldi	r25, 0x00	; 0
    333c:	01 96       	adiw	r24, 0x01	; 1
    333e:	8f 73       	andi	r24, 0x3F	; 63
    3340:	99 27       	eor	r25, r25
    3342:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
    3344:	a6 89       	ldd	r26, Z+22	; 0x16
    3346:	b7 89       	ldd	r27, Z+23	; 0x17
    3348:	2c 93       	st	X, r18
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

#ifdef MPCM0
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    334a:	a0 89       	ldd	r26, Z+16	; 0x10
    334c:	b1 89       	ldd	r27, Z+17	; 0x11
    334e:	8c 91       	ld	r24, X
    3350:	83 70       	andi	r24, 0x03	; 3
    3352:	80 64       	ori	r24, 0x40	; 64
    3354:	8c 93       	st	X, r24
#else
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif

  if (_tx_buffer_head == _tx_buffer_tail) {
    3356:	93 8d       	ldd	r25, Z+27	; 0x1b
    3358:	84 8d       	ldd	r24, Z+28	; 0x1c
    335a:	98 13       	cpse	r25, r24
    335c:	06 c0       	rjmp	.+12     	; 0x336a <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x42>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
    335e:	02 88       	ldd	r0, Z+18	; 0x12
    3360:	f3 89       	ldd	r31, Z+19	; 0x13
    3362:	e0 2d       	mov	r30, r0
    3364:	80 81       	ld	r24, Z
    3366:	8f 7d       	andi	r24, 0xDF	; 223
    3368:	80 83       	st	Z, r24
    336a:	08 95       	ret

0000336c <_ZN14HardwareSerial5writeEh>:
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
    336c:	ef 92       	push	r14
    336e:	ff 92       	push	r15
    3370:	0f 93       	push	r16
    3372:	1f 93       	push	r17
    3374:	cf 93       	push	r28
    3376:	df 93       	push	r29
    3378:	ec 01       	movw	r28, r24
  _written = true;
    337a:	81 e0       	ldi	r24, 0x01	; 1
    337c:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
    337e:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3380:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3382:	98 13       	cpse	r25, r24
    3384:	05 c0       	rjmp	.+10     	; 0x3390 <_ZN14HardwareSerial5writeEh+0x24>
    3386:	e8 89       	ldd	r30, Y+16	; 0x10
    3388:	f9 89       	ldd	r31, Y+17	; 0x11
    338a:	80 81       	ld	r24, Z
    338c:	85 fd       	sbrc	r24, 5
    338e:	26 c0       	rjmp	.+76     	; 0x33dc <_ZN14HardwareSerial5writeEh+0x70>
    3390:	f6 2e       	mov	r15, r22
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
    3392:	0b 8d       	ldd	r16, Y+27	; 0x1b
    3394:	10 e0       	ldi	r17, 0x00	; 0
    3396:	0f 5f       	subi	r16, 0xFF	; 255
    3398:	1f 4f       	sbci	r17, 0xFF	; 255
    339a:	0f 73       	andi	r16, 0x3F	; 63
    339c:	11 27       	eor	r17, r17
    339e:	e0 2e       	mov	r14, r16
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
    33a0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    33a2:	e8 12       	cpse	r14, r24
    33a4:	0c c0       	rjmp	.+24     	; 0x33be <_ZN14HardwareSerial5writeEh+0x52>
    if (bit_is_clear(SREG, SREG_I)) {
    33a6:	0f b6       	in	r0, 0x3f	; 63
    33a8:	07 fc       	sbrc	r0, 7
    33aa:	fa cf       	rjmp	.-12     	; 0x33a0 <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
    33ac:	e8 89       	ldd	r30, Y+16	; 0x10
    33ae:	f9 89       	ldd	r31, Y+17	; 0x11
    33b0:	80 81       	ld	r24, Z
    33b2:	85 ff       	sbrs	r24, 5
    33b4:	f5 cf       	rjmp	.-22     	; 0x33a0 <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
    33b6:	ce 01       	movw	r24, r28
    33b8:	0e 94 94 19 	call	0x3328	; 0x3328 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    33bc:	f1 cf       	rjmp	.-30     	; 0x33a0 <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
    33be:	8b 8d       	ldd	r24, Y+27	; 0x1b
    33c0:	fe 01       	movw	r30, r28
    33c2:	e8 0f       	add	r30, r24
    33c4:	f1 1d       	adc	r31, r1
    33c6:	e3 5a       	subi	r30, 0xA3	; 163
    33c8:	ff 4f       	sbci	r31, 0xFF	; 255
    33ca:	f0 82       	st	Z, r15

  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    33cc:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    33ce:	f8 94       	cli
    _tx_buffer_head = i;
    33d0:	0b 8f       	std	Y+27, r16	; 0x1b
    sbi(*_ucsrb, UDRIE0);
    33d2:	ea 89       	ldd	r30, Y+18	; 0x12
    33d4:	fb 89       	ldd	r31, Y+19	; 0x13
    33d6:	80 81       	ld	r24, Z
    33d8:	80 62       	ori	r24, 0x20	; 32
    33da:	0a c0       	rjmp	.+20     	; 0x33f0 <_ZN14HardwareSerial5writeEh+0x84>
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    33dc:	9f b7       	in	r25, 0x3f	; 63
    33de:	f8 94       	cli
      *_udr = c;
    33e0:	ee 89       	ldd	r30, Y+22	; 0x16
    33e2:	ff 89       	ldd	r31, Y+23	; 0x17
    33e4:	60 83       	st	Z, r22
#ifdef MPCM0
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
    33e6:	e8 89       	ldd	r30, Y+16	; 0x10
    33e8:	f9 89       	ldd	r31, Y+17	; 0x11
    33ea:	80 81       	ld	r24, Z
    33ec:	83 70       	andi	r24, 0x03	; 3
    33ee:	80 64       	ori	r24, 0x40	; 64
    33f0:	80 83       	st	Z, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    33f2:	9f bf       	out	0x3f, r25	; 63
    _tx_buffer_head = i;
    sbi(*_ucsrb, UDRIE0);
  }
  
  return 1;
}
    33f4:	81 e0       	ldi	r24, 0x01	; 1
    33f6:	90 e0       	ldi	r25, 0x00	; 0
    33f8:	df 91       	pop	r29
    33fa:	cf 91       	pop	r28
    33fc:	1f 91       	pop	r17
    33fe:	0f 91       	pop	r16
    3400:	ff 90       	pop	r15
    3402:	ef 90       	pop	r14
    3404:	08 95       	ret

00003406 <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
    3406:	cf 93       	push	r28
    3408:	df 93       	push	r29
    340a:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
    340c:	88 8d       	ldd	r24, Y+24	; 0x18
    340e:	88 23       	and	r24, r24
    3410:	c9 f0       	breq	.+50     	; 0x3444 <_ZN14HardwareSerial5flushEv+0x3e>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
    3412:	ea 89       	ldd	r30, Y+18	; 0x12
    3414:	fb 89       	ldd	r31, Y+19	; 0x13
    3416:	80 81       	ld	r24, Z
    3418:	85 fd       	sbrc	r24, 5
    341a:	05 c0       	rjmp	.+10     	; 0x3426 <_ZN14HardwareSerial5flushEv+0x20>
    341c:	a8 89       	ldd	r26, Y+16	; 0x10
    341e:	b9 89       	ldd	r27, Y+17	; 0x11
    3420:	8c 91       	ld	r24, X
    3422:	86 fd       	sbrc	r24, 6
    3424:	0f c0       	rjmp	.+30     	; 0x3444 <_ZN14HardwareSerial5flushEv+0x3e>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
    3426:	0f b6       	in	r0, 0x3f	; 63
    3428:	07 fc       	sbrc	r0, 7
    342a:	f5 cf       	rjmp	.-22     	; 0x3416 <_ZN14HardwareSerial5flushEv+0x10>
    342c:	80 81       	ld	r24, Z
    342e:	85 ff       	sbrs	r24, 5
    3430:	f2 cf       	rjmp	.-28     	; 0x3416 <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
    3432:	a8 89       	ldd	r26, Y+16	; 0x10
    3434:	b9 89       	ldd	r27, Y+17	; 0x11
    3436:	8c 91       	ld	r24, X
    3438:	85 ff       	sbrs	r24, 5
    343a:	ed cf       	rjmp	.-38     	; 0x3416 <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
    343c:	ce 01       	movw	r24, r28
    343e:	0e 94 94 19 	call	0x3328	; 0x3328 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    3442:	e7 cf       	rjmp	.-50     	; 0x3412 <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
    3444:	df 91       	pop	r29
    3446:	cf 91       	pop	r28
    3448:	08 95       	ret

0000344a <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
    344a:	cf 92       	push	r12
    344c:	df 92       	push	r13
    344e:	ef 92       	push	r14
    3450:	ff 92       	push	r15
    3452:	1f 93       	push	r17
    3454:	cf 93       	push	r28
    3456:	df 93       	push	r29
    3458:	ec 01       	movw	r28, r24
    345a:	6a 01       	movw	r12, r20
    345c:	7b 01       	movw	r14, r22
    345e:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
    3460:	e8 89       	ldd	r30, Y+16	; 0x10
    3462:	f9 89       	ldd	r31, Y+17	; 0x11
    3464:	82 e0       	ldi	r24, 0x02	; 2
    3466:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    3468:	41 15       	cp	r20, r1
    346a:	51 4e       	sbci	r21, 0xE1	; 225
    346c:	61 05       	cpc	r22, r1
    346e:	71 05       	cpc	r23, r1
    3470:	b1 f0       	breq	.+44     	; 0x349e <_ZN14HardwareSerial5beginEmh+0x54>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
    3472:	60 e0       	ldi	r22, 0x00	; 0
    3474:	79 e0       	ldi	r23, 0x09	; 9
    3476:	8d e3       	ldi	r24, 0x3D	; 61
    3478:	90 e0       	ldi	r25, 0x00	; 0
    347a:	a7 01       	movw	r20, r14
    347c:	96 01       	movw	r18, r12
    347e:	0e 94 b4 33 	call	0x6768	; 0x6768 <__udivmodsi4>
    3482:	da 01       	movw	r26, r20
    3484:	c9 01       	movw	r24, r18
    3486:	01 97       	sbiw	r24, 0x01	; 1
    3488:	a1 09       	sbc	r26, r1
    348a:	b1 09       	sbc	r27, r1
    348c:	b6 95       	lsr	r27
    348e:	a7 95       	ror	r26
    3490:	97 95       	ror	r25
    3492:	87 95       	ror	r24
    3494:	9c 01       	movw	r18, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
    3496:	21 15       	cp	r18, r1
    3498:	80 e1       	ldi	r24, 0x10	; 16
    349a:	38 07       	cpc	r19, r24
    349c:	a8 f0       	brcs	.+42     	; 0x34c8 <_ZN14HardwareSerial5beginEmh+0x7e>
  {
    *_ucsra = 0;
    349e:	e8 89       	ldd	r30, Y+16	; 0x10
    34a0:	f9 89       	ldd	r31, Y+17	; 0x11
    34a2:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
    34a4:	60 e8       	ldi	r22, 0x80	; 128
    34a6:	74 e8       	ldi	r23, 0x84	; 132
    34a8:	8e e1       	ldi	r24, 0x1E	; 30
    34aa:	90 e0       	ldi	r25, 0x00	; 0
    34ac:	a7 01       	movw	r20, r14
    34ae:	96 01       	movw	r18, r12
    34b0:	0e 94 b4 33 	call	0x6768	; 0x6768 <__udivmodsi4>
    34b4:	da 01       	movw	r26, r20
    34b6:	c9 01       	movw	r24, r18
    34b8:	01 97       	sbiw	r24, 0x01	; 1
    34ba:	a1 09       	sbc	r26, r1
    34bc:	b1 09       	sbc	r27, r1
    34be:	b6 95       	lsr	r27
    34c0:	a7 95       	ror	r26
    34c2:	97 95       	ror	r25
    34c4:	87 95       	ror	r24
    34c6:	9c 01       	movw	r18, r24
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
    34c8:	ec 85       	ldd	r30, Y+12	; 0x0c
    34ca:	fd 85       	ldd	r31, Y+13	; 0x0d
    34cc:	30 83       	st	Z, r19
  *_ubrrl = baud_setting;
    34ce:	ee 85       	ldd	r30, Y+14	; 0x0e
    34d0:	ff 85       	ldd	r31, Y+15	; 0x0f
    34d2:	20 83       	st	Z, r18

  _written = false;
    34d4:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
    34d6:	ec 89       	ldd	r30, Y+20	; 0x14
    34d8:	fd 89       	ldd	r31, Y+21	; 0x15
    34da:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
    34dc:	ea 89       	ldd	r30, Y+18	; 0x12
    34de:	fb 89       	ldd	r31, Y+19	; 0x13
    34e0:	80 81       	ld	r24, Z
    34e2:	80 61       	ori	r24, 0x10	; 16
    34e4:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
    34e6:	ea 89       	ldd	r30, Y+18	; 0x12
    34e8:	fb 89       	ldd	r31, Y+19	; 0x13
    34ea:	80 81       	ld	r24, Z
    34ec:	88 60       	ori	r24, 0x08	; 8
    34ee:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
    34f0:	ea 89       	ldd	r30, Y+18	; 0x12
    34f2:	fb 89       	ldd	r31, Y+19	; 0x13
    34f4:	80 81       	ld	r24, Z
    34f6:	80 68       	ori	r24, 0x80	; 128
    34f8:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
    34fa:	ea 89       	ldd	r30, Y+18	; 0x12
    34fc:	fb 89       	ldd	r31, Y+19	; 0x13
    34fe:	80 81       	ld	r24, Z
    3500:	8f 7d       	andi	r24, 0xDF	; 223
    3502:	80 83       	st	Z, r24
}
    3504:	df 91       	pop	r29
    3506:	cf 91       	pop	r28
    3508:	1f 91       	pop	r17
    350a:	ff 90       	pop	r15
    350c:	ef 90       	pop	r14
    350e:	df 90       	pop	r13
    3510:	cf 90       	pop	r12
    3512:	08 95       	ret

00003514 <_ZN5Print17availableForWriteEv>:
    size_t println(unsigned long, int = DEC);
    size_t println(double, int = 2);
    size_t println(const Printable&);
    size_t println(void);

    virtual void flush() { /* Empty implementation for backward compatibility */ }
    3514:	80 e0       	ldi	r24, 0x00	; 0
    3516:	90 e0       	ldi	r25, 0x00	; 0
    3518:	08 95       	ret

0000351a <__vector_18>:
#elif defined(USART_RXC_vect)
  ISR(USART_RXC_vect) // ATmega8
#else
  #error "Don't know what the Data Received vector is called for Serial"
#endif
  {
    351a:	1f 92       	push	r1
    351c:	0f 92       	push	r0
    351e:	0f b6       	in	r0, 0x3f	; 63
    3520:	0f 92       	push	r0
    3522:	11 24       	eor	r1, r1
    3524:	2f 93       	push	r18
    3526:	8f 93       	push	r24
    3528:	9f 93       	push	r25
    352a:	ef 93       	push	r30
    352c:	ff 93       	push	r31

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_rx_complete_irq(void)
{
  if (bit_is_clear(*_ucsra, UPE0)) {
    352e:	e0 91 88 03 	lds	r30, 0x0388	; 0x800388 <Serial+0x10>
    3532:	f0 91 89 03 	lds	r31, 0x0389	; 0x800389 <Serial+0x11>
    3536:	80 81       	ld	r24, Z
    3538:	e0 91 8e 03 	lds	r30, 0x038E	; 0x80038e <Serial+0x16>
    353c:	f0 91 8f 03 	lds	r31, 0x038F	; 0x80038f <Serial+0x17>
    3540:	82 fd       	sbrc	r24, 2
    3542:	12 c0       	rjmp	.+36     	; 0x3568 <__vector_18+0x4e>
    // No Parity error, read byte and store it in the buffer if there is
    // room
    unsigned char c = *_udr;
    3544:	90 81       	ld	r25, Z
    rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
    3546:	80 91 91 03 	lds	r24, 0x0391	; 0x800391 <Serial+0x19>
    354a:	8f 5f       	subi	r24, 0xFF	; 255
    354c:	8f 73       	andi	r24, 0x3F	; 63

    // if we should be storing the received character into the location
    // just before the tail (meaning that the head would advance to the
    // current location of the tail), we're about to overflow the buffer
    // and so we don't write the character or advance the head.
    if (i != _rx_buffer_tail) {
    354e:	20 91 92 03 	lds	r18, 0x0392	; 0x800392 <Serial+0x1a>
    3552:	82 17       	cp	r24, r18
    3554:	51 f0       	breq	.+20     	; 0x356a <__vector_18+0x50>
      _rx_buffer[_rx_buffer_head] = c;
    3556:	e0 91 91 03 	lds	r30, 0x0391	; 0x800391 <Serial+0x19>
    355a:	f0 e0       	ldi	r31, 0x00	; 0
    355c:	e8 58       	subi	r30, 0x88	; 136
    355e:	fc 4f       	sbci	r31, 0xFC	; 252
    3560:	95 8f       	std	Z+29, r25	; 0x1d
      _rx_buffer_head = i;
    3562:	80 93 91 03 	sts	0x0391, r24	; 0x800391 <Serial+0x19>
    3566:	01 c0       	rjmp	.+2      	; 0x356a <__vector_18+0x50>
    }
  } else {
    // Parity error, read byte but discard it
    *_udr;
    3568:	80 81       	ld	r24, Z
    Serial._rx_complete_irq();
  }
    356a:	ff 91       	pop	r31
    356c:	ef 91       	pop	r30
    356e:	9f 91       	pop	r25
    3570:	8f 91       	pop	r24
    3572:	2f 91       	pop	r18
    3574:	0f 90       	pop	r0
    3576:	0f be       	out	0x3f, r0	; 63
    3578:	0f 90       	pop	r0
    357a:	1f 90       	pop	r1
    357c:	18 95       	reti

0000357e <__vector_19>:
#elif defined(USART_UDRE_vect)
ISR(USART_UDRE_vect)
#else
  #error "Don't know what the Data Register Empty vector is called for Serial"
#endif
{
    357e:	1f 92       	push	r1
    3580:	0f 92       	push	r0
    3582:	0f b6       	in	r0, 0x3f	; 63
    3584:	0f 92       	push	r0
    3586:	11 24       	eor	r1, r1
    3588:	2f 93       	push	r18
    358a:	3f 93       	push	r19
    358c:	4f 93       	push	r20
    358e:	5f 93       	push	r21
    3590:	6f 93       	push	r22
    3592:	7f 93       	push	r23
    3594:	8f 93       	push	r24
    3596:	9f 93       	push	r25
    3598:	af 93       	push	r26
    359a:	bf 93       	push	r27
    359c:	ef 93       	push	r30
    359e:	ff 93       	push	r31
  Serial._tx_udr_empty_irq();
    35a0:	88 e7       	ldi	r24, 0x78	; 120
    35a2:	93 e0       	ldi	r25, 0x03	; 3
    35a4:	0e 94 94 19 	call	0x3328	; 0x3328 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
}
    35a8:	ff 91       	pop	r31
    35aa:	ef 91       	pop	r30
    35ac:	bf 91       	pop	r27
    35ae:	af 91       	pop	r26
    35b0:	9f 91       	pop	r25
    35b2:	8f 91       	pop	r24
    35b4:	7f 91       	pop	r23
    35b6:	6f 91       	pop	r22
    35b8:	5f 91       	pop	r21
    35ba:	4f 91       	pop	r20
    35bc:	3f 91       	pop	r19
    35be:	2f 91       	pop	r18
    35c0:	0f 90       	pop	r0
    35c2:	0f be       	out	0x3f, r0	; 63
    35c4:	0f 90       	pop	r0
    35c6:	1f 90       	pop	r1
    35c8:	18 95       	reti

000035ca <_Z17Serial0_availablev>:
#endif

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
    35ca:	88 e7       	ldi	r24, 0x78	; 120
    35cc:	93 e0       	ldi	r25, 0x03	; 3
    35ce:	0e 94 49 19 	call	0x3292	; 0x3292 <_ZN14HardwareSerial9availableEv>
    35d2:	21 e0       	ldi	r18, 0x01	; 1
    35d4:	89 2b       	or	r24, r25
    35d6:	09 f4       	brne	.+2      	; 0x35da <_Z17Serial0_availablev+0x10>
    35d8:	20 e0       	ldi	r18, 0x00	; 0
}
    35da:	82 2f       	mov	r24, r18
    35dc:	08 95       	ret

000035de <_GLOBAL__sub_I___vector_18>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    35de:	e8 e7       	ldi	r30, 0x78	; 120
    35e0:	f3 e0       	ldi	r31, 0x03	; 3
    35e2:	13 82       	std	Z+3, r1	; 0x03
    35e4:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    35e6:	88 ee       	ldi	r24, 0xE8	; 232
    35e8:	93 e0       	ldi	r25, 0x03	; 3
    35ea:	a0 e0       	ldi	r26, 0x00	; 0
    35ec:	b0 e0       	ldi	r27, 0x00	; 0
    35ee:	84 83       	std	Z+4, r24	; 0x04
    35f0:	95 83       	std	Z+5, r25	; 0x05
    35f2:	a6 83       	std	Z+6, r26	; 0x06
    35f4:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
    35f6:	8a e8       	ldi	r24, 0x8A	; 138
    35f8:	91 e0       	ldi	r25, 0x01	; 1
    35fa:	91 83       	std	Z+1, r25	; 0x01
    35fc:	80 83       	st	Z, r24
    35fe:	85 ec       	ldi	r24, 0xC5	; 197
    3600:	90 e0       	ldi	r25, 0x00	; 0
    3602:	95 87       	std	Z+13, r25	; 0x0d
    3604:	84 87       	std	Z+12, r24	; 0x0c
    3606:	84 ec       	ldi	r24, 0xC4	; 196
    3608:	90 e0       	ldi	r25, 0x00	; 0
    360a:	97 87       	std	Z+15, r25	; 0x0f
    360c:	86 87       	std	Z+14, r24	; 0x0e
    360e:	80 ec       	ldi	r24, 0xC0	; 192
    3610:	90 e0       	ldi	r25, 0x00	; 0
    3612:	91 8b       	std	Z+17, r25	; 0x11
    3614:	80 8b       	std	Z+16, r24	; 0x10
    3616:	81 ec       	ldi	r24, 0xC1	; 193
    3618:	90 e0       	ldi	r25, 0x00	; 0
    361a:	93 8b       	std	Z+19, r25	; 0x13
    361c:	82 8b       	std	Z+18, r24	; 0x12
    361e:	82 ec       	ldi	r24, 0xC2	; 194
    3620:	90 e0       	ldi	r25, 0x00	; 0
    3622:	95 8b       	std	Z+21, r25	; 0x15
    3624:	84 8b       	std	Z+20, r24	; 0x14
    3626:	86 ec       	ldi	r24, 0xC6	; 198
    3628:	90 e0       	ldi	r25, 0x00	; 0
    362a:	97 8b       	std	Z+23, r25	; 0x17
    362c:	86 8b       	std	Z+22, r24	; 0x16
    362e:	11 8e       	std	Z+25, r1	; 0x19
    3630:	12 8e       	std	Z+26, r1	; 0x1a
    3632:	13 8e       	std	Z+27, r1	; 0x1b
    3634:	14 8e       	std	Z+28, r1	; 0x1c
    3636:	08 95       	ret

00003638 <initVariant>:
    3638:	08 95       	ret

0000363a <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
    363a:	0e 94 6e 1d 	call	0x3adc	; 0x3adc <init>

	initVariant();
    363e:	0e 94 1c 1b 	call	0x3638	; 0x3638 <initVariant>

#if defined(USBCON)
	USBDevice.attach();
#endif
	
	setup();
    3642:	0e 94 c6 13 	call	0x278c	; 0x278c <setup>
    
	for (;;) {
		loop();
		if (serialEventRun) serialEventRun();
    3646:	c6 e8       	ldi	r28, 0x86	; 134
    3648:	d9 e1       	ldi	r29, 0x19	; 25
#endif
	
	setup();
    
	for (;;) {
		loop();
    364a:	0e 94 82 15 	call	0x2b04	; 0x2b04 <loop>
		if (serialEventRun) serialEventRun();
    364e:	20 97       	sbiw	r28, 0x00	; 0
    3650:	e1 f3       	breq	.-8      	; 0x364a <main+0x10>
    3652:	0e 94 86 19 	call	0x330c	; 0x330c <_Z14serialEventRunv>
    3656:	f9 cf       	rjmp	.-14     	; 0x364a <main+0x10>

00003658 <_ZN5Print5writeEPKhj>:
size_t Print::println(long num, int base)
{
  size_t n = print(num, base);
  n += println();
  return n;
}
    3658:	cf 92       	push	r12
    365a:	df 92       	push	r13
    365c:	ef 92       	push	r14
    365e:	ff 92       	push	r15
    3660:	0f 93       	push	r16
    3662:	1f 93       	push	r17
    3664:	cf 93       	push	r28
    3666:	df 93       	push	r29
    3668:	6c 01       	movw	r12, r24
    366a:	7a 01       	movw	r14, r20
    366c:	8b 01       	movw	r16, r22
    366e:	c0 e0       	ldi	r28, 0x00	; 0
    3670:	d0 e0       	ldi	r29, 0x00	; 0
    3672:	ce 15       	cp	r28, r14
    3674:	df 05       	cpc	r29, r15
    3676:	81 f0       	breq	.+32     	; 0x3698 <_ZN5Print5writeEPKhj+0x40>
    3678:	d8 01       	movw	r26, r16
    367a:	6d 91       	ld	r22, X+
    367c:	8d 01       	movw	r16, r26
    367e:	d6 01       	movw	r26, r12
    3680:	ed 91       	ld	r30, X+
    3682:	fc 91       	ld	r31, X
    3684:	01 90       	ld	r0, Z+
    3686:	f0 81       	ld	r31, Z
    3688:	e0 2d       	mov	r30, r0
    368a:	c6 01       	movw	r24, r12
    368c:	09 95       	icall
    368e:	89 2b       	or	r24, r25
    3690:	11 f0       	breq	.+4      	; 0x3696 <_ZN5Print5writeEPKhj+0x3e>
    3692:	21 96       	adiw	r28, 0x01	; 1
    3694:	ee cf       	rjmp	.-36     	; 0x3672 <_ZN5Print5writeEPKhj+0x1a>
    3696:	7e 01       	movw	r14, r28
    3698:	c7 01       	movw	r24, r14
    369a:	df 91       	pop	r29
    369c:	cf 91       	pop	r28
    369e:	1f 91       	pop	r17
    36a0:	0f 91       	pop	r16
    36a2:	ff 90       	pop	r15
    36a4:	ef 90       	pop	r14
    36a6:	df 90       	pop	r13
    36a8:	cf 90       	pop	r12
    36aa:	08 95       	ret

000036ac <_ZN5Print5writeEPKc>:
    36ac:	61 15       	cp	r22, r1
    36ae:	71 05       	cpc	r23, r1
    36b0:	79 f0       	breq	.+30     	; 0x36d0 <_ZN5Print5writeEPKc+0x24>
    36b2:	fb 01       	movw	r30, r22
    36b4:	01 90       	ld	r0, Z+
    36b6:	00 20       	and	r0, r0
    36b8:	e9 f7       	brne	.-6      	; 0x36b4 <_ZN5Print5writeEPKc+0x8>
    36ba:	31 97       	sbiw	r30, 0x01	; 1
    36bc:	af 01       	movw	r20, r30
    36be:	46 1b       	sub	r20, r22
    36c0:	57 0b       	sbc	r21, r23
    36c2:	dc 01       	movw	r26, r24
    36c4:	ed 91       	ld	r30, X+
    36c6:	fc 91       	ld	r31, X
    36c8:	02 80       	ldd	r0, Z+2	; 0x02
    36ca:	f3 81       	ldd	r31, Z+3	; 0x03
    36cc:	e0 2d       	mov	r30, r0
    36ce:	09 94       	ijmp
    36d0:	80 e0       	ldi	r24, 0x00	; 0
    36d2:	90 e0       	ldi	r25, 0x00	; 0
    36d4:	08 95       	ret

000036d6 <_ZN5Print5printEPKc>:
    36d6:	0c 94 56 1b 	jmp	0x36ac	; 0x36ac <_ZN5Print5writeEPKc>

000036da <_ZN5Print5printEc>:
    36da:	dc 01       	movw	r26, r24
    36dc:	ed 91       	ld	r30, X+
    36de:	fc 91       	ld	r31, X
    36e0:	01 90       	ld	r0, Z+
    36e2:	f0 81       	ld	r31, Z
    36e4:	e0 2d       	mov	r30, r0
    36e6:	09 94       	ijmp

000036e8 <_ZN5Print7printlnEv>:
    36e8:	68 e9       	ldi	r22, 0x98	; 152
    36ea:	71 e0       	ldi	r23, 0x01	; 1
    36ec:	0c 94 56 1b 	jmp	0x36ac	; 0x36ac <_ZN5Print5writeEPKc>

000036f0 <_ZN5Print7printlnEPKc>:
    36f0:	0f 93       	push	r16
    36f2:	1f 93       	push	r17
    36f4:	cf 93       	push	r28
    36f6:	df 93       	push	r29
    36f8:	ec 01       	movw	r28, r24
    36fa:	0e 94 56 1b 	call	0x36ac	; 0x36ac <_ZN5Print5writeEPKc>
    36fe:	8c 01       	movw	r16, r24
    3700:	ce 01       	movw	r24, r28
    3702:	0e 94 74 1b 	call	0x36e8	; 0x36e8 <_ZN5Print7printlnEv>
    3706:	80 0f       	add	r24, r16
    3708:	91 1f       	adc	r25, r17
    370a:	df 91       	pop	r29
    370c:	cf 91       	pop	r28
    370e:	1f 91       	pop	r17
    3710:	0f 91       	pop	r16
    3712:	08 95       	ret

00003714 <_ZN5Print11printNumberEmh>:
    3714:	8f 92       	push	r8
    3716:	9f 92       	push	r9
    3718:	af 92       	push	r10
    371a:	bf 92       	push	r11
    371c:	ef 92       	push	r14
    371e:	ff 92       	push	r15
    3720:	0f 93       	push	r16
    3722:	1f 93       	push	r17
    3724:	cf 93       	push	r28
    3726:	df 93       	push	r29
    3728:	cd b7       	in	r28, 0x3d	; 61
    372a:	de b7       	in	r29, 0x3e	; 62
    372c:	a1 97       	sbiw	r28, 0x21	; 33
    372e:	0f b6       	in	r0, 0x3f	; 63
    3730:	f8 94       	cli
    3732:	de bf       	out	0x3e, r29	; 62
    3734:	0f be       	out	0x3f, r0	; 63
    3736:	cd bf       	out	0x3d, r28	; 61
    3738:	7c 01       	movw	r14, r24
    373a:	fa 01       	movw	r30, r20
    373c:	cb 01       	movw	r24, r22
    373e:	19 a2       	std	Y+33, r1	; 0x21
    3740:	22 30       	cpi	r18, 0x02	; 2
    3742:	08 f4       	brcc	.+2      	; 0x3746 <_ZN5Print11printNumberEmh+0x32>
    3744:	2a e0       	ldi	r18, 0x0A	; 10
    3746:	8e 01       	movw	r16, r28
    3748:	0f 5d       	subi	r16, 0xDF	; 223
    374a:	1f 4f       	sbci	r17, 0xFF	; 255
    374c:	82 2e       	mov	r8, r18
    374e:	91 2c       	mov	r9, r1
    3750:	a1 2c       	mov	r10, r1
    3752:	b1 2c       	mov	r11, r1
    3754:	bf 01       	movw	r22, r30
    3756:	a5 01       	movw	r20, r10
    3758:	94 01       	movw	r18, r8
    375a:	0e 94 b4 33 	call	0x6768	; 0x6768 <__udivmodsi4>
    375e:	f9 01       	movw	r30, r18
    3760:	ca 01       	movw	r24, r20
    3762:	01 50       	subi	r16, 0x01	; 1
    3764:	11 09       	sbc	r17, r1
    3766:	6a 30       	cpi	r22, 0x0A	; 10
    3768:	10 f4       	brcc	.+4      	; 0x376e <_ZN5Print11printNumberEmh+0x5a>
    376a:	60 5d       	subi	r22, 0xD0	; 208
    376c:	01 c0       	rjmp	.+2      	; 0x3770 <_ZN5Print11printNumberEmh+0x5c>
    376e:	69 5c       	subi	r22, 0xC9	; 201
    3770:	d8 01       	movw	r26, r16
    3772:	6c 93       	st	X, r22
    3774:	23 2b       	or	r18, r19
    3776:	24 2b       	or	r18, r20
    3778:	25 2b       	or	r18, r21
    377a:	61 f7       	brne	.-40     	; 0x3754 <_ZN5Print11printNumberEmh+0x40>
    377c:	b8 01       	movw	r22, r16
    377e:	c7 01       	movw	r24, r14
    3780:	0e 94 56 1b 	call	0x36ac	; 0x36ac <_ZN5Print5writeEPKc>
    3784:	a1 96       	adiw	r28, 0x21	; 33
    3786:	0f b6       	in	r0, 0x3f	; 63
    3788:	f8 94       	cli
    378a:	de bf       	out	0x3e, r29	; 62
    378c:	0f be       	out	0x3f, r0	; 63
    378e:	cd bf       	out	0x3d, r28	; 61
    3790:	df 91       	pop	r29
    3792:	cf 91       	pop	r28
    3794:	1f 91       	pop	r17
    3796:	0f 91       	pop	r16
    3798:	ff 90       	pop	r15
    379a:	ef 90       	pop	r14
    379c:	bf 90       	pop	r11
    379e:	af 90       	pop	r10
    37a0:	9f 90       	pop	r9
    37a2:	8f 90       	pop	r8
    37a4:	08 95       	ret

000037a6 <_ZN5Print5printEmi>:
    37a6:	21 15       	cp	r18, r1
    37a8:	31 05       	cpc	r19, r1
    37aa:	41 f4       	brne	.+16     	; 0x37bc <_ZN5Print5printEmi+0x16>
    37ac:	dc 01       	movw	r26, r24
    37ae:	ed 91       	ld	r30, X+
    37b0:	fc 91       	ld	r31, X
    37b2:	01 90       	ld	r0, Z+
    37b4:	f0 81       	ld	r31, Z
    37b6:	e0 2d       	mov	r30, r0
    37b8:	64 2f       	mov	r22, r20
    37ba:	09 94       	ijmp
    37bc:	0c 94 8a 1b 	jmp	0x3714	; 0x3714 <_ZN5Print11printNumberEmh>

000037c0 <_ZN5Print5printEji>:
    37c0:	9a 01       	movw	r18, r20
    37c2:	ab 01       	movw	r20, r22
    37c4:	60 e0       	ldi	r22, 0x00	; 0
    37c6:	70 e0       	ldi	r23, 0x00	; 0
    37c8:	0c 94 d3 1b 	jmp	0x37a6	; 0x37a6 <_ZN5Print5printEmi>

000037cc <_ZN5Print10printFloatEdh>:

  return write(str);
}

size_t Print::printFloat(double number, uint8_t digits) 
{ 
    37cc:	7f 92       	push	r7
    37ce:	8f 92       	push	r8
    37d0:	9f 92       	push	r9
    37d2:	af 92       	push	r10
    37d4:	bf 92       	push	r11
    37d6:	cf 92       	push	r12
    37d8:	df 92       	push	r13
    37da:	ef 92       	push	r14
    37dc:	ff 92       	push	r15
    37de:	0f 93       	push	r16
    37e0:	1f 93       	push	r17
    37e2:	cf 93       	push	r28
    37e4:	df 93       	push	r29
    37e6:	8c 01       	movw	r16, r24
    37e8:	6a 01       	movw	r12, r20
    37ea:	7b 01       	movw	r14, r22
    37ec:	72 2e       	mov	r7, r18
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
    37ee:	9a 01       	movw	r18, r20
    37f0:	ab 01       	movw	r20, r22
    37f2:	c7 01       	movw	r24, r14
    37f4:	b6 01       	movw	r22, r12
    37f6:	0e 94 8b 33 	call	0x6716	; 0x6716 <__unordsf2>
    37fa:	88 23       	and	r24, r24
    37fc:	19 f0       	breq	.+6      	; 0x3804 <_ZN5Print10printFloatEdh+0x38>
  return write(s.c_str(), s.length());
}

size_t Print::print(const char str[])
{
  return write(str);
    37fe:	6b e9       	ldi	r22, 0x9B	; 155
    3800:	71 e0       	ldi	r23, 0x01	; 1
    3802:	27 c0       	rjmp	.+78     	; 0x3852 <_ZN5Print10printFloatEdh+0x86>
size_t Print::printFloat(double number, uint8_t digits) 
{ 
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
  if (isinf(number)) return print("inf");
    3804:	46 01       	movw	r8, r12
    3806:	57 01       	movw	r10, r14
    3808:	e8 94       	clt
    380a:	b7 f8       	bld	r11, 7
    380c:	2f ef       	ldi	r18, 0xFF	; 255
    380e:	3f ef       	ldi	r19, 0xFF	; 255
    3810:	4f e7       	ldi	r20, 0x7F	; 127
    3812:	5f e7       	ldi	r21, 0x7F	; 127
    3814:	c5 01       	movw	r24, r10
    3816:	b4 01       	movw	r22, r8
    3818:	0e 94 8b 33 	call	0x6716	; 0x6716 <__unordsf2>
    381c:	81 11       	cpse	r24, r1
    381e:	0d c0       	rjmp	.+26     	; 0x383a <_ZN5Print10printFloatEdh+0x6e>
    3820:	2f ef       	ldi	r18, 0xFF	; 255
    3822:	3f ef       	ldi	r19, 0xFF	; 255
    3824:	4f e7       	ldi	r20, 0x7F	; 127
    3826:	5f e7       	ldi	r21, 0x7F	; 127
    3828:	c5 01       	movw	r24, r10
    382a:	b4 01       	movw	r22, r8
    382c:	0e 94 19 33 	call	0x6632	; 0x6632 <__cmpsf2>
    3830:	18 16       	cp	r1, r24
    3832:	1c f4       	brge	.+6      	; 0x383a <_ZN5Print10printFloatEdh+0x6e>
  return write(s.c_str(), s.length());
}

size_t Print::print(const char str[])
{
  return write(str);
    3834:	6f e9       	ldi	r22, 0x9F	; 159
    3836:	71 e0       	ldi	r23, 0x01	; 1
    3838:	0c c0       	rjmp	.+24     	; 0x3852 <_ZN5Print10printFloatEdh+0x86>
{ 
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
  if (isinf(number)) return print("inf");
  if (number > 4294967040.0) return print ("ovf");  // constant determined empirically
    383a:	2f ef       	ldi	r18, 0xFF	; 255
    383c:	3f ef       	ldi	r19, 0xFF	; 255
    383e:	4f e7       	ldi	r20, 0x7F	; 127
    3840:	5f e4       	ldi	r21, 0x4F	; 79
    3842:	c7 01       	movw	r24, r14
    3844:	b6 01       	movw	r22, r12
    3846:	0e 94 20 19 	call	0x3240	; 0x3240 <__gesf2>
    384a:	18 16       	cp	r1, r24
    384c:	94 f4       	brge	.+36     	; 0x3872 <_ZN5Print10printFloatEdh+0xa6>
  return write(s.c_str(), s.length());
}

size_t Print::print(const char str[])
{
  return write(str);
    384e:	63 ea       	ldi	r22, 0xA3	; 163
    3850:	71 e0       	ldi	r23, 0x01	; 1
    3852:	c8 01       	movw	r24, r16
    n += print(toPrint);
    remainder -= toPrint; 
  } 
  
  return n;
}
    3854:	df 91       	pop	r29
    3856:	cf 91       	pop	r28
    3858:	1f 91       	pop	r17
    385a:	0f 91       	pop	r16
    385c:	ff 90       	pop	r15
    385e:	ef 90       	pop	r14
    3860:	df 90       	pop	r13
    3862:	cf 90       	pop	r12
    3864:	bf 90       	pop	r11
    3866:	af 90       	pop	r10
    3868:	9f 90       	pop	r9
    386a:	8f 90       	pop	r8
    386c:	7f 90       	pop	r7
  return write(s.c_str(), s.length());
}

size_t Print::print(const char str[])
{
  return write(str);
    386e:	0c 94 56 1b 	jmp	0x36ac	; 0x36ac <_ZN5Print5writeEPKc>
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
  if (isinf(number)) return print("inf");
  if (number > 4294967040.0) return print ("ovf");  // constant determined empirically
  if (number <-4294967040.0) return print ("ovf");  // constant determined empirically
    3872:	2f ef       	ldi	r18, 0xFF	; 255
    3874:	3f ef       	ldi	r19, 0xFF	; 255
    3876:	4f e7       	ldi	r20, 0x7F	; 127
    3878:	5f ec       	ldi	r21, 0xCF	; 207
    387a:	c7 01       	movw	r24, r14
    387c:	b6 01       	movw	r22, r12
    387e:	0e 94 19 33 	call	0x6632	; 0x6632 <__cmpsf2>
    3882:	87 fd       	sbrc	r24, 7
    3884:	e4 cf       	rjmp	.-56     	; 0x384e <_ZN5Print10printFloatEdh+0x82>
  
  // Handle negative numbers
  if (number < 0.0)
    3886:	20 e0       	ldi	r18, 0x00	; 0
    3888:	30 e0       	ldi	r19, 0x00	; 0
    388a:	a9 01       	movw	r20, r18
    388c:	c7 01       	movw	r24, r14
    388e:	b6 01       	movw	r22, r12
    3890:	0e 94 19 33 	call	0x6632	; 0x6632 <__cmpsf2>
    3894:	87 ff       	sbrs	r24, 7
    3896:	0a c0       	rjmp	.+20     	; 0x38ac <_ZN5Print10printFloatEdh+0xe0>
  {
     n += print('-');
    3898:	6d e2       	ldi	r22, 0x2D	; 45
    389a:	c8 01       	movw	r24, r16
    389c:	0e 94 6d 1b 	call	0x36da	; 0x36da <_ZN5Print5printEc>
    38a0:	ec 01       	movw	r28, r24
     number = -number;
    38a2:	f7 fa       	bst	r15, 7
    38a4:	f0 94       	com	r15
    38a6:	f7 f8       	bld	r15, 7
    38a8:	f0 94       	com	r15
    38aa:	02 c0       	rjmp	.+4      	; 0x38b0 <_ZN5Print10printFloatEdh+0xe4>
  return write(str);
}

size_t Print::printFloat(double number, uint8_t digits) 
{ 
  size_t n = 0;
    38ac:	c0 e0       	ldi	r28, 0x00	; 0
    38ae:	d0 e0       	ldi	r29, 0x00	; 0
     number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
  for (uint8_t i=0; i<digits; ++i)
    38b0:	b1 2c       	mov	r11, r1
     n += print('-');
     number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
    38b2:	60 e0       	ldi	r22, 0x00	; 0
    38b4:	70 e0       	ldi	r23, 0x00	; 0
    38b6:	80 e0       	ldi	r24, 0x00	; 0
    38b8:	9f e3       	ldi	r25, 0x3F	; 63
  for (uint8_t i=0; i<digits; ++i)
    38ba:	7b 14       	cp	r7, r11
    38bc:	41 f0       	breq	.+16     	; 0x38ce <_ZN5Print10printFloatEdh+0x102>
    rounding /= 10.0;
    38be:	20 e0       	ldi	r18, 0x00	; 0
    38c0:	30 e0       	ldi	r19, 0x00	; 0
    38c2:	40 e2       	ldi	r20, 0x20	; 32
    38c4:	51 e4       	ldi	r21, 0x41	; 65
    38c6:	0e 94 ea 17 	call	0x2fd4	; 0x2fd4 <__divsf3>
     number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
  for (uint8_t i=0; i<digits; ++i)
    38ca:	b3 94       	inc	r11
    38cc:	f6 cf       	rjmp	.-20     	; 0x38ba <_ZN5Print10printFloatEdh+0xee>
    rounding /= 10.0;
  
  number += rounding;
    38ce:	a7 01       	movw	r20, r14
    38d0:	96 01       	movw	r18, r12
    38d2:	0e 94 7e 17 	call	0x2efc	; 0x2efc <__addsf3>
    38d6:	6b 01       	movw	r12, r22
    38d8:	7c 01       	movw	r14, r24

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
    38da:	0e 94 63 18 	call	0x30c6	; 0x30c6 <__fixunssfsi>
    38de:	4b 01       	movw	r8, r22
    38e0:	5c 01       	movw	r10, r24
}

size_t Print::print(unsigned long n, int base)
{
  if (base == 0) return write(n);
  else return printNumber(n, base);
    38e2:	2a e0       	ldi	r18, 0x0A	; 10
    38e4:	ab 01       	movw	r20, r22
    38e6:	bc 01       	movw	r22, r24
    38e8:	c8 01       	movw	r24, r16
    38ea:	0e 94 8a 1b 	call	0x3714	; 0x3714 <_ZN5Print11printNumberEmh>
  number += rounding;

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
  double remainder = number - (double)int_part;
  n += print(int_part);
    38ee:	c8 0f       	add	r28, r24
    38f0:	d9 1f       	adc	r29, r25

  // Print the decimal point, but only if there are digits beyond
  if (digits > 0) {
    38f2:	77 20       	and	r7, r7
    38f4:	b9 f1       	breq	.+110    	; 0x3964 <_ZN5Print10printFloatEdh+0x198>
  
  number += rounding;

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
  double remainder = number - (double)int_part;
    38f6:	c5 01       	movw	r24, r10
    38f8:	b4 01       	movw	r22, r8
    38fa:	0e 94 92 18 	call	0x3124	; 0x3124 <__floatunsisf>
    38fe:	9b 01       	movw	r18, r22
    3900:	ac 01       	movw	r20, r24
    3902:	c7 01       	movw	r24, r14
    3904:	b6 01       	movw	r22, r12
    3906:	0e 94 7d 17 	call	0x2efa	; 0x2efa <__subsf3>
    390a:	6b 01       	movw	r12, r22
    390c:	7c 01       	movw	r14, r24
  n += print(int_part);

  // Print the decimal point, but only if there are digits beyond
  if (digits > 0) {
    n += print('.'); 
    390e:	6e e2       	ldi	r22, 0x2E	; 46
    3910:	c8 01       	movw	r24, r16
    3912:	0e 94 6d 1b 	call	0x36da	; 0x36da <_ZN5Print5printEc>
    3916:	c8 0f       	add	r28, r24
    3918:	d9 1f       	adc	r29, r25
  }

  // Extract digits from the remainder one at a time
  while (digits-- > 0)
  {
    remainder *= 10.0;
    391a:	20 e0       	ldi	r18, 0x00	; 0
    391c:	30 e0       	ldi	r19, 0x00	; 0
    391e:	40 e2       	ldi	r20, 0x20	; 32
    3920:	51 e4       	ldi	r21, 0x41	; 65
    3922:	c7 01       	movw	r24, r14
    3924:	b6 01       	movw	r22, r12
    3926:	0e 94 1e 33 	call	0x663c	; 0x663c <__mulsf3>
    392a:	4b 01       	movw	r8, r22
    392c:	5c 01       	movw	r10, r24
    unsigned int toPrint = (unsigned int)(remainder);
    392e:	0e 94 63 18 	call	0x30c6	; 0x30c6 <__fixunssfsi>
    3932:	6b 01       	movw	r12, r22
    3934:	7c 01       	movw	r14, r24
    n += print(toPrint);
    3936:	4a e0       	ldi	r20, 0x0A	; 10
    3938:	50 e0       	ldi	r21, 0x00	; 0
    393a:	c8 01       	movw	r24, r16
    393c:	0e 94 e0 1b 	call	0x37c0	; 0x37c0 <_ZN5Print5printEji>
    3940:	c8 0f       	add	r28, r24
    3942:	d9 1f       	adc	r29, r25
    remainder -= toPrint; 
    3944:	b6 01       	movw	r22, r12
    3946:	80 e0       	ldi	r24, 0x00	; 0
    3948:	90 e0       	ldi	r25, 0x00	; 0
    394a:	0e 94 92 18 	call	0x3124	; 0x3124 <__floatunsisf>
    394e:	9b 01       	movw	r18, r22
    3950:	ac 01       	movw	r20, r24
    3952:	c5 01       	movw	r24, r10
    3954:	b4 01       	movw	r22, r8
    3956:	0e 94 7d 17 	call	0x2efa	; 0x2efa <__subsf3>
    395a:	6b 01       	movw	r12, r22
    395c:	7c 01       	movw	r14, r24
    395e:	7a 94       	dec	r7
  if (digits > 0) {
    n += print('.'); 
  }

  // Extract digits from the remainder one at a time
  while (digits-- > 0)
    3960:	71 10       	cpse	r7, r1
    3962:	db cf       	rjmp	.-74     	; 0x391a <_ZN5Print10printFloatEdh+0x14e>
  number += rounding;

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
  double remainder = number - (double)int_part;
  n += print(int_part);
    3964:	ce 01       	movw	r24, r28
    n += print(toPrint);
    remainder -= toPrint; 
  } 
  
  return n;
}
    3966:	df 91       	pop	r29
    3968:	cf 91       	pop	r28
    396a:	1f 91       	pop	r17
    396c:	0f 91       	pop	r16
    396e:	ff 90       	pop	r15
    3970:	ef 90       	pop	r14
    3972:	df 90       	pop	r13
    3974:	cf 90       	pop	r12
    3976:	bf 90       	pop	r11
    3978:	af 90       	pop	r10
    397a:	9f 90       	pop	r9
    397c:	8f 90       	pop	r8
    397e:	7f 90       	pop	r7
    3980:	08 95       	ret

00003982 <_ZN5Print5printEdi>:
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
    3982:	0c 94 e6 1b 	jmp	0x37cc	; 0x37cc <_ZN5Print10printFloatEdh>

00003986 <__vector_16>:
	

#endif

	// busy wait
	__asm__ __volatile__ (
    3986:	1f 92       	push	r1
    3988:	0f 92       	push	r0
    398a:	0f b6       	in	r0, 0x3f	; 63
    398c:	0f 92       	push	r0
    398e:	11 24       	eor	r1, r1
    3990:	2f 93       	push	r18
    3992:	3f 93       	push	r19
    3994:	8f 93       	push	r24
    3996:	9f 93       	push	r25
    3998:	af 93       	push	r26
    399a:	bf 93       	push	r27
    399c:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <timer0_millis>
    39a0:	90 91 17 04 	lds	r25, 0x0417	; 0x800417 <timer0_millis+0x1>
    39a4:	a0 91 18 04 	lds	r26, 0x0418	; 0x800418 <timer0_millis+0x2>
    39a8:	b0 91 19 04 	lds	r27, 0x0419	; 0x800419 <timer0_millis+0x3>
    39ac:	30 91 15 04 	lds	r19, 0x0415	; 0x800415 <timer0_fract>
    39b0:	23 e0       	ldi	r18, 0x03	; 3
    39b2:	23 0f       	add	r18, r19
    39b4:	2d 37       	cpi	r18, 0x7D	; 125
    39b6:	20 f4       	brcc	.+8      	; 0x39c0 <__vector_16+0x3a>
    39b8:	01 96       	adiw	r24, 0x01	; 1
    39ba:	a1 1d       	adc	r26, r1
    39bc:	b1 1d       	adc	r27, r1
    39be:	05 c0       	rjmp	.+10     	; 0x39ca <__vector_16+0x44>
    39c0:	26 e8       	ldi	r18, 0x86	; 134
    39c2:	23 0f       	add	r18, r19
    39c4:	02 96       	adiw	r24, 0x02	; 2
    39c6:	a1 1d       	adc	r26, r1
    39c8:	b1 1d       	adc	r27, r1
    39ca:	20 93 15 04 	sts	0x0415, r18	; 0x800415 <timer0_fract>
    39ce:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <timer0_millis>
    39d2:	90 93 17 04 	sts	0x0417, r25	; 0x800417 <timer0_millis+0x1>
    39d6:	a0 93 18 04 	sts	0x0418, r26	; 0x800418 <timer0_millis+0x2>
    39da:	b0 93 19 04 	sts	0x0419, r27	; 0x800419 <timer0_millis+0x3>
    39de:	80 91 1a 04 	lds	r24, 0x041A	; 0x80041a <timer0_overflow_count>
    39e2:	90 91 1b 04 	lds	r25, 0x041B	; 0x80041b <timer0_overflow_count+0x1>
    39e6:	a0 91 1c 04 	lds	r26, 0x041C	; 0x80041c <timer0_overflow_count+0x2>
    39ea:	b0 91 1d 04 	lds	r27, 0x041D	; 0x80041d <timer0_overflow_count+0x3>
    39ee:	01 96       	adiw	r24, 0x01	; 1
    39f0:	a1 1d       	adc	r26, r1
    39f2:	b1 1d       	adc	r27, r1
    39f4:	80 93 1a 04 	sts	0x041A, r24	; 0x80041a <timer0_overflow_count>
    39f8:	90 93 1b 04 	sts	0x041B, r25	; 0x80041b <timer0_overflow_count+0x1>
    39fc:	a0 93 1c 04 	sts	0x041C, r26	; 0x80041c <timer0_overflow_count+0x2>
    3a00:	b0 93 1d 04 	sts	0x041D, r27	; 0x80041d <timer0_overflow_count+0x3>
    3a04:	bf 91       	pop	r27
    3a06:	af 91       	pop	r26
    3a08:	9f 91       	pop	r25
    3a0a:	8f 91       	pop	r24
    3a0c:	3f 91       	pop	r19
    3a0e:	2f 91       	pop	r18
    3a10:	0f 90       	pop	r0
    3a12:	0f be       	out	0x3f, r0	; 63
    3a14:	0f 90       	pop	r0
    3a16:	1f 90       	pop	r1
    3a18:	18 95       	reti

00003a1a <micros>:
    3a1a:	3f b7       	in	r19, 0x3f	; 63
    3a1c:	f8 94       	cli
    3a1e:	80 91 1a 04 	lds	r24, 0x041A	; 0x80041a <timer0_overflow_count>
    3a22:	90 91 1b 04 	lds	r25, 0x041B	; 0x80041b <timer0_overflow_count+0x1>
    3a26:	a0 91 1c 04 	lds	r26, 0x041C	; 0x80041c <timer0_overflow_count+0x2>
    3a2a:	b0 91 1d 04 	lds	r27, 0x041D	; 0x80041d <timer0_overflow_count+0x3>
    3a2e:	26 b5       	in	r18, 0x26	; 38
    3a30:	a8 9b       	sbis	0x15, 0	; 21
    3a32:	05 c0       	rjmp	.+10     	; 0x3a3e <micros+0x24>
    3a34:	2f 3f       	cpi	r18, 0xFF	; 255
    3a36:	19 f0       	breq	.+6      	; 0x3a3e <micros+0x24>
    3a38:	01 96       	adiw	r24, 0x01	; 1
    3a3a:	a1 1d       	adc	r26, r1
    3a3c:	b1 1d       	adc	r27, r1
    3a3e:	3f bf       	out	0x3f, r19	; 63
    3a40:	ba 2f       	mov	r27, r26
    3a42:	a9 2f       	mov	r26, r25
    3a44:	98 2f       	mov	r25, r24
    3a46:	88 27       	eor	r24, r24
    3a48:	82 0f       	add	r24, r18
    3a4a:	91 1d       	adc	r25, r1
    3a4c:	a1 1d       	adc	r26, r1
    3a4e:	b1 1d       	adc	r27, r1
    3a50:	bc 01       	movw	r22, r24
    3a52:	cd 01       	movw	r24, r26
    3a54:	42 e0       	ldi	r20, 0x02	; 2
    3a56:	66 0f       	add	r22, r22
    3a58:	77 1f       	adc	r23, r23
    3a5a:	88 1f       	adc	r24, r24
    3a5c:	99 1f       	adc	r25, r25
    3a5e:	4a 95       	dec	r20
    3a60:	d1 f7       	brne	.-12     	; 0x3a56 <micros+0x3c>
    3a62:	08 95       	ret

00003a64 <delay>:
    3a64:	8f 92       	push	r8
    3a66:	9f 92       	push	r9
    3a68:	af 92       	push	r10
    3a6a:	bf 92       	push	r11
    3a6c:	cf 92       	push	r12
    3a6e:	df 92       	push	r13
    3a70:	ef 92       	push	r14
    3a72:	ff 92       	push	r15
    3a74:	6b 01       	movw	r12, r22
    3a76:	7c 01       	movw	r14, r24
    3a78:	0e 94 0d 1d 	call	0x3a1a	; 0x3a1a <micros>
    3a7c:	4b 01       	movw	r8, r22
    3a7e:	5c 01       	movw	r10, r24
    3a80:	c1 14       	cp	r12, r1
    3a82:	d1 04       	cpc	r13, r1
    3a84:	e1 04       	cpc	r14, r1
    3a86:	f1 04       	cpc	r15, r1
    3a88:	01 f1       	breq	.+64     	; 0x3aca <delay+0x66>
    3a8a:	0e 94 24 2e 	call	0x5c48	; 0x5c48 <yield>
    3a8e:	0e 94 0d 1d 	call	0x3a1a	; 0x3a1a <micros>
    3a92:	dc 01       	movw	r26, r24
    3a94:	cb 01       	movw	r24, r22
    3a96:	88 19       	sub	r24, r8
    3a98:	99 09       	sbc	r25, r9
    3a9a:	aa 09       	sbc	r26, r10
    3a9c:	bb 09       	sbc	r27, r11
    3a9e:	88 3e       	cpi	r24, 0xE8	; 232
    3aa0:	93 40       	sbci	r25, 0x03	; 3
    3aa2:	a1 05       	cpc	r26, r1
    3aa4:	b1 05       	cpc	r27, r1
    3aa6:	60 f3       	brcs	.-40     	; 0x3a80 <delay+0x1c>
    3aa8:	21 e0       	ldi	r18, 0x01	; 1
    3aaa:	c2 1a       	sub	r12, r18
    3aac:	d1 08       	sbc	r13, r1
    3aae:	e1 08       	sbc	r14, r1
    3ab0:	f1 08       	sbc	r15, r1
    3ab2:	88 ee       	ldi	r24, 0xE8	; 232
    3ab4:	88 0e       	add	r8, r24
    3ab6:	83 e0       	ldi	r24, 0x03	; 3
    3ab8:	98 1e       	adc	r9, r24
    3aba:	a1 1c       	adc	r10, r1
    3abc:	b1 1c       	adc	r11, r1
    3abe:	c1 14       	cp	r12, r1
    3ac0:	d1 04       	cpc	r13, r1
    3ac2:	e1 04       	cpc	r14, r1
    3ac4:	f1 04       	cpc	r15, r1
    3ac6:	19 f7       	brne	.-58     	; 0x3a8e <delay+0x2a>
    3ac8:	db cf       	rjmp	.-74     	; 0x3a80 <delay+0x1c>
    3aca:	ff 90       	pop	r15
    3acc:	ef 90       	pop	r14
    3ace:	df 90       	pop	r13
    3ad0:	cf 90       	pop	r12
    3ad2:	bf 90       	pop	r11
    3ad4:	af 90       	pop	r10
    3ad6:	9f 90       	pop	r9
    3ad8:	8f 90       	pop	r8
    3ada:	08 95       	ret

00003adc <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
    3adc:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
    3ade:	84 b5       	in	r24, 0x24	; 36
    3ae0:	82 60       	ori	r24, 0x02	; 2
    3ae2:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
    3ae4:	84 b5       	in	r24, 0x24	; 36
    3ae6:	81 60       	ori	r24, 0x01	; 1
    3ae8:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
    3aea:	85 b5       	in	r24, 0x25	; 37
    3aec:	82 60       	ori	r24, 0x02	; 2
    3aee:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
    3af0:	85 b5       	in	r24, 0x25	; 37
    3af2:	81 60       	ori	r24, 0x01	; 1
    3af4:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
    3af6:	ee e6       	ldi	r30, 0x6E	; 110
    3af8:	f0 e0       	ldi	r31, 0x00	; 0
    3afa:	80 81       	ld	r24, Z
    3afc:	81 60       	ori	r24, 0x01	; 1
    3afe:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
    3b00:	e1 e8       	ldi	r30, 0x81	; 129
    3b02:	f0 e0       	ldi	r31, 0x00	; 0
    3b04:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
    3b06:	80 81       	ld	r24, Z
    3b08:	82 60       	ori	r24, 0x02	; 2
    3b0a:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
    3b0c:	80 81       	ld	r24, Z
    3b0e:	81 60       	ori	r24, 0x01	; 1
    3b10:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
    3b12:	e0 e8       	ldi	r30, 0x80	; 128
    3b14:	f0 e0       	ldi	r31, 0x00	; 0
    3b16:	80 81       	ld	r24, Z
    3b18:	81 60       	ori	r24, 0x01	; 1
    3b1a:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
    3b1c:	e1 eb       	ldi	r30, 0xB1	; 177
    3b1e:	f0 e0       	ldi	r31, 0x00	; 0
    3b20:	80 81       	ld	r24, Z
    3b22:	84 60       	ori	r24, 0x04	; 4
    3b24:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
    3b26:	e0 eb       	ldi	r30, 0xB0	; 176
    3b28:	f0 e0       	ldi	r31, 0x00	; 0
    3b2a:	80 81       	ld	r24, Z
    3b2c:	81 60       	ori	r24, 0x01	; 1
    3b2e:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
    3b30:	ea e7       	ldi	r30, 0x7A	; 122
    3b32:	f0 e0       	ldi	r31, 0x00	; 0
    3b34:	80 81       	ld	r24, Z
    3b36:	84 60       	ori	r24, 0x04	; 4
    3b38:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
    3b3a:	80 81       	ld	r24, Z
    3b3c:	82 60       	ori	r24, 0x02	; 2
    3b3e:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
    3b40:	80 81       	ld	r24, Z
    3b42:	81 60       	ori	r24, 0x01	; 1
    3b44:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
    3b46:	80 81       	ld	r24, Z
    3b48:	80 68       	ori	r24, 0x80	; 128
    3b4a:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
    3b4c:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    3b50:	08 95       	ret

00003b52 <_Z3maplllll>:
  long diff = howbig - howsmall;
  return random(diff) + howsmall;
}

long map(long x, long in_min, long in_max, long out_min, long out_max)
{
    3b52:	4f 92       	push	r4
    3b54:	5f 92       	push	r5
    3b56:	6f 92       	push	r6
    3b58:	7f 92       	push	r7
    3b5a:	af 92       	push	r10
    3b5c:	bf 92       	push	r11
    3b5e:	cf 92       	push	r12
    3b60:	df 92       	push	r13
    3b62:	ef 92       	push	r14
    3b64:	ff 92       	push	r15
    3b66:	0f 93       	push	r16
    3b68:	1f 93       	push	r17
    3b6a:	cf 93       	push	r28
    3b6c:	df 93       	push	r29
    3b6e:	cd b7       	in	r28, 0x3d	; 61
    3b70:	de b7       	in	r29, 0x3e	; 62
    3b72:	29 01       	movw	r4, r18
    3b74:	3a 01       	movw	r6, r20
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
    3b76:	9b 01       	movw	r18, r22
    3b78:	ac 01       	movw	r20, r24
    3b7a:	24 19       	sub	r18, r4
    3b7c:	35 09       	sbc	r19, r5
    3b7e:	46 09       	sbc	r20, r6
    3b80:	57 09       	sbc	r21, r7
    3b82:	89 89       	ldd	r24, Y+17	; 0x11
    3b84:	9a 89       	ldd	r25, Y+18	; 0x12
    3b86:	ab 89       	ldd	r26, Y+19	; 0x13
    3b88:	bc 89       	ldd	r27, Y+20	; 0x14
    3b8a:	bc 01       	movw	r22, r24
    3b8c:	cd 01       	movw	r24, r26
    3b8e:	6a 19       	sub	r22, r10
    3b90:	7b 09       	sbc	r23, r11
    3b92:	8c 09       	sbc	r24, r12
    3b94:	9d 09       	sbc	r25, r13
    3b96:	0e 94 90 33 	call	0x6720	; 0x6720 <__mulsi3>
    3b9a:	a8 01       	movw	r20, r16
    3b9c:	97 01       	movw	r18, r14
    3b9e:	24 19       	sub	r18, r4
    3ba0:	35 09       	sbc	r19, r5
    3ba2:	46 09       	sbc	r20, r6
    3ba4:	57 09       	sbc	r21, r7
    3ba6:	0e 94 d6 33 	call	0x67ac	; 0x67ac <__divmodsi4>
    3baa:	ca 01       	movw	r24, r20
    3bac:	b9 01       	movw	r22, r18
    3bae:	6a 0d       	add	r22, r10
    3bb0:	7b 1d       	adc	r23, r11
    3bb2:	8c 1d       	adc	r24, r12
    3bb4:	9d 1d       	adc	r25, r13
}
    3bb6:	df 91       	pop	r29
    3bb8:	cf 91       	pop	r28
    3bba:	1f 91       	pop	r17
    3bbc:	0f 91       	pop	r16
    3bbe:	ff 90       	pop	r15
    3bc0:	ef 90       	pop	r14
    3bc2:	df 90       	pop	r13
    3bc4:	cf 90       	pop	r12
    3bc6:	bf 90       	pop	r11
    3bc8:	af 90       	pop	r10
    3bca:	7f 90       	pop	r7
    3bcc:	6f 90       	pop	r6
    3bce:	5f 90       	pop	r5
    3bd0:	4f 90       	pop	r4
    3bd2:	08 95       	ret

00003bd4 <_ZNK6String14StringIfHelperEv>:
	if (index >= len || !buffer) {
		dummy_writable_char = 0;
		return dummy_writable_char;
	}
	return buffer[index];
}
    3bd4:	08 95       	ret

00003bd6 <_ZN6StringD1Ev>:
    3bd6:	fc 01       	movw	r30, r24
    3bd8:	80 81       	ld	r24, Z
    3bda:	91 81       	ldd	r25, Z+1	; 0x01
    3bdc:	00 97       	sbiw	r24, 0x00	; 0
    3bde:	11 f0       	breq	.+4      	; 0x3be4 <_ZN6StringD1Ev+0xe>
    3be0:	0c 94 e1 34 	jmp	0x69c2	; 0x69c2 <free>
    3be4:	08 95       	ret

00003be6 <_ZN6String10invalidateEv>:
    3be6:	cf 93       	push	r28
    3be8:	df 93       	push	r29
    3bea:	ec 01       	movw	r28, r24
    3bec:	88 81       	ld	r24, Y
    3bee:	99 81       	ldd	r25, Y+1	; 0x01
    3bf0:	00 97       	sbiw	r24, 0x00	; 0
    3bf2:	11 f0       	breq	.+4      	; 0x3bf8 <_ZN6String10invalidateEv+0x12>
    3bf4:	0e 94 e1 34 	call	0x69c2	; 0x69c2 <free>
    3bf8:	19 82       	std	Y+1, r1	; 0x01
    3bfa:	18 82       	st	Y, r1
    3bfc:	1d 82       	std	Y+5, r1	; 0x05
    3bfe:	1c 82       	std	Y+4, r1	; 0x04
    3c00:	1b 82       	std	Y+3, r1	; 0x03
    3c02:	1a 82       	std	Y+2, r1	; 0x02
    3c04:	df 91       	pop	r29
    3c06:	cf 91       	pop	r28
    3c08:	08 95       	ret

00003c0a <_ZN6String12changeBufferEj>:
    3c0a:	0f 93       	push	r16
    3c0c:	1f 93       	push	r17
    3c0e:	cf 93       	push	r28
    3c10:	df 93       	push	r29
    3c12:	ec 01       	movw	r28, r24
    3c14:	8b 01       	movw	r16, r22
    3c16:	6f 5f       	subi	r22, 0xFF	; 255
    3c18:	7f 4f       	sbci	r23, 0xFF	; 255
    3c1a:	88 81       	ld	r24, Y
    3c1c:	99 81       	ldd	r25, Y+1	; 0x01
    3c1e:	0e 94 6a 35 	call	0x6ad4	; 0x6ad4 <realloc>
    3c22:	00 97       	sbiw	r24, 0x00	; 0
    3c24:	31 f0       	breq	.+12     	; 0x3c32 <_ZN6String12changeBufferEj+0x28>
    3c26:	99 83       	std	Y+1, r25	; 0x01
    3c28:	88 83       	st	Y, r24
    3c2a:	1b 83       	std	Y+3, r17	; 0x03
    3c2c:	0a 83       	std	Y+2, r16	; 0x02
    3c2e:	81 e0       	ldi	r24, 0x01	; 1
    3c30:	01 c0       	rjmp	.+2      	; 0x3c34 <_ZN6String12changeBufferEj+0x2a>
    3c32:	80 e0       	ldi	r24, 0x00	; 0
    3c34:	df 91       	pop	r29
    3c36:	cf 91       	pop	r28
    3c38:	1f 91       	pop	r17
    3c3a:	0f 91       	pop	r16
    3c3c:	08 95       	ret

00003c3e <_ZN6String7reserveEj>:
    3c3e:	cf 93       	push	r28
    3c40:	df 93       	push	r29
    3c42:	ec 01       	movw	r28, r24
    3c44:	88 81       	ld	r24, Y
    3c46:	99 81       	ldd	r25, Y+1	; 0x01
    3c48:	89 2b       	or	r24, r25
    3c4a:	29 f0       	breq	.+10     	; 0x3c56 <_ZN6String7reserveEj+0x18>
    3c4c:	8a 81       	ldd	r24, Y+2	; 0x02
    3c4e:	9b 81       	ldd	r25, Y+3	; 0x03
    3c50:	86 17       	cp	r24, r22
    3c52:	97 07       	cpc	r25, r23
    3c54:	60 f4       	brcc	.+24     	; 0x3c6e <_ZN6String7reserveEj+0x30>
    3c56:	ce 01       	movw	r24, r28
    3c58:	0e 94 05 1e 	call	0x3c0a	; 0x3c0a <_ZN6String12changeBufferEj>
    3c5c:	88 23       	and	r24, r24
    3c5e:	41 f0       	breq	.+16     	; 0x3c70 <_ZN6String7reserveEj+0x32>
    3c60:	8c 81       	ldd	r24, Y+4	; 0x04
    3c62:	9d 81       	ldd	r25, Y+5	; 0x05
    3c64:	89 2b       	or	r24, r25
    3c66:	19 f4       	brne	.+6      	; 0x3c6e <_ZN6String7reserveEj+0x30>
    3c68:	e8 81       	ld	r30, Y
    3c6a:	f9 81       	ldd	r31, Y+1	; 0x01
    3c6c:	10 82       	st	Z, r1
    3c6e:	81 e0       	ldi	r24, 0x01	; 1
    3c70:	df 91       	pop	r29
    3c72:	cf 91       	pop	r28
    3c74:	08 95       	ret

00003c76 <_ZN6String4copyEPKcj>:
    3c76:	ef 92       	push	r14
    3c78:	ff 92       	push	r15
    3c7a:	0f 93       	push	r16
    3c7c:	1f 93       	push	r17
    3c7e:	cf 93       	push	r28
    3c80:	df 93       	push	r29
    3c82:	ec 01       	movw	r28, r24
    3c84:	7b 01       	movw	r14, r22
    3c86:	8a 01       	movw	r16, r20
    3c88:	ba 01       	movw	r22, r20
    3c8a:	0e 94 1f 1e 	call	0x3c3e	; 0x3c3e <_ZN6String7reserveEj>
    3c8e:	81 11       	cpse	r24, r1
    3c90:	04 c0       	rjmp	.+8      	; 0x3c9a <_ZN6String4copyEPKcj+0x24>
    3c92:	ce 01       	movw	r24, r28
    3c94:	0e 94 f3 1d 	call	0x3be6	; 0x3be6 <_ZN6String10invalidateEv>
    3c98:	07 c0       	rjmp	.+14     	; 0x3ca8 <_ZN6String4copyEPKcj+0x32>
    3c9a:	1d 83       	std	Y+5, r17	; 0x05
    3c9c:	0c 83       	std	Y+4, r16	; 0x04
    3c9e:	b7 01       	movw	r22, r14
    3ca0:	88 81       	ld	r24, Y
    3ca2:	99 81       	ldd	r25, Y+1	; 0x01
    3ca4:	0e 94 39 36 	call	0x6c72	; 0x6c72 <strcpy>
    3ca8:	ce 01       	movw	r24, r28
    3caa:	df 91       	pop	r29
    3cac:	cf 91       	pop	r28
    3cae:	1f 91       	pop	r17
    3cb0:	0f 91       	pop	r16
    3cb2:	ff 90       	pop	r15
    3cb4:	ef 90       	pop	r14
    3cb6:	08 95       	ret

00003cb8 <_ZN6StringC1EPKc>:
    3cb8:	fc 01       	movw	r30, r24
    3cba:	11 82       	std	Z+1, r1	; 0x01
    3cbc:	10 82       	st	Z, r1
    3cbe:	13 82       	std	Z+3, r1	; 0x03
    3cc0:	12 82       	std	Z+2, r1	; 0x02
    3cc2:	15 82       	std	Z+5, r1	; 0x05
    3cc4:	14 82       	std	Z+4, r1	; 0x04
    3cc6:	61 15       	cp	r22, r1
    3cc8:	71 05       	cpc	r23, r1
    3cca:	51 f0       	breq	.+20     	; 0x3ce0 <_ZN6StringC1EPKc+0x28>
    3ccc:	fb 01       	movw	r30, r22
    3cce:	01 90       	ld	r0, Z+
    3cd0:	00 20       	and	r0, r0
    3cd2:	e9 f7       	brne	.-6      	; 0x3cce <_ZN6StringC1EPKc+0x16>
    3cd4:	31 97       	sbiw	r30, 0x01	; 1
    3cd6:	af 01       	movw	r20, r30
    3cd8:	46 1b       	sub	r20, r22
    3cda:	57 0b       	sbc	r21, r23
    3cdc:	0c 94 3b 1e 	jmp	0x3c76	; 0x3c76 <_ZN6String4copyEPKcj>
    3ce0:	08 95       	ret

00003ce2 <_ZN6String4moveERS_>:
    3ce2:	0f 93       	push	r16
    3ce4:	1f 93       	push	r17
    3ce6:	cf 93       	push	r28
    3ce8:	df 93       	push	r29
    3cea:	8c 01       	movw	r16, r24
    3cec:	eb 01       	movw	r28, r22
    3cee:	fc 01       	movw	r30, r24
    3cf0:	80 81       	ld	r24, Z
    3cf2:	91 81       	ldd	r25, Z+1	; 0x01
    3cf4:	00 97       	sbiw	r24, 0x00	; 0
    3cf6:	d1 f0       	breq	.+52     	; 0x3d2c <_ZN6String4moveERS_+0x4a>
    3cf8:	68 81       	ld	r22, Y
    3cfa:	79 81       	ldd	r23, Y+1	; 0x01
    3cfc:	61 15       	cp	r22, r1
    3cfe:	71 05       	cpc	r23, r1
    3d00:	99 f0       	breq	.+38     	; 0x3d28 <_ZN6String4moveERS_+0x46>
    3d02:	2a ee       	ldi	r18, 0xEA	; 234
    3d04:	3d e1       	ldi	r19, 0x1D	; 29
    3d06:	23 2b       	or	r18, r19
    3d08:	79 f0       	breq	.+30     	; 0x3d28 <_ZN6String4moveERS_+0x46>
    3d0a:	42 81       	ldd	r20, Z+2	; 0x02
    3d0c:	53 81       	ldd	r21, Z+3	; 0x03
    3d0e:	2c 81       	ldd	r18, Y+4	; 0x04
    3d10:	3d 81       	ldd	r19, Y+5	; 0x05
    3d12:	42 17       	cp	r20, r18
    3d14:	53 07       	cpc	r21, r19
    3d16:	40 f0       	brcs	.+16     	; 0x3d28 <_ZN6String4moveERS_+0x46>
    3d18:	0e 94 39 36 	call	0x6c72	; 0x6c72 <strcpy>
    3d1c:	8c 81       	ldd	r24, Y+4	; 0x04
    3d1e:	9d 81       	ldd	r25, Y+5	; 0x05
    3d20:	f8 01       	movw	r30, r16
    3d22:	95 83       	std	Z+5, r25	; 0x05
    3d24:	84 83       	std	Z+4, r24	; 0x04
    3d26:	13 c0       	rjmp	.+38     	; 0x3d4e <_ZN6String4moveERS_+0x6c>
    3d28:	0e 94 e1 34 	call	0x69c2	; 0x69c2 <free>
    3d2c:	88 81       	ld	r24, Y
    3d2e:	99 81       	ldd	r25, Y+1	; 0x01
    3d30:	f8 01       	movw	r30, r16
    3d32:	91 83       	std	Z+1, r25	; 0x01
    3d34:	80 83       	st	Z, r24
    3d36:	8a 81       	ldd	r24, Y+2	; 0x02
    3d38:	9b 81       	ldd	r25, Y+3	; 0x03
    3d3a:	93 83       	std	Z+3, r25	; 0x03
    3d3c:	82 83       	std	Z+2, r24	; 0x02
    3d3e:	8c 81       	ldd	r24, Y+4	; 0x04
    3d40:	9d 81       	ldd	r25, Y+5	; 0x05
    3d42:	95 83       	std	Z+5, r25	; 0x05
    3d44:	84 83       	std	Z+4, r24	; 0x04
    3d46:	19 82       	std	Y+1, r1	; 0x01
    3d48:	18 82       	st	Y, r1
    3d4a:	1b 82       	std	Y+3, r1	; 0x03
    3d4c:	1a 82       	std	Y+2, r1	; 0x02
    3d4e:	1d 82       	std	Y+5, r1	; 0x05
    3d50:	1c 82       	std	Y+4, r1	; 0x04
    3d52:	df 91       	pop	r29
    3d54:	cf 91       	pop	r28
    3d56:	1f 91       	pop	r17
    3d58:	0f 91       	pop	r16
    3d5a:	08 95       	ret

00003d5c <_ZN6StringaSERKS_>:
    3d5c:	cf 93       	push	r28
    3d5e:	df 93       	push	r29
    3d60:	ec 01       	movw	r28, r24
    3d62:	fb 01       	movw	r30, r22
    3d64:	86 17       	cp	r24, r22
    3d66:	97 07       	cpc	r25, r23
    3d68:	61 f0       	breq	.+24     	; 0x3d82 <_ZN6StringaSERKS_+0x26>
    3d6a:	60 81       	ld	r22, Z
    3d6c:	71 81       	ldd	r23, Z+1	; 0x01
    3d6e:	61 15       	cp	r22, r1
    3d70:	71 05       	cpc	r23, r1
    3d72:	29 f0       	breq	.+10     	; 0x3d7e <_ZN6StringaSERKS_+0x22>
    3d74:	44 81       	ldd	r20, Z+4	; 0x04
    3d76:	55 81       	ldd	r21, Z+5	; 0x05
    3d78:	0e 94 3b 1e 	call	0x3c76	; 0x3c76 <_ZN6String4copyEPKcj>
    3d7c:	02 c0       	rjmp	.+4      	; 0x3d82 <_ZN6StringaSERKS_+0x26>
    3d7e:	0e 94 f3 1d 	call	0x3be6	; 0x3be6 <_ZN6String10invalidateEv>
    3d82:	ce 01       	movw	r24, r28
    3d84:	df 91       	pop	r29
    3d86:	cf 91       	pop	r28
    3d88:	08 95       	ret

00003d8a <_ZN6StringC1ERKS_>:
    3d8a:	fc 01       	movw	r30, r24
    3d8c:	11 82       	std	Z+1, r1	; 0x01
    3d8e:	10 82       	st	Z, r1
    3d90:	13 82       	std	Z+3, r1	; 0x03
    3d92:	12 82       	std	Z+2, r1	; 0x02
    3d94:	15 82       	std	Z+5, r1	; 0x05
    3d96:	14 82       	std	Z+4, r1	; 0x04
    3d98:	0c 94 ae 1e 	jmp	0x3d5c	; 0x3d5c <_ZN6StringaSERKS_>

00003d9c <_ZN6StringaSEOS_>:
    3d9c:	cf 93       	push	r28
    3d9e:	df 93       	push	r29
    3da0:	ec 01       	movw	r28, r24
    3da2:	86 17       	cp	r24, r22
    3da4:	97 07       	cpc	r25, r23
    3da6:	11 f0       	breq	.+4      	; 0x3dac <_ZN6StringaSEOS_+0x10>
    3da8:	0e 94 71 1e 	call	0x3ce2	; 0x3ce2 <_ZN6String4moveERS_>
    3dac:	ce 01       	movw	r24, r28
    3dae:	df 91       	pop	r29
    3db0:	cf 91       	pop	r28
    3db2:	08 95       	ret

00003db4 <_ZN6StringaSEPKc>:
    3db4:	cf 93       	push	r28
    3db6:	df 93       	push	r29
    3db8:	ec 01       	movw	r28, r24
    3dba:	61 15       	cp	r22, r1
    3dbc:	71 05       	cpc	r23, r1
    3dbe:	59 f0       	breq	.+22     	; 0x3dd6 <_ZN6StringaSEPKc+0x22>
    3dc0:	fb 01       	movw	r30, r22
    3dc2:	01 90       	ld	r0, Z+
    3dc4:	00 20       	and	r0, r0
    3dc6:	e9 f7       	brne	.-6      	; 0x3dc2 <_ZN6StringaSEPKc+0xe>
    3dc8:	31 97       	sbiw	r30, 0x01	; 1
    3dca:	af 01       	movw	r20, r30
    3dcc:	46 1b       	sub	r20, r22
    3dce:	57 0b       	sbc	r21, r23
    3dd0:	0e 94 3b 1e 	call	0x3c76	; 0x3c76 <_ZN6String4copyEPKcj>
    3dd4:	02 c0       	rjmp	.+4      	; 0x3dda <_ZN6StringaSEPKc+0x26>
    3dd6:	0e 94 f3 1d 	call	0x3be6	; 0x3be6 <_ZN6String10invalidateEv>
    3dda:	ce 01       	movw	r24, r28
    3ddc:	df 91       	pop	r29
    3dde:	cf 91       	pop	r28
    3de0:	08 95       	ret

00003de2 <_ZN6StringC1Efh>:
    3de2:	ef 92       	push	r14
    3de4:	ff 92       	push	r15
    3de6:	0f 93       	push	r16
    3de8:	1f 93       	push	r17
    3dea:	cf 93       	push	r28
    3dec:	df 93       	push	r29
    3dee:	cd b7       	in	r28, 0x3d	; 61
    3df0:	de b7       	in	r29, 0x3e	; 62
    3df2:	a1 97       	sbiw	r28, 0x21	; 33
    3df4:	0f b6       	in	r0, 0x3f	; 63
    3df6:	f8 94       	cli
    3df8:	de bf       	out	0x3e, r29	; 62
    3dfa:	0f be       	out	0x3f, r0	; 63
    3dfc:	cd bf       	out	0x3d, r28	; 61
    3dfe:	7c 01       	movw	r14, r24
    3e00:	cb 01       	movw	r24, r22
    3e02:	ba 01       	movw	r22, r20
    3e04:	f7 01       	movw	r30, r14
    3e06:	11 82       	std	Z+1, r1	; 0x01
    3e08:	10 82       	st	Z, r1
    3e0a:	13 82       	std	Z+3, r1	; 0x03
    3e0c:	12 82       	std	Z+2, r1	; 0x02
    3e0e:	15 82       	std	Z+5, r1	; 0x05
    3e10:	14 82       	std	Z+4, r1	; 0x04
    3e12:	42 e0       	ldi	r20, 0x02	; 2
    3e14:	42 0f       	add	r20, r18
    3e16:	8e 01       	movw	r16, r28
    3e18:	0f 5f       	subi	r16, 0xFF	; 255
    3e1a:	1f 4f       	sbci	r17, 0xFF	; 255
    3e1c:	0e 94 29 34 	call	0x6852	; 0x6852 <dtostrf>
    3e20:	bc 01       	movw	r22, r24
    3e22:	c7 01       	movw	r24, r14
    3e24:	0e 94 da 1e 	call	0x3db4	; 0x3db4 <_ZN6StringaSEPKc>
    3e28:	a1 96       	adiw	r28, 0x21	; 33
    3e2a:	0f b6       	in	r0, 0x3f	; 63
    3e2c:	f8 94       	cli
    3e2e:	de bf       	out	0x3e, r29	; 62
    3e30:	0f be       	out	0x3f, r0	; 63
    3e32:	cd bf       	out	0x3d, r28	; 61
    3e34:	df 91       	pop	r29
    3e36:	cf 91       	pop	r28
    3e38:	1f 91       	pop	r17
    3e3a:	0f 91       	pop	r16
    3e3c:	ff 90       	pop	r15
    3e3e:	ef 90       	pop	r14
    3e40:	08 95       	ret

00003e42 <_ZNK6StringixEj>:

char String::operator[]( unsigned int index ) const
{
	if (index >= len || !buffer) return 0;
    3e42:	fc 01       	movw	r30, r24
    3e44:	24 81       	ldd	r18, Z+4	; 0x04
    3e46:	35 81       	ldd	r19, Z+5	; 0x05
    3e48:	62 17       	cp	r22, r18
    3e4a:	73 07       	cpc	r23, r19
    3e4c:	48 f4       	brcc	.+18     	; 0x3e60 <_ZNK6StringixEj+0x1e>
    3e4e:	80 81       	ld	r24, Z
    3e50:	91 81       	ldd	r25, Z+1	; 0x01
    3e52:	00 97       	sbiw	r24, 0x00	; 0
    3e54:	29 f0       	breq	.+10     	; 0x3e60 <_ZNK6StringixEj+0x1e>
	return buffer[index];
    3e56:	fc 01       	movw	r30, r24
    3e58:	e6 0f       	add	r30, r22
    3e5a:	f7 1f       	adc	r31, r23
    3e5c:	80 81       	ld	r24, Z
    3e5e:	08 95       	ret
	return buffer[index];
}

char String::operator[]( unsigned int index ) const
{
	if (index >= len || !buffer) return 0;
    3e60:	80 e0       	ldi	r24, 0x00	; 0
	return buffer[index];
}
    3e62:	08 95       	ret

00003e64 <_ZNK6String6charAtEj>:
/*  Character Access                         */
/*********************************************/

char String::charAt(unsigned int loc) const
{
	return operator[](loc);
    3e64:	0c 94 21 1f 	jmp	0x3e42	; 0x3e42 <_ZNK6StringixEj>

00003e68 <_ZN7AMS5812C1ER7TwoWirehNS_10TransducerE>:
}

/* returns the temperature value, C */
float AMS5812::getTemperature_C(){
  return _data.Temp_C;
}
    3e68:	4f 92       	push	r4
    3e6a:	5f 92       	push	r5
    3e6c:	6f 92       	push	r6
    3e6e:	7f 92       	push	r7
    3e70:	8f 92       	push	r8
    3e72:	9f 92       	push	r9
    3e74:	af 92       	push	r10
    3e76:	bf 92       	push	r11
    3e78:	cf 92       	push	r12
    3e7a:	df 92       	push	r13
    3e7c:	ef 92       	push	r14
    3e7e:	ff 92       	push	r15
    3e80:	0f 93       	push	r16
    3e82:	1f 93       	push	r17
    3e84:	cf 93       	push	r28
    3e86:	df 93       	push	r29
    3e88:	fc 01       	movw	r30, r24
    3e8a:	5b 01       	movw	r10, r22
    3e8c:	94 2e       	mov	r9, r20
    3e8e:	82 2e       	mov	r8, r18
    3e90:	8a e0       	ldi	r24, 0x0A	; 10
    3e92:	90 e0       	ldi	r25, 0x00	; 0
    3e94:	93 8b       	std	Z+19, r25	; 0x13
    3e96:	82 8b       	std	Z+18, r24	; 0x12
    3e98:	80 e8       	ldi	r24, 0x80	; 128
    3e9a:	9a e1       	ldi	r25, 0x1A	; 26
    3e9c:	a6 e0       	ldi	r26, 0x06	; 6
    3e9e:	b0 e0       	ldi	r27, 0x00	; 0
    3ea0:	82 a3       	std	Z+34, r24	; 0x22
    3ea2:	93 a3       	std	Z+35, r25	; 0x23
    3ea4:	a4 a3       	std	Z+36, r26	; 0x24
    3ea6:	b5 a3       	std	Z+37, r27	; 0x25
    3ea8:	80 e1       	ldi	r24, 0x10	; 16
    3eaa:	96 e7       	ldi	r25, 0x76	; 118
    3eac:	a7 ed       	ldi	r26, 0xD7	; 215
    3eae:	b5 e4       	ldi	r27, 0x45	; 69
    3eb0:	86 a3       	std	Z+38, r24	; 0x26
    3eb2:	97 a3       	std	Z+39, r25	; 0x27
    3eb4:	a0 a7       	std	Z+40, r26	; 0x28
    3eb6:	b1 a7       	std	Z+41, r27	; 0x29
    3eb8:	2d ec       	ldi	r18, 0xCD	; 205
    3eba:	3c e0       	ldi	r19, 0x0C	; 12
    3ebc:	33 a7       	std	Z+43, r19	; 0x2b
    3ebe:	22 a7       	std	Z+42, r18	; 0x2a
    3ec0:	83 e3       	ldi	r24, 0x33	; 51
    3ec2:	93 e7       	ldi	r25, 0x73	; 115
    3ec4:	95 a7       	std	Z+45, r25	; 0x2d
    3ec6:	84 a7       	std	Z+44, r24	; 0x2c
    3ec8:	37 a7       	std	Z+47, r19	; 0x2f
    3eca:	26 a7       	std	Z+46, r18	; 0x2e
    3ecc:	91 ab       	std	Z+49, r25	; 0x31
    3ece:	80 ab       	std	Z+48, r24	; 0x30
    3ed0:	80 e0       	ldi	r24, 0x00	; 0
    3ed2:	90 e0       	ldi	r25, 0x00	; 0
    3ed4:	a8 ec       	ldi	r26, 0xC8	; 200
    3ed6:	b1 ec       	ldi	r27, 0xC1	; 193
    3ed8:	82 ab       	std	Z+50, r24	; 0x32
    3eda:	93 ab       	std	Z+51, r25	; 0x33
    3edc:	a4 ab       	std	Z+52, r26	; 0x34
    3ede:	b5 ab       	std	Z+53, r27	; 0x35
    3ee0:	80 e0       	ldi	r24, 0x00	; 0
    3ee2:	90 e0       	ldi	r25, 0x00	; 0
    3ee4:	aa ea       	ldi	r26, 0xAA	; 170
    3ee6:	b2 e4       	ldi	r27, 0x42	; 66
    3ee8:	86 ab       	std	Z+54, r24	; 0x36
    3eea:	97 ab       	std	Z+55, r25	; 0x37
    3eec:	a0 af       	std	Z+56, r26	; 0x38
    3eee:	b1 af       	std	Z+57, r27	; 0x39
    3ef0:	12 ae       	std	Z+58, r1	; 0x3a
    3ef2:	13 ae       	std	Z+59, r1	; 0x3b
    3ef4:	14 ae       	std	Z+60, r1	; 0x3c
    3ef6:	15 ae       	std	Z+61, r1	; 0x3d
    3ef8:	df 01       	movw	r26, r30
    3efa:	de 96       	adiw	r26, 0x3e	; 62
    3efc:	4a e9       	ldi	r20, 0x9A	; 154
    3efe:	59 e9       	ldi	r21, 0x99	; 153
    3f00:	69 e9       	ldi	r22, 0x99	; 153
    3f02:	7d e3       	ldi	r23, 0x3D	; 61
    3f04:	4d 93       	st	X+, r20
    3f06:	5d 93       	st	X+, r21
    3f08:	6d 93       	st	X+, r22
    3f0a:	7c 93       	st	X, r23
    3f0c:	13 97       	sbiw	r26, 0x03	; 3
    3f0e:	14 96       	adiw	r26, 0x04	; 4
    3f10:	1d 92       	st	X+, r1
    3f12:	1d 92       	st	X+, r1
    3f14:	1d 92       	st	X+, r1
    3f16:	1c 92       	st	X, r1
    3f18:	13 97       	sbiw	r26, 0x03	; 3
    3f1a:	ef 01       	movw	r28, r30
    3f1c:	ca 5b       	subi	r28, 0xBA	; 186
    3f1e:	df 4f       	sbci	r29, 0xFF	; 255
    3f20:	8a e9       	ldi	r24, 0x9A	; 154
    3f22:	99 e9       	ldi	r25, 0x99	; 153
    3f24:	a9 e1       	ldi	r26, 0x19	; 25
    3f26:	be e3       	ldi	r27, 0x3E	; 62
    3f28:	88 83       	st	Y, r24
    3f2a:	99 83       	std	Y+1, r25	; 0x01
    3f2c:	aa 83       	std	Y+2, r26	; 0x02
    3f2e:	bb 83       	std	Y+3, r27	; 0x03
    3f30:	24 96       	adiw	r28, 0x04	; 4
    3f32:	0a e9       	ldi	r16, 0x9A	; 154
    3f34:	19 e9       	ldi	r17, 0x99	; 153
    3f36:	29 e9       	ldi	r18, 0x99	; 153
    3f38:	3d eb       	ldi	r19, 0xBD	; 189
    3f3a:	08 83       	st	Y, r16
    3f3c:	19 83       	std	Y+1, r17	; 0x01
    3f3e:	2a 83       	std	Y+2, r18	; 0x02
    3f40:	3b 83       	std	Y+3, r19	; 0x03
    3f42:	24 96       	adiw	r28, 0x04	; 4
    3f44:	48 83       	st	Y, r20
    3f46:	59 83       	std	Y+1, r21	; 0x01
    3f48:	6a 83       	std	Y+2, r22	; 0x02
    3f4a:	7b 83       	std	Y+3, r23	; 0x03
    3f4c:	24 96       	adiw	r28, 0x04	; 4
    3f4e:	4a e9       	ldi	r20, 0x9A	; 154
    3f50:	59 e9       	ldi	r21, 0x99	; 153
    3f52:	69 e1       	ldi	r22, 0x19	; 25
    3f54:	7e eb       	ldi	r23, 0xBE	; 190
    3f56:	48 83       	st	Y, r20
    3f58:	59 83       	std	Y+1, r21	; 0x01
    3f5a:	6a 83       	std	Y+2, r22	; 0x02
    3f5c:	7b 83       	std	Y+3, r23	; 0x03
    3f5e:	24 96       	adiw	r28, 0x04	; 4
    3f60:	88 83       	st	Y, r24
    3f62:	99 83       	std	Y+1, r25	; 0x01
    3f64:	aa 83       	std	Y+2, r26	; 0x02
    3f66:	bb 83       	std	Y+3, r27	; 0x03
    3f68:	df 01       	movw	r26, r30
    3f6a:	a6 5a       	subi	r26, 0xA6	; 166
    3f6c:	bf 4f       	sbci	r27, 0xFF	; 255
    3f6e:	1d 92       	st	X+, r1
    3f70:	1d 92       	st	X+, r1
    3f72:	1d 92       	st	X+, r1
    3f74:	1c 92       	st	X, r1
    3f76:	13 97       	sbiw	r26, 0x03	; 3
    3f78:	14 96       	adiw	r26, 0x04	; 4
    3f7a:	0a e9       	ldi	r16, 0x9A	; 154
    3f7c:	19 e9       	ldi	r17, 0x99	; 153
    3f7e:	29 e9       	ldi	r18, 0x99	; 153
    3f80:	3e e3       	ldi	r19, 0x3E	; 62
    3f82:	0d 93       	st	X+, r16
    3f84:	1d 93       	st	X+, r17
    3f86:	2d 93       	st	X+, r18
    3f88:	3c 93       	st	X, r19
    3f8a:	13 97       	sbiw	r26, 0x03	; 3
    3f8c:	14 96       	adiw	r26, 0x04	; 4
    3f8e:	1d 92       	st	X+, r1
    3f90:	1d 92       	st	X+, r1
    3f92:	1d 92       	st	X+, r1
    3f94:	1c 92       	st	X, r1
    3f96:	13 97       	sbiw	r26, 0x03	; 3
    3f98:	14 96       	adiw	r26, 0x04	; 4
    3f9a:	4d ec       	ldi	r20, 0xCD	; 205
    3f9c:	5c ec       	ldi	r21, 0xCC	; 204
    3f9e:	6c e4       	ldi	r22, 0x4C	; 76
    3fa0:	7f e3       	ldi	r23, 0x3F	; 63
    3fa2:	4d 93       	st	X+, r20
    3fa4:	5d 93       	st	X+, r21
    3fa6:	6d 93       	st	X+, r22
    3fa8:	7c 93       	st	X, r23
    3faa:	13 97       	sbiw	r26, 0x03	; 3
    3fac:	14 96       	adiw	r26, 0x04	; 4
    3fae:	1d 92       	st	X+, r1
    3fb0:	1d 92       	st	X+, r1
    3fb2:	1d 92       	st	X+, r1
    3fb4:	1c 92       	st	X, r1
    3fb6:	13 97       	sbiw	r26, 0x03	; 3
    3fb8:	68 96       	adiw	r28, 0x18	; 24
    3fba:	80 e0       	ldi	r24, 0x00	; 0
    3fbc:	90 e0       	ldi	r25, 0x00	; 0
    3fbe:	a0 ec       	ldi	r26, 0xC0	; 192
    3fc0:	bf e3       	ldi	r27, 0x3F	; 63
    3fc2:	88 83       	st	Y, r24
    3fc4:	99 83       	std	Y+1, r25	; 0x01
    3fc6:	aa 83       	std	Y+2, r26	; 0x02
    3fc8:	bb 83       	std	Y+3, r27	; 0x03
    3fca:	24 96       	adiw	r28, 0x04	; 4
    3fcc:	0f 2e       	mov	r0, r31
    3fce:	fa e9       	ldi	r31, 0x9A	; 154
    3fd0:	cf 2e       	mov	r12, r31
    3fd2:	f9 e9       	ldi	r31, 0x99	; 153
    3fd4:	df 2e       	mov	r13, r31
    3fd6:	ed 2c       	mov	r14, r13
    3fd8:	fe eb       	ldi	r31, 0xBE	; 190
    3fda:	ff 2e       	mov	r15, r31
    3fdc:	f0 2d       	mov	r31, r0
    3fde:	c8 82       	st	Y, r12
    3fe0:	d9 82       	std	Y+1, r13	; 0x01
    3fe2:	ea 82       	std	Y+2, r14	; 0x02
    3fe4:	fb 82       	std	Y+3, r15	; 0x03
    3fe6:	24 96       	adiw	r28, 0x04	; 4
    3fe8:	08 83       	st	Y, r16
    3fea:	19 83       	std	Y+1, r17	; 0x01
    3fec:	2a 83       	std	Y+2, r18	; 0x02
    3fee:	3b 83       	std	Y+3, r19	; 0x03
    3ff0:	24 96       	adiw	r28, 0x04	; 4
    3ff2:	0d ec       	ldi	r16, 0xCD	; 205
    3ff4:	1c ec       	ldi	r17, 0xCC	; 204
    3ff6:	2c e4       	ldi	r18, 0x4C	; 76
    3ff8:	3f eb       	ldi	r19, 0xBF	; 191
    3ffa:	08 83       	st	Y, r16
    3ffc:	19 83       	std	Y+1, r17	; 0x01
    3ffe:	2a 83       	std	Y+2, r18	; 0x02
    4000:	3b 83       	std	Y+3, r19	; 0x03
    4002:	24 96       	adiw	r28, 0x04	; 4
    4004:	48 83       	st	Y, r20
    4006:	59 83       	std	Y+1, r21	; 0x01
    4008:	6a 83       	std	Y+2, r22	; 0x02
    400a:	7b 83       	std	Y+3, r23	; 0x03
    400c:	24 96       	adiw	r28, 0x04	; 4
    400e:	40 e0       	ldi	r20, 0x00	; 0
    4010:	50 e0       	ldi	r21, 0x00	; 0
    4012:	60 ec       	ldi	r22, 0xC0	; 192
    4014:	7f eb       	ldi	r23, 0xBF	; 191
    4016:	48 83       	st	Y, r20
    4018:	59 83       	std	Y+1, r21	; 0x01
    401a:	6a 83       	std	Y+2, r22	; 0x02
    401c:	7b 83       	std	Y+3, r23	; 0x03
    401e:	24 96       	adiw	r28, 0x04	; 4
    4020:	88 83       	st	Y, r24
    4022:	99 83       	std	Y+1, r25	; 0x01
    4024:	aa 83       	std	Y+2, r26	; 0x02
    4026:	bb 83       	std	Y+3, r27	; 0x03
    4028:	df 01       	movw	r26, r30
    402a:	a6 57       	subi	r26, 0x76	; 118
    402c:	bf 4f       	sbci	r27, 0xFF	; 255
    402e:	1d 92       	st	X+, r1
    4030:	1d 92       	st	X+, r1
    4032:	1d 92       	st	X+, r1
    4034:	1c 92       	st	X, r1
    4036:	13 97       	sbiw	r26, 0x03	; 3
    4038:	14 96       	adiw	r26, 0x04	; 4
    403a:	00 e0       	ldi	r16, 0x00	; 0
    403c:	10 e0       	ldi	r17, 0x00	; 0
    403e:	20 e4       	ldi	r18, 0x40	; 64
    4040:	30 e4       	ldi	r19, 0x40	; 64
    4042:	0d 93       	st	X+, r16
    4044:	1d 93       	st	X+, r17
    4046:	2d 93       	st	X+, r18
    4048:	3c 93       	st	X, r19
    404a:	13 97       	sbiw	r26, 0x03	; 3
    404c:	14 96       	adiw	r26, 0x04	; 4
    404e:	1d 92       	st	X+, r1
    4050:	1d 92       	st	X+, r1
    4052:	1d 92       	st	X+, r1
    4054:	1c 92       	st	X, r1
    4056:	13 97       	sbiw	r26, 0x03	; 3
    4058:	14 96       	adiw	r26, 0x04	; 4
    405a:	40 e0       	ldi	r20, 0x00	; 0
    405c:	50 e0       	ldi	r21, 0x00	; 0
    405e:	60 ea       	ldi	r22, 0xA0	; 160
    4060:	70 e4       	ldi	r23, 0x40	; 64
    4062:	4d 93       	st	X+, r20
    4064:	5d 93       	st	X+, r21
    4066:	6d 93       	st	X+, r22
    4068:	7c 93       	st	X, r23
    406a:	13 97       	sbiw	r26, 0x03	; 3
    406c:	14 96       	adiw	r26, 0x04	; 4
    406e:	1d 92       	st	X+, r1
    4070:	1d 92       	st	X+, r1
    4072:	1d 92       	st	X+, r1
    4074:	1c 92       	st	X, r1
    4076:	13 97       	sbiw	r26, 0x03	; 3
    4078:	68 96       	adiw	r28, 0x18	; 24
    407a:	80 e0       	ldi	r24, 0x00	; 0
    407c:	90 e0       	ldi	r25, 0x00	; 0
    407e:	a0 e7       	ldi	r26, 0x70	; 112
    4080:	b1 e4       	ldi	r27, 0x41	; 65
    4082:	88 83       	st	Y, r24
    4084:	99 83       	std	Y+1, r25	; 0x01
    4086:	aa 83       	std	Y+2, r26	; 0x02
    4088:	bb 83       	std	Y+3, r27	; 0x03
    408a:	24 96       	adiw	r28, 0x04	; 4
    408c:	18 82       	st	Y, r1
    408e:	19 82       	std	Y+1, r1	; 0x01
    4090:	1a 82       	std	Y+2, r1	; 0x02
    4092:	1b 82       	std	Y+3, r1	; 0x03
    4094:	24 96       	adiw	r28, 0x04	; 4
    4096:	0f 2e       	mov	r0, r31
    4098:	c1 2c       	mov	r12, r1
    409a:	d1 2c       	mov	r13, r1
    409c:	f0 ef       	ldi	r31, 0xF0	; 240
    409e:	ef 2e       	mov	r14, r31
    40a0:	f1 e4       	ldi	r31, 0x41	; 65
    40a2:	ff 2e       	mov	r15, r31
    40a4:	f0 2d       	mov	r31, r0
    40a6:	c8 82       	st	Y, r12
    40a8:	d9 82       	std	Y+1, r13	; 0x01
    40aa:	ea 82       	std	Y+2, r14	; 0x02
    40ac:	fb 82       	std	Y+3, r15	; 0x03
    40ae:	24 96       	adiw	r28, 0x04	; 4
    40b0:	18 82       	st	Y, r1
    40b2:	19 82       	std	Y+1, r1	; 0x01
    40b4:	1a 82       	std	Y+2, r1	; 0x02
    40b6:	1b 82       	std	Y+3, r1	; 0x03
    40b8:	24 96       	adiw	r28, 0x04	; 4
    40ba:	0f 2e       	mov	r0, r31
    40bc:	41 2c       	mov	r4, r1
    40be:	51 2c       	mov	r5, r1
    40c0:	f0 e7       	ldi	r31, 0x70	; 112
    40c2:	6f 2e       	mov	r6, r31
    40c4:	f2 e4       	ldi	r31, 0x42	; 66
    40c6:	7f 2e       	mov	r7, r31
    40c8:	f0 2d       	mov	r31, r0
    40ca:	48 82       	st	Y, r4
    40cc:	59 82       	std	Y+1, r5	; 0x01
    40ce:	6a 82       	std	Y+2, r6	; 0x02
    40d0:	7b 82       	std	Y+3, r7	; 0x03
    40d2:	24 96       	adiw	r28, 0x04	; 4
    40d4:	18 82       	st	Y, r1
    40d6:	19 82       	std	Y+1, r1	; 0x01
    40d8:	1a 82       	std	Y+2, r1	; 0x02
    40da:	1b 82       	std	Y+3, r1	; 0x03
    40dc:	24 96       	adiw	r28, 0x04	; 4
    40de:	0f 2e       	mov	r0, r31
    40e0:	41 2c       	mov	r4, r1
    40e2:	51 2c       	mov	r5, r1
    40e4:	f8 ec       	ldi	r31, 0xC8	; 200
    40e6:	6f 2e       	mov	r6, r31
    40e8:	f2 e4       	ldi	r31, 0x42	; 66
    40ea:	7f 2e       	mov	r7, r31
    40ec:	f0 2d       	mov	r31, r0
    40ee:	48 82       	st	Y, r4
    40f0:	59 82       	std	Y+1, r5	; 0x01
    40f2:	6a 82       	std	Y+2, r6	; 0x02
    40f4:	7b 82       	std	Y+3, r7	; 0x03
    40f6:	24 96       	adiw	r28, 0x04	; 4
    40f8:	0f 2e       	mov	r0, r31
    40fa:	41 2c       	mov	r4, r1
    40fc:	51 2c       	mov	r5, r1
    40fe:	f0 e4       	ldi	r31, 0x40	; 64
    4100:	6f 2e       	mov	r6, r31
    4102:	f0 ec       	ldi	r31, 0xC0	; 192
    4104:	7f 2e       	mov	r7, r31
    4106:	f0 2d       	mov	r31, r0
    4108:	48 82       	st	Y, r4
    410a:	59 82       	std	Y+1, r5	; 0x01
    410c:	6a 82       	std	Y+2, r6	; 0x02
    410e:	7b 82       	std	Y+3, r7	; 0x03
    4110:	24 96       	adiw	r28, 0x04	; 4
    4112:	08 83       	st	Y, r16
    4114:	19 83       	std	Y+1, r17	; 0x01
    4116:	2a 83       	std	Y+2, r18	; 0x02
    4118:	3b 83       	std	Y+3, r19	; 0x03
    411a:	24 96       	adiw	r28, 0x04	; 4
    411c:	00 e0       	ldi	r16, 0x00	; 0
    411e:	10 e0       	ldi	r17, 0x00	; 0
    4120:	20 ea       	ldi	r18, 0xA0	; 160
    4122:	30 ec       	ldi	r19, 0xC0	; 192
    4124:	08 83       	st	Y, r16
    4126:	19 83       	std	Y+1, r17	; 0x01
    4128:	2a 83       	std	Y+2, r18	; 0x02
    412a:	3b 83       	std	Y+3, r19	; 0x03
    412c:	24 96       	adiw	r28, 0x04	; 4
    412e:	48 83       	st	Y, r20
    4130:	59 83       	std	Y+1, r21	; 0x01
    4132:	6a 83       	std	Y+2, r22	; 0x02
    4134:	7b 83       	std	Y+3, r23	; 0x03
    4136:	24 96       	adiw	r28, 0x04	; 4
    4138:	40 e0       	ldi	r20, 0x00	; 0
    413a:	50 e0       	ldi	r21, 0x00	; 0
    413c:	60 e7       	ldi	r22, 0x70	; 112
    413e:	71 ec       	ldi	r23, 0xC1	; 193
    4140:	48 83       	st	Y, r20
    4142:	59 83       	std	Y+1, r21	; 0x01
    4144:	6a 83       	std	Y+2, r22	; 0x02
    4146:	7b 83       	std	Y+3, r23	; 0x03
    4148:	24 96       	adiw	r28, 0x04	; 4
    414a:	88 83       	st	Y, r24
    414c:	99 83       	std	Y+1, r25	; 0x01
    414e:	aa 83       	std	Y+2, r26	; 0x02
    4150:	bb 83       	std	Y+3, r27	; 0x03
    4152:	24 96       	adiw	r28, 0x04	; 4
    4154:	40 e0       	ldi	r20, 0x00	; 0
    4156:	50 e0       	ldi	r21, 0x00	; 0
    4158:	60 e3       	ldi	r22, 0x30	; 48
    415a:	71 e4       	ldi	r23, 0x41	; 65
    415c:	48 83       	st	Y, r20
    415e:	59 83       	std	Y+1, r21	; 0x01
    4160:	6a 83       	std	Y+2, r22	; 0x02
    4162:	7b 83       	std	Y+3, r23	; 0x03
    4164:	24 96       	adiw	r28, 0x04	; 4
    4166:	40 e0       	ldi	r20, 0x00	; 0
    4168:	50 e0       	ldi	r21, 0x00	; 0
    416a:	6c e8       	ldi	r22, 0x8C	; 140
    416c:	71 e4       	ldi	r23, 0x41	; 65
    416e:	48 83       	st	Y, r20
    4170:	59 83       	std	Y+1, r21	; 0x01
    4172:	6a 83       	std	Y+2, r22	; 0x02
    4174:	7b 83       	std	Y+3, r23	; 0x03
    4176:	24 96       	adiw	r28, 0x04	; 4
    4178:	18 82       	st	Y, r1
    417a:	19 82       	std	Y+1, r1	; 0x01
    417c:	1a 82       	std	Y+2, r1	; 0x02
    417e:	1b 82       	std	Y+3, r1	; 0x03
    4180:	24 96       	adiw	r28, 0x04	; 4
    4182:	88 83       	st	Y, r24
    4184:	99 83       	std	Y+1, r25	; 0x01
    4186:	aa 83       	std	Y+2, r26	; 0x02
    4188:	bb 83       	std	Y+3, r27	; 0x03
    418a:	df 01       	movw	r26, r30
    418c:	ae 51       	subi	r26, 0x1E	; 30
    418e:	bf 4f       	sbci	r27, 0xFF	; 255
    4190:	1d 92       	st	X+, r1
    4192:	1d 92       	st	X+, r1
    4194:	1d 92       	st	X+, r1
    4196:	1c 92       	st	X, r1
    4198:	13 97       	sbiw	r26, 0x03	; 3
    419a:	14 96       	adiw	r26, 0x04	; 4
    419c:	cd 92       	st	X+, r12
    419e:	dd 92       	st	X+, r13
    41a0:	ed 92       	st	X+, r14
    41a2:	fc 92       	st	X, r15
    41a4:	13 97       	sbiw	r26, 0x03	; 3
    41a6:	b1 86       	std	Z+9, r11	; 0x09
    41a8:	a0 86       	std	Z+8, r10	; 0x08
    41aa:	92 86       	std	Z+10, r9	; 0x0a
    41ac:	83 86       	std	Z+11, r8	; 0x0b
    41ae:	df 91       	pop	r29
    41b0:	cf 91       	pop	r28
    41b2:	1f 91       	pop	r17
    41b4:	0f 91       	pop	r16
    41b6:	ff 90       	pop	r15
    41b8:	ef 90       	pop	r14
    41ba:	df 90       	pop	r13
    41bc:	cf 90       	pop	r12
    41be:	bf 90       	pop	r11
    41c0:	af 90       	pop	r10
    41c2:	9f 90       	pop	r9
    41c4:	8f 90       	pop	r8
    41c6:	7f 90       	pop	r7
    41c8:	6f 90       	pop	r6
    41ca:	5f 90       	pop	r5
    41cc:	4f 90       	pop	r4
    41ce:	08 95       	ret

000041d0 <_ZN7AMS581214getPressure_PaEv>:
    41d0:	fc 01       	movw	r30, r24
    41d2:	60 81       	ld	r22, Z
    41d4:	71 81       	ldd	r23, Z+1	; 0x01
    41d6:	82 81       	ldd	r24, Z+2	; 0x02
    41d8:	93 81       	ldd	r25, Z+3	; 0x03
    41da:	08 95       	ret

000041dc <_ZN7AMS581213getTransducerEv>:

/* sets the pressure and temperature range based on the chip */
void AMS5812::getTransducer(){
    41dc:	dc 01       	movw	r26, r24
  // setting the min and max pressures based on which transducer it is
  switch(_type) {
    41de:	1b 96       	adiw	r26, 0x0b	; 11
    41e0:	ec 91       	ld	r30, X
    41e2:	1b 97       	sbiw	r26, 0x0b	; 11
    41e4:	4e 2f       	mov	r20, r30
    41e6:	50 e0       	ldi	r21, 0x00	; 0
    41e8:	46 31       	cpi	r20, 0x16	; 22
    41ea:	51 05       	cpc	r21, r1
    41ec:	08 f0       	brcs	.+2      	; 0x41f0 <_ZN7AMS581213getTransducerEv+0x14>
    41ee:	7c c0       	rjmp	.+248    	; 0x42e8 <_ZN7AMS581213getTransducerEv+0x10c>
    41f0:	fa 01       	movw	r30, r20
    41f2:	ec 5c       	subi	r30, 0xCC	; 204
    41f4:	ff 4f       	sbci	r31, 0xFF	; 255
    41f6:	0c 94 f5 33 	jmp	0x67ea	; 0x67ea <__tablejump2__>
    case AMS5812_0000_D:
      _pMin = AMS5812_0000_D_P_MIN;
    41fa:	da 96       	adiw	r26, 0x3a	; 58
    41fc:	4d 91       	ld	r20, X+
    41fe:	5d 91       	ld	r21, X+
    4200:	6d 91       	ld	r22, X+
    4202:	7c 91       	ld	r23, X
    4204:	dd 97       	sbiw	r26, 0x3d	; 61
    4206:	5a 96       	adiw	r26, 0x1a	; 26
    4208:	4d 93       	st	X+, r20
    420a:	5d 93       	st	X+, r21
    420c:	6d 93       	st	X+, r22
    420e:	7c 93       	st	X, r23
    4210:	5d 97       	sbiw	r26, 0x1d	; 29
      _pMax = AMS5812_0000_D_P_MAX;
    4212:	fc 01       	movw	r30, r24
    4214:	fe 96       	adiw	r30, 0x3e	; 62
    4216:	5e c0       	rjmp	.+188    	; 0x42d4 <_ZN7AMS581213getTransducerEv+0xf8>
      break;
    case AMS5812_0001_D:  
      _pMin = AMS5812_0001_D_P_MIN;
    4218:	fc 01       	movw	r30, r24
    421a:	ee 5b       	subi	r30, 0xBE	; 190
    421c:	ff 4f       	sbci	r31, 0xFF	; 255
    421e:	4f c0       	rjmp	.+158    	; 0x42be <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0001_D_P_MAX;
      break;
    case AMS5812_0000_D_B:
      _pMin = AMS5812_0000_D_B_P_MIN;
    4220:	fc 01       	movw	r30, r24
    4222:	e6 5b       	subi	r30, 0xB6	; 182
    4224:	ff 4f       	sbci	r31, 0xFF	; 255
    4226:	4b c0       	rjmp	.+150    	; 0x42be <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0000_D_B_P_MAX;
      break;
    case AMS5812_0001_D_B:
      _pMin = AMS5812_0001_D_B_P_MIN;
    4228:	fc 01       	movw	r30, r24
    422a:	ee 5a       	subi	r30, 0xAE	; 174
    422c:	ff 4f       	sbci	r31, 0xFF	; 255
    422e:	47 c0       	rjmp	.+142    	; 0x42be <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0001_D_B_P_MAX;
      break;
    case AMS5812_0003_D:
      _pMin = AMS5812_0003_D_P_MIN;
    4230:	fc 01       	movw	r30, r24
    4232:	e6 5a       	subi	r30, 0xA6	; 166
    4234:	ff 4f       	sbci	r31, 0xFF	; 255
    4236:	43 c0       	rjmp	.+134    	; 0x42be <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0003_D_P_MAX;
      break;
    case AMS5812_0008_D:
      _pMin = AMS5812_0008_D_P_MIN;
    4238:	fc 01       	movw	r30, r24
    423a:	ee 59       	subi	r30, 0x9E	; 158
    423c:	ff 4f       	sbci	r31, 0xFF	; 255
    423e:	3f c0       	rjmp	.+126    	; 0x42be <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0008_D_P_MAX;
      break;
    case AMS5812_0015_D:
      _pMin = AMS5812_0015_D_P_MIN;
    4240:	fc 01       	movw	r30, r24
    4242:	e6 59       	subi	r30, 0x96	; 150
    4244:	ff 4f       	sbci	r31, 0xFF	; 255
    4246:	3b c0       	rjmp	.+118    	; 0x42be <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0015_D_P_MAX;
      break;
    case AMS5812_0003_D_B:
      _pMin = AMS5812_0003_D_B_P_MIN;
    4248:	fc 01       	movw	r30, r24
    424a:	ee 58       	subi	r30, 0x8E	; 142
    424c:	ff 4f       	sbci	r31, 0xFF	; 255
    424e:	37 c0       	rjmp	.+110    	; 0x42be <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0003_D_B_P_MAX;
      break;
    case AMS5812_0008_D_B:
      _pMin = AMS5812_0008_D_B_P_MIN;
    4250:	fc 01       	movw	r30, r24
    4252:	e6 58       	subi	r30, 0x86	; 134
    4254:	ff 4f       	sbci	r31, 0xFF	; 255
    4256:	33 c0       	rjmp	.+102    	; 0x42be <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0008_D_B_P_MAX;
      break;
    case AMS5812_0015_D_B:
      _pMin = AMS5812_0015_D_B_P_MIN;
    4258:	fc 01       	movw	r30, r24
    425a:	ee 57       	subi	r30, 0x7E	; 126
    425c:	ff 4f       	sbci	r31, 0xFF	; 255
    425e:	2f c0       	rjmp	.+94     	; 0x42be <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0015_D_B_P_MAX;
      break;
    case AMS5812_0030_D:
      _pMin = AMS5812_0030_D_P_MIN;
    4260:	fc 01       	movw	r30, r24
    4262:	e6 57       	subi	r30, 0x76	; 118
    4264:	ff 4f       	sbci	r31, 0xFF	; 255
    4266:	2b c0       	rjmp	.+86     	; 0x42be <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0030_D_P_MAX;
      break;
    case AMS5812_0050_D:
      _pMin = AMS5812_0050_D_P_MIN;
    4268:	fc 01       	movw	r30, r24
    426a:	ee 56       	subi	r30, 0x6E	; 110
    426c:	ff 4f       	sbci	r31, 0xFF	; 255
    426e:	27 c0       	rjmp	.+78     	; 0x42be <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0050_D_P_MAX;
      break;
    case AMS5812_0150_D:
      _pMin = AMS5812_0150_D_P_MIN;
    4270:	fc 01       	movw	r30, r24
    4272:	e6 56       	subi	r30, 0x66	; 102
    4274:	ff 4f       	sbci	r31, 0xFF	; 255
    4276:	23 c0       	rjmp	.+70     	; 0x42be <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0150_D_P_MAX;
      break;
    case AMS5812_0300_D:
      _pMin = AMS5812_0300_D_P_MIN;
    4278:	fc 01       	movw	r30, r24
    427a:	ee 55       	subi	r30, 0x5E	; 94
    427c:	ff 4f       	sbci	r31, 0xFF	; 255
    427e:	1f c0       	rjmp	.+62     	; 0x42be <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0300_D_P_MAX;
      break;
    case AMS5812_0600_D:
      _pMin = AMS5812_0600_D_P_MIN;
    4280:	fc 01       	movw	r30, r24
    4282:	e6 55       	subi	r30, 0x56	; 86
    4284:	ff 4f       	sbci	r31, 0xFF	; 255
    4286:	1b c0       	rjmp	.+54     	; 0x42be <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0600_D_P_MAX;
      break;
    case AMS5812_1000_D:
      _pMin = AMS5812_1000_D_P_MIN;
    4288:	fc 01       	movw	r30, r24
    428a:	ee 54       	subi	r30, 0x4E	; 78
    428c:	ff 4f       	sbci	r31, 0xFF	; 255
    428e:	17 c0       	rjmp	.+46     	; 0x42be <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_1000_D_P_MAX;
      break;
    case AMS5812_0030_D_B:
      _pMin = AMS5812_0030_D_B_P_MIN;
    4290:	fc 01       	movw	r30, r24
    4292:	e6 54       	subi	r30, 0x46	; 70
    4294:	ff 4f       	sbci	r31, 0xFF	; 255
    4296:	13 c0       	rjmp	.+38     	; 0x42be <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0030_D_B_P_MAX;
      break;
    case AMS5812_0050_D_B:
      _pMin = AMS5812_0050_D_B_P_MIN;
    4298:	fc 01       	movw	r30, r24
    429a:	ee 53       	subi	r30, 0x3E	; 62
    429c:	ff 4f       	sbci	r31, 0xFF	; 255
    429e:	0f c0       	rjmp	.+30     	; 0x42be <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0050_D_B_P_MAX;
      break;
    case AMS5812_0150_D_B:
      _pMin = AMS5812_0150_D_B_P_MIN;
    42a0:	fc 01       	movw	r30, r24
    42a2:	e6 53       	subi	r30, 0x36	; 54
    42a4:	ff 4f       	sbci	r31, 0xFF	; 255
    42a6:	0b c0       	rjmp	.+22     	; 0x42be <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0150_D_B_P_MAX;
      break;
    case AMS5812_0150_B:
      _pMin = AMS5812_0150_B_P_MIN;
    42a8:	fc 01       	movw	r30, r24
    42aa:	ee 52       	subi	r30, 0x2E	; 46
    42ac:	ff 4f       	sbci	r31, 0xFF	; 255
    42ae:	07 c0       	rjmp	.+14     	; 0x42be <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0150_B_P_MAX;
      break;
    case AMS5812_0150_A:
      _pMin = AMS5812_0150_A_P_MIN;
    42b0:	fc 01       	movw	r30, r24
    42b2:	e6 52       	subi	r30, 0x26	; 38
    42b4:	ff 4f       	sbci	r31, 0xFF	; 255
    42b6:	03 c0       	rjmp	.+6      	; 0x42be <_ZN7AMS581213getTransducerEv+0xe2>
      _pMax = AMS5812_0150_A_P_MAX;
      break;
    case AMS5812_0300_A:
      _pMin = AMS5812_0300_A_P_MIN;
    42b8:	fc 01       	movw	r30, r24
    42ba:	ee 51       	subi	r30, 0x1E	; 30
    42bc:	ff 4f       	sbci	r31, 0xFF	; 255
    42be:	40 81       	ld	r20, Z
    42c0:	51 81       	ldd	r21, Z+1	; 0x01
    42c2:	62 81       	ldd	r22, Z+2	; 0x02
    42c4:	73 81       	ldd	r23, Z+3	; 0x03
    42c6:	5a 96       	adiw	r26, 0x1a	; 26
    42c8:	4d 93       	st	X+, r20
    42ca:	5d 93       	st	X+, r21
    42cc:	6d 93       	st	X+, r22
    42ce:	7c 93       	st	X, r23
    42d0:	5d 97       	sbiw	r26, 0x1d	; 29
      _pMax = AMS5812_0300_A_P_MAX;
    42d2:	34 96       	adiw	r30, 0x04	; 4
    42d4:	40 81       	ld	r20, Z
    42d6:	51 81       	ldd	r21, Z+1	; 0x01
    42d8:	62 81       	ldd	r22, Z+2	; 0x02
    42da:	73 81       	ldd	r23, Z+3	; 0x03
    42dc:	5e 96       	adiw	r26, 0x1e	; 30
    42de:	4d 93       	st	X+, r20
    42e0:	5d 93       	st	X+, r21
    42e2:	6d 93       	st	X+, r22
    42e4:	7c 93       	st	X, r23
    42e6:	91 97       	sbiw	r26, 0x21	; 33
    42e8:	08 95       	ret

000042ea <_ZN7AMS58129readBytesEPjS0_>:
      break;
  }
}

/* reads pressure and temperature and returns values in counts */
int AMS5812::readBytes(uint16_t* pressureCounts, uint16_t* temperatureCounts){
    42ea:	ef 92       	push	r14
    42ec:	ff 92       	push	r15
    42ee:	0f 93       	push	r16
    42f0:	1f 93       	push	r17
    42f2:	cf 93       	push	r28
    42f4:	df 93       	push	r29
    42f6:	ec 01       	movw	r28, r24
    42f8:	7b 01       	movw	r14, r22
    42fa:	8a 01       	movw	r16, r20
  // read from sensor
  _numBytes = _bus->requestFrom(_address,sizeof(_buffer));
    42fc:	44 e0       	ldi	r20, 0x04	; 4
    42fe:	6a 85       	ldd	r22, Y+10	; 0x0a
    4300:	88 85       	ldd	r24, Y+8	; 0x08
    4302:	99 85       	ldd	r25, Y+9	; 0x09
    4304:	0e 94 1d 2e 	call	0x5c3a	; 0x5c3a <_ZN7TwoWire11requestFromEhh>
    4308:	90 e0       	ldi	r25, 0x00	; 0
    430a:	99 8b       	std	Y+17, r25	; 0x11
    430c:	88 8b       	std	Y+16, r24	; 0x10
  // put the data in buffer
  if (_numBytes == sizeof(_buffer)) {
    430e:	04 97       	sbiw	r24, 0x04	; 4
    4310:	09 f0       	breq	.+2      	; 0x4314 <_ZN7AMS58129readBytesEPjS0_+0x2a>
    4312:	41 c0       	rjmp	.+130    	; 0x4396 <_ZN7AMS58129readBytesEPjS0_+0xac>
    _buffer[0] = _bus->read(); 
    4314:	88 85       	ldd	r24, Y+8	; 0x08
    4316:	99 85       	ldd	r25, Y+9	; 0x09
    4318:	dc 01       	movw	r26, r24
    431a:	ed 91       	ld	r30, X+
    431c:	fc 91       	ld	r31, X
    431e:	02 84       	ldd	r0, Z+10	; 0x0a
    4320:	f3 85       	ldd	r31, Z+11	; 0x0b
    4322:	e0 2d       	mov	r30, r0
    4324:	09 95       	icall
    4326:	8c 87       	std	Y+12, r24	; 0x0c
    _buffer[1] = _bus->read();
    4328:	88 85       	ldd	r24, Y+8	; 0x08
    432a:	99 85       	ldd	r25, Y+9	; 0x09
    432c:	dc 01       	movw	r26, r24
    432e:	ed 91       	ld	r30, X+
    4330:	fc 91       	ld	r31, X
    4332:	02 84       	ldd	r0, Z+10	; 0x0a
    4334:	f3 85       	ldd	r31, Z+11	; 0x0b
    4336:	e0 2d       	mov	r30, r0
    4338:	09 95       	icall
    433a:	8d 87       	std	Y+13, r24	; 0x0d
    _buffer[2] = _bus->read();
    433c:	88 85       	ldd	r24, Y+8	; 0x08
    433e:	99 85       	ldd	r25, Y+9	; 0x09
    4340:	dc 01       	movw	r26, r24
    4342:	ed 91       	ld	r30, X+
    4344:	fc 91       	ld	r31, X
    4346:	02 84       	ldd	r0, Z+10	; 0x0a
    4348:	f3 85       	ldd	r31, Z+11	; 0x0b
    434a:	e0 2d       	mov	r30, r0
    434c:	09 95       	icall
    434e:	8e 87       	std	Y+14, r24	; 0x0e
    _buffer[3] = _bus->read();
    4350:	88 85       	ldd	r24, Y+8	; 0x08
    4352:	99 85       	ldd	r25, Y+9	; 0x09
    4354:	dc 01       	movw	r26, r24
    4356:	ed 91       	ld	r30, X+
    4358:	fc 91       	ld	r31, X
    435a:	02 84       	ldd	r0, Z+10	; 0x0a
    435c:	f3 85       	ldd	r31, Z+11	; 0x0b
    435e:	e0 2d       	mov	r30, r0
    4360:	09 95       	icall
    4362:	8f 87       	std	Y+15, r24	; 0x0f
    // assemble into a uint16_t
    *pressureCounts = (((uint16_t) (_buffer[0]&0x7F)) <<8) + (((uint16_t) _buffer[1]));
    4364:	8c 85       	ldd	r24, Y+12	; 0x0c
    4366:	8f 77       	andi	r24, 0x7F	; 127
    4368:	90 e0       	ldi	r25, 0x00	; 0
    436a:	98 2f       	mov	r25, r24
    436c:	88 27       	eor	r24, r24
    436e:	2d 85       	ldd	r18, Y+13	; 0x0d
    4370:	82 0f       	add	r24, r18
    4372:	91 1d       	adc	r25, r1
    4374:	f7 01       	movw	r30, r14
    4376:	91 83       	std	Z+1, r25	; 0x01
    4378:	80 83       	st	Z, r24
    *temperatureCounts = (((uint16_t) (_buffer[2]&0x7F)) <<8) + (((uint16_t) _buffer[3]));
    437a:	8e 85       	ldd	r24, Y+14	; 0x0e
    437c:	8f 77       	andi	r24, 0x7F	; 127
    437e:	90 e0       	ldi	r25, 0x00	; 0
    4380:	98 2f       	mov	r25, r24
    4382:	88 27       	eor	r24, r24
    4384:	2f 85       	ldd	r18, Y+15	; 0x0f
    4386:	82 0f       	add	r24, r18
    4388:	91 1d       	adc	r25, r1
    438a:	d8 01       	movw	r26, r16
    438c:	8d 93       	st	X+, r24
    438e:	9c 93       	st	X, r25
    _status = 1;
    4390:	81 e0       	ldi	r24, 0x01	; 1
    4392:	90 e0       	ldi	r25, 0x00	; 0
    4394:	02 c0       	rjmp	.+4      	; 0x439a <_ZN7AMS58129readBytesEPjS0_+0xb0>
  } else {
    _status = -1;
    4396:	8f ef       	ldi	r24, 0xFF	; 255
    4398:	9f ef       	ldi	r25, 0xFF	; 255
    439a:	9d 8b       	std	Y+21, r25	; 0x15
    439c:	8c 8b       	std	Y+20, r24	; 0x14
  }
  return _status;
}
    439e:	8c 89       	ldd	r24, Y+20	; 0x14
    43a0:	9d 89       	ldd	r25, Y+21	; 0x15
    43a2:	df 91       	pop	r29
    43a4:	cf 91       	pop	r28
    43a6:	1f 91       	pop	r17
    43a8:	0f 91       	pop	r16
    43aa:	ff 90       	pop	r15
    43ac:	ef 90       	pop	r14
    43ae:	08 95       	ret

000043b0 <_ZN7AMS58125beginEv>:
  // transducer type
  _type = type; 
}

/* starts the I2C communication and sets the pressure and temperature ranges using getTransducer */
int AMS5812::begin(){
    43b0:	cf 92       	push	r12
    43b2:	df 92       	push	r13
    43b4:	ef 92       	push	r14
    43b6:	ff 92       	push	r15
    43b8:	0f 93       	push	r16
    43ba:	1f 93       	push	r17
    43bc:	cf 93       	push	r28
    43be:	df 93       	push	r29
    43c0:	ec 01       	movw	r28, r24
  // starting the I2C bus
  _bus->begin();
    43c2:	88 85       	ldd	r24, Y+8	; 0x08
    43c4:	99 85       	ldd	r25, Y+9	; 0x09
    43c6:	0e 94 86 2d 	call	0x5b0c	; 0x5b0c <_ZN7TwoWire5beginEv>
  // setting the I2C clock
  _bus->setClock(_i2cRate);
    43ca:	4a a1       	ldd	r20, Y+34	; 0x22
    43cc:	5b a1       	ldd	r21, Y+35	; 0x23
    43ce:	6c a1       	ldd	r22, Y+36	; 0x24
    43d0:	7d a1       	ldd	r23, Y+37	; 0x25
    43d2:	88 85       	ldd	r24, Y+8	; 0x08
    43d4:	99 85       	ldd	r25, Y+9	; 0x09
    43d6:	0e 94 98 2d 	call	0x5b30	; 0x5b30 <_ZN7TwoWire8setClockEm>
  // setting the min and max pressure based on the chip
  getTransducer();
    43da:	ce 01       	movw	r24, r28
    43dc:	0e 94 ee 20 	call	0x41dc	; 0x41dc <_ZN7AMS581213getTransducerEv>
  // checking to see if we can talk with the sensor
  for (size_t i=0; i < _maxAttempts; i++) {
    43e0:	00 e0       	ldi	r16, 0x00	; 0
    43e2:	10 e0       	ldi	r17, 0x00	; 0
    _status = readBytes(&_pressureCounts,&_temperatureCounts);
    43e4:	7e 01       	movw	r14, r28
    43e6:	88 e1       	ldi	r24, 0x18	; 24
    43e8:	e8 0e       	add	r14, r24
    43ea:	f1 1c       	adc	r15, r1
    43ec:	6e 01       	movw	r12, r28
    43ee:	86 e1       	ldi	r24, 0x16	; 22
    43f0:	c8 0e       	add	r12, r24
    43f2:	d1 1c       	adc	r13, r1
  // setting the I2C clock
  _bus->setClock(_i2cRate);
  // setting the min and max pressure based on the chip
  getTransducer();
  // checking to see if we can talk with the sensor
  for (size_t i=0; i < _maxAttempts; i++) {
    43f4:	8a 89       	ldd	r24, Y+18	; 0x12
    43f6:	9b 89       	ldd	r25, Y+19	; 0x13
    43f8:	08 17       	cp	r16, r24
    43fa:	19 07       	cpc	r17, r25
    43fc:	98 f4       	brcc	.+38     	; 0x4424 <_ZN7AMS58125beginEv+0x74>
    _status = readBytes(&_pressureCounts,&_temperatureCounts);
    43fe:	a7 01       	movw	r20, r14
    4400:	b6 01       	movw	r22, r12
    4402:	ce 01       	movw	r24, r28
    4404:	0e 94 75 21 	call	0x42ea	; 0x42ea <_ZN7AMS58129readBytesEPjS0_>
    4408:	9d 8b       	std	Y+21, r25	; 0x15
    440a:	8c 8b       	std	Y+20, r24	; 0x14
    if (_status > 0) {break;}
    440c:	18 16       	cp	r1, r24
    440e:	19 06       	cpc	r1, r25
    4410:	4c f0       	brlt	.+18     	; 0x4424 <_ZN7AMS58125beginEv+0x74>
    delay(10);
    4412:	6a e0       	ldi	r22, 0x0A	; 10
    4414:	70 e0       	ldi	r23, 0x00	; 0
    4416:	80 e0       	ldi	r24, 0x00	; 0
    4418:	90 e0       	ldi	r25, 0x00	; 0
    441a:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <delay>
  // setting the I2C clock
  _bus->setClock(_i2cRate);
  // setting the min and max pressure based on the chip
  getTransducer();
  // checking to see if we can talk with the sensor
  for (size_t i=0; i < _maxAttempts; i++) {
    441e:	0f 5f       	subi	r16, 0xFF	; 255
    4420:	1f 4f       	sbci	r17, 0xFF	; 255
    4422:	e8 cf       	rjmp	.-48     	; 0x43f4 <_ZN7AMS58125beginEv+0x44>
    _status = readBytes(&_pressureCounts,&_temperatureCounts);
    if (_status > 0) {break;}
    delay(10);
  }
  return _status;
}
    4424:	8c 89       	ldd	r24, Y+20	; 0x14
    4426:	9d 89       	ldd	r25, Y+21	; 0x15
    4428:	df 91       	pop	r29
    442a:	cf 91       	pop	r28
    442c:	1f 91       	pop	r17
    442e:	0f 91       	pop	r16
    4430:	ff 90       	pop	r15
    4432:	ef 90       	pop	r14
    4434:	df 90       	pop	r13
    4436:	cf 90       	pop	r12
    4438:	08 95       	ret

0000443a <_ZN7AMS581210readSensorEv>:

/* reads data from the sensor */
int AMS5812::readSensor(){
    443a:	4f 92       	push	r4
    443c:	5f 92       	push	r5
    443e:	6f 92       	push	r6
    4440:	7f 92       	push	r7
    4442:	8f 92       	push	r8
    4444:	9f 92       	push	r9
    4446:	af 92       	push	r10
    4448:	bf 92       	push	r11
    444a:	cf 92       	push	r12
    444c:	df 92       	push	r13
    444e:	ef 92       	push	r14
    4450:	ff 92       	push	r15
    4452:	0f 93       	push	r16
    4454:	1f 93       	push	r17
    4456:	cf 93       	push	r28
    4458:	df 93       	push	r29
    445a:	ec 01       	movw	r28, r24
  // get pressure and temperature off transducer
  _status = readBytes(&_pressureCounts, &_temperatureCounts);
    445c:	ac 01       	movw	r20, r24
    445e:	48 5e       	subi	r20, 0xE8	; 232
    4460:	5f 4f       	sbci	r21, 0xFF	; 255
    4462:	bc 01       	movw	r22, r24
    4464:	6a 5e       	subi	r22, 0xEA	; 234
    4466:	7f 4f       	sbci	r23, 0xFF	; 255
    4468:	0e 94 75 21 	call	0x42ea	; 0x42ea <_ZN7AMS58129readBytesEPjS0_>
    446c:	8c 01       	movw	r16, r24
    446e:	9d 8b       	std	Y+21, r25	; 0x15
    4470:	8c 8b       	std	Y+20, r24	; 0x14
  // convert counts to pressure, PA
  _data.Pressure_Pa = ((_pressureCounts - _digOutPmin)/((_digOutPmax - _digOutPmin)/(_pMax - _pMin)) + _pMin) * _psi2pa;
    4472:	6a a4       	ldd	r6, Y+42	; 0x2a
    4474:	7b a4       	ldd	r7, Y+43	; 0x2b
    4476:	ca 8c       	ldd	r12, Y+26	; 0x1a
    4478:	db 8c       	ldd	r13, Y+27	; 0x1b
    447a:	ec 8c       	ldd	r14, Y+28	; 0x1c
    447c:	fd 8c       	ldd	r15, Y+29	; 0x1d
    447e:	6e 89       	ldd	r22, Y+22	; 0x16
    4480:	7f 89       	ldd	r23, Y+23	; 0x17
    4482:	66 19       	sub	r22, r6
    4484:	77 09       	sbc	r23, r7
    4486:	80 e0       	ldi	r24, 0x00	; 0
    4488:	90 e0       	ldi	r25, 0x00	; 0
    448a:	0e 94 92 18 	call	0x3124	; 0x3124 <__floatunsisf>
    448e:	4b 01       	movw	r8, r22
    4490:	5c 01       	movw	r10, r24
    4492:	6c a5       	ldd	r22, Y+44	; 0x2c
    4494:	7d a5       	ldd	r23, Y+45	; 0x2d
    4496:	66 19       	sub	r22, r6
    4498:	77 09       	sbc	r23, r7
    449a:	07 2e       	mov	r0, r23
    449c:	00 0c       	add	r0, r0
    449e:	88 0b       	sbc	r24, r24
    44a0:	99 0b       	sbc	r25, r25
    44a2:	0e 94 94 18 	call	0x3128	; 0x3128 <__floatsisf>
    44a6:	2b 01       	movw	r4, r22
    44a8:	3c 01       	movw	r6, r24
    44aa:	a7 01       	movw	r20, r14
    44ac:	96 01       	movw	r18, r12
    44ae:	6e 8d       	ldd	r22, Y+30	; 0x1e
    44b0:	7f 8d       	ldd	r23, Y+31	; 0x1f
    44b2:	88 a1       	ldd	r24, Y+32	; 0x20
    44b4:	99 a1       	ldd	r25, Y+33	; 0x21
    44b6:	0e 94 7d 17 	call	0x2efa	; 0x2efa <__subsf3>
    44ba:	9b 01       	movw	r18, r22
    44bc:	ac 01       	movw	r20, r24
    44be:	c3 01       	movw	r24, r6
    44c0:	b2 01       	movw	r22, r4
    44c2:	0e 94 ea 17 	call	0x2fd4	; 0x2fd4 <__divsf3>
    44c6:	9b 01       	movw	r18, r22
    44c8:	ac 01       	movw	r20, r24
    44ca:	c5 01       	movw	r24, r10
    44cc:	b4 01       	movw	r22, r8
    44ce:	0e 94 ea 17 	call	0x2fd4	; 0x2fd4 <__divsf3>
    44d2:	a7 01       	movw	r20, r14
    44d4:	96 01       	movw	r18, r12
    44d6:	0e 94 7e 17 	call	0x2efc	; 0x2efc <__addsf3>
    44da:	2e a1       	ldd	r18, Y+38	; 0x26
    44dc:	3f a1       	ldd	r19, Y+39	; 0x27
    44de:	48 a5       	ldd	r20, Y+40	; 0x28
    44e0:	59 a5       	ldd	r21, Y+41	; 0x29
    44e2:	0e 94 1e 33 	call	0x663c	; 0x663c <__mulsf3>
    44e6:	68 83       	st	Y, r22
    44e8:	79 83       	std	Y+1, r23	; 0x01
    44ea:	8a 83       	std	Y+2, r24	; 0x02
    44ec:	9b 83       	std	Y+3, r25	; 0x03
  // convert counts to temperature, C
  _data.Temp_C = ((_temperatureCounts - _digOutTmin)/((_digOutTmax - _digOutTmin)/(_tMax - _tMin)) + _tMin);
    44ee:	6e a4       	ldd	r6, Y+46	; 0x2e
    44f0:	7f a4       	ldd	r7, Y+47	; 0x2f
    44f2:	ca a8       	ldd	r12, Y+50	; 0x32
    44f4:	db a8       	ldd	r13, Y+51	; 0x33
    44f6:	ec a8       	ldd	r14, Y+52	; 0x34
    44f8:	fd a8       	ldd	r15, Y+53	; 0x35
    44fa:	68 8d       	ldd	r22, Y+24	; 0x18
    44fc:	79 8d       	ldd	r23, Y+25	; 0x19
    44fe:	66 19       	sub	r22, r6
    4500:	77 09       	sbc	r23, r7
    4502:	80 e0       	ldi	r24, 0x00	; 0
    4504:	90 e0       	ldi	r25, 0x00	; 0
    4506:	0e 94 92 18 	call	0x3124	; 0x3124 <__floatunsisf>
    450a:	4b 01       	movw	r8, r22
    450c:	5c 01       	movw	r10, r24
    450e:	68 a9       	ldd	r22, Y+48	; 0x30
    4510:	79 a9       	ldd	r23, Y+49	; 0x31
    4512:	66 19       	sub	r22, r6
    4514:	77 09       	sbc	r23, r7
    4516:	07 2e       	mov	r0, r23
    4518:	00 0c       	add	r0, r0
    451a:	88 0b       	sbc	r24, r24
    451c:	99 0b       	sbc	r25, r25
    451e:	0e 94 94 18 	call	0x3128	; 0x3128 <__floatsisf>
    4522:	2b 01       	movw	r4, r22
    4524:	3c 01       	movw	r6, r24
    4526:	a7 01       	movw	r20, r14
    4528:	96 01       	movw	r18, r12
    452a:	6e a9       	ldd	r22, Y+54	; 0x36
    452c:	7f a9       	ldd	r23, Y+55	; 0x37
    452e:	88 ad       	ldd	r24, Y+56	; 0x38
    4530:	99 ad       	ldd	r25, Y+57	; 0x39
    4532:	0e 94 7d 17 	call	0x2efa	; 0x2efa <__subsf3>
    4536:	9b 01       	movw	r18, r22
    4538:	ac 01       	movw	r20, r24
    453a:	c3 01       	movw	r24, r6
    453c:	b2 01       	movw	r22, r4
    453e:	0e 94 ea 17 	call	0x2fd4	; 0x2fd4 <__divsf3>
    4542:	9b 01       	movw	r18, r22
    4544:	ac 01       	movw	r20, r24
    4546:	c5 01       	movw	r24, r10
    4548:	b4 01       	movw	r22, r8
    454a:	0e 94 ea 17 	call	0x2fd4	; 0x2fd4 <__divsf3>
    454e:	a7 01       	movw	r20, r14
    4550:	96 01       	movw	r18, r12
    4552:	0e 94 7e 17 	call	0x2efc	; 0x2efc <__addsf3>
    4556:	6c 83       	std	Y+4, r22	; 0x04
    4558:	7d 83       	std	Y+5, r23	; 0x05
    455a:	8e 83       	std	Y+6, r24	; 0x06
    455c:	9f 83       	std	Y+7, r25	; 0x07
  return _status;
}
    455e:	c8 01       	movw	r24, r16
    4560:	df 91       	pop	r29
    4562:	cf 91       	pop	r28
    4564:	1f 91       	pop	r17
    4566:	0f 91       	pop	r16
    4568:	ff 90       	pop	r15
    456a:	ef 90       	pop	r14
    456c:	df 90       	pop	r13
    456e:	cf 90       	pop	r12
    4570:	bf 90       	pop	r11
    4572:	af 90       	pop	r10
    4574:	9f 90       	pop	r9
    4576:	8f 90       	pop	r8
    4578:	7f 90       	pop	r7
    457a:	6f 90       	pop	r6
    457c:	5f 90       	pop	r5
    457e:	4f 90       	pop	r4
    4580:	08 95       	ret

00004582 <_ZN14TFT_22_ILI9225C1Eaaaah>:
#endif
    for (uint16_t i = 0; i < h * w; ++i) {
        _spiWrite16(bitmap[i]);
    }
    SPI_CS_HIGH();
    endWrite();
    4582:	ef 92       	push	r14
    4584:	0f 93       	push	r16
    4586:	cf 93       	push	r28
    4588:	df 93       	push	r29
    458a:	ec 01       	movw	r28, r24
    458c:	88 e1       	ldi	r24, 0x18	; 24
    458e:	e6 e0       	ldi	r30, 0x06	; 6
    4590:	f1 e0       	ldi	r31, 0x01	; 1
    4592:	de 01       	movw	r26, r28
    4594:	5c 96       	adiw	r26, 0x1c	; 28
    4596:	01 90       	ld	r0, Z+
    4598:	0d 92       	st	X+, r0
    459a:	8a 95       	dec	r24
    459c:	e1 f7       	brne	.-8      	; 0x4596 <_ZN14TFT_22_ILI9225C1Eaaaah+0x14>
    459e:	6e 83       	std	Y+6, r22	; 0x06
    45a0:	4f 83       	std	Y+7, r20	; 0x07
    45a2:	28 87       	std	Y+8, r18	; 0x08
    45a4:	8f ef       	ldi	r24, 0xFF	; 255
    45a6:	8a 87       	std	Y+10, r24	; 0x0a
    45a8:	89 87       	std	Y+9, r24	; 0x09
    45aa:	0b 87       	std	Y+11, r16	; 0x0b
    45ac:	eb 8e       	std	Y+27, r14	; 0x1b
    45ae:	81 e0       	ldi	r24, 0x01	; 1
    45b0:	8c ab       	std	Y+52, r24	; 0x34
    45b2:	fe 01       	movw	r30, r28
    45b4:	fe 96       	adiw	r30, 0x3e	; 62
    45b6:	10 82       	st	Z, r1
    45b8:	11 82       	std	Z+1, r1	; 0x01
    45ba:	12 82       	std	Z+2, r1	; 0x02
    45bc:	13 82       	std	Z+3, r1	; 0x03
    45be:	ce 5b       	subi	r28, 0xBE	; 190
    45c0:	df 4f       	sbci	r29, 0xFF	; 255
    45c2:	19 82       	std	Y+1, r1	; 0x01
    45c4:	18 82       	st	Y, r1
    45c6:	df 91       	pop	r29
    45c8:	cf 91       	pop	r28
    45ca:	0f 91       	pop	r16
    45cc:	ef 90       	pop	r14
    45ce:	08 95       	ret

000045d0 <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_>:
    45d0:	cf 93       	push	r28
    45d2:	df 93       	push	r29
    45d4:	ec 01       	movw	r28, r24
    45d6:	db 01       	movw	r26, r22
    45d8:	fa 01       	movw	r30, r20
    45da:	8a 8d       	ldd	r24, Y+26	; 0x1a
    45dc:	82 30       	cpi	r24, 0x02	; 2
    45de:	a9 f0       	breq	.+42     	; 0x460a <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_+0x3a>
    45e0:	83 30       	cpi	r24, 0x03	; 3
    45e2:	29 f1       	breq	.+74     	; 0x462e <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_+0x5e>
    45e4:	81 30       	cpi	r24, 0x01	; 1
    45e6:	a1 f5       	brne	.+104    	; 0x4650 <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_+0x80>
    45e8:	8a 81       	ldd	r24, Y+2	; 0x02
    45ea:	9b 81       	ldd	r25, Y+3	; 0x03
    45ec:	01 97       	sbiw	r24, 0x01	; 1
    45ee:	20 81       	ld	r18, Z
    45f0:	31 81       	ldd	r19, Z+1	; 0x01
    45f2:	82 1b       	sub	r24, r18
    45f4:	93 0b       	sbc	r25, r19
    45f6:	91 83       	std	Z+1, r25	; 0x01
    45f8:	80 83       	st	Z, r24
    45fa:	2d 91       	ld	r18, X+
    45fc:	3c 91       	ld	r19, X
    45fe:	11 97       	sbiw	r26, 0x01	; 1
    4600:	8d 93       	st	X+, r24
    4602:	9c 93       	st	X, r25
    4604:	31 83       	std	Z+1, r19	; 0x01
    4606:	20 83       	st	Z, r18
    4608:	23 c0       	rjmp	.+70     	; 0x4650 <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_+0x80>
    460a:	88 81       	ld	r24, Y
    460c:	99 81       	ldd	r25, Y+1	; 0x01
    460e:	01 97       	sbiw	r24, 0x01	; 1
    4610:	2d 91       	ld	r18, X+
    4612:	3c 91       	ld	r19, X
    4614:	11 97       	sbiw	r26, 0x01	; 1
    4616:	82 1b       	sub	r24, r18
    4618:	93 0b       	sbc	r25, r19
    461a:	8d 93       	st	X+, r24
    461c:	9c 93       	st	X, r25
    461e:	8a 81       	ldd	r24, Y+2	; 0x02
    4620:	9b 81       	ldd	r25, Y+3	; 0x03
    4622:	01 97       	sbiw	r24, 0x01	; 1
    4624:	20 81       	ld	r18, Z
    4626:	31 81       	ldd	r19, Z+1	; 0x01
    4628:	82 1b       	sub	r24, r18
    462a:	93 0b       	sbc	r25, r19
    462c:	0f c0       	rjmp	.+30     	; 0x464c <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_+0x7c>
    462e:	88 81       	ld	r24, Y
    4630:	99 81       	ldd	r25, Y+1	; 0x01
    4632:	01 97       	sbiw	r24, 0x01	; 1
    4634:	2d 91       	ld	r18, X+
    4636:	3c 91       	ld	r19, X
    4638:	11 97       	sbiw	r26, 0x01	; 1
    463a:	82 1b       	sub	r24, r18
    463c:	93 0b       	sbc	r25, r19
    463e:	11 96       	adiw	r26, 0x01	; 1
    4640:	9c 93       	st	X, r25
    4642:	8e 93       	st	-X, r24
    4644:	20 81       	ld	r18, Z
    4646:	31 81       	ldd	r19, Z+1	; 0x01
    4648:	2d 93       	st	X+, r18
    464a:	3c 93       	st	X, r19
    464c:	91 83       	std	Z+1, r25	; 0x01
    464e:	80 83       	st	Z, r24
    4650:	df 91       	pop	r29
    4652:	cf 91       	pop	r28
    4654:	08 95       	ret

00004656 <_ZN14TFT_22_ILI922512setBacklightEb>:
    4656:	fc 01       	movw	r30, r24
    4658:	65 ab       	std	Z+53, r22	; 0x35
    465a:	83 85       	ldd	r24, Z+11	; 0x0b
    465c:	88 23       	and	r24, r24
    465e:	49 f0       	breq	.+18     	; 0x4672 <_ZN14TFT_22_ILI922512setBacklightEb+0x1c>
    4660:	66 23       	and	r22, r22
    4662:	19 f0       	breq	.+6      	; 0x466a <_ZN14TFT_22_ILI922512setBacklightEb+0x14>
    4664:	63 8d       	ldd	r22, Z+27	; 0x1b
    4666:	70 e0       	ldi	r23, 0x00	; 0
    4668:	02 c0       	rjmp	.+4      	; 0x466e <_ZN14TFT_22_ILI922512setBacklightEb+0x18>
    466a:	60 e0       	ldi	r22, 0x00	; 0
    466c:	70 e0       	ldi	r23, 0x00	; 0
    466e:	0c 94 25 2e 	jmp	0x5c4a	; 0x5c4a <analogWrite>
    4672:	08 95       	ret

00004674 <_ZN14TFT_22_ILI922514setOrientationEh>:
    4674:	fc 01       	movw	r30, r24
    4676:	63 70       	andi	r22, 0x03	; 3
    4678:	62 8f       	std	Z+26, r22	; 0x1a
    467a:	62 30       	cpi	r22, 0x02	; 2
    467c:	21 f0       	breq	.+8      	; 0x4686 <_ZN14TFT_22_ILI922514setOrientationEh+0x12>
    467e:	63 30       	cpi	r22, 0x03	; 3
    4680:	49 f0       	breq	.+18     	; 0x4694 <_ZN14TFT_22_ILI922514setOrientationEh+0x20>
    4682:	61 30       	cpi	r22, 0x01	; 1
    4684:	39 f0       	breq	.+14     	; 0x4694 <_ZN14TFT_22_ILI922514setOrientationEh+0x20>
    4686:	80 eb       	ldi	r24, 0xB0	; 176
    4688:	90 e0       	ldi	r25, 0x00	; 0
    468a:	91 83       	std	Z+1, r25	; 0x01
    468c:	80 83       	st	Z, r24
    468e:	8c ed       	ldi	r24, 0xDC	; 220
    4690:	90 e0       	ldi	r25, 0x00	; 0
    4692:	06 c0       	rjmp	.+12     	; 0x46a0 <_ZN14TFT_22_ILI922514setOrientationEh+0x2c>
    4694:	8c ed       	ldi	r24, 0xDC	; 220
    4696:	90 e0       	ldi	r25, 0x00	; 0
    4698:	91 83       	std	Z+1, r25	; 0x01
    469a:	80 83       	st	Z, r24
    469c:	80 eb       	ldi	r24, 0xB0	; 176
    469e:	90 e0       	ldi	r25, 0x00	; 0
    46a0:	93 83       	std	Z+3, r25	; 0x03
    46a2:	82 83       	std	Z+2, r24	; 0x02
    46a4:	08 95       	ret

000046a6 <_ZN14TFT_22_ILI922515_writeCommand16Ej>:
    46a6:	cf 93       	push	r28
    46a8:	df 93       	push	r29
    46aa:	fc 01       	movw	r30, r24
    46ac:	a0 89       	ldd	r26, Z+16	; 0x10
    46ae:	b1 89       	ldd	r27, Z+17	; 0x11
    46b0:	9c 91       	ld	r25, X
    46b2:	81 8d       	ldd	r24, Z+25	; 0x19
    46b4:	80 95       	com	r24
    46b6:	89 23       	and	r24, r25
    46b8:	8c 93       	st	X, r24
    46ba:	a4 89       	ldd	r26, Z+20	; 0x14
    46bc:	b5 89       	ldd	r27, Z+21	; 0x15
    46be:	9c 91       	ld	r25, X
    46c0:	80 8d       	ldd	r24, Z+24	; 0x18
    46c2:	80 95       	com	r24
    46c4:	89 23       	and	r24, r25
    46c6:	8c 93       	st	X, r24
    46c8:	82 85       	ldd	r24, Z+10	; 0x0a
    46ca:	87 ff       	sbrs	r24, 7
    46cc:	11 c0       	rjmp	.+34     	; 0x46f0 <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x4a>
    46ce:	7e bd       	out	0x2e, r23	; 46
    46d0:	0d b4       	in	r0, 0x2d	; 45
    46d2:	07 fe       	sbrs	r0, 7
    46d4:	fd cf       	rjmp	.-6      	; 0x46d0 <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x2a>
    46d6:	6e bd       	out	0x2e, r22	; 46
    46d8:	0d b4       	in	r0, 0x2d	; 45
    46da:	07 fe       	sbrs	r0, 7
    46dc:	fd cf       	rjmp	.-6      	; 0x46d8 <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x32>
    46de:	a4 89       	ldd	r26, Z+20	; 0x14
    46e0:	b5 89       	ldd	r27, Z+21	; 0x15
    46e2:	9c 91       	ld	r25, X
    46e4:	80 8d       	ldd	r24, Z+24	; 0x18
    46e6:	89 2b       	or	r24, r25
    46e8:	8c 93       	st	X, r24
    46ea:	df 91       	pop	r29
    46ec:	cf 91       	pop	r28
    46ee:	08 95       	ret
    46f0:	20 e1       	ldi	r18, 0x10	; 16
    46f2:	30 e0       	ldi	r19, 0x00	; 0
    46f4:	40 e0       	ldi	r20, 0x00	; 0
    46f6:	50 e8       	ldi	r21, 0x80	; 128
    46f8:	a4 85       	ldd	r26, Z+12	; 0x0c
    46fa:	b5 85       	ldd	r27, Z+13	; 0x0d
    46fc:	86 89       	ldd	r24, Z+22	; 0x16
    46fe:	eb 01       	movw	r28, r22
    4700:	c4 23       	and	r28, r20
    4702:	d5 23       	and	r29, r21
    4704:	9c 91       	ld	r25, X
    4706:	cd 2b       	or	r28, r29
    4708:	11 f0       	breq	.+4      	; 0x470e <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x68>
    470a:	89 2b       	or	r24, r25
    470c:	02 c0       	rjmp	.+4      	; 0x4712 <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x6c>
    470e:	80 95       	com	r24
    4710:	89 23       	and	r24, r25
    4712:	8c 93       	st	X, r24
    4714:	a6 85       	ldd	r26, Z+14	; 0x0e
    4716:	b7 85       	ldd	r27, Z+15	; 0x0f
    4718:	9c 91       	ld	r25, X
    471a:	87 89       	ldd	r24, Z+23	; 0x17
    471c:	89 2b       	or	r24, r25
    471e:	8c 93       	st	X, r24
    4720:	a6 85       	ldd	r26, Z+14	; 0x0e
    4722:	b7 85       	ldd	r27, Z+15	; 0x0f
    4724:	9c 91       	ld	r25, X
    4726:	87 89       	ldd	r24, Z+23	; 0x17
    4728:	80 95       	com	r24
    472a:	89 23       	and	r24, r25
    472c:	8c 93       	st	X, r24
    472e:	56 95       	lsr	r21
    4730:	47 95       	ror	r20
    4732:	21 50       	subi	r18, 0x01	; 1
    4734:	31 09       	sbc	r19, r1
    4736:	01 f7       	brne	.-64     	; 0x46f8 <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x52>
    4738:	d2 cf       	rjmp	.-92     	; 0x46de <_ZN14TFT_22_ILI922515_writeCommand16Ej+0x38>

0000473a <_ZN14TFT_22_ILI922512_writeData16Ej>:
    473a:	cf 93       	push	r28
    473c:	df 93       	push	r29
    473e:	fc 01       	movw	r30, r24
    4740:	a0 89       	ldd	r26, Z+16	; 0x10
    4742:	b1 89       	ldd	r27, Z+17	; 0x11
    4744:	9c 91       	ld	r25, X
    4746:	81 8d       	ldd	r24, Z+25	; 0x19
    4748:	89 2b       	or	r24, r25
    474a:	8c 93       	st	X, r24
    474c:	a4 89       	ldd	r26, Z+20	; 0x14
    474e:	b5 89       	ldd	r27, Z+21	; 0x15
    4750:	9c 91       	ld	r25, X
    4752:	80 8d       	ldd	r24, Z+24	; 0x18
    4754:	80 95       	com	r24
    4756:	89 23       	and	r24, r25
    4758:	8c 93       	st	X, r24
    475a:	82 85       	ldd	r24, Z+10	; 0x0a
    475c:	87 ff       	sbrs	r24, 7
    475e:	11 c0       	rjmp	.+34     	; 0x4782 <_ZN14TFT_22_ILI922512_writeData16Ej+0x48>
    4760:	7e bd       	out	0x2e, r23	; 46
    4762:	0d b4       	in	r0, 0x2d	; 45
    4764:	07 fe       	sbrs	r0, 7
    4766:	fd cf       	rjmp	.-6      	; 0x4762 <_ZN14TFT_22_ILI922512_writeData16Ej+0x28>
    4768:	6e bd       	out	0x2e, r22	; 46
    476a:	0d b4       	in	r0, 0x2d	; 45
    476c:	07 fe       	sbrs	r0, 7
    476e:	fd cf       	rjmp	.-6      	; 0x476a <_ZN14TFT_22_ILI922512_writeData16Ej+0x30>
    4770:	a4 89       	ldd	r26, Z+20	; 0x14
    4772:	b5 89       	ldd	r27, Z+21	; 0x15
    4774:	9c 91       	ld	r25, X
    4776:	80 8d       	ldd	r24, Z+24	; 0x18
    4778:	89 2b       	or	r24, r25
    477a:	8c 93       	st	X, r24
    477c:	df 91       	pop	r29
    477e:	cf 91       	pop	r28
    4780:	08 95       	ret
    4782:	20 e1       	ldi	r18, 0x10	; 16
    4784:	30 e0       	ldi	r19, 0x00	; 0
    4786:	40 e0       	ldi	r20, 0x00	; 0
    4788:	50 e8       	ldi	r21, 0x80	; 128
    478a:	a4 85       	ldd	r26, Z+12	; 0x0c
    478c:	b5 85       	ldd	r27, Z+13	; 0x0d
    478e:	86 89       	ldd	r24, Z+22	; 0x16
    4790:	eb 01       	movw	r28, r22
    4792:	c4 23       	and	r28, r20
    4794:	d5 23       	and	r29, r21
    4796:	9c 91       	ld	r25, X
    4798:	cd 2b       	or	r28, r29
    479a:	11 f0       	breq	.+4      	; 0x47a0 <_ZN14TFT_22_ILI922512_writeData16Ej+0x66>
    479c:	89 2b       	or	r24, r25
    479e:	02 c0       	rjmp	.+4      	; 0x47a4 <_ZN14TFT_22_ILI922512_writeData16Ej+0x6a>
    47a0:	80 95       	com	r24
    47a2:	89 23       	and	r24, r25
    47a4:	8c 93       	st	X, r24
    47a6:	a6 85       	ldd	r26, Z+14	; 0x0e
    47a8:	b7 85       	ldd	r27, Z+15	; 0x0f
    47aa:	9c 91       	ld	r25, X
    47ac:	87 89       	ldd	r24, Z+23	; 0x17
    47ae:	89 2b       	or	r24, r25
    47b0:	8c 93       	st	X, r24
    47b2:	a6 85       	ldd	r26, Z+14	; 0x0e
    47b4:	b7 85       	ldd	r27, Z+15	; 0x0f
    47b6:	9c 91       	ld	r25, X
    47b8:	87 89       	ldd	r24, Z+23	; 0x17
    47ba:	80 95       	com	r24
    47bc:	89 23       	and	r24, r25
    47be:	8c 93       	st	X, r24
    47c0:	56 95       	lsr	r21
    47c2:	47 95       	ror	r20
    47c4:	21 50       	subi	r18, 0x01	; 1
    47c6:	31 09       	sbc	r19, r1
    47c8:	01 f7       	brne	.-64     	; 0x478a <_ZN14TFT_22_ILI922512_writeData16Ej+0x50>
    47ca:	d2 cf       	rjmp	.-92     	; 0x4770 <_ZN14TFT_22_ILI922512_writeData16Ej+0x36>

000047cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>:
    47cc:	0f 93       	push	r16
    47ce:	1f 93       	push	r17
    47d0:	cf 93       	push	r28
    47d2:	df 93       	push	r29
    47d4:	ec 01       	movw	r28, r24
    47d6:	8a 01       	movw	r16, r20
    47d8:	0e 94 53 23 	call	0x46a6	; 0x46a6 <_ZN14TFT_22_ILI922515_writeCommand16Ej>
    47dc:	b8 01       	movw	r22, r16
    47de:	ce 01       	movw	r24, r28
    47e0:	df 91       	pop	r29
    47e2:	cf 91       	pop	r28
    47e4:	1f 91       	pop	r17
    47e6:	0f 91       	pop	r16
    47e8:	0c 94 9d 23 	jmp	0x473a	; 0x473a <_ZN14TFT_22_ILI922512_writeData16Ej>

000047ec <_ZN14TFT_22_ILI922512_resetWindowEv>:
    47ec:	cf 93       	push	r28
    47ee:	df 93       	push	r29
    47f0:	ec 01       	movw	r28, r24
    47f2:	4f ea       	ldi	r20, 0xAF	; 175
    47f4:	50 e0       	ldi	r21, 0x00	; 0
    47f6:	66 e3       	ldi	r22, 0x36	; 54
    47f8:	70 e0       	ldi	r23, 0x00	; 0
    47fa:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    47fe:	40 e0       	ldi	r20, 0x00	; 0
    4800:	50 e0       	ldi	r21, 0x00	; 0
    4802:	67 e3       	ldi	r22, 0x37	; 55
    4804:	70 e0       	ldi	r23, 0x00	; 0
    4806:	ce 01       	movw	r24, r28
    4808:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    480c:	4b ed       	ldi	r20, 0xDB	; 219
    480e:	50 e0       	ldi	r21, 0x00	; 0
    4810:	68 e3       	ldi	r22, 0x38	; 56
    4812:	70 e0       	ldi	r23, 0x00	; 0
    4814:	ce 01       	movw	r24, r28
    4816:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    481a:	40 e0       	ldi	r20, 0x00	; 0
    481c:	50 e0       	ldi	r21, 0x00	; 0
    481e:	69 e3       	ldi	r22, 0x39	; 57
    4820:	70 e0       	ldi	r23, 0x00	; 0
    4822:	ce 01       	movw	r24, r28
    4824:	df 91       	pop	r29
    4826:	cf 91       	pop	r28
    4828:	0c 94 e6 23 	jmp	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>

0000482c <_ZN14TFT_22_ILI92257setFontEPhb>:
    482c:	dc 01       	movw	r26, r24
    482e:	d7 96       	adiw	r26, 0x37	; 55
    4830:	7c 93       	st	X, r23
    4832:	6e 93       	st	-X, r22
    4834:	d6 97       	sbiw	r26, 0x36	; 54
    4836:	fb 01       	movw	r30, r22
    4838:	84 91       	lpm	r24, Z
    483a:	d8 96       	adiw	r26, 0x38	; 56
    483c:	8c 93       	st	X, r24
    483e:	d8 97       	sbiw	r26, 0x38	; 56
    4840:	31 96       	adiw	r30, 0x01	; 1
    4842:	84 91       	lpm	r24, Z
    4844:	d9 96       	adiw	r26, 0x39	; 57
    4846:	8c 93       	st	X, r24
    4848:	d9 97       	sbiw	r26, 0x39	; 57
    484a:	31 96       	adiw	r30, 0x01	; 1
    484c:	e4 91       	lpm	r30, Z
    484e:	da 96       	adiw	r26, 0x3a	; 58
    4850:	ec 93       	st	X, r30
    4852:	da 97       	sbiw	r26, 0x3a	; 58
    4854:	fb 01       	movw	r30, r22
    4856:	33 96       	adiw	r30, 0x03	; 3
    4858:	64 91       	lpm	r22, Z
    485a:	db 96       	adiw	r26, 0x3b	; 59
    485c:	6c 93       	st	X, r22
    485e:	db 97       	sbiw	r26, 0x3b	; 59
    4860:	98 2f       	mov	r25, r24
    4862:	96 95       	lsr	r25
    4864:	96 95       	lsr	r25
    4866:	96 95       	lsr	r25
    4868:	dc 96       	adiw	r26, 0x3c	; 60
    486a:	9c 93       	st	X, r25
    486c:	dc 97       	sbiw	r26, 0x3c	; 60
    486e:	dd 96       	adiw	r26, 0x3d	; 61
    4870:	4c 93       	st	X, r20
    4872:	dd 97       	sbiw	r26, 0x3d	; 61
    4874:	e8 2f       	mov	r30, r24
    4876:	e7 70       	andi	r30, 0x07	; 7
    4878:	19 f0       	breq	.+6      	; 0x4880 <_ZN14TFT_22_ILI92257setFontEPhb+0x54>
    487a:	9f 5f       	subi	r25, 0xFF	; 255
    487c:	dc 96       	adiw	r26, 0x3c	; 60
    487e:	9c 93       	st	X, r25
    4880:	08 95       	ret

00004882 <_ZN14TFT_22_ILI922510startWriteEv>:
    4882:	cf 93       	push	r28
    4884:	df 93       	push	r29
    4886:	fc 01       	movw	r30, r24
    4888:	ec 01       	movw	r28, r24
    488a:	ee 96       	adiw	r28, 0x3e	; 62
    488c:	88 81       	ld	r24, Y
    488e:	99 81       	ldd	r25, Y+1	; 0x01
    4890:	aa 81       	ldd	r26, Y+2	; 0x02
    4892:	bb 81       	ldd	r27, Y+3	; 0x03
    4894:	ac 01       	movw	r20, r24
    4896:	bd 01       	movw	r22, r26
    4898:	4f 5f       	subi	r20, 0xFF	; 255
    489a:	5f 4f       	sbci	r21, 0xFF	; 255
    489c:	6f 4f       	sbci	r22, 0xFF	; 255
    489e:	7f 4f       	sbci	r23, 0xFF	; 255
    48a0:	48 83       	st	Y, r20
    48a2:	59 83       	std	Y+1, r21	; 0x01
    48a4:	6a 83       	std	Y+2, r22	; 0x02
    48a6:	7b 83       	std	Y+3, r23	; 0x03
    48a8:	89 2b       	or	r24, r25
    48aa:	8a 2b       	or	r24, r26
    48ac:	8b 2b       	or	r24, r27
    48ae:	29 f5       	brne	.+74     	; 0x48fa <_ZN14TFT_22_ILI922510startWriteEv+0x78>
    48b0:	82 85       	ldd	r24, Z+10	; 0x0a
    48b2:	87 ff       	sbrs	r24, 7
    48b4:	1b c0       	rjmp	.+54     	; 0x48ec <_ZN14TFT_22_ILI922510startWriteEv+0x6a>
    48b6:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZN8SPIClass13interruptModeE>
    48ba:	88 23       	and	r24, r24
    48bc:	99 f0       	breq	.+38     	; 0x48e4 <_ZN14TFT_22_ILI922510startWriteEv+0x62>
    48be:	2f b7       	in	r18, 0x3f	; 63
    48c0:	f8 94       	cli
    48c2:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZN8SPIClass13interruptModeE>
    48c6:	81 30       	cpi	r24, 0x01	; 1
    48c8:	59 f4       	brne	.+22     	; 0x48e0 <_ZN14TFT_22_ILI922510startWriteEv+0x5e>
    48ca:	8d b3       	in	r24, 0x1d	; 29
    48cc:	80 93 74 04 	sts	0x0474, r24	; 0x800474 <_ZN8SPIClass13interruptSaveE>
    48d0:	9d b3       	in	r25, 0x1d	; 29
    48d2:	80 91 75 04 	lds	r24, 0x0475	; 0x800475 <_ZN8SPIClass13interruptMaskE>
    48d6:	80 95       	com	r24
    48d8:	89 23       	and	r24, r25
    48da:	8d bb       	out	0x1d, r24	; 29
    48dc:	2f bf       	out	0x3f, r18	; 63
    48de:	02 c0       	rjmp	.+4      	; 0x48e4 <_ZN14TFT_22_ILI922510startWriteEv+0x62>
    48e0:	20 93 74 04 	sts	0x0474, r18	; 0x800474 <_ZN8SPIClass13interruptSaveE>
    48e4:	80 e5       	ldi	r24, 0x50	; 80
    48e6:	8c bd       	out	0x2c, r24	; 44
    48e8:	81 e0       	ldi	r24, 0x01	; 1
    48ea:	8d bd       	out	0x2d, r24	; 45
    48ec:	a4 89       	ldd	r26, Z+20	; 0x14
    48ee:	b5 89       	ldd	r27, Z+21	; 0x15
    48f0:	9c 91       	ld	r25, X
    48f2:	80 8d       	ldd	r24, Z+24	; 0x18
    48f4:	80 95       	com	r24
    48f6:	89 23       	and	r24, r25
    48f8:	8c 93       	st	X, r24
    48fa:	df 91       	pop	r29
    48fc:	cf 91       	pop	r28
    48fe:	08 95       	ret

00004900 <_ZN14TFT_22_ILI92258endWriteEv>:
    4900:	cf 93       	push	r28
    4902:	df 93       	push	r29
    4904:	fc 01       	movw	r30, r24
    4906:	ec 01       	movw	r28, r24
    4908:	ee 96       	adiw	r28, 0x3e	; 62
    490a:	88 81       	ld	r24, Y
    490c:	99 81       	ldd	r25, Y+1	; 0x01
    490e:	aa 81       	ldd	r26, Y+2	; 0x02
    4910:	bb 81       	ldd	r27, Y+3	; 0x03
    4912:	01 97       	sbiw	r24, 0x01	; 1
    4914:	a1 09       	sbc	r26, r1
    4916:	b1 09       	sbc	r27, r1
    4918:	88 83       	st	Y, r24
    491a:	99 83       	std	Y+1, r25	; 0x01
    491c:	aa 83       	std	Y+2, r26	; 0x02
    491e:	bb 83       	std	Y+3, r27	; 0x03
    4920:	89 2b       	or	r24, r25
    4922:	8a 2b       	or	r24, r26
    4924:	8b 2b       	or	r24, r27
    4926:	c9 f4       	brne	.+50     	; 0x495a <_ZN14TFT_22_ILI92258endWriteEv+0x5a>
    4928:	a4 89       	ldd	r26, Z+20	; 0x14
    492a:	b5 89       	ldd	r27, Z+21	; 0x15
    492c:	9c 91       	ld	r25, X
    492e:	80 8d       	ldd	r24, Z+24	; 0x18
    4930:	89 2b       	or	r24, r25
    4932:	8c 93       	st	X, r24
    4934:	82 85       	ldd	r24, Z+10	; 0x0a
    4936:	87 ff       	sbrs	r24, 7
    4938:	10 c0       	rjmp	.+32     	; 0x495a <_ZN14TFT_22_ILI92258endWriteEv+0x5a>
    493a:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <_ZN8SPIClass13interruptModeE>
    493e:	88 23       	and	r24, r24
    4940:	61 f0       	breq	.+24     	; 0x495a <_ZN14TFT_22_ILI92258endWriteEv+0x5a>
    4942:	9f b7       	in	r25, 0x3f	; 63
    4944:	f8 94       	cli
    4946:	20 91 76 04 	lds	r18, 0x0476	; 0x800476 <_ZN8SPIClass13interruptModeE>
    494a:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <_ZN8SPIClass13interruptSaveE>
    494e:	21 30       	cpi	r18, 0x01	; 1
    4950:	19 f4       	brne	.+6      	; 0x4958 <_ZN14TFT_22_ILI92258endWriteEv+0x58>
    4952:	8d bb       	out	0x1d, r24	; 29
    4954:	9f bf       	out	0x3f, r25	; 63
    4956:	01 c0       	rjmp	.+2      	; 0x495a <_ZN14TFT_22_ILI92258endWriteEv+0x5a>
    4958:	8f bf       	out	0x3f, r24	; 63
    495a:	df 91       	pop	r29
    495c:	cf 91       	pop	r28
    495e:	08 95       	ret

00004960 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t>:
    4960:	af 92       	push	r10
    4962:	bf 92       	push	r11
    4964:	cf 92       	push	r12
    4966:	df 92       	push	r13
    4968:	ef 92       	push	r14
    496a:	0f 93       	push	r16
    496c:	1f 93       	push	r17
    496e:	cf 93       	push	r28
    4970:	df 93       	push	r29
    4972:	cd b7       	in	r28, 0x3d	; 61
    4974:	de b7       	in	r29, 0x3e	; 62
    4976:	c4 54       	subi	r28, 0x44	; 68
    4978:	d1 09       	sbc	r29, r1
    497a:	0f b6       	in	r0, 0x3f	; 63
    497c:	f8 94       	cli
    497e:	de bf       	out	0x3e, r29	; 62
    4980:	0f be       	out	0x3f, r0	; 63
    4982:	cd bf       	out	0x3d, r28	; 61
    4984:	6c 01       	movw	r12, r24
    4986:	7e af       	std	Y+62, r23	; 0x3e
    4988:	6d af       	std	Y+61, r22	; 0x3d
    498a:	21 96       	adiw	r28, 0x01	; 1
    498c:	5f af       	std	Y+63, r21	; 0x3f
    498e:	4e af       	std	Y+62, r20	; 0x3e
    4990:	21 97       	sbiw	r28, 0x01	; 1
    4992:	23 96       	adiw	r28, 0x03	; 3
    4994:	3f af       	std	Y+63, r19	; 0x3f
    4996:	2e af       	std	Y+62, r18	; 0x3e
    4998:	23 97       	sbiw	r28, 0x03	; 3
    499a:	25 96       	adiw	r28, 0x05	; 5
    499c:	1f af       	std	Y+63, r17	; 0x3f
    499e:	0e af       	std	Y+62, r16	; 0x3e
    49a0:	25 97       	sbiw	r28, 0x05	; 5
    49a2:	0e 2d       	mov	r16, r14
    49a4:	10 e0       	ldi	r17, 0x00	; 0
    49a6:	1f 92       	push	r1
    49a8:	ef 92       	push	r14
    49aa:	25 96       	adiw	r28, 0x05	; 5
    49ac:	8f ad       	ldd	r24, Y+63	; 0x3f
    49ae:	25 97       	sbiw	r28, 0x05	; 5
    49b0:	8f 93       	push	r24
    49b2:	24 96       	adiw	r28, 0x04	; 4
    49b4:	8f ad       	ldd	r24, Y+63	; 0x3f
    49b6:	24 97       	sbiw	r28, 0x04	; 4
    49b8:	8f 93       	push	r24
    49ba:	23 96       	adiw	r28, 0x03	; 3
    49bc:	8f ad       	ldd	r24, Y+63	; 0x3f
    49be:	23 97       	sbiw	r28, 0x03	; 3
    49c0:	8f 93       	push	r24
    49c2:	22 96       	adiw	r28, 0x02	; 2
    49c4:	8f ad       	ldd	r24, Y+63	; 0x3f
    49c6:	22 97       	sbiw	r28, 0x02	; 2
    49c8:	8f 93       	push	r24
    49ca:	21 96       	adiw	r28, 0x01	; 1
    49cc:	8f ad       	ldd	r24, Y+63	; 0x3f
    49ce:	21 97       	sbiw	r28, 0x01	; 1
    49d0:	8f 93       	push	r24
    49d2:	8f ad       	ldd	r24, Y+63	; 0x3f
    49d4:	8f 93       	push	r24
    49d6:	8e ad       	ldd	r24, Y+62	; 0x3e
    49d8:	8f 93       	push	r24
    49da:	8d ad       	ldd	r24, Y+61	; 0x3d
    49dc:	8f 93       	push	r24
    49de:	87 ea       	ldi	r24, 0xA7	; 167
    49e0:	91 e0       	ldi	r25, 0x01	; 1
    49e2:	9f 93       	push	r25
    49e4:	8f 93       	push	r24
    49e6:	9e 01       	movw	r18, r28
    49e8:	2f 5f       	subi	r18, 0xFF	; 255
    49ea:	3f 4f       	sbci	r19, 0xFF	; 255
    49ec:	59 01       	movw	r10, r18
    49ee:	3f 93       	push	r19
    49f0:	2f 93       	push	r18
    49f2:	0e 94 40 36 	call	0x6c80	; 0x6c80 <sprintf>
    49f6:	b5 01       	movw	r22, r10
    49f8:	88 e7       	ldi	r24, 0x78	; 120
    49fa:	93 e0       	ldi	r25, 0x03	; 3
    49fc:	0e 94 78 1b 	call	0x36f0	; 0x36f0 <_ZN5Print7printlnEPKc>
    4a00:	f6 01       	movw	r30, r12
    4a02:	80 81       	ld	r24, Z
    4a04:	91 81       	ldd	r25, Z+1	; 0x01
    4a06:	01 97       	sbiw	r24, 0x01	; 1
    4a08:	2d ad       	ldd	r18, Y+61	; 0x3d
    4a0a:	3e ad       	ldd	r19, Y+62	; 0x3e
    4a0c:	0f b6       	in	r0, 0x3f	; 63
    4a0e:	f8 94       	cli
    4a10:	de bf       	out	0x3e, r29	; 62
    4a12:	0f be       	out	0x3f, r0	; 63
    4a14:	cd bf       	out	0x3d, r28	; 61
    4a16:	82 17       	cp	r24, r18
    4a18:	93 07       	cpc	r25, r19
    4a1a:	08 f4       	brcc	.+2      	; 0x4a1e <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0xbe>
    4a1c:	9c 01       	movw	r18, r24
    4a1e:	3e af       	std	Y+62, r19	; 0x3e
    4a20:	2d af       	std	Y+61, r18	; 0x3d
    4a22:	23 96       	adiw	r28, 0x03	; 3
    4a24:	2e ad       	ldd	r18, Y+62	; 0x3e
    4a26:	3f ad       	ldd	r19, Y+63	; 0x3f
    4a28:	23 97       	sbiw	r28, 0x03	; 3
    4a2a:	82 17       	cp	r24, r18
    4a2c:	93 07       	cpc	r25, r19
    4a2e:	08 f4       	brcc	.+2      	; 0x4a32 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0xd2>
    4a30:	9c 01       	movw	r18, r24
    4a32:	23 96       	adiw	r28, 0x03	; 3
    4a34:	3f af       	std	Y+63, r19	; 0x3f
    4a36:	2e af       	std	Y+62, r18	; 0x3e
    4a38:	23 97       	sbiw	r28, 0x03	; 3
    4a3a:	f6 01       	movw	r30, r12
    4a3c:	82 81       	ldd	r24, Z+2	; 0x02
    4a3e:	93 81       	ldd	r25, Z+3	; 0x03
    4a40:	01 97       	sbiw	r24, 0x01	; 1
    4a42:	21 96       	adiw	r28, 0x01	; 1
    4a44:	2e ad       	ldd	r18, Y+62	; 0x3e
    4a46:	3f ad       	ldd	r19, Y+63	; 0x3f
    4a48:	21 97       	sbiw	r28, 0x01	; 1
    4a4a:	82 17       	cp	r24, r18
    4a4c:	93 07       	cpc	r25, r19
    4a4e:	08 f4       	brcc	.+2      	; 0x4a52 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0xf2>
    4a50:	9c 01       	movw	r18, r24
    4a52:	21 96       	adiw	r28, 0x01	; 1
    4a54:	3f af       	std	Y+63, r19	; 0x3f
    4a56:	2e af       	std	Y+62, r18	; 0x3e
    4a58:	21 97       	sbiw	r28, 0x01	; 1
    4a5a:	25 96       	adiw	r28, 0x05	; 5
    4a5c:	2e ad       	ldd	r18, Y+62	; 0x3e
    4a5e:	3f ad       	ldd	r19, Y+63	; 0x3f
    4a60:	25 97       	sbiw	r28, 0x05	; 5
    4a62:	82 17       	cp	r24, r18
    4a64:	93 07       	cpc	r25, r19
    4a66:	08 f4       	brcc	.+2      	; 0x4a6a <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x10a>
    4a68:	9c 01       	movw	r18, r24
    4a6a:	25 96       	adiw	r28, 0x05	; 5
    4a6c:	3f af       	std	Y+63, r19	; 0x3f
    4a6e:	2e af       	std	Y+62, r18	; 0x3e
    4a70:	25 97       	sbiw	r28, 0x05	; 5
    4a72:	ae 01       	movw	r20, r28
    4a74:	41 5c       	subi	r20, 0xC1	; 193
    4a76:	5f 4f       	sbci	r21, 0xFF	; 255
    4a78:	be 01       	movw	r22, r28
    4a7a:	63 5c       	subi	r22, 0xC3	; 195
    4a7c:	7f 4f       	sbci	r23, 0xFF	; 255
    4a7e:	c6 01       	movw	r24, r12
    4a80:	0e 94 e8 22 	call	0x45d0	; 0x45d0 <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_>
    4a84:	ae 01       	movw	r20, r28
    4a86:	4d 5b       	subi	r20, 0xBD	; 189
    4a88:	5f 4f       	sbci	r21, 0xFF	; 255
    4a8a:	be 01       	movw	r22, r28
    4a8c:	6f 5b       	subi	r22, 0xBF	; 191
    4a8e:	7f 4f       	sbci	r23, 0xFF	; 255
    4a90:	c6 01       	movw	r24, r12
    4a92:	0e 94 e8 22 	call	0x45d0	; 0x45d0 <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_>
    4a96:	23 96       	adiw	r28, 0x03	; 3
    4a98:	2e ad       	ldd	r18, Y+62	; 0x3e
    4a9a:	3f ad       	ldd	r19, Y+63	; 0x3f
    4a9c:	23 97       	sbiw	r28, 0x03	; 3
    4a9e:	8d ad       	ldd	r24, Y+61	; 0x3d
    4aa0:	9e ad       	ldd	r25, Y+62	; 0x3e
    4aa2:	28 17       	cp	r18, r24
    4aa4:	39 07       	cpc	r19, r25
    4aa6:	30 f4       	brcc	.+12     	; 0x4ab4 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x154>
    4aa8:	3e af       	std	Y+62, r19	; 0x3e
    4aaa:	2d af       	std	Y+61, r18	; 0x3d
    4aac:	23 96       	adiw	r28, 0x03	; 3
    4aae:	9f af       	std	Y+63, r25	; 0x3f
    4ab0:	8e af       	std	Y+62, r24	; 0x3e
    4ab2:	23 97       	sbiw	r28, 0x03	; 3
    4ab4:	25 96       	adiw	r28, 0x05	; 5
    4ab6:	2e ad       	ldd	r18, Y+62	; 0x3e
    4ab8:	3f ad       	ldd	r19, Y+63	; 0x3f
    4aba:	25 97       	sbiw	r28, 0x05	; 5
    4abc:	21 96       	adiw	r28, 0x01	; 1
    4abe:	8e ad       	ldd	r24, Y+62	; 0x3e
    4ac0:	9f ad       	ldd	r25, Y+63	; 0x3f
    4ac2:	21 97       	sbiw	r28, 0x01	; 1
    4ac4:	28 17       	cp	r18, r24
    4ac6:	39 07       	cpc	r19, r25
    4ac8:	40 f4       	brcc	.+16     	; 0x4ada <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x17a>
    4aca:	21 96       	adiw	r28, 0x01	; 1
    4acc:	3f af       	std	Y+63, r19	; 0x3f
    4ace:	2e af       	std	Y+62, r18	; 0x3e
    4ad0:	21 97       	sbiw	r28, 0x01	; 1
    4ad2:	25 96       	adiw	r28, 0x05	; 5
    4ad4:	9f af       	std	Y+63, r25	; 0x3f
    4ad6:	8e af       	std	Y+62, r24	; 0x3e
    4ad8:	25 97       	sbiw	r28, 0x05	; 5
    4ada:	c6 01       	movw	r24, r12
    4adc:	0e 94 41 24 	call	0x4882	; 0x4882 <_ZN14TFT_22_ILI922510startWriteEv>
    4ae0:	f6 01       	movw	r30, r12
    4ae2:	82 8d       	ldd	r24, Z+26	; 0x1a
    4ae4:	88 23       	and	r24, r24
    4ae6:	51 f0       	breq	.+20     	; 0x4afc <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x19c>
    4ae8:	96 01       	movw	r18, r12
    4aea:	48 e0       	ldi	r20, 0x08	; 8
    4aec:	84 9f       	mul	r24, r20
    4aee:	20 0d       	add	r18, r0
    4af0:	31 1d       	adc	r19, r1
    4af2:	11 24       	eor	r1, r1
    4af4:	f8 01       	movw	r30, r16
    4af6:	e2 0f       	add	r30, r18
    4af8:	f3 1f       	adc	r31, r19
    4afa:	e4 88       	ldd	r14, Z+20	; 0x14
    4afc:	0e 2d       	mov	r16, r14
    4afe:	10 e0       	ldi	r17, 0x00	; 0
    4b00:	a8 01       	movw	r20, r16
    4b02:	83 e0       	ldi	r24, 0x03	; 3
    4b04:	44 0f       	add	r20, r20
    4b06:	55 1f       	adc	r21, r21
    4b08:	8a 95       	dec	r24
    4b0a:	e1 f7       	brne	.-8      	; 0x4b04 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x1a4>
    4b0c:	50 61       	ori	r21, 0x10	; 16
    4b0e:	63 e0       	ldi	r22, 0x03	; 3
    4b10:	70 e0       	ldi	r23, 0x00	; 0
    4b12:	c6 01       	movw	r24, r12
    4b14:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b18:	23 96       	adiw	r28, 0x03	; 3
    4b1a:	4e ad       	ldd	r20, Y+62	; 0x3e
    4b1c:	5f ad       	ldd	r21, Y+63	; 0x3f
    4b1e:	23 97       	sbiw	r28, 0x03	; 3
    4b20:	66 e3       	ldi	r22, 0x36	; 54
    4b22:	70 e0       	ldi	r23, 0x00	; 0
    4b24:	c6 01       	movw	r24, r12
    4b26:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b2a:	4d ad       	ldd	r20, Y+61	; 0x3d
    4b2c:	5e ad       	ldd	r21, Y+62	; 0x3e
    4b2e:	67 e3       	ldi	r22, 0x37	; 55
    4b30:	70 e0       	ldi	r23, 0x00	; 0
    4b32:	c6 01       	movw	r24, r12
    4b34:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b38:	25 96       	adiw	r28, 0x05	; 5
    4b3a:	4e ad       	ldd	r20, Y+62	; 0x3e
    4b3c:	5f ad       	ldd	r21, Y+63	; 0x3f
    4b3e:	25 97       	sbiw	r28, 0x05	; 5
    4b40:	68 e3       	ldi	r22, 0x38	; 56
    4b42:	70 e0       	ldi	r23, 0x00	; 0
    4b44:	c6 01       	movw	r24, r12
    4b46:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b4a:	21 96       	adiw	r28, 0x01	; 1
    4b4c:	4e ad       	ldd	r20, Y+62	; 0x3e
    4b4e:	5f ad       	ldd	r21, Y+63	; 0x3f
    4b50:	21 97       	sbiw	r28, 0x01	; 1
    4b52:	69 e3       	ldi	r22, 0x39	; 57
    4b54:	70 e0       	ldi	r23, 0x00	; 0
    4b56:	c6 01       	movw	r24, r12
    4b58:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4b5c:	1f 92       	push	r1
    4b5e:	ef 92       	push	r14
    4b60:	25 96       	adiw	r28, 0x05	; 5
    4b62:	8f ad       	ldd	r24, Y+63	; 0x3f
    4b64:	25 97       	sbiw	r28, 0x05	; 5
    4b66:	8f 93       	push	r24
    4b68:	24 96       	adiw	r28, 0x04	; 4
    4b6a:	8f ad       	ldd	r24, Y+63	; 0x3f
    4b6c:	24 97       	sbiw	r28, 0x04	; 4
    4b6e:	8f 93       	push	r24
    4b70:	23 96       	adiw	r28, 0x03	; 3
    4b72:	8f ad       	ldd	r24, Y+63	; 0x3f
    4b74:	23 97       	sbiw	r28, 0x03	; 3
    4b76:	8f 93       	push	r24
    4b78:	22 96       	adiw	r28, 0x02	; 2
    4b7a:	8f ad       	ldd	r24, Y+63	; 0x3f
    4b7c:	22 97       	sbiw	r28, 0x02	; 2
    4b7e:	8f 93       	push	r24
    4b80:	21 96       	adiw	r28, 0x01	; 1
    4b82:	8f ad       	ldd	r24, Y+63	; 0x3f
    4b84:	21 97       	sbiw	r28, 0x01	; 1
    4b86:	8f 93       	push	r24
    4b88:	8f ad       	ldd	r24, Y+63	; 0x3f
    4b8a:	8f 93       	push	r24
    4b8c:	8e ad       	ldd	r24, Y+62	; 0x3e
    4b8e:	8f 93       	push	r24
    4b90:	8d ad       	ldd	r24, Y+61	; 0x3d
    4b92:	8f 93       	push	r24
    4b94:	87 ed       	ldi	r24, 0xD7	; 215
    4b96:	91 e0       	ldi	r25, 0x01	; 1
    4b98:	9f 93       	push	r25
    4b9a:	8f 93       	push	r24
    4b9c:	bf 92       	push	r11
    4b9e:	af 92       	push	r10
    4ba0:	0e 94 40 36 	call	0x6c80	; 0x6c80 <sprintf>
    4ba4:	b5 01       	movw	r22, r10
    4ba6:	88 e7       	ldi	r24, 0x78	; 120
    4ba8:	93 e0       	ldi	r25, 0x03	; 3
    4baa:	0e 94 78 1b 	call	0x36f0	; 0x36f0 <_ZN5Print7printlnEPKc>
    4bae:	0f b6       	in	r0, 0x3f	; 63
    4bb0:	f8 94       	cli
    4bb2:	de bf       	out	0x3e, r29	; 62
    4bb4:	0f be       	out	0x3f, r0	; 63
    4bb6:	cd bf       	out	0x3d, r28	; 61
    4bb8:	c8 01       	movw	r24, r16
    4bba:	95 95       	asr	r25
    4bbc:	87 95       	ror	r24
    4bbe:	81 30       	cpi	r24, 0x01	; 1
    4bc0:	91 05       	cpc	r25, r1
    4bc2:	81 f0       	breq	.+32     	; 0x4be4 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x284>
    4bc4:	3c f4       	brge	.+14     	; 0x4bd4 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x274>
    4bc6:	89 2b       	or	r24, r25
    4bc8:	59 f5       	brne	.+86     	; 0x4c20 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x2c0>
    4bca:	23 96       	adiw	r28, 0x03	; 3
    4bcc:	4e ad       	ldd	r20, Y+62	; 0x3e
    4bce:	5f ad       	ldd	r21, Y+63	; 0x3f
    4bd0:	23 97       	sbiw	r28, 0x03	; 3
    4bd2:	0a c0       	rjmp	.+20     	; 0x4be8 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x288>
    4bd4:	82 30       	cpi	r24, 0x02	; 2
    4bd6:	91 05       	cpc	r25, r1
    4bd8:	89 f0       	breq	.+34     	; 0x4bfc <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x29c>
    4bda:	03 97       	sbiw	r24, 0x03	; 3
    4bdc:	09 f5       	brne	.+66     	; 0x4c20 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x2c0>
    4bde:	4d ad       	ldd	r20, Y+61	; 0x3d
    4be0:	5e ad       	ldd	r21, Y+62	; 0x3e
    4be2:	10 c0       	rjmp	.+32     	; 0x4c04 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x2a4>
    4be4:	4d ad       	ldd	r20, Y+61	; 0x3d
    4be6:	5e ad       	ldd	r21, Y+62	; 0x3e
    4be8:	60 e2       	ldi	r22, 0x20	; 32
    4bea:	70 e0       	ldi	r23, 0x00	; 0
    4bec:	c6 01       	movw	r24, r12
    4bee:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4bf2:	25 96       	adiw	r28, 0x05	; 5
    4bf4:	4e ad       	ldd	r20, Y+62	; 0x3e
    4bf6:	5f ad       	ldd	r21, Y+63	; 0x3f
    4bf8:	25 97       	sbiw	r28, 0x05	; 5
    4bfa:	0d c0       	rjmp	.+26     	; 0x4c16 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t+0x2b6>
    4bfc:	23 96       	adiw	r28, 0x03	; 3
    4bfe:	4e ad       	ldd	r20, Y+62	; 0x3e
    4c00:	5f ad       	ldd	r21, Y+63	; 0x3f
    4c02:	23 97       	sbiw	r28, 0x03	; 3
    4c04:	60 e2       	ldi	r22, 0x20	; 32
    4c06:	70 e0       	ldi	r23, 0x00	; 0
    4c08:	c6 01       	movw	r24, r12
    4c0a:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4c0e:	21 96       	adiw	r28, 0x01	; 1
    4c10:	4e ad       	ldd	r20, Y+62	; 0x3e
    4c12:	5f ad       	ldd	r21, Y+63	; 0x3f
    4c14:	21 97       	sbiw	r28, 0x01	; 1
    4c16:	61 e2       	ldi	r22, 0x21	; 33
    4c18:	70 e0       	ldi	r23, 0x00	; 0
    4c1a:	c6 01       	movw	r24, r12
    4c1c:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4c20:	62 e2       	ldi	r22, 0x22	; 34
    4c22:	70 e0       	ldi	r23, 0x00	; 0
    4c24:	c6 01       	movw	r24, r12
    4c26:	0e 94 53 23 	call	0x46a6	; 0x46a6 <_ZN14TFT_22_ILI922515_writeCommand16Ej>
    4c2a:	c6 01       	movw	r24, r12
    4c2c:	0e 94 80 24 	call	0x4900	; 0x4900 <_ZN14TFT_22_ILI92258endWriteEv>
    4c30:	cc 5b       	subi	r28, 0xBC	; 188
    4c32:	df 4f       	sbci	r29, 0xFF	; 255
    4c34:	0f b6       	in	r0, 0x3f	; 63
    4c36:	f8 94       	cli
    4c38:	de bf       	out	0x3e, r29	; 62
    4c3a:	0f be       	out	0x3f, r0	; 63
    4c3c:	cd bf       	out	0x3d, r28	; 61
    4c3e:	df 91       	pop	r29
    4c40:	cf 91       	pop	r28
    4c42:	1f 91       	pop	r17
    4c44:	0f 91       	pop	r16
    4c46:	ef 90       	pop	r14
    4c48:	df 90       	pop	r13
    4c4a:	cf 90       	pop	r12
    4c4c:	bf 90       	pop	r11
    4c4e:	af 90       	pop	r10
    4c50:	08 95       	ret

00004c52 <_ZN14TFT_22_ILI922510_setWindowEjjjj>:
    4c52:	ef 92       	push	r14
    4c54:	0f 93       	push	r16
    4c56:	1f 93       	push	r17
    4c58:	e7 e0       	ldi	r30, 0x07	; 7
    4c5a:	ee 2e       	mov	r14, r30
    4c5c:	0e 94 b0 24 	call	0x4960	; 0x4960 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t>
    4c60:	1f 91       	pop	r17
    4c62:	0f 91       	pop	r16
    4c64:	ef 90       	pop	r14
    4c66:	08 95       	ret

00004c68 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj>:
    4c68:	6f 92       	push	r6
    4c6a:	7f 92       	push	r7
    4c6c:	8f 92       	push	r8
    4c6e:	9f 92       	push	r9
    4c70:	af 92       	push	r10
    4c72:	bf 92       	push	r11
    4c74:	cf 92       	push	r12
    4c76:	df 92       	push	r13
    4c78:	ef 92       	push	r14
    4c7a:	ff 92       	push	r15
    4c7c:	0f 93       	push	r16
    4c7e:	1f 93       	push	r17
    4c80:	cf 93       	push	r28
    4c82:	df 93       	push	r29
    4c84:	5c 01       	movw	r10, r24
    4c86:	4b 01       	movw	r8, r22
    4c88:	3a 01       	movw	r6, r20
    4c8a:	e9 01       	movw	r28, r18
    4c8c:	68 01       	movw	r12, r16
    4c8e:	0e 94 29 26 	call	0x4c52	; 0x4c52 <_ZN14TFT_22_ILI922510_setWindowEjjjj>
    4c92:	c5 01       	movw	r24, r10
    4c94:	0e 94 41 24 	call	0x4882	; 0x4882 <_ZN14TFT_22_ILI922510startWriteEv>
    4c98:	8f ef       	ldi	r24, 0xFF	; 255
    4c9a:	c8 1a       	sub	r12, r24
    4c9c:	d8 0a       	sbc	r13, r24
    4c9e:	c6 18       	sub	r12, r6
    4ca0:	d7 08       	sbc	r13, r7
    4ca2:	21 96       	adiw	r28, 0x01	; 1
    4ca4:	c8 19       	sub	r28, r8
    4ca6:	d9 09       	sbc	r29, r9
    4ca8:	cc 9e       	mul	r12, r28
    4caa:	40 01       	movw	r8, r0
    4cac:	cd 9e       	mul	r12, r29
    4cae:	90 0c       	add	r9, r0
    4cb0:	dc 9e       	mul	r13, r28
    4cb2:	90 0c       	add	r9, r0
    4cb4:	11 24       	eor	r1, r1
    4cb6:	81 14       	cp	r8, r1
    4cb8:	91 04       	cpc	r9, r1
    4cba:	41 f0       	breq	.+16     	; 0x4ccc <_ZN14TFT_22_ILI922513fillRectangleEjjjjj+0x64>
    4cbc:	b7 01       	movw	r22, r14
    4cbe:	c5 01       	movw	r24, r10
    4cc0:	0e 94 9d 23 	call	0x473a	; 0x473a <_ZN14TFT_22_ILI922512_writeData16Ej>
    4cc4:	81 e0       	ldi	r24, 0x01	; 1
    4cc6:	88 1a       	sub	r8, r24
    4cc8:	91 08       	sbc	r9, r1
    4cca:	f5 cf       	rjmp	.-22     	; 0x4cb6 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj+0x4e>
    4ccc:	c5 01       	movw	r24, r10
    4cce:	0e 94 80 24 	call	0x4900	; 0x4900 <_ZN14TFT_22_ILI92258endWriteEv>
    4cd2:	c5 01       	movw	r24, r10
    4cd4:	df 91       	pop	r29
    4cd6:	cf 91       	pop	r28
    4cd8:	1f 91       	pop	r17
    4cda:	0f 91       	pop	r16
    4cdc:	ff 90       	pop	r15
    4cde:	ef 90       	pop	r14
    4ce0:	df 90       	pop	r13
    4ce2:	cf 90       	pop	r12
    4ce4:	bf 90       	pop	r11
    4ce6:	af 90       	pop	r10
    4ce8:	9f 90       	pop	r9
    4cea:	8f 90       	pop	r8
    4cec:	7f 90       	pop	r7
    4cee:	6f 90       	pop	r6
    4cf0:	0c 94 f6 23 	jmp	0x47ec	; 0x47ec <_ZN14TFT_22_ILI922512_resetWindowEv>

00004cf4 <_ZN14TFT_22_ILI92255clearEv>:
    4cf4:	df 92       	push	r13
    4cf6:	ef 92       	push	r14
    4cf8:	ff 92       	push	r15
    4cfa:	0f 93       	push	r16
    4cfc:	1f 93       	push	r17
    4cfe:	cf 93       	push	r28
    4d00:	df 93       	push	r29
    4d02:	ec 01       	movw	r28, r24
    4d04:	da 8c       	ldd	r13, Y+26	; 0x1a
    4d06:	60 e0       	ldi	r22, 0x00	; 0
    4d08:	0e 94 3a 23 	call	0x4674	; 0x4674 <_ZN14TFT_22_ILI922514setOrientationEh>
    4d0c:	0a 81       	ldd	r16, Y+2	; 0x02
    4d0e:	1b 81       	ldd	r17, Y+3	; 0x03
    4d10:	01 50       	subi	r16, 0x01	; 1
    4d12:	11 09       	sbc	r17, r1
    4d14:	28 81       	ld	r18, Y
    4d16:	39 81       	ldd	r19, Y+1	; 0x01
    4d18:	21 50       	subi	r18, 0x01	; 1
    4d1a:	31 09       	sbc	r19, r1
    4d1c:	e1 2c       	mov	r14, r1
    4d1e:	f1 2c       	mov	r15, r1
    4d20:	40 e0       	ldi	r20, 0x00	; 0
    4d22:	50 e0       	ldi	r21, 0x00	; 0
    4d24:	60 e0       	ldi	r22, 0x00	; 0
    4d26:	70 e0       	ldi	r23, 0x00	; 0
    4d28:	ce 01       	movw	r24, r28
    4d2a:	0e 94 34 26 	call	0x4c68	; 0x4c68 <_ZN14TFT_22_ILI922513fillRectangleEjjjjj>
    4d2e:	6d 2d       	mov	r22, r13
    4d30:	ce 01       	movw	r24, r28
    4d32:	0e 94 3a 23 	call	0x4674	; 0x4674 <_ZN14TFT_22_ILI922514setOrientationEh>
    4d36:	6a e0       	ldi	r22, 0x0A	; 10
    4d38:	70 e0       	ldi	r23, 0x00	; 0
    4d3a:	80 e0       	ldi	r24, 0x00	; 0
    4d3c:	90 e0       	ldi	r25, 0x00	; 0
    4d3e:	df 91       	pop	r29
    4d40:	cf 91       	pop	r28
    4d42:	1f 91       	pop	r17
    4d44:	0f 91       	pop	r16
    4d46:	ff 90       	pop	r15
    4d48:	ef 90       	pop	r14
    4d4a:	df 90       	pop	r13
    4d4c:	0c 94 32 1d 	jmp	0x3a64	; 0x3a64 <delay>

00004d50 <_ZN14TFT_22_ILI92255beginEv>:
    4d50:	cf 93       	push	r28
    4d52:	df 93       	push	r29
    4d54:	ec 01       	movw	r28, r24
    4d56:	8e 81       	ldd	r24, Y+6	; 0x06
    4d58:	18 16       	cp	r1, r24
    4d5a:	3c f4       	brge	.+14     	; 0x4d6a <_ZN14TFT_22_ILI92255beginEv+0x1a>
    4d5c:	61 e0       	ldi	r22, 0x01	; 1
    4d5e:	0e 94 ad 2e 	call	0x5d5a	; 0x5d5a <pinMode>
    4d62:	60 e0       	ldi	r22, 0x00	; 0
    4d64:	8e 81       	ldd	r24, Y+6	; 0x06
    4d66:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <digitalWrite>
    4d6a:	8b 85       	ldd	r24, Y+11	; 0x0b
    4d6c:	18 16       	cp	r1, r24
    4d6e:	3c f4       	brge	.+14     	; 0x4d7e <_ZN14TFT_22_ILI92255beginEv+0x2e>
    4d70:	61 e0       	ldi	r22, 0x01	; 1
    4d72:	0e 94 ad 2e 	call	0x5d5a	; 0x5d5a <pinMode>
    4d76:	60 e0       	ldi	r22, 0x00	; 0
    4d78:	ce 01       	movw	r24, r28
    4d7a:	0e 94 2b 23 	call	0x4656	; 0x4656 <_ZN14TFT_22_ILI922512setBacklightEb>
    4d7e:	61 e0       	ldi	r22, 0x01	; 1
    4d80:	8f 81       	ldd	r24, Y+7	; 0x07
    4d82:	0e 94 ad 2e 	call	0x5d5a	; 0x5d5a <pinMode>
    4d86:	60 e0       	ldi	r22, 0x00	; 0
    4d88:	8f 81       	ldd	r24, Y+7	; 0x07
    4d8a:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <digitalWrite>
    4d8e:	61 e0       	ldi	r22, 0x01	; 1
    4d90:	88 85       	ldd	r24, Y+8	; 0x08
    4d92:	0e 94 ad 2e 	call	0x5d5a	; 0x5d5a <pinMode>
    4d96:	61 e0       	ldi	r22, 0x01	; 1
    4d98:	88 85       	ldd	r24, Y+8	; 0x08
    4d9a:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <digitalWrite>
    4d9e:	88 85       	ldd	r24, Y+8	; 0x08
    4da0:	08 2e       	mov	r0, r24
    4da2:	00 0c       	add	r0, r0
    4da4:	99 0b       	sbc	r25, r25
    4da6:	fc 01       	movw	r30, r24
    4da8:	e9 5f       	subi	r30, 0xF9	; 249
    4daa:	f8 4d       	sbci	r31, 0xD8	; 216
    4dac:	e4 91       	lpm	r30, Z
    4dae:	f0 e0       	ldi	r31, 0x00	; 0
    4db0:	ee 0f       	add	r30, r30
    4db2:	ff 1f       	adc	r31, r31
    4db4:	e5 5e       	subi	r30, 0xE5	; 229
    4db6:	f8 4d       	sbci	r31, 0xD8	; 216
    4db8:	25 91       	lpm	r18, Z+
    4dba:	34 91       	lpm	r19, Z
    4dbc:	3d 8b       	std	Y+21, r19	; 0x15
    4dbe:	2c 8b       	std	Y+20, r18	; 0x14
    4dc0:	fc 01       	movw	r30, r24
    4dc2:	ed 50       	subi	r30, 0x0D	; 13
    4dc4:	f9 4d       	sbci	r31, 0xD9	; 217
    4dc6:	e4 91       	lpm	r30, Z
    4dc8:	e8 8f       	std	Y+24, r30	; 0x18
    4dca:	8f 81       	ldd	r24, Y+7	; 0x07
    4dcc:	08 2e       	mov	r0, r24
    4dce:	00 0c       	add	r0, r0
    4dd0:	99 0b       	sbc	r25, r25
    4dd2:	fc 01       	movw	r30, r24
    4dd4:	e9 5f       	subi	r30, 0xF9	; 249
    4dd6:	f8 4d       	sbci	r31, 0xD8	; 216
    4dd8:	e4 91       	lpm	r30, Z
    4dda:	f0 e0       	ldi	r31, 0x00	; 0
    4ddc:	ee 0f       	add	r30, r30
    4dde:	ff 1f       	adc	r31, r31
    4de0:	e5 5e       	subi	r30, 0xE5	; 229
    4de2:	f8 4d       	sbci	r31, 0xD8	; 216
    4de4:	25 91       	lpm	r18, Z+
    4de6:	34 91       	lpm	r19, Z
    4de8:	39 8b       	std	Y+17, r19	; 0x11
    4dea:	28 8b       	std	Y+16, r18	; 0x10
    4dec:	fc 01       	movw	r30, r24
    4dee:	ed 50       	subi	r30, 0x0D	; 13
    4df0:	f9 4d       	sbci	r31, 0xD9	; 217
    4df2:	e4 91       	lpm	r30, Z
    4df4:	e9 8f       	std	Y+25, r30	; 0x19
    4df6:	8a 85       	ldd	r24, Y+10	; 0x0a
    4df8:	87 fd       	sbrc	r24, 7
    4dfa:	49 c0       	rjmp	.+146    	; 0x4e8e <_ZN14TFT_22_ILI92255beginEv+0x13e>
    4dfc:	61 e0       	ldi	r22, 0x01	; 1
    4dfe:	89 85       	ldd	r24, Y+9	; 0x09
    4e00:	0e 94 ad 2e 	call	0x5d5a	; 0x5d5a <pinMode>
    4e04:	60 e0       	ldi	r22, 0x00	; 0
    4e06:	89 85       	ldd	r24, Y+9	; 0x09
    4e08:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <digitalWrite>
    4e0c:	61 e0       	ldi	r22, 0x01	; 1
    4e0e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4e10:	0e 94 ad 2e 	call	0x5d5a	; 0x5d5a <pinMode>
    4e14:	61 e0       	ldi	r22, 0x01	; 1
    4e16:	8a 85       	ldd	r24, Y+10	; 0x0a
    4e18:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <digitalWrite>
    4e1c:	8a 85       	ldd	r24, Y+10	; 0x0a
    4e1e:	08 2e       	mov	r0, r24
    4e20:	00 0c       	add	r0, r0
    4e22:	99 0b       	sbc	r25, r25
    4e24:	fc 01       	movw	r30, r24
    4e26:	e9 5f       	subi	r30, 0xF9	; 249
    4e28:	f8 4d       	sbci	r31, 0xD8	; 216
    4e2a:	e4 91       	lpm	r30, Z
    4e2c:	f0 e0       	ldi	r31, 0x00	; 0
    4e2e:	ee 0f       	add	r30, r30
    4e30:	ff 1f       	adc	r31, r31
    4e32:	e5 5e       	subi	r30, 0xE5	; 229
    4e34:	f8 4d       	sbci	r31, 0xD8	; 216
    4e36:	a5 91       	lpm	r26, Z+
    4e38:	b4 91       	lpm	r27, Z
    4e3a:	bf 87       	std	Y+15, r27	; 0x0f
    4e3c:	ae 87       	std	Y+14, r26	; 0x0e
    4e3e:	fc 01       	movw	r30, r24
    4e40:	ed 50       	subi	r30, 0x0D	; 13
    4e42:	f9 4d       	sbci	r31, 0xD9	; 217
    4e44:	84 91       	lpm	r24, Z
    4e46:	8f 8b       	std	Y+23, r24	; 0x17
    4e48:	29 85       	ldd	r18, Y+9	; 0x09
    4e4a:	02 2e       	mov	r0, r18
    4e4c:	00 0c       	add	r0, r0
    4e4e:	33 0b       	sbc	r19, r19
    4e50:	f9 01       	movw	r30, r18
    4e52:	e9 5f       	subi	r30, 0xF9	; 249
    4e54:	f8 4d       	sbci	r31, 0xD8	; 216
    4e56:	e4 91       	lpm	r30, Z
    4e58:	f0 e0       	ldi	r31, 0x00	; 0
    4e5a:	ee 0f       	add	r30, r30
    4e5c:	ff 1f       	adc	r31, r31
    4e5e:	e5 5e       	subi	r30, 0xE5	; 229
    4e60:	f8 4d       	sbci	r31, 0xD8	; 216
    4e62:	45 91       	lpm	r20, Z+
    4e64:	54 91       	lpm	r21, Z
    4e66:	5d 87       	std	Y+13, r21	; 0x0d
    4e68:	4c 87       	std	Y+12, r20	; 0x0c
    4e6a:	f9 01       	movw	r30, r18
    4e6c:	ed 50       	subi	r30, 0x0D	; 13
    4e6e:	f9 4d       	sbci	r31, 0xD9	; 217
    4e70:	e4 91       	lpm	r30, Z
    4e72:	ee 8b       	std	Y+22, r30	; 0x16
    4e74:	9c 91       	ld	r25, X
    4e76:	e8 2f       	mov	r30, r24
    4e78:	e0 95       	com	r30
    4e7a:	e9 23       	and	r30, r25
    4e7c:	ec 93       	st	X, r30
    4e7e:	ec 85       	ldd	r30, Y+12	; 0x0c
    4e80:	fd 85       	ldd	r31, Y+13	; 0x0d
    4e82:	90 81       	ld	r25, Z
    4e84:	8e 89       	ldd	r24, Y+22	; 0x16
    4e86:	80 95       	com	r24
    4e88:	89 23       	and	r24, r25
    4e8a:	80 83       	st	Z, r24
    4e8c:	06 c0       	rjmp	.+12     	; 0x4e9a <_ZN14TFT_22_ILI92255beginEv+0x14a>
    4e8e:	1f 86       	std	Y+15, r1	; 0x0f
    4e90:	1e 86       	std	Y+14, r1	; 0x0e
    4e92:	1f 8a       	std	Y+23, r1	; 0x17
    4e94:	1d 86       	std	Y+13, r1	; 0x0d
    4e96:	1c 86       	std	Y+12, r1	; 0x0c
    4e98:	1e 8a       	std	Y+22, r1	; 0x16
    4e9a:	8a 85       	ldd	r24, Y+10	; 0x0a
    4e9c:	87 fd       	sbrc	r24, 7
    4e9e:	0e 94 18 2f 	call	0x5e30	; 0x5e30 <_ZN8SPIClass5beginEv>
    4ea2:	8e 81       	ldd	r24, Y+6	; 0x06
    4ea4:	18 16       	cp	r1, r24
    4ea6:	ec f4       	brge	.+58     	; 0x4ee2 <_ZN14TFT_22_ILI92255beginEv+0x192>
    4ea8:	61 e0       	ldi	r22, 0x01	; 1
    4eaa:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <digitalWrite>
    4eae:	61 e0       	ldi	r22, 0x01	; 1
    4eb0:	70 e0       	ldi	r23, 0x00	; 0
    4eb2:	80 e0       	ldi	r24, 0x00	; 0
    4eb4:	90 e0       	ldi	r25, 0x00	; 0
    4eb6:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <delay>
    4eba:	60 e0       	ldi	r22, 0x00	; 0
    4ebc:	8e 81       	ldd	r24, Y+6	; 0x06
    4ebe:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <digitalWrite>
    4ec2:	6a e0       	ldi	r22, 0x0A	; 10
    4ec4:	70 e0       	ldi	r23, 0x00	; 0
    4ec6:	80 e0       	ldi	r24, 0x00	; 0
    4ec8:	90 e0       	ldi	r25, 0x00	; 0
    4eca:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <delay>
    4ece:	61 e0       	ldi	r22, 0x01	; 1
    4ed0:	8e 81       	ldd	r24, Y+6	; 0x06
    4ed2:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <digitalWrite>
    4ed6:	62 e3       	ldi	r22, 0x32	; 50
    4ed8:	70 e0       	ldi	r23, 0x00	; 0
    4eda:	80 e0       	ldi	r24, 0x00	; 0
    4edc:	90 e0       	ldi	r25, 0x00	; 0
    4ede:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <delay>
    4ee2:	ce 01       	movw	r24, r28
    4ee4:	0e 94 41 24 	call	0x4882	; 0x4882 <_ZN14TFT_22_ILI922510startWriteEv>
    4ee8:	40 e0       	ldi	r20, 0x00	; 0
    4eea:	50 e0       	ldi	r21, 0x00	; 0
    4eec:	60 e1       	ldi	r22, 0x10	; 16
    4eee:	70 e0       	ldi	r23, 0x00	; 0
    4ef0:	ce 01       	movw	r24, r28
    4ef2:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4ef6:	40 e0       	ldi	r20, 0x00	; 0
    4ef8:	50 e0       	ldi	r21, 0x00	; 0
    4efa:	61 e1       	ldi	r22, 0x11	; 17
    4efc:	70 e0       	ldi	r23, 0x00	; 0
    4efe:	ce 01       	movw	r24, r28
    4f00:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4f04:	40 e0       	ldi	r20, 0x00	; 0
    4f06:	50 e0       	ldi	r21, 0x00	; 0
    4f08:	62 e1       	ldi	r22, 0x12	; 18
    4f0a:	70 e0       	ldi	r23, 0x00	; 0
    4f0c:	ce 01       	movw	r24, r28
    4f0e:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4f12:	40 e0       	ldi	r20, 0x00	; 0
    4f14:	50 e0       	ldi	r21, 0x00	; 0
    4f16:	63 e1       	ldi	r22, 0x13	; 19
    4f18:	70 e0       	ldi	r23, 0x00	; 0
    4f1a:	ce 01       	movw	r24, r28
    4f1c:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4f20:	40 e0       	ldi	r20, 0x00	; 0
    4f22:	50 e0       	ldi	r21, 0x00	; 0
    4f24:	64 e1       	ldi	r22, 0x14	; 20
    4f26:	70 e0       	ldi	r23, 0x00	; 0
    4f28:	ce 01       	movw	r24, r28
    4f2a:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4f2e:	ce 01       	movw	r24, r28
    4f30:	0e 94 80 24 	call	0x4900	; 0x4900 <_ZN14TFT_22_ILI92258endWriteEv>
    4f34:	68 e2       	ldi	r22, 0x28	; 40
    4f36:	70 e0       	ldi	r23, 0x00	; 0
    4f38:	80 e0       	ldi	r24, 0x00	; 0
    4f3a:	90 e0       	ldi	r25, 0x00	; 0
    4f3c:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <delay>
    4f40:	ce 01       	movw	r24, r28
    4f42:	0e 94 41 24 	call	0x4882	; 0x4882 <_ZN14TFT_22_ILI922510startWriteEv>
    4f46:	48 e1       	ldi	r20, 0x18	; 24
    4f48:	50 e0       	ldi	r21, 0x00	; 0
    4f4a:	61 e1       	ldi	r22, 0x11	; 17
    4f4c:	70 e0       	ldi	r23, 0x00	; 0
    4f4e:	ce 01       	movw	r24, r28
    4f50:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4f54:	41 e2       	ldi	r20, 0x21	; 33
    4f56:	51 e6       	ldi	r21, 0x61	; 97
    4f58:	62 e1       	ldi	r22, 0x12	; 18
    4f5a:	70 e0       	ldi	r23, 0x00	; 0
    4f5c:	ce 01       	movw	r24, r28
    4f5e:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4f62:	4f e6       	ldi	r20, 0x6F	; 111
    4f64:	50 e0       	ldi	r21, 0x00	; 0
    4f66:	63 e1       	ldi	r22, 0x13	; 19
    4f68:	70 e0       	ldi	r23, 0x00	; 0
    4f6a:	ce 01       	movw	r24, r28
    4f6c:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4f70:	4f e5       	ldi	r20, 0x5F	; 95
    4f72:	59 e4       	ldi	r21, 0x49	; 73
    4f74:	64 e1       	ldi	r22, 0x14	; 20
    4f76:	70 e0       	ldi	r23, 0x00	; 0
    4f78:	ce 01       	movw	r24, r28
    4f7a:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4f7e:	40 e0       	ldi	r20, 0x00	; 0
    4f80:	58 e0       	ldi	r21, 0x08	; 8
    4f82:	60 e1       	ldi	r22, 0x10	; 16
    4f84:	70 e0       	ldi	r23, 0x00	; 0
    4f86:	ce 01       	movw	r24, r28
    4f88:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4f8c:	ce 01       	movw	r24, r28
    4f8e:	0e 94 80 24 	call	0x4900	; 0x4900 <_ZN14TFT_22_ILI92258endWriteEv>
    4f92:	6a e0       	ldi	r22, 0x0A	; 10
    4f94:	70 e0       	ldi	r23, 0x00	; 0
    4f96:	80 e0       	ldi	r24, 0x00	; 0
    4f98:	90 e0       	ldi	r25, 0x00	; 0
    4f9a:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <delay>
    4f9e:	ce 01       	movw	r24, r28
    4fa0:	0e 94 41 24 	call	0x4882	; 0x4882 <_ZN14TFT_22_ILI922510startWriteEv>
    4fa4:	4b e3       	ldi	r20, 0x3B	; 59
    4fa6:	50 e1       	ldi	r21, 0x10	; 16
    4fa8:	61 e1       	ldi	r22, 0x11	; 17
    4faa:	70 e0       	ldi	r23, 0x00	; 0
    4fac:	ce 01       	movw	r24, r28
    4fae:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4fb2:	ce 01       	movw	r24, r28
    4fb4:	0e 94 80 24 	call	0x4900	; 0x4900 <_ZN14TFT_22_ILI92258endWriteEv>
    4fb8:	62 e3       	ldi	r22, 0x32	; 50
    4fba:	70 e0       	ldi	r23, 0x00	; 0
    4fbc:	80 e0       	ldi	r24, 0x00	; 0
    4fbe:	90 e0       	ldi	r25, 0x00	; 0
    4fc0:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <delay>
    4fc4:	ce 01       	movw	r24, r28
    4fc6:	0e 94 41 24 	call	0x4882	; 0x4882 <_ZN14TFT_22_ILI922510startWriteEv>
    4fca:	4c e1       	ldi	r20, 0x1C	; 28
    4fcc:	51 e0       	ldi	r21, 0x01	; 1
    4fce:	61 e0       	ldi	r22, 0x01	; 1
    4fd0:	70 e0       	ldi	r23, 0x00	; 0
    4fd2:	ce 01       	movw	r24, r28
    4fd4:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4fd8:	40 e0       	ldi	r20, 0x00	; 0
    4fda:	51 e0       	ldi	r21, 0x01	; 1
    4fdc:	62 e0       	ldi	r22, 0x02	; 2
    4fde:	70 e0       	ldi	r23, 0x00	; 0
    4fe0:	ce 01       	movw	r24, r28
    4fe2:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4fe6:	48 e3       	ldi	r20, 0x38	; 56
    4fe8:	50 e1       	ldi	r21, 0x10	; 16
    4fea:	63 e0       	ldi	r22, 0x03	; 3
    4fec:	70 e0       	ldi	r23, 0x00	; 0
    4fee:	ce 01       	movw	r24, r28
    4ff0:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    4ff4:	40 e0       	ldi	r20, 0x00	; 0
    4ff6:	50 e0       	ldi	r21, 0x00	; 0
    4ff8:	67 e0       	ldi	r22, 0x07	; 7
    4ffa:	70 e0       	ldi	r23, 0x00	; 0
    4ffc:	ce 01       	movw	r24, r28
    4ffe:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    5002:	48 e0       	ldi	r20, 0x08	; 8
    5004:	58 e0       	ldi	r21, 0x08	; 8
    5006:	68 e0       	ldi	r22, 0x08	; 8
    5008:	70 e0       	ldi	r23, 0x00	; 0
    500a:	ce 01       	movw	r24, r28
    500c:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    5010:	40 e0       	ldi	r20, 0x00	; 0
    5012:	51 e1       	ldi	r21, 0x11	; 17
    5014:	6b e0       	ldi	r22, 0x0B	; 11
    5016:	70 e0       	ldi	r23, 0x00	; 0
    5018:	ce 01       	movw	r24, r28
    501a:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    501e:	40 e0       	ldi	r20, 0x00	; 0
    5020:	50 e0       	ldi	r21, 0x00	; 0
    5022:	6c e0       	ldi	r22, 0x0C	; 12
    5024:	70 e0       	ldi	r23, 0x00	; 0
    5026:	ce 01       	movw	r24, r28
    5028:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    502c:	41 e0       	ldi	r20, 0x01	; 1
    502e:	5d e0       	ldi	r21, 0x0D	; 13
    5030:	6f e0       	ldi	r22, 0x0F	; 15
    5032:	70 e0       	ldi	r23, 0x00	; 0
    5034:	ce 01       	movw	r24, r28
    5036:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    503a:	40 e2       	ldi	r20, 0x20	; 32
    503c:	50 e0       	ldi	r21, 0x00	; 0
    503e:	65 e1       	ldi	r22, 0x15	; 21
    5040:	70 e0       	ldi	r23, 0x00	; 0
    5042:	ce 01       	movw	r24, r28
    5044:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    5048:	40 e0       	ldi	r20, 0x00	; 0
    504a:	50 e0       	ldi	r21, 0x00	; 0
    504c:	60 e2       	ldi	r22, 0x20	; 32
    504e:	70 e0       	ldi	r23, 0x00	; 0
    5050:	ce 01       	movw	r24, r28
    5052:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    5056:	40 e0       	ldi	r20, 0x00	; 0
    5058:	50 e0       	ldi	r21, 0x00	; 0
    505a:	61 e2       	ldi	r22, 0x21	; 33
    505c:	70 e0       	ldi	r23, 0x00	; 0
    505e:	ce 01       	movw	r24, r28
    5060:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    5064:	40 e0       	ldi	r20, 0x00	; 0
    5066:	50 e0       	ldi	r21, 0x00	; 0
    5068:	60 e3       	ldi	r22, 0x30	; 48
    506a:	70 e0       	ldi	r23, 0x00	; 0
    506c:	ce 01       	movw	r24, r28
    506e:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    5072:	4b ed       	ldi	r20, 0xDB	; 219
    5074:	50 e0       	ldi	r21, 0x00	; 0
    5076:	61 e3       	ldi	r22, 0x31	; 49
    5078:	70 e0       	ldi	r23, 0x00	; 0
    507a:	ce 01       	movw	r24, r28
    507c:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    5080:	40 e0       	ldi	r20, 0x00	; 0
    5082:	50 e0       	ldi	r21, 0x00	; 0
    5084:	62 e3       	ldi	r22, 0x32	; 50
    5086:	70 e0       	ldi	r23, 0x00	; 0
    5088:	ce 01       	movw	r24, r28
    508a:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    508e:	40 e0       	ldi	r20, 0x00	; 0
    5090:	50 e0       	ldi	r21, 0x00	; 0
    5092:	63 e3       	ldi	r22, 0x33	; 51
    5094:	70 e0       	ldi	r23, 0x00	; 0
    5096:	ce 01       	movw	r24, r28
    5098:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    509c:	4b ed       	ldi	r20, 0xDB	; 219
    509e:	50 e0       	ldi	r21, 0x00	; 0
    50a0:	64 e3       	ldi	r22, 0x34	; 52
    50a2:	70 e0       	ldi	r23, 0x00	; 0
    50a4:	ce 01       	movw	r24, r28
    50a6:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    50aa:	40 e0       	ldi	r20, 0x00	; 0
    50ac:	50 e0       	ldi	r21, 0x00	; 0
    50ae:	65 e3       	ldi	r22, 0x35	; 53
    50b0:	70 e0       	ldi	r23, 0x00	; 0
    50b2:	ce 01       	movw	r24, r28
    50b4:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    50b8:	4f ea       	ldi	r20, 0xAF	; 175
    50ba:	50 e0       	ldi	r21, 0x00	; 0
    50bc:	66 e3       	ldi	r22, 0x36	; 54
    50be:	70 e0       	ldi	r23, 0x00	; 0
    50c0:	ce 01       	movw	r24, r28
    50c2:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    50c6:	40 e0       	ldi	r20, 0x00	; 0
    50c8:	50 e0       	ldi	r21, 0x00	; 0
    50ca:	67 e3       	ldi	r22, 0x37	; 55
    50cc:	70 e0       	ldi	r23, 0x00	; 0
    50ce:	ce 01       	movw	r24, r28
    50d0:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    50d4:	4b ed       	ldi	r20, 0xDB	; 219
    50d6:	50 e0       	ldi	r21, 0x00	; 0
    50d8:	68 e3       	ldi	r22, 0x38	; 56
    50da:	70 e0       	ldi	r23, 0x00	; 0
    50dc:	ce 01       	movw	r24, r28
    50de:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    50e2:	40 e0       	ldi	r20, 0x00	; 0
    50e4:	50 e0       	ldi	r21, 0x00	; 0
    50e6:	69 e3       	ldi	r22, 0x39	; 57
    50e8:	70 e0       	ldi	r23, 0x00	; 0
    50ea:	ce 01       	movw	r24, r28
    50ec:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    50f0:	40 e0       	ldi	r20, 0x00	; 0
    50f2:	50 e0       	ldi	r21, 0x00	; 0
    50f4:	60 e5       	ldi	r22, 0x50	; 80
    50f6:	70 e0       	ldi	r23, 0x00	; 0
    50f8:	ce 01       	movw	r24, r28
    50fa:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    50fe:	48 e0       	ldi	r20, 0x08	; 8
    5100:	58 e0       	ldi	r21, 0x08	; 8
    5102:	61 e5       	ldi	r22, 0x51	; 81
    5104:	70 e0       	ldi	r23, 0x00	; 0
    5106:	ce 01       	movw	r24, r28
    5108:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    510c:	4a e0       	ldi	r20, 0x0A	; 10
    510e:	58 e0       	ldi	r21, 0x08	; 8
    5110:	62 e5       	ldi	r22, 0x52	; 82
    5112:	70 e0       	ldi	r23, 0x00	; 0
    5114:	ce 01       	movw	r24, r28
    5116:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    511a:	4a e0       	ldi	r20, 0x0A	; 10
    511c:	50 e0       	ldi	r21, 0x00	; 0
    511e:	63 e5       	ldi	r22, 0x53	; 83
    5120:	70 e0       	ldi	r23, 0x00	; 0
    5122:	ce 01       	movw	r24, r28
    5124:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    5128:	48 e0       	ldi	r20, 0x08	; 8
    512a:	5a e0       	ldi	r21, 0x0A	; 10
    512c:	64 e5       	ldi	r22, 0x54	; 84
    512e:	70 e0       	ldi	r23, 0x00	; 0
    5130:	ce 01       	movw	r24, r28
    5132:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    5136:	48 e0       	ldi	r20, 0x08	; 8
    5138:	58 e0       	ldi	r21, 0x08	; 8
    513a:	65 e5       	ldi	r22, 0x55	; 85
    513c:	70 e0       	ldi	r23, 0x00	; 0
    513e:	ce 01       	movw	r24, r28
    5140:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    5144:	40 e0       	ldi	r20, 0x00	; 0
    5146:	50 e0       	ldi	r21, 0x00	; 0
    5148:	66 e5       	ldi	r22, 0x56	; 86
    514a:	70 e0       	ldi	r23, 0x00	; 0
    514c:	ce 01       	movw	r24, r28
    514e:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    5152:	40 e0       	ldi	r20, 0x00	; 0
    5154:	5a e0       	ldi	r21, 0x0A	; 10
    5156:	67 e5       	ldi	r22, 0x57	; 87
    5158:	70 e0       	ldi	r23, 0x00	; 0
    515a:	ce 01       	movw	r24, r28
    515c:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    5160:	40 e1       	ldi	r20, 0x10	; 16
    5162:	57 e0       	ldi	r21, 0x07	; 7
    5164:	68 e5       	ldi	r22, 0x58	; 88
    5166:	70 e0       	ldi	r23, 0x00	; 0
    5168:	ce 01       	movw	r24, r28
    516a:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    516e:	40 e1       	ldi	r20, 0x10	; 16
    5170:	57 e0       	ldi	r21, 0x07	; 7
    5172:	69 e5       	ldi	r22, 0x59	; 89
    5174:	70 e0       	ldi	r23, 0x00	; 0
    5176:	ce 01       	movw	r24, r28
    5178:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    517c:	42 e1       	ldi	r20, 0x12	; 18
    517e:	50 e0       	ldi	r21, 0x00	; 0
    5180:	67 e0       	ldi	r22, 0x07	; 7
    5182:	70 e0       	ldi	r23, 0x00	; 0
    5184:	ce 01       	movw	r24, r28
    5186:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    518a:	ce 01       	movw	r24, r28
    518c:	0e 94 80 24 	call	0x4900	; 0x4900 <_ZN14TFT_22_ILI92258endWriteEv>
    5190:	62 e3       	ldi	r22, 0x32	; 50
    5192:	70 e0       	ldi	r23, 0x00	; 0
    5194:	80 e0       	ldi	r24, 0x00	; 0
    5196:	90 e0       	ldi	r25, 0x00	; 0
    5198:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <delay>
    519c:	ce 01       	movw	r24, r28
    519e:	0e 94 41 24 	call	0x4882	; 0x4882 <_ZN14TFT_22_ILI922510startWriteEv>
    51a2:	47 e1       	ldi	r20, 0x17	; 23
    51a4:	50 e1       	ldi	r21, 0x10	; 16
    51a6:	67 e0       	ldi	r22, 0x07	; 7
    51a8:	70 e0       	ldi	r23, 0x00	; 0
    51aa:	ce 01       	movw	r24, r28
    51ac:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    51b0:	ce 01       	movw	r24, r28
    51b2:	0e 94 80 24 	call	0x4900	; 0x4900 <_ZN14TFT_22_ILI92258endWriteEv>
    51b6:	61 e0       	ldi	r22, 0x01	; 1
    51b8:	ce 01       	movw	r24, r28
    51ba:	0e 94 2b 23 	call	0x4656	; 0x4656 <_ZN14TFT_22_ILI922512setBacklightEb>
    51be:	60 e0       	ldi	r22, 0x00	; 0
    51c0:	ce 01       	movw	r24, r28
    51c2:	0e 94 3a 23 	call	0x4674	; 0x4674 <_ZN14TFT_22_ILI922514setOrientationEh>
    51c6:	1d 82       	std	Y+5, r1	; 0x05
    51c8:	1c 82       	std	Y+4, r1	; 0x04
    51ca:	ce 01       	movw	r24, r28
    51cc:	df 91       	pop	r29
    51ce:	cf 91       	pop	r28
    51d0:	0c 94 7a 26 	jmp	0x4cf4	; 0x4cf4 <_ZN14TFT_22_ILI92255clearEv>

000051d4 <_ZN14TFT_22_ILI92259drawPixelEjjj>:
    51d4:	ef 92       	push	r14
    51d6:	ff 92       	push	r15
    51d8:	0f 93       	push	r16
    51da:	1f 93       	push	r17
    51dc:	cf 93       	push	r28
    51de:	df 93       	push	r29
    51e0:	00 d0       	rcall	.+0      	; 0x51e2 <_ZN14TFT_22_ILI92259drawPixelEjjj+0xe>
    51e2:	00 d0       	rcall	.+0      	; 0x51e4 <_ZN14TFT_22_ILI92259drawPixelEjjj+0x10>
    51e4:	cd b7       	in	r28, 0x3d	; 61
    51e6:	de b7       	in	r29, 0x3e	; 62
    51e8:	7a 83       	std	Y+2, r23	; 0x02
    51ea:	69 83       	std	Y+1, r22	; 0x01
    51ec:	5c 83       	std	Y+4, r21	; 0x04
    51ee:	4b 83       	std	Y+3, r20	; 0x03
    51f0:	dc 01       	movw	r26, r24
    51f2:	4d 91       	ld	r20, X+
    51f4:	5c 91       	ld	r21, X
    51f6:	11 97       	sbiw	r26, 0x01	; 1
    51f8:	64 17       	cp	r22, r20
    51fa:	75 07       	cpc	r23, r21
    51fc:	68 f5       	brcc	.+90     	; 0x5258 <_ZN14TFT_22_ILI92259drawPixelEjjj+0x84>
    51fe:	12 96       	adiw	r26, 0x02	; 2
    5200:	6d 91       	ld	r22, X+
    5202:	7c 91       	ld	r23, X
    5204:	13 97       	sbiw	r26, 0x03	; 3
    5206:	4b 81       	ldd	r20, Y+3	; 0x03
    5208:	5c 81       	ldd	r21, Y+4	; 0x04
    520a:	46 17       	cp	r20, r22
    520c:	57 07       	cpc	r21, r23
    520e:	20 f5       	brcc	.+72     	; 0x5258 <_ZN14TFT_22_ILI92259drawPixelEjjj+0x84>
    5210:	79 01       	movw	r14, r18
    5212:	8c 01       	movw	r16, r24
    5214:	ae 01       	movw	r20, r28
    5216:	4d 5f       	subi	r20, 0xFD	; 253
    5218:	5f 4f       	sbci	r21, 0xFF	; 255
    521a:	be 01       	movw	r22, r28
    521c:	6f 5f       	subi	r22, 0xFF	; 255
    521e:	7f 4f       	sbci	r23, 0xFF	; 255
    5220:	0e 94 e8 22 	call	0x45d0	; 0x45d0 <_ZN14TFT_22_ILI922518_orientCoordinatesERjS0_>
    5224:	c8 01       	movw	r24, r16
    5226:	0e 94 41 24 	call	0x4882	; 0x4882 <_ZN14TFT_22_ILI922510startWriteEv>
    522a:	49 81       	ldd	r20, Y+1	; 0x01
    522c:	5a 81       	ldd	r21, Y+2	; 0x02
    522e:	60 e2       	ldi	r22, 0x20	; 32
    5230:	70 e0       	ldi	r23, 0x00	; 0
    5232:	c8 01       	movw	r24, r16
    5234:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    5238:	4b 81       	ldd	r20, Y+3	; 0x03
    523a:	5c 81       	ldd	r21, Y+4	; 0x04
    523c:	61 e2       	ldi	r22, 0x21	; 33
    523e:	70 e0       	ldi	r23, 0x00	; 0
    5240:	c8 01       	movw	r24, r16
    5242:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    5246:	a7 01       	movw	r20, r14
    5248:	62 e2       	ldi	r22, 0x22	; 34
    524a:	70 e0       	ldi	r23, 0x00	; 0
    524c:	c8 01       	movw	r24, r16
    524e:	0e 94 e6 23 	call	0x47cc	; 0x47cc <_ZN14TFT_22_ILI922514_writeRegisterEjj>
    5252:	c8 01       	movw	r24, r16
    5254:	0e 94 80 24 	call	0x4900	; 0x4900 <_ZN14TFT_22_ILI92258endWriteEv>
    5258:	0f 90       	pop	r0
    525a:	0f 90       	pop	r0
    525c:	0f 90       	pop	r0
    525e:	0f 90       	pop	r0
    5260:	df 91       	pop	r29
    5262:	cf 91       	pop	r28
    5264:	1f 91       	pop	r17
    5266:	0f 91       	pop	r16
    5268:	ff 90       	pop	r15
    526a:	ef 90       	pop	r14
    526c:	08 95       	ret

0000526e <_ZN14TFT_22_ILI92258drawLineEjjjjj>:
    526e:	2f 92       	push	r2
    5270:	3f 92       	push	r3
    5272:	4f 92       	push	r4
    5274:	5f 92       	push	r5
    5276:	6f 92       	push	r6
    5278:	7f 92       	push	r7
    527a:	8f 92       	push	r8
    527c:	9f 92       	push	r9
    527e:	af 92       	push	r10
    5280:	bf 92       	push	r11
    5282:	cf 92       	push	r12
    5284:	df 92       	push	r13
    5286:	ef 92       	push	r14
    5288:	ff 92       	push	r15
    528a:	0f 93       	push	r16
    528c:	1f 93       	push	r17
    528e:	cf 93       	push	r28
    5290:	df 93       	push	r29
    5292:	00 d0       	rcall	.+0      	; 0x5294 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x26>
    5294:	00 d0       	rcall	.+0      	; 0x5296 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x28>
    5296:	00 d0       	rcall	.+0      	; 0x5298 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x2a>
    5298:	cd b7       	in	r28, 0x3d	; 61
    529a:	de b7       	in	r29, 0x3e	; 62
    529c:	4c 01       	movw	r8, r24
    529e:	7e 83       	std	Y+6, r23	; 0x06
    52a0:	6d 83       	std	Y+5, r22	; 0x05
    52a2:	6a 01       	movw	r12, r20
    52a4:	59 01       	movw	r10, r18
    52a6:	fc 82       	std	Y+4, r15	; 0x04
    52a8:	eb 82       	std	Y+3, r14	; 0x03
    52aa:	38 01       	movw	r6, r16
    52ac:	64 1a       	sub	r6, r20
    52ae:	75 0a       	sbc	r7, r21
    52b0:	77 fe       	sbrs	r7, 7
    52b2:	03 c0       	rjmp	.+6      	; 0x52ba <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x4c>
    52b4:	71 94       	neg	r7
    52b6:	61 94       	neg	r6
    52b8:	71 08       	sbc	r7, r1
    52ba:	75 01       	movw	r14, r10
    52bc:	2d 81       	ldd	r18, Y+5	; 0x05
    52be:	3e 81       	ldd	r19, Y+6	; 0x06
    52c0:	e2 1a       	sub	r14, r18
    52c2:	f3 0a       	sbc	r15, r19
    52c4:	f7 fe       	sbrs	r15, 7
    52c6:	03 c0       	rjmp	.+6      	; 0x52ce <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x60>
    52c8:	f1 94       	neg	r15
    52ca:	e1 94       	neg	r14
    52cc:	f1 08       	sbc	r15, r1
    52ce:	e6 14       	cp	r14, r6
    52d0:	f7 04       	cpc	r15, r7
    52d2:	5c f4       	brge	.+22     	; 0x52ea <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x7c>
    52d4:	9a 2d       	mov	r25, r10
    52d6:	8b 2d       	mov	r24, r11
    52d8:	58 01       	movw	r10, r16
    52da:	09 2f       	mov	r16, r25
    52dc:	18 2f       	mov	r17, r24
    52de:	9d 81       	ldd	r25, Y+5	; 0x05
    52e0:	8e 81       	ldd	r24, Y+6	; 0x06
    52e2:	de 82       	std	Y+6, r13	; 0x06
    52e4:	cd 82       	std	Y+5, r12	; 0x05
    52e6:	c9 2e       	mov	r12, r25
    52e8:	d8 2e       	mov	r13, r24
    52ea:	8d 81       	ldd	r24, Y+5	; 0x05
    52ec:	9e 81       	ldd	r25, Y+6	; 0x06
    52ee:	a8 16       	cp	r10, r24
    52f0:	b9 06       	cpc	r11, r25
    52f2:	58 f4       	brcc	.+22     	; 0x530a <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x9c>
    52f4:	9c 2d       	mov	r25, r12
    52f6:	8d 2d       	mov	r24, r13
    52f8:	68 01       	movw	r12, r16
    52fa:	09 2f       	mov	r16, r25
    52fc:	18 2f       	mov	r17, r24
    52fe:	9d 81       	ldd	r25, Y+5	; 0x05
    5300:	8e 81       	ldd	r24, Y+6	; 0x06
    5302:	be 82       	std	Y+6, r11	; 0x06
    5304:	ad 82       	std	Y+5, r10	; 0x05
    5306:	a9 2e       	mov	r10, r25
    5308:	b8 2e       	mov	r11, r24
    530a:	95 01       	movw	r18, r10
    530c:	8d 81       	ldd	r24, Y+5	; 0x05
    530e:	9e 81       	ldd	r25, Y+6	; 0x06
    5310:	28 1b       	sub	r18, r24
    5312:	39 0b       	sbc	r19, r25
    5314:	3a 83       	std	Y+2, r19	; 0x02
    5316:	29 83       	std	Y+1, r18	; 0x01
    5318:	18 01       	movw	r2, r16
    531a:	2c 18       	sub	r2, r12
    531c:	3d 08       	sbc	r3, r13
    531e:	37 fe       	sbrs	r3, 7
    5320:	03 c0       	rjmp	.+6      	; 0x5328 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0xba>
    5322:	31 94       	neg	r3
    5324:	21 94       	neg	r2
    5326:	31 08       	sbc	r3, r1
    5328:	49 80       	ldd	r4, Y+1	; 0x01
    532a:	5a 80       	ldd	r5, Y+2	; 0x02
    532c:	57 fe       	sbrs	r5, 7
    532e:	03 c0       	rjmp	.+6      	; 0x5336 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0xc8>
    5330:	9f ef       	ldi	r25, 0xFF	; 255
    5332:	49 1a       	sub	r4, r25
    5334:	59 0a       	sbc	r5, r25
    5336:	55 94       	asr	r5
    5338:	47 94       	ror	r4
    533a:	c0 16       	cp	r12, r16
    533c:	d1 06       	cpc	r13, r17
    533e:	18 f0       	brcs	.+6      	; 0x5346 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0xd8>
    5340:	0f ef       	ldi	r16, 0xFF	; 255
    5342:	1f ef       	ldi	r17, 0xFF	; 255
    5344:	02 c0       	rjmp	.+4      	; 0x534a <_ZN14TFT_22_ILI92258drawLineEjjjjj+0xdc>
    5346:	01 e0       	ldi	r16, 0x01	; 1
    5348:	10 e0       	ldi	r17, 0x00	; 0
    534a:	c4 01       	movw	r24, r8
    534c:	0e 94 41 24 	call	0x4882	; 0x4882 <_ZN14TFT_22_ILI922510startWriteEv>
    5350:	2d 81       	ldd	r18, Y+5	; 0x05
    5352:	3e 81       	ldd	r19, Y+6	; 0x06
    5354:	a2 16       	cp	r10, r18
    5356:	b3 06       	cpc	r11, r19
    5358:	00 f1       	brcs	.+64     	; 0x539a <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x12c>
    535a:	2b 81       	ldd	r18, Y+3	; 0x03
    535c:	3c 81       	ldd	r19, Y+4	; 0x04
    535e:	e6 14       	cp	r14, r6
    5360:	f7 04       	cpc	r15, r7
    5362:	24 f4       	brge	.+8      	; 0x536c <_ZN14TFT_22_ILI92258drawLineEjjjjj+0xfe>
    5364:	4d 81       	ldd	r20, Y+5	; 0x05
    5366:	5e 81       	ldd	r21, Y+6	; 0x06
    5368:	b6 01       	movw	r22, r12
    536a:	03 c0       	rjmp	.+6      	; 0x5372 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x104>
    536c:	a6 01       	movw	r20, r12
    536e:	6d 81       	ldd	r22, Y+5	; 0x05
    5370:	7e 81       	ldd	r23, Y+6	; 0x06
    5372:	c4 01       	movw	r24, r8
    5374:	0e 94 ea 28 	call	0x51d4	; 0x51d4 <_ZN14TFT_22_ILI92259drawPixelEjjj>
    5378:	42 18       	sub	r4, r2
    537a:	53 08       	sbc	r5, r3
    537c:	57 fe       	sbrs	r5, 7
    537e:	06 c0       	rjmp	.+12     	; 0x538c <_ZN14TFT_22_ILI92258drawLineEjjjjj+0x11e>
    5380:	c0 0e       	add	r12, r16
    5382:	d1 1e       	adc	r13, r17
    5384:	89 81       	ldd	r24, Y+1	; 0x01
    5386:	9a 81       	ldd	r25, Y+2	; 0x02
    5388:	48 0e       	add	r4, r24
    538a:	59 1e       	adc	r5, r25
    538c:	2d 81       	ldd	r18, Y+5	; 0x05
    538e:	3e 81       	ldd	r19, Y+6	; 0x06
    5390:	2f 5f       	subi	r18, 0xFF	; 255
    5392:	3f 4f       	sbci	r19, 0xFF	; 255
    5394:	3e 83       	std	Y+6, r19	; 0x06
    5396:	2d 83       	std	Y+5, r18	; 0x05
    5398:	db cf       	rjmp	.-74     	; 0x5350 <_ZN14TFT_22_ILI92258drawLineEjjjjj+0xe2>
    539a:	c4 01       	movw	r24, r8
    539c:	26 96       	adiw	r28, 0x06	; 6
    539e:	0f b6       	in	r0, 0x3f	; 63
    53a0:	f8 94       	cli
    53a2:	de bf       	out	0x3e, r29	; 62
    53a4:	0f be       	out	0x3f, r0	; 63
    53a6:	cd bf       	out	0x3d, r28	; 61
    53a8:	df 91       	pop	r29
    53aa:	cf 91       	pop	r28
    53ac:	1f 91       	pop	r17
    53ae:	0f 91       	pop	r16
    53b0:	ff 90       	pop	r15
    53b2:	ef 90       	pop	r14
    53b4:	df 90       	pop	r13
    53b6:	cf 90       	pop	r12
    53b8:	bf 90       	pop	r11
    53ba:	af 90       	pop	r10
    53bc:	9f 90       	pop	r9
    53be:	8f 90       	pop	r8
    53c0:	7f 90       	pop	r7
    53c2:	6f 90       	pop	r6
    53c4:	5f 90       	pop	r5
    53c6:	4f 90       	pop	r4
    53c8:	3f 90       	pop	r3
    53ca:	2f 90       	pop	r2
    53cc:	0c 94 80 24 	jmp	0x4900	; 0x4900 <_ZN14TFT_22_ILI92258endWriteEv>

000053d0 <_ZN14TFT_22_ILI922513drawRectangleEjjjjj>:
    53d0:	4f 92       	push	r4
    53d2:	5f 92       	push	r5
    53d4:	6f 92       	push	r6
    53d6:	7f 92       	push	r7
    53d8:	8f 92       	push	r8
    53da:	9f 92       	push	r9
    53dc:	af 92       	push	r10
    53de:	bf 92       	push	r11
    53e0:	cf 92       	push	r12
    53e2:	df 92       	push	r13
    53e4:	ef 92       	push	r14
    53e6:	ff 92       	push	r15
    53e8:	0f 93       	push	r16
    53ea:	1f 93       	push	r17
    53ec:	cf 93       	push	r28
    53ee:	df 93       	push	r29
    53f0:	ec 01       	movw	r28, r24
    53f2:	4b 01       	movw	r8, r22
    53f4:	3a 01       	movw	r6, r20
    53f6:	29 01       	movw	r4, r18
    53f8:	68 01       	movw	r12, r16
    53fa:	0e 94 41 24 	call	0x4882	; 0x4882 <_ZN14TFT_22_ILI922510startWriteEv>
    53fe:	94 01       	movw	r18, r8
    5400:	a3 01       	movw	r20, r6
    5402:	b4 01       	movw	r22, r8
    5404:	ce 01       	movw	r24, r28
    5406:	0e 94 37 29 	call	0x526e	; 0x526e <_ZN14TFT_22_ILI92258drawLineEjjjjj>
    540a:	83 01       	movw	r16, r6
    540c:	92 01       	movw	r18, r4
    540e:	a3 01       	movw	r20, r6
    5410:	b4 01       	movw	r22, r8
    5412:	ce 01       	movw	r24, r28
    5414:	0e 94 37 29 	call	0x526e	; 0x526e <_ZN14TFT_22_ILI92258drawLineEjjjjj>
    5418:	86 01       	movw	r16, r12
    541a:	92 01       	movw	r18, r4
    541c:	a6 01       	movw	r20, r12
    541e:	b4 01       	movw	r22, r8
    5420:	ce 01       	movw	r24, r28
    5422:	0e 94 37 29 	call	0x526e	; 0x526e <_ZN14TFT_22_ILI92258drawLineEjjjjj>
    5426:	92 01       	movw	r18, r4
    5428:	a3 01       	movw	r20, r6
    542a:	b2 01       	movw	r22, r4
    542c:	ce 01       	movw	r24, r28
    542e:	0e 94 37 29 	call	0x526e	; 0x526e <_ZN14TFT_22_ILI92258drawLineEjjjjj>
    5432:	ce 01       	movw	r24, r28
    5434:	df 91       	pop	r29
    5436:	cf 91       	pop	r28
    5438:	1f 91       	pop	r17
    543a:	0f 91       	pop	r16
    543c:	ff 90       	pop	r15
    543e:	ef 90       	pop	r14
    5440:	df 90       	pop	r13
    5442:	cf 90       	pop	r12
    5444:	bf 90       	pop	r11
    5446:	af 90       	pop	r10
    5448:	9f 90       	pop	r9
    544a:	8f 90       	pop	r8
    544c:	7f 90       	pop	r7
    544e:	6f 90       	pop	r6
    5450:	5f 90       	pop	r5
    5452:	4f 90       	pop	r4
    5454:	0c 94 80 24 	jmp	0x4900	; 0x4900 <_ZN14TFT_22_ILI92258endWriteEv>

00005458 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb>:
    5458:	2f 92       	push	r2
    545a:	3f 92       	push	r3
    545c:	4f 92       	push	r4
    545e:	5f 92       	push	r5
    5460:	6f 92       	push	r6
    5462:	7f 92       	push	r7
    5464:	8f 92       	push	r8
    5466:	9f 92       	push	r9
    5468:	af 92       	push	r10
    546a:	bf 92       	push	r11
    546c:	cf 92       	push	r12
    546e:	df 92       	push	r13
    5470:	ef 92       	push	r14
    5472:	ff 92       	push	r15
    5474:	0f 93       	push	r16
    5476:	1f 93       	push	r17
    5478:	cf 93       	push	r28
    547a:	df 93       	push	r29
    547c:	cd b7       	in	r28, 0x3d	; 61
    547e:	de b7       	in	r29, 0x3e	; 62
    5480:	c2 55       	subi	r28, 0x52	; 82
    5482:	d1 09       	sbc	r29, r1
    5484:	0f b6       	in	r0, 0x3f	; 63
    5486:	f8 94       	cli
    5488:	de bf       	out	0x3e, r29	; 62
    548a:	0f be       	out	0x3f, r0	; 63
    548c:	cd bf       	out	0x3d, r28	; 61
    548e:	3c 01       	movw	r6, r24
    5490:	7e af       	std	Y+62, r23	; 0x3e
    5492:	6d af       	std	Y+61, r22	; 0x3d
    5494:	2a 01       	movw	r4, r20
    5496:	28 96       	adiw	r28, 0x08	; 8
    5498:	3f af       	std	Y+63, r19	; 0x3f
    549a:	2e af       	std	Y+62, r18	; 0x3e
    549c:	28 97       	sbiw	r28, 0x08	; 8
    549e:	18 01       	movw	r2, r16
    54a0:	2a 96       	adiw	r28, 0x0a	; 10
    54a2:	df ae       	std	Y+63, r13	; 0x3f
    54a4:	ce ae       	std	Y+62, r12	; 0x3e
    54a6:	2a 97       	sbiw	r28, 0x0a	; 10
    54a8:	2e 96       	adiw	r28, 0x0e	; 14
    54aa:	bf ae       	std	Y+63, r11	; 0x3f
    54ac:	ae ae       	std	Y+62, r10	; 0x3e
    54ae:	2e 97       	sbiw	r28, 0x0e	; 14
    54b0:	2f 96       	adiw	r28, 0x0f	; 15
    54b2:	8f ae       	std	Y+63, r8	; 0x3f
    54b4:	2f 97       	sbiw	r28, 0x0f	; 15
    54b6:	c8 01       	movw	r24, r16
    54b8:	07 96       	adiw	r24, 0x07	; 7
    54ba:	97 fd       	sbrc	r25, 7
    54bc:	07 96       	adiw	r24, 0x07	; 7
    54be:	9c 01       	movw	r18, r24
    54c0:	73 e0       	ldi	r23, 0x03	; 3
    54c2:	35 95       	asr	r19
    54c4:	27 95       	ror	r18
    54c6:	7a 95       	dec	r23
    54c8:	e1 f7       	brne	.-8      	; 0x54c2 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x6a>
    54ca:	24 96       	adiw	r28, 0x04	; 4
    54cc:	3f af       	std	Y+63, r19	; 0x3f
    54ce:	2e af       	std	Y+62, r18	; 0x3e
    54d0:	24 97       	sbiw	r28, 0x04	; 4
    54d2:	a9 96       	adiw	r28, 0x29	; 41
    54d4:	3f ad       	ldd	r19, Y+63	; 0x3f
    54d6:	a9 97       	sbiw	r28, 0x29	; 41
    54d8:	31 11       	cpse	r19, r1
    54da:	05 c0       	rjmp	.+10     	; 0x54e6 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x8e>
    54dc:	80 e8       	ldi	r24, 0x80	; 128
    54de:	22 96       	adiw	r28, 0x02	; 2
    54e0:	8f af       	std	Y+63, r24	; 0x3f
    54e2:	22 97       	sbiw	r28, 0x02	; 2
    54e4:	04 c0       	rjmp	.+8      	; 0x54ee <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x96>
    54e6:	91 e0       	ldi	r25, 0x01	; 1
    54e8:	22 96       	adiw	r28, 0x02	; 2
    54ea:	9f af       	std	Y+63, r25	; 0x3f
    54ec:	22 97       	sbiw	r28, 0x02	; 2
    54ee:	f3 01       	movw	r30, r6
    54f0:	83 81       	ldd	r24, Z+3	; 0x03
    54f2:	8f 93       	push	r24
    54f4:	82 81       	ldd	r24, Z+2	; 0x02
    54f6:	8f 93       	push	r24
    54f8:	81 81       	ldd	r24, Z+1	; 0x01
    54fa:	8f 93       	push	r24
    54fc:	80 81       	ld	r24, Z
    54fe:	8f 93       	push	r24
    5500:	84 e0       	ldi	r24, 0x04	; 4
    5502:	92 e0       	ldi	r25, 0x02	; 2
    5504:	9f 93       	push	r25
    5506:	8f 93       	push	r24
    5508:	8e 01       	movw	r16, r28
    550a:	0f 5f       	subi	r16, 0xFF	; 255
    550c:	1f 4f       	sbci	r17, 0xFF	; 255
    550e:	1f 93       	push	r17
    5510:	0f 93       	push	r16
    5512:	0e 94 40 36 	call	0x6c80	; 0x6c80 <sprintf>
    5516:	b8 01       	movw	r22, r16
    5518:	88 e7       	ldi	r24, 0x78	; 120
    551a:	93 e0       	ldi	r25, 0x03	; 3
    551c:	0e 94 78 1b 	call	0x36f0	; 0x36f0 <_ZN5Print7printlnEPKc>
    5520:	2d ad       	ldd	r18, Y+61	; 0x3d
    5522:	3e ad       	ldd	r19, Y+62	; 0x3e
    5524:	21 96       	adiw	r28, 0x01	; 1
    5526:	3f af       	std	Y+63, r19	; 0x3f
    5528:	2e af       	std	Y+62, r18	; 0x3e
    552a:	21 97       	sbiw	r28, 0x01	; 1
    552c:	0f b6       	in	r0, 0x3f	; 63
    552e:	f8 94       	cli
    5530:	de bf       	out	0x3e, r29	; 62
    5532:	0f be       	out	0x3f, r0	; 63
    5534:	cd bf       	out	0x3d, r28	; 61
    5536:	37 ff       	sbrs	r19, 7
    5538:	04 c0       	rjmp	.+8      	; 0x5542 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0xea>
    553a:	21 96       	adiw	r28, 0x01	; 1
    553c:	1f ae       	std	Y+63, r1	; 0x3f
    553e:	1e ae       	std	Y+62, r1	; 0x3e
    5540:	21 97       	sbiw	r28, 0x01	; 1
    5542:	a2 01       	movw	r20, r4
    5544:	57 fe       	sbrs	r5, 7
    5546:	02 c0       	rjmp	.+4      	; 0x554c <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0xf4>
    5548:	40 e0       	ldi	r20, 0x00	; 0
    554a:	50 e0       	ldi	r21, 0x00	; 0
    554c:	f3 01       	movw	r30, r6
    554e:	20 81       	ld	r18, Z
    5550:	31 81       	ldd	r19, Z+1	; 0x01
    5552:	8d ad       	ldd	r24, Y+61	; 0x3d
    5554:	9e ad       	ldd	r25, Y+62	; 0x3e
    5556:	82 0d       	add	r24, r2
    5558:	93 1d       	adc	r25, r3
    555a:	28 17       	cp	r18, r24
    555c:	39 07       	cpc	r19, r25
    555e:	08 f4       	brcc	.+2      	; 0x5562 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x10a>
    5560:	c9 01       	movw	r24, r18
    5562:	9c 01       	movw	r18, r24
    5564:	21 50       	subi	r18, 0x01	; 1
    5566:	31 09       	sbc	r19, r1
    5568:	26 96       	adiw	r28, 0x06	; 6
    556a:	3f af       	std	Y+63, r19	; 0x3f
    556c:	2e af       	std	Y+62, r18	; 0x3e
    556e:	26 97       	sbiw	r28, 0x06	; 6
    5570:	f3 01       	movw	r30, r6
    5572:	82 81       	ldd	r24, Z+2	; 0x02
    5574:	93 81       	ldd	r25, Z+3	; 0x03
    5576:	92 01       	movw	r18, r4
    5578:	2e 0d       	add	r18, r14
    557a:	3f 1d       	adc	r19, r15
    557c:	82 17       	cp	r24, r18
    557e:	93 07       	cpc	r25, r19
    5580:	08 f4       	brcc	.+2      	; 0x5584 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x12c>
    5582:	9c 01       	movw	r18, r24
    5584:	89 01       	movw	r16, r18
    5586:	01 50       	subi	r16, 0x01	; 1
    5588:	11 09       	sbc	r17, r1
    558a:	69 01       	movw	r12, r18
    558c:	c4 1a       	sub	r12, r20
    558e:	d5 0a       	sbc	r13, r21
    5590:	66 e0       	ldi	r22, 0x06	; 6
    5592:	e6 2e       	mov	r14, r22
    5594:	26 96       	adiw	r28, 0x06	; 6
    5596:	2e ad       	ldd	r18, Y+62	; 0x3e
    5598:	3f ad       	ldd	r19, Y+63	; 0x3f
    559a:	26 97       	sbiw	r28, 0x06	; 6
    559c:	21 96       	adiw	r28, 0x01	; 1
    559e:	6e ad       	ldd	r22, Y+62	; 0x3e
    55a0:	7f ad       	ldd	r23, Y+63	; 0x3f
    55a2:	21 97       	sbiw	r28, 0x01	; 1
    55a4:	c3 01       	movw	r24, r6
    55a6:	0e 94 b0 24 	call	0x4960	; 0x4960 <_ZN14TFT_22_ILI922510_setWindowEjjjj13autoIncMode_t>
    55aa:	c3 01       	movw	r24, r6
    55ac:	0e 94 41 24 	call	0x4882	; 0x4882 <_ZN14TFT_22_ILI922510startWriteEv>
    55b0:	57 fe       	sbrs	r5, 7
    55b2:	05 c0       	rjmp	.+10     	; 0x55be <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x166>
    55b4:	aa 24       	eor	r10, r10
    55b6:	bb 24       	eor	r11, r11
    55b8:	a4 18       	sub	r10, r4
    55ba:	b5 08       	sbc	r11, r5
    55bc:	02 c0       	rjmp	.+4      	; 0x55c2 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x16a>
    55be:	a1 2c       	mov	r10, r1
    55c0:	b1 2c       	mov	r11, r1
    55c2:	57 fe       	sbrs	r5, 7
    55c4:	05 c0       	rjmp	.+10     	; 0x55d0 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x178>
    55c6:	ee 24       	eor	r14, r14
    55c8:	ff 24       	eor	r15, r15
    55ca:	e4 18       	sub	r14, r4
    55cc:	f5 08       	sbc	r15, r5
    55ce:	02 c0       	rjmp	.+4      	; 0x55d4 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x17c>
    55d0:	e1 2c       	mov	r14, r1
    55d2:	f1 2c       	mov	r15, r1
    55d4:	97 01       	movw	r18, r14
    55d6:	2c 0d       	add	r18, r12
    55d8:	3d 1d       	adc	r19, r13
    55da:	2c 96       	adiw	r28, 0x0c	; 12
    55dc:	3f af       	std	Y+63, r19	; 0x3f
    55de:	2e af       	std	Y+62, r18	; 0x3e
    55e0:	2c 97       	sbiw	r28, 0x0c	; 12
    55e2:	24 96       	adiw	r28, 0x04	; 4
    55e4:	8e ad       	ldd	r24, Y+62	; 0x3e
    55e6:	9f ad       	ldd	r25, Y+63	; 0x3f
    55e8:	24 97       	sbiw	r28, 0x04	; 4
    55ea:	a8 9e       	mul	r10, r24
    55ec:	40 01       	movw	r8, r0
    55ee:	a9 9e       	mul	r10, r25
    55f0:	90 0c       	add	r9, r0
    55f2:	b8 9e       	mul	r11, r24
    55f4:	90 0c       	add	r9, r0
    55f6:	11 24       	eor	r1, r1
    55f8:	f1 2c       	mov	r15, r1
    55fa:	e1 2c       	mov	r14, r1
    55fc:	2c 96       	adiw	r28, 0x0c	; 12
    55fe:	ee ad       	ldd	r30, Y+62	; 0x3e
    5600:	ff ad       	ldd	r31, Y+63	; 0x3f
    5602:	2c 97       	sbiw	r28, 0x0c	; 12
    5604:	ae 16       	cp	r10, r30
    5606:	bf 06       	cpc	r11, r31
    5608:	0c f0       	brlt	.+2      	; 0x560c <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x1b4>
    560a:	94 c0       	rjmp	.+296    	; 0x5734 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x2dc>
    560c:	cd ac       	ldd	r12, Y+61	; 0x3d
    560e:	de ac       	ldd	r13, Y+62	; 0x3e
    5610:	00 e0       	ldi	r16, 0x00	; 0
    5612:	10 e0       	ldi	r17, 0x00	; 0
    5614:	28 96       	adiw	r28, 0x08	; 8
    5616:	2e ad       	ldd	r18, Y+62	; 0x3e
    5618:	3f ad       	ldd	r19, Y+63	; 0x3f
    561a:	28 97       	sbiw	r28, 0x08	; 8
    561c:	28 0d       	add	r18, r8
    561e:	39 1d       	adc	r19, r9
    5620:	61 96       	adiw	r28, 0x11	; 17
    5622:	3f af       	std	Y+63, r19	; 0x3f
    5624:	2e af       	std	Y+62, r18	; 0x3e
    5626:	61 97       	sbiw	r28, 0x11	; 17
    5628:	c5 01       	movw	r24, r10
    562a:	84 0d       	add	r24, r4
    562c:	95 1d       	adc	r25, r5
    562e:	63 96       	adiw	r28, 0x13	; 19
    5630:	9f af       	std	Y+63, r25	; 0x3f
    5632:	8e af       	std	Y+62, r24	; 0x3e
    5634:	63 97       	sbiw	r28, 0x13	; 19
    5636:	02 15       	cp	r16, r2
    5638:	13 05       	cpc	r17, r3
    563a:	0c f0       	brlt	.+2      	; 0x563e <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x1e6>
    563c:	71 c0       	rjmp	.+226    	; 0x5720 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x2c8>
    563e:	c8 01       	movw	r24, r16
    5640:	87 70       	andi	r24, 0x07	; 7
    5642:	99 27       	eor	r25, r25
    5644:	89 2b       	or	r24, r25
    5646:	49 f0       	breq	.+18     	; 0x565a <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x202>
    5648:	a9 96       	adiw	r28, 0x29	; 41
    564a:	9f ad       	ldd	r25, Y+63	; 0x3f
    564c:	a9 97       	sbiw	r28, 0x29	; 41
    564e:	99 23       	and	r25, r25
    5650:	11 f0       	breq	.+4      	; 0x5656 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x1fe>
    5652:	f6 94       	lsr	r15
    5654:	28 c0       	rjmp	.+80     	; 0x56a6 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x24e>
    5656:	ff 0c       	add	r15, r15
    5658:	26 c0       	rjmp	.+76     	; 0x56a6 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x24e>
    565a:	a8 96       	adiw	r28, 0x28	; 40
    565c:	ef ad       	ldd	r30, Y+63	; 0x3f
    565e:	a8 97       	sbiw	r28, 0x28	; 40
    5660:	ee 23       	and	r30, r30
    5662:	91 f0       	breq	.+36     	; 0x5688 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x230>
    5664:	f8 01       	movw	r30, r16
    5666:	17 fd       	sbrc	r17, 7
    5668:	37 96       	adiw	r30, 0x07	; 7
    566a:	33 e0       	ldi	r19, 0x03	; 3
    566c:	f5 95       	asr	r31
    566e:	e7 95       	ror	r30
    5670:	3a 95       	dec	r19
    5672:	e1 f7       	brne	.-8      	; 0x566c <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x214>
    5674:	e8 0d       	add	r30, r8
    5676:	f9 1d       	adc	r31, r9
    5678:	28 96       	adiw	r28, 0x08	; 8
    567a:	2e ad       	ldd	r18, Y+62	; 0x3e
    567c:	3f ad       	ldd	r19, Y+63	; 0x3f
    567e:	28 97       	sbiw	r28, 0x08	; 8
    5680:	e2 0f       	add	r30, r18
    5682:	f3 1f       	adc	r31, r19
    5684:	f4 90       	lpm	r15, Z
    5686:	0f c0       	rjmp	.+30     	; 0x56a6 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x24e>
    5688:	c8 01       	movw	r24, r16
    568a:	17 fd       	sbrc	r17, 7
    568c:	07 96       	adiw	r24, 0x07	; 7
    568e:	23 e0       	ldi	r18, 0x03	; 3
    5690:	95 95       	asr	r25
    5692:	87 95       	ror	r24
    5694:	2a 95       	dec	r18
    5696:	e1 f7       	brne	.-8      	; 0x5690 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x238>
    5698:	61 96       	adiw	r28, 0x11	; 17
    569a:	ee ad       	ldd	r30, Y+62	; 0x3e
    569c:	ff ad       	ldd	r31, Y+63	; 0x3f
    569e:	61 97       	sbiw	r28, 0x11	; 17
    56a0:	e8 0f       	add	r30, r24
    56a2:	f9 1f       	adc	r31, r25
    56a4:	f0 80       	ld	r15, Z
    56a6:	21 96       	adiw	r28, 0x01	; 1
    56a8:	8e ad       	ldd	r24, Y+62	; 0x3e
    56aa:	9f ad       	ldd	r25, Y+63	; 0x3f
    56ac:	21 97       	sbiw	r28, 0x01	; 1
    56ae:	c8 16       	cp	r12, r24
    56b0:	d9 06       	cpc	r13, r25
    56b2:	84 f1       	brlt	.+96     	; 0x5714 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x2bc>
    56b4:	26 96       	adiw	r28, 0x06	; 6
    56b6:	ee ad       	ldd	r30, Y+62	; 0x3e
    56b8:	ff ad       	ldd	r31, Y+63	; 0x3f
    56ba:	26 97       	sbiw	r28, 0x06	; 6
    56bc:	ec 15       	cp	r30, r12
    56be:	fd 05       	cpc	r31, r13
    56c0:	4c f1       	brlt	.+82     	; 0x5714 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x2bc>
    56c2:	22 96       	adiw	r28, 0x02	; 2
    56c4:	8f ad       	ldd	r24, Y+63	; 0x3f
    56c6:	22 97       	sbiw	r28, 0x02	; 2
    56c8:	8f 21       	and	r24, r15
    56ca:	a9 f0       	breq	.+42     	; 0x56f6 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x29e>
    56cc:	ee 20       	and	r14, r14
    56ce:	71 f0       	breq	.+28     	; 0x56ec <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x294>
    56d0:	2a 96       	adiw	r28, 0x0a	; 10
    56d2:	2e ad       	ldd	r18, Y+62	; 0x3e
    56d4:	3f ad       	ldd	r19, Y+63	; 0x3f
    56d6:	2a 97       	sbiw	r28, 0x0a	; 10
    56d8:	63 96       	adiw	r28, 0x13	; 19
    56da:	4e ad       	ldd	r20, Y+62	; 0x3e
    56dc:	5f ad       	ldd	r21, Y+63	; 0x3f
    56de:	63 97       	sbiw	r28, 0x13	; 19
    56e0:	b6 01       	movw	r22, r12
    56e2:	c3 01       	movw	r24, r6
    56e4:	0e 94 ea 28 	call	0x51d4	; 0x51d4 <_ZN14TFT_22_ILI92259drawPixelEjjj>
    56e8:	e1 2c       	mov	r14, r1
    56ea:	14 c0       	rjmp	.+40     	; 0x5714 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x2bc>
    56ec:	2a 96       	adiw	r28, 0x0a	; 10
    56ee:	6e ad       	ldd	r22, Y+62	; 0x3e
    56f0:	7f ad       	ldd	r23, Y+63	; 0x3f
    56f2:	2a 97       	sbiw	r28, 0x0a	; 10
    56f4:	09 c0       	rjmp	.+18     	; 0x5708 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x2b0>
    56f6:	2f 96       	adiw	r28, 0x0f	; 15
    56f8:	ff ad       	ldd	r31, Y+63	; 0x3f
    56fa:	2f 97       	sbiw	r28, 0x0f	; 15
    56fc:	f1 11       	cpse	r31, r1
    56fe:	08 c0       	rjmp	.+16     	; 0x5710 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x2b8>
    5700:	2e 96       	adiw	r28, 0x0e	; 14
    5702:	6e ad       	ldd	r22, Y+62	; 0x3e
    5704:	7f ad       	ldd	r23, Y+63	; 0x3f
    5706:	2e 97       	sbiw	r28, 0x0e	; 14
    5708:	c3 01       	movw	r24, r6
    570a:	0e 94 9d 23 	call	0x473a	; 0x473a <_ZN14TFT_22_ILI922512_writeData16Ej>
    570e:	02 c0       	rjmp	.+4      	; 0x5714 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x2bc>
    5710:	ee 24       	eor	r14, r14
    5712:	e3 94       	inc	r14
    5714:	0f 5f       	subi	r16, 0xFF	; 255
    5716:	1f 4f       	sbci	r17, 0xFF	; 255
    5718:	2f ef       	ldi	r18, 0xFF	; 255
    571a:	c2 1a       	sub	r12, r18
    571c:	d2 0a       	sbc	r13, r18
    571e:	8b cf       	rjmp	.-234    	; 0x5636 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x1de>
    5720:	3f ef       	ldi	r19, 0xFF	; 255
    5722:	a3 1a       	sub	r10, r19
    5724:	b3 0a       	sbc	r11, r19
    5726:	24 96       	adiw	r28, 0x04	; 4
    5728:	8e ad       	ldd	r24, Y+62	; 0x3e
    572a:	9f ad       	ldd	r25, Y+63	; 0x3f
    572c:	24 97       	sbiw	r28, 0x04	; 4
    572e:	88 0e       	add	r8, r24
    5730:	99 1e       	adc	r9, r25
    5732:	64 cf       	rjmp	.-312    	; 0x55fc <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb+0x1a4>
    5734:	c3 01       	movw	r24, r6
    5736:	0e 94 80 24 	call	0x4900	; 0x4900 <_ZN14TFT_22_ILI92258endWriteEv>
    573a:	ce 5a       	subi	r28, 0xAE	; 174
    573c:	df 4f       	sbci	r29, 0xFF	; 255
    573e:	0f b6       	in	r0, 0x3f	; 63
    5740:	f8 94       	cli
    5742:	de bf       	out	0x3e, r29	; 62
    5744:	0f be       	out	0x3f, r0	; 63
    5746:	cd bf       	out	0x3d, r28	; 61
    5748:	df 91       	pop	r29
    574a:	cf 91       	pop	r28
    574c:	1f 91       	pop	r17
    574e:	0f 91       	pop	r16
    5750:	ff 90       	pop	r15
    5752:	ef 90       	pop	r14
    5754:	df 90       	pop	r13
    5756:	cf 90       	pop	r12
    5758:	bf 90       	pop	r11
    575a:	af 90       	pop	r10
    575c:	9f 90       	pop	r9
    575e:	8f 90       	pop	r8
    5760:	7f 90       	pop	r7
    5762:	6f 90       	pop	r6
    5764:	5f 90       	pop	r5
    5766:	4f 90       	pop	r4
    5768:	3f 90       	pop	r3
    576a:	2f 90       	pop	r2
    576c:	08 95       	ret

0000576e <_ZN14TFT_22_ILI922510drawBitmapEiiPKhiij>:
    576e:	8f 92       	push	r8
    5770:	af 92       	push	r10
    5772:	bf 92       	push	r11
    5774:	cf 92       	push	r12
    5776:	df 92       	push	r13
    5778:	ef 92       	push	r14
    577a:	ff 92       	push	r15
    577c:	0f 93       	push	r16
    577e:	1f 93       	push	r17
    5780:	1f 92       	push	r1
    5782:	e1 e0       	ldi	r30, 0x01	; 1
    5784:	ef 93       	push	r30
    5786:	88 24       	eor	r8, r8
    5788:	83 94       	inc	r8
    578a:	a1 2c       	mov	r10, r1
    578c:	b1 2c       	mov	r11, r1
    578e:	0e 94 2c 2a 	call	0x5458	; 0x5458 <_ZN14TFT_22_ILI922511_drawBitmapEiiPKhiijjbbb>
    5792:	0f 90       	pop	r0
    5794:	0f 90       	pop	r0
    5796:	1f 91       	pop	r17
    5798:	0f 91       	pop	r16
    579a:	ff 90       	pop	r15
    579c:	ef 90       	pop	r14
    579e:	df 90       	pop	r13
    57a0:	cf 90       	pop	r12
    57a2:	bf 90       	pop	r11
    57a4:	af 90       	pop	r10
    57a6:	8f 90       	pop	r8
    57a8:	08 95       	ret

000057aa <_ZN14TFT_22_ILI922510setGFXFontEPK7GFXfont>:


// TEXT- AND CHARACTER-HANDLING FUNCTIONS ----------------------------------

void TFT_22_ILI9225::setGFXFont(const GFXfont *f) {
    gfxFont = (GFXfont *)f;
    57aa:	8e 5b       	subi	r24, 0xBE	; 190
    57ac:	9f 4f       	sbci	r25, 0xFF	; 255
    57ae:	fc 01       	movw	r30, r24
    57b0:	71 83       	std	Z+1, r23	; 0x01
    57b2:	60 83       	st	Z, r22
    57b4:	08 95       	ret

000057b6 <_ZN14TFT_22_ILI922511drawGFXCharEiihj>:
    }
}


// Draw a character
uint16_t TFT_22_ILI9225::drawGFXChar(int16_t x, int16_t y, unsigned char c, uint16_t color) {
    57b6:	2f 92       	push	r2
    57b8:	3f 92       	push	r3
    57ba:	4f 92       	push	r4
    57bc:	5f 92       	push	r5
    57be:	6f 92       	push	r6
    57c0:	7f 92       	push	r7
    57c2:	8f 92       	push	r8
    57c4:	9f 92       	push	r9
    57c6:	af 92       	push	r10
    57c8:	bf 92       	push	r11
    57ca:	cf 92       	push	r12
    57cc:	df 92       	push	r13
    57ce:	ef 92       	push	r14
    57d0:	ff 92       	push	r15
    57d2:	0f 93       	push	r16
    57d4:	1f 93       	push	r17
    57d6:	cf 93       	push	r28
    57d8:	df 93       	push	r29
    57da:	00 d0       	rcall	.+0      	; 0x57dc <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0x26>
    57dc:	00 d0       	rcall	.+0      	; 0x57de <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0x28>
    57de:	00 d0       	rcall	.+0      	; 0x57e0 <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0x2a>
    57e0:	cd b7       	in	r28, 0x3d	; 61
    57e2:	de b7       	in	r29, 0x3e	; 62
    57e4:	6c 01       	movw	r12, r24
    57e6:	5b 01       	movw	r10, r22
    57e8:	7a 01       	movw	r14, r20

    c -= (uint8_t)pgm_read_byte(&gfxFont->first);
    57ea:	fc 01       	movw	r30, r24
    57ec:	ee 5b       	subi	r30, 0xBE	; 190
    57ee:	ff 4f       	sbci	r31, 0xFF	; 255
    57f0:	40 81       	ld	r20, Z
    57f2:	51 81       	ldd	r21, Z+1	; 0x01
    57f4:	fa 01       	movw	r30, r20
    57f6:	34 96       	adiw	r30, 0x04	; 4
    57f8:	e4 91       	lpm	r30, Z
    57fa:	2e 1b       	sub	r18, r30
    GFXglyph *glyph  = &(((GFXglyph *)pgm_read_pointer(&gfxFont->glyph))[c]);
    57fc:	fa 01       	movw	r30, r20
    57fe:	32 96       	adiw	r30, 0x02	; 2
    5800:	85 91       	lpm	r24, Z+
    5802:	94 91       	lpm	r25, Z
    5804:	37 e0       	ldi	r19, 0x07	; 7
    5806:	23 9f       	mul	r18, r19
    5808:	80 0d       	add	r24, r0
    580a:	91 1d       	adc	r25, r1
    580c:	11 24       	eor	r1, r1
    uint8_t  *bitmap = (uint8_t *)pgm_read_pointer(&gfxFont->bitmap);
    580e:	fa 01       	movw	r30, r20
    5810:	25 90       	lpm	r2, Z+
    5812:	34 90       	lpm	r3, Z

    uint16_t bo = pgm_read_word(&glyph->bitmapOffset);
    5814:	fc 01       	movw	r30, r24
    5816:	25 91       	lpm	r18, Z+
    5818:	34 91       	lpm	r19, Z
    581a:	3e 83       	std	Y+6, r19	; 0x06
    581c:	2d 83       	std	Y+5, r18	; 0x05
    uint8_t  w  = pgm_read_byte(&glyph->width),
    581e:	fc 01       	movw	r30, r24
    5820:	32 96       	adiw	r30, 0x02	; 2
    5822:	34 91       	lpm	r19, Z
    5824:	3a 83       	std	Y+2, r19	; 0x02
             h  = pgm_read_byte(&glyph->height),
    5826:	31 96       	adiw	r30, 0x01	; 1
    5828:	24 91       	lpm	r18, Z
    582a:	2b 83       	std	Y+3, r18	; 0x03
             xa = pgm_read_byte(&glyph->xAdvance);
    582c:	31 96       	adiw	r30, 0x01	; 1
    582e:	34 91       	lpm	r19, Z
    5830:	3c 83       	std	Y+4, r19	; 0x04
    int8_t   xo = pgm_read_byte(&glyph->xOffset),
    5832:	31 96       	adiw	r30, 0x01	; 1
    5834:	84 90       	lpm	r8, Z
             yo = pgm_read_byte(&glyph->yOffset);
    5836:	31 96       	adiw	r30, 0x01	; 1
    5838:	94 90       	lpm	r9, Z
    uint8_t  xx, yy, bits = 0, bit = 0;

    // Add character clipping here one day

    startWrite();
    583a:	c6 01       	movw	r24, r12
    583c:	0e 94 41 24 	call	0x4882	; 0x4882 <_ZN14TFT_22_ILI922510startWriteEv>
    uint8_t  w  = pgm_read_byte(&glyph->width),
             h  = pgm_read_byte(&glyph->height),
             xa = pgm_read_byte(&glyph->xAdvance);
    int8_t   xo = pgm_read_byte(&glyph->xOffset),
             yo = pgm_read_byte(&glyph->yOffset);
    uint8_t  xx, yy, bits = 0, bit = 0;
    5840:	19 82       	std	Y+1, r1	; 0x01
    5842:	71 2c       	mov	r7, r1

    // Add character clipping here one day

    startWrite();
    for(yy=0; yy<h; yy++) {
    5844:	61 2c       	mov	r6, r1
        for(xx=0; xx<w; xx++) {
            if(!(bit++ & 7)) {
                bits = pgm_read_byte(&bitmap[bo++]);
            }
            if(bits & 0x80) {
                drawPixel(x+xo+xx, y+yo+yy, color);
    5846:	27 01       	movw	r4, r14
    5848:	49 0c       	add	r4, r9
    584a:	51 1c       	adc	r5, r1
    584c:	97 fc       	sbrc	r9, 7
    584e:	5a 94       	dec	r5
    5850:	a8 0c       	add	r10, r8
    5852:	b1 1c       	adc	r11, r1
    5854:	87 fc       	sbrc	r8, 7
    5856:	ba 94       	dec	r11
    uint8_t  xx, yy, bits = 0, bit = 0;

    // Add character clipping here one day

    startWrite();
    for(yy=0; yy<h; yy++) {
    5858:	8b 81       	ldd	r24, Y+3	; 0x03
    585a:	68 16       	cp	r6, r24
    585c:	59 f1       	breq	.+86     	; 0x58b4 <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0xfe>
    585e:	e1 2c       	mov	r14, r1
    5860:	f1 2c       	mov	r15, r1
        for(xx=0; xx<w; xx++) {
            if(!(bit++ & 7)) {
                bits = pgm_read_byte(&bitmap[bo++]);
            }
            if(bits & 0x80) {
                drawPixel(x+xo+xx, y+yo+yy, color);
    5862:	42 01       	movw	r8, r4
    5864:	86 0c       	add	r8, r6
    5866:	91 1c       	adc	r9, r1
    5868:	89 81       	ldd	r24, Y+1	; 0x01
    586a:	8e 0d       	add	r24, r14

    // Add character clipping here one day

    startWrite();
    for(yy=0; yy<h; yy++) {
        for(xx=0; xx<w; xx++) {
    586c:	9a 81       	ldd	r25, Y+2	; 0x02
    586e:	e9 16       	cp	r14, r25
    5870:	d8 f4       	brcc	.+54     	; 0x58a8 <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0xf2>
            if(!(bit++ & 7)) {
    5872:	87 70       	andi	r24, 0x07	; 7
    5874:	51 f4       	brne	.+20     	; 0x588a <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0xd4>
                bits = pgm_read_byte(&bitmap[bo++]);
    5876:	8d 81       	ldd	r24, Y+5	; 0x05
    5878:	9e 81       	ldd	r25, Y+6	; 0x06
    587a:	01 96       	adiw	r24, 0x01	; 1
    587c:	ed 81       	ldd	r30, Y+5	; 0x05
    587e:	fe 81       	ldd	r31, Y+6	; 0x06
    5880:	e2 0d       	add	r30, r2
    5882:	f3 1d       	adc	r31, r3
    5884:	74 90       	lpm	r7, Z
    5886:	9e 83       	std	Y+6, r25	; 0x06
    5888:	8d 83       	std	Y+5, r24	; 0x05
            }
            if(bits & 0x80) {
    588a:	77 fe       	sbrs	r7, 7
    588c:	08 c0       	rjmp	.+16     	; 0x589e <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0xe8>
                drawPixel(x+xo+xx, y+yo+yy, color);
    588e:	98 01       	movw	r18, r16
    5890:	a4 01       	movw	r20, r8
    5892:	b5 01       	movw	r22, r10
    5894:	6e 0d       	add	r22, r14
    5896:	7f 1d       	adc	r23, r15
    5898:	c6 01       	movw	r24, r12
    589a:	0e 94 ea 28 	call	0x51d4	; 0x51d4 <_ZN14TFT_22_ILI92259drawPixelEjjj>
            }
            bits <<= 1;
    589e:	77 0c       	add	r7, r7
    58a0:	2f ef       	ldi	r18, 0xFF	; 255
    58a2:	e2 1a       	sub	r14, r18
    58a4:	f2 0a       	sbc	r15, r18

    // Add character clipping here one day

    startWrite();
    for(yy=0; yy<h; yy++) {
        for(xx=0; xx<w; xx++) {
    58a6:	e0 cf       	rjmp	.-64     	; 0x5868 <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0xb2>
    58a8:	39 81       	ldd	r19, Y+1	; 0x01
    58aa:	8a 81       	ldd	r24, Y+2	; 0x02
    58ac:	38 0f       	add	r19, r24
    58ae:	39 83       	std	Y+1, r19	; 0x01
    uint8_t  xx, yy, bits = 0, bit = 0;

    // Add character clipping here one day

    startWrite();
    for(yy=0; yy<h; yy++) {
    58b0:	63 94       	inc	r6
    58b2:	d2 cf       	rjmp	.-92     	; 0x5858 <_ZN14TFT_22_ILI922511drawGFXCharEiihj+0xa2>
                drawPixel(x+xo+xx, y+yo+yy, color);
            }
            bits <<= 1;
        }
    }
    endWrite();
    58b4:	c6 01       	movw	r24, r12
    58b6:	0e 94 80 24 	call	0x4900	; 0x4900 <_ZN14TFT_22_ILI92258endWriteEv>

    return (uint16_t)xa;
}
    58ba:	2c 81       	ldd	r18, Y+4	; 0x04
    58bc:	82 2f       	mov	r24, r18
    58be:	90 e0       	ldi	r25, 0x00	; 0
    58c0:	26 96       	adiw	r28, 0x06	; 6
    58c2:	0f b6       	in	r0, 0x3f	; 63
    58c4:	f8 94       	cli
    58c6:	de bf       	out	0x3e, r29	; 62
    58c8:	0f be       	out	0x3f, r0	; 63
    58ca:	cd bf       	out	0x3d, r28	; 61
    58cc:	df 91       	pop	r29
    58ce:	cf 91       	pop	r28
    58d0:	1f 91       	pop	r17
    58d2:	0f 91       	pop	r16
    58d4:	ff 90       	pop	r15
    58d6:	ef 90       	pop	r14
    58d8:	df 90       	pop	r13
    58da:	cf 90       	pop	r12
    58dc:	bf 90       	pop	r11
    58de:	af 90       	pop	r10
    58e0:	9f 90       	pop	r9
    58e2:	8f 90       	pop	r8
    58e4:	7f 90       	pop	r7
    58e6:	6f 90       	pop	r6
    58e8:	5f 90       	pop	r5
    58ea:	4f 90       	pop	r4
    58ec:	3f 90       	pop	r3
    58ee:	2f 90       	pop	r2
    58f0:	08 95       	ret

000058f2 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj>:
    gfxFont = (GFXfont *)f;
}


// Draw a string
void TFT_22_ILI9225::drawGFXText(int16_t x, int16_t y, STRING s, uint16_t color) {
    58f2:	6f 92       	push	r6
    58f4:	7f 92       	push	r7
    58f6:	8f 92       	push	r8
    58f8:	9f 92       	push	r9
    58fa:	af 92       	push	r10
    58fc:	bf 92       	push	r11
    58fe:	cf 92       	push	r12
    5900:	df 92       	push	r13
    5902:	ff 92       	push	r15
    5904:	0f 93       	push	r16
    5906:	1f 93       	push	r17
    5908:	cf 93       	push	r28
    590a:	df 93       	push	r29
    590c:	6c 01       	movw	r12, r24
    590e:	eb 01       	movw	r28, r22
    5910:	5a 01       	movw	r10, r20
    5912:	39 01       	movw	r6, r18
    5914:	48 01       	movw	r8, r16

    int16_t currx = x;

    if(gfxFont) {
    5916:	fc 01       	movw	r30, r24
    5918:	ee 5b       	subi	r30, 0xBE	; 190
    591a:	ff 4f       	sbci	r31, 0xFF	; 255
    591c:	80 81       	ld	r24, Z
    591e:	91 81       	ldd	r25, Z+1	; 0x01
    5920:	89 2b       	or	r24, r25
    5922:	c1 f0       	breq	.+48     	; 0x5954 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj+0x62>
    5924:	f1 2c       	mov	r15, r1
        // Print every character in string
#ifdef USE_STRING_CLASS
        for (uint8_t k = 0; k < s.length(); k++) {
    5926:	6f 2d       	mov	r22, r15
    5928:	70 e0       	ldi	r23, 0x00	; 0
    592a:	f3 01       	movw	r30, r6
    592c:	84 81       	ldd	r24, Z+4	; 0x04
    592e:	95 81       	ldd	r25, Z+5	; 0x05
    5930:	68 17       	cp	r22, r24
    5932:	79 07       	cpc	r23, r25
    5934:	78 f4       	brcc	.+30     	; 0x5954 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj+0x62>
            currx += drawGFXChar(currx, y, s.charAt(k), color) + 1;
    5936:	c3 01       	movw	r24, r6
    5938:	0e 94 32 1f 	call	0x3e64	; 0x3e64 <_ZNK6String6charAtEj>
    593c:	84 01       	movw	r16, r8
    593e:	28 2f       	mov	r18, r24
    5940:	a5 01       	movw	r20, r10
    5942:	be 01       	movw	r22, r28
    5944:	c6 01       	movw	r24, r12
    5946:	0e 94 db 2b 	call	0x57b6	; 0x57b6 <_ZN14TFT_22_ILI922511drawGFXCharEiihj>
    594a:	21 96       	adiw	r28, 0x01	; 1
    594c:	c8 0f       	add	r28, r24
    594e:	d9 1f       	adc	r29, r25
    int16_t currx = x;

    if(gfxFont) {
        // Print every character in string
#ifdef USE_STRING_CLASS
        for (uint8_t k = 0; k < s.length(); k++) {
    5950:	f3 94       	inc	r15
    5952:	e9 cf       	rjmp	.-46     	; 0x5926 <_ZN14TFT_22_ILI922511drawGFXTextEii6Stringj+0x34>
        for (uint8_t k = 0; k < strlen(s); k++) {
            currx += drawGFXChar(currx, y, s[k], color) + 1;
        }
#endif
    }
}
    5954:	df 91       	pop	r29
    5956:	cf 91       	pop	r28
    5958:	1f 91       	pop	r17
    595a:	0f 91       	pop	r16
    595c:	ff 90       	pop	r15
    595e:	df 90       	pop	r13
    5960:	cf 90       	pop	r12
    5962:	bf 90       	pop	r11
    5964:	af 90       	pop	r10
    5966:	9f 90       	pop	r9
    5968:	8f 90       	pop	r8
    596a:	7f 90       	pop	r7
    596c:	6f 90       	pop	r6
    596e:	08 95       	ret

00005970 <_ZN7TwoWire9availableEv>:
}

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
    5970:	80 91 52 04 	lds	r24, 0x0452	; 0x800452 <_ZN7TwoWire14rxBufferLengthE>
    5974:	90 e0       	ldi	r25, 0x00	; 0
    5976:	20 91 53 04 	lds	r18, 0x0453	; 0x800453 <_ZN7TwoWire13rxBufferIndexE>
    597a:	82 1b       	sub	r24, r18
    597c:	91 09       	sbc	r25, r1
    597e:	08 95       	ret

00005980 <_ZN7TwoWire4readEv>:
    5980:	90 91 53 04 	lds	r25, 0x0453	; 0x800453 <_ZN7TwoWire13rxBufferIndexE>
    5984:	80 91 52 04 	lds	r24, 0x0452	; 0x800452 <_ZN7TwoWire14rxBufferLengthE>
    5988:	98 17       	cp	r25, r24
    598a:	50 f4       	brcc	.+20     	; 0x59a0 <_ZN7TwoWire4readEv+0x20>
    598c:	e9 2f       	mov	r30, r25
    598e:	f0 e0       	ldi	r31, 0x00	; 0
    5990:	ec 5a       	subi	r30, 0xAC	; 172
    5992:	fb 4f       	sbci	r31, 0xFB	; 251
    5994:	20 81       	ld	r18, Z
    5996:	30 e0       	ldi	r19, 0x00	; 0
    5998:	9f 5f       	subi	r25, 0xFF	; 255
    599a:	90 93 53 04 	sts	0x0453, r25	; 0x800453 <_ZN7TwoWire13rxBufferIndexE>
    599e:	02 c0       	rjmp	.+4      	; 0x59a4 <_ZN7TwoWire4readEv+0x24>
    59a0:	2f ef       	ldi	r18, 0xFF	; 255
    59a2:	3f ef       	ldi	r19, 0xFF	; 255
    59a4:	c9 01       	movw	r24, r18
    59a6:	08 95       	ret

000059a8 <_ZN7TwoWire4peekEv>:
    59a8:	e0 91 53 04 	lds	r30, 0x0453	; 0x800453 <_ZN7TwoWire13rxBufferIndexE>
    59ac:	80 91 52 04 	lds	r24, 0x0452	; 0x800452 <_ZN7TwoWire14rxBufferLengthE>
    59b0:	e8 17       	cp	r30, r24
    59b2:	30 f4       	brcc	.+12     	; 0x59c0 <_ZN7TwoWire4peekEv+0x18>
    59b4:	f0 e0       	ldi	r31, 0x00	; 0
    59b6:	ec 5a       	subi	r30, 0xAC	; 172
    59b8:	fb 4f       	sbci	r31, 0xFB	; 251
    59ba:	80 81       	ld	r24, Z
    59bc:	90 e0       	ldi	r25, 0x00	; 0
    59be:	08 95       	ret
    59c0:	8f ef       	ldi	r24, 0xFF	; 255
    59c2:	9f ef       	ldi	r25, 0xFF	; 255
    59c4:	08 95       	ret

000059c6 <_ZN7TwoWire5flushEv>:
    59c6:	08 95       	ret

000059c8 <_ZN7TwoWire16onReceiveServiceEPhi>:
    59c8:	cf 93       	push	r28
    59ca:	df 93       	push	r29
    59cc:	ec 01       	movw	r28, r24
    59ce:	e0 91 2a 04 	lds	r30, 0x042A	; 0x80042a <_ZN7TwoWire14user_onReceiveE>
    59d2:	f0 91 2b 04 	lds	r31, 0x042B	; 0x80042b <_ZN7TwoWire14user_onReceiveE+0x1>
    59d6:	30 97       	sbiw	r30, 0x00	; 0
    59d8:	f1 f0       	breq	.+60     	; 0x5a16 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
    59da:	90 91 53 04 	lds	r25, 0x0453	; 0x800453 <_ZN7TwoWire13rxBufferIndexE>
    59de:	80 91 52 04 	lds	r24, 0x0452	; 0x800452 <_ZN7TwoWire14rxBufferLengthE>
    59e2:	98 17       	cp	r25, r24
    59e4:	c0 f0       	brcs	.+48     	; 0x5a16 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
    59e6:	90 e0       	ldi	r25, 0x00	; 0
    59e8:	29 2f       	mov	r18, r25
    59ea:	30 e0       	ldi	r19, 0x00	; 0
    59ec:	26 17       	cp	r18, r22
    59ee:	37 07       	cpc	r19, r23
    59f0:	54 f4       	brge	.+20     	; 0x5a06 <_ZN7TwoWire16onReceiveServiceEPhi+0x3e>
    59f2:	de 01       	movw	r26, r28
    59f4:	a2 0f       	add	r26, r18
    59f6:	b3 1f       	adc	r27, r19
    59f8:	4c 91       	ld	r20, X
    59fa:	d9 01       	movw	r26, r18
    59fc:	ac 5a       	subi	r26, 0xAC	; 172
    59fe:	bb 4f       	sbci	r27, 0xFB	; 251
    5a00:	4c 93       	st	X, r20
    5a02:	9f 5f       	subi	r25, 0xFF	; 255
    5a04:	f1 cf       	rjmp	.-30     	; 0x59e8 <_ZN7TwoWire16onReceiveServiceEPhi+0x20>
    5a06:	10 92 53 04 	sts	0x0453, r1	; 0x800453 <_ZN7TwoWire13rxBufferIndexE>
    5a0a:	60 93 52 04 	sts	0x0452, r22	; 0x800452 <_ZN7TwoWire14rxBufferLengthE>
    5a0e:	cb 01       	movw	r24, r22
    5a10:	df 91       	pop	r29
    5a12:	cf 91       	pop	r28
    5a14:	09 94       	ijmp
    5a16:	df 91       	pop	r29
    5a18:	cf 91       	pop	r28
    5a1a:	08 95       	ret

00005a1c <_ZN7TwoWire16onRequestServiceEv>:
    5a1c:	e0 91 2c 04 	lds	r30, 0x042C	; 0x80042c <_ZN7TwoWire14user_onRequestE>
    5a20:	f0 91 2d 04 	lds	r31, 0x042D	; 0x80042d <_ZN7TwoWire14user_onRequestE+0x1>
    5a24:	30 97       	sbiw	r30, 0x00	; 0
    5a26:	29 f0       	breq	.+10     	; 0x5a32 <_ZN7TwoWire16onRequestServiceEv+0x16>
    5a28:	10 92 30 04 	sts	0x0430, r1	; 0x800430 <_ZN7TwoWire13txBufferIndexE>
    5a2c:	10 92 2f 04 	sts	0x042F, r1	; 0x80042f <_ZN7TwoWire14txBufferLengthE>
    5a30:	09 94       	ijmp
    5a32:	08 95       	ret

00005a34 <_ZN7TwoWire5writeEPKhj>:
    5a34:	cf 92       	push	r12
    5a36:	df 92       	push	r13
    5a38:	ef 92       	push	r14
    5a3a:	ff 92       	push	r15
    5a3c:	0f 93       	push	r16
    5a3e:	1f 93       	push	r17
    5a40:	cf 93       	push	r28
    5a42:	df 93       	push	r29
    5a44:	7c 01       	movw	r14, r24
    5a46:	cb 01       	movw	r24, r22
    5a48:	8a 01       	movw	r16, r20
    5a4a:	20 91 2e 04 	lds	r18, 0x042E	; 0x80042e <_ZN7TwoWire12transmittingE>
    5a4e:	22 23       	and	r18, r18
    5a50:	89 f0       	breq	.+34     	; 0x5a74 <_ZN7TwoWire5writeEPKhj+0x40>
    5a52:	eb 01       	movw	r28, r22
    5a54:	6b 01       	movw	r12, r22
    5a56:	c4 0e       	add	r12, r20
    5a58:	d5 1e       	adc	r13, r21
    5a5a:	cc 15       	cp	r28, r12
    5a5c:	dd 05       	cpc	r29, r13
    5a5e:	69 f0       	breq	.+26     	; 0x5a7a <_ZN7TwoWire5writeEPKhj+0x46>
    5a60:	69 91       	ld	r22, Y+
    5a62:	d7 01       	movw	r26, r14
    5a64:	ed 91       	ld	r30, X+
    5a66:	fc 91       	ld	r31, X
    5a68:	01 90       	ld	r0, Z+
    5a6a:	f0 81       	ld	r31, Z
    5a6c:	e0 2d       	mov	r30, r0
    5a6e:	c7 01       	movw	r24, r14
    5a70:	09 95       	icall
    5a72:	f3 cf       	rjmp	.-26     	; 0x5a5a <_ZN7TwoWire5writeEPKhj+0x26>
    5a74:	64 2f       	mov	r22, r20
    5a76:	0e 94 8d 2f 	call	0x5f1a	; 0x5f1a <twi_transmit>
    5a7a:	c8 01       	movw	r24, r16
    5a7c:	df 91       	pop	r29
    5a7e:	cf 91       	pop	r28
    5a80:	1f 91       	pop	r17
    5a82:	0f 91       	pop	r16
    5a84:	ff 90       	pop	r15
    5a86:	ef 90       	pop	r14
    5a88:	df 90       	pop	r13
    5a8a:	cf 90       	pop	r12
    5a8c:	08 95       	ret

00005a8e <_ZN7TwoWire5writeEh>:
    5a8e:	cf 93       	push	r28
    5a90:	df 93       	push	r29
    5a92:	1f 92       	push	r1
    5a94:	cd b7       	in	r28, 0x3d	; 61
    5a96:	de b7       	in	r29, 0x3e	; 62
    5a98:	69 83       	std	Y+1, r22	; 0x01
    5a9a:	20 91 2e 04 	lds	r18, 0x042E	; 0x80042e <_ZN7TwoWire12transmittingE>
    5a9e:	22 23       	and	r18, r18
    5aa0:	d1 f0       	breq	.+52     	; 0x5ad6 <_ZN7TwoWire5writeEh+0x48>
    5aa2:	20 91 2f 04 	lds	r18, 0x042F	; 0x80042f <_ZN7TwoWire14txBufferLengthE>
    5aa6:	20 32       	cpi	r18, 0x20	; 32
    5aa8:	40 f0       	brcs	.+16     	; 0x5aba <_ZN7TwoWire5writeEh+0x2c>
    5aaa:	21 e0       	ldi	r18, 0x01	; 1
    5aac:	30 e0       	ldi	r19, 0x00	; 0
    5aae:	fc 01       	movw	r30, r24
    5ab0:	33 83       	std	Z+3, r19	; 0x03
    5ab2:	22 83       	std	Z+2, r18	; 0x02
    5ab4:	80 e0       	ldi	r24, 0x00	; 0
    5ab6:	90 e0       	ldi	r25, 0x00	; 0
    5ab8:	15 c0       	rjmp	.+42     	; 0x5ae4 <_ZN7TwoWire5writeEh+0x56>
    5aba:	80 91 30 04 	lds	r24, 0x0430	; 0x800430 <_ZN7TwoWire13txBufferIndexE>
    5abe:	e8 2f       	mov	r30, r24
    5ac0:	f0 e0       	ldi	r31, 0x00	; 0
    5ac2:	ef 5c       	subi	r30, 0xCF	; 207
    5ac4:	fb 4f       	sbci	r31, 0xFB	; 251
    5ac6:	99 81       	ldd	r25, Y+1	; 0x01
    5ac8:	90 83       	st	Z, r25
    5aca:	8f 5f       	subi	r24, 0xFF	; 255
    5acc:	80 93 30 04 	sts	0x0430, r24	; 0x800430 <_ZN7TwoWire13txBufferIndexE>
    5ad0:	80 93 2f 04 	sts	0x042F, r24	; 0x80042f <_ZN7TwoWire14txBufferLengthE>
    5ad4:	05 c0       	rjmp	.+10     	; 0x5ae0 <_ZN7TwoWire5writeEh+0x52>
    5ad6:	61 e0       	ldi	r22, 0x01	; 1
    5ad8:	ce 01       	movw	r24, r28
    5ada:	01 96       	adiw	r24, 0x01	; 1
    5adc:	0e 94 8d 2f 	call	0x5f1a	; 0x5f1a <twi_transmit>
    5ae0:	81 e0       	ldi	r24, 0x01	; 1
    5ae2:	90 e0       	ldi	r25, 0x00	; 0
    5ae4:	0f 90       	pop	r0
    5ae6:	df 91       	pop	r29
    5ae8:	cf 91       	pop	r28
    5aea:	08 95       	ret

00005aec <_ZN7TwoWireC1Ev>:
    5aec:	fc 01       	movw	r30, r24
    5aee:	13 82       	std	Z+3, r1	; 0x03
    5af0:	12 82       	std	Z+2, r1	; 0x02
    5af2:	88 ee       	ldi	r24, 0xE8	; 232
    5af4:	93 e0       	ldi	r25, 0x03	; 3
    5af6:	a0 e0       	ldi	r26, 0x00	; 0
    5af8:	b0 e0       	ldi	r27, 0x00	; 0
    5afa:	84 83       	std	Z+4, r24	; 0x04
    5afc:	95 83       	std	Z+5, r25	; 0x05
    5afe:	a6 83       	std	Z+6, r26	; 0x06
    5b00:	b7 83       	std	Z+7, r27	; 0x07
    5b02:	86 e2       	ldi	r24, 0x26	; 38
    5b04:	92 e0       	ldi	r25, 0x02	; 2
    5b06:	91 83       	std	Z+1, r25	; 0x01
    5b08:	80 83       	st	Z, r24
    5b0a:	08 95       	ret

00005b0c <_ZN7TwoWire5beginEv>:
    5b0c:	10 92 53 04 	sts	0x0453, r1	; 0x800453 <_ZN7TwoWire13rxBufferIndexE>
    5b10:	10 92 52 04 	sts	0x0452, r1	; 0x800452 <_ZN7TwoWire14rxBufferLengthE>
    5b14:	10 92 30 04 	sts	0x0430, r1	; 0x800430 <_ZN7TwoWire13txBufferIndexE>
    5b18:	10 92 2f 04 	sts	0x042F, r1	; 0x80042f <_ZN7TwoWire14txBufferLengthE>
    5b1c:	0e 94 4e 2f 	call	0x5e9c	; 0x5e9c <twi_init>
    5b20:	8e e0       	ldi	r24, 0x0E	; 14
    5b22:	9d e2       	ldi	r25, 0x2D	; 45
    5b24:	0e 94 ba 2f 	call	0x5f74	; 0x5f74 <twi_attachSlaveTxEvent>
    5b28:	84 ee       	ldi	r24, 0xE4	; 228
    5b2a:	9c e2       	ldi	r25, 0x2C	; 44
    5b2c:	0c 94 b5 2f 	jmp	0x5f6a	; 0x5f6a <twi_attachSlaveRxEvent>

00005b30 <_ZN7TwoWire8setClockEm>:
    5b30:	cb 01       	movw	r24, r22
    5b32:	ba 01       	movw	r22, r20
    5b34:	0c 94 79 2f 	jmp	0x5ef2	; 0x5ef2 <twi_setFrequency>

00005b38 <_ZN7TwoWire17beginTransmissionEh>:
    5b38:	81 e0       	ldi	r24, 0x01	; 1
    5b3a:	80 93 2e 04 	sts	0x042E, r24	; 0x80042e <_ZN7TwoWire12transmittingE>
    5b3e:	60 93 51 04 	sts	0x0451, r22	; 0x800451 <_ZN7TwoWire9txAddressE>
    5b42:	10 92 30 04 	sts	0x0430, r1	; 0x800430 <_ZN7TwoWire13txBufferIndexE>
    5b46:	10 92 2f 04 	sts	0x042F, r1	; 0x80042f <_ZN7TwoWire14txBufferLengthE>
    5b4a:	08 95       	ret

00005b4c <_ZN7TwoWire15endTransmissionEh>:
    5b4c:	0f 93       	push	r16
    5b4e:	06 2f       	mov	r16, r22
    5b50:	21 e0       	ldi	r18, 0x01	; 1
    5b52:	40 91 2f 04 	lds	r20, 0x042F	; 0x80042f <_ZN7TwoWire14txBufferLengthE>
    5b56:	61 e3       	ldi	r22, 0x31	; 49
    5b58:	74 e0       	ldi	r23, 0x04	; 4
    5b5a:	80 91 51 04 	lds	r24, 0x0451	; 0x800451 <_ZN7TwoWire9txAddressE>
    5b5e:	0e 94 c4 30 	call	0x6188	; 0x6188 <twi_writeTo>
    5b62:	10 92 30 04 	sts	0x0430, r1	; 0x800430 <_ZN7TwoWire13txBufferIndexE>
    5b66:	10 92 2f 04 	sts	0x042F, r1	; 0x80042f <_ZN7TwoWire14txBufferLengthE>
    5b6a:	10 92 2e 04 	sts	0x042E, r1	; 0x80042e <_ZN7TwoWire12transmittingE>
    5b6e:	0f 91       	pop	r16
    5b70:	08 95       	ret

00005b72 <_ZN7TwoWire11requestFromEhhmhh>:
    5b72:	4f 92       	push	r4
    5b74:	5f 92       	push	r5
    5b76:	6f 92       	push	r6
    5b78:	7f 92       	push	r7
    5b7a:	af 92       	push	r10
    5b7c:	bf 92       	push	r11
    5b7e:	cf 92       	push	r12
    5b80:	ef 92       	push	r14
    5b82:	ff 92       	push	r15
    5b84:	0f 93       	push	r16
    5b86:	1f 93       	push	r17
    5b88:	cf 93       	push	r28
    5b8a:	df 93       	push	r29
    5b8c:	5c 01       	movw	r10, r24
    5b8e:	f6 2e       	mov	r15, r22
    5b90:	d4 2f       	mov	r29, r20
    5b92:	28 01       	movw	r4, r16
    5b94:	39 01       	movw	r6, r18
    5b96:	ee 20       	and	r14, r14
    5b98:	21 f1       	breq	.+72     	; 0x5be2 <_ZN7TwoWire11requestFromEhhmhh+0x70>
    5b9a:	0e 94 9c 2d 	call	0x5b38	; 0x5b38 <_ZN7TwoWire17beginTransmissionEh>
    5b9e:	ce 2d       	mov	r28, r14
    5ba0:	c4 30       	cpi	r28, 0x04	; 4
    5ba2:	08 f0       	brcs	.+2      	; 0x5ba6 <_ZN7TwoWire11requestFromEhhmhh+0x34>
    5ba4:	c3 e0       	ldi	r28, 0x03	; 3
    5ba6:	c1 50       	subi	r28, 0x01	; 1
    5ba8:	c0 f0       	brcs	.+48     	; 0x5bda <_ZN7TwoWire11requestFromEhhmhh+0x68>
    5baa:	28 e0       	ldi	r18, 0x08	; 8
    5bac:	c2 9f       	mul	r28, r18
    5bae:	c0 01       	movw	r24, r0
    5bb0:	11 24       	eor	r1, r1
    5bb2:	a3 01       	movw	r20, r6
    5bb4:	92 01       	movw	r18, r4
    5bb6:	04 c0       	rjmp	.+8      	; 0x5bc0 <_ZN7TwoWire11requestFromEhhmhh+0x4e>
    5bb8:	56 95       	lsr	r21
    5bba:	47 95       	ror	r20
    5bbc:	37 95       	ror	r19
    5bbe:	27 95       	ror	r18
    5bc0:	8a 95       	dec	r24
    5bc2:	d2 f7       	brpl	.-12     	; 0x5bb8 <_ZN7TwoWire11requestFromEhhmhh+0x46>
    5bc4:	ca 01       	movw	r24, r20
    5bc6:	b9 01       	movw	r22, r18
    5bc8:	d5 01       	movw	r26, r10
    5bca:	ed 91       	ld	r30, X+
    5bcc:	fc 91       	ld	r31, X
    5bce:	01 90       	ld	r0, Z+
    5bd0:	f0 81       	ld	r31, Z
    5bd2:	e0 2d       	mov	r30, r0
    5bd4:	c5 01       	movw	r24, r10
    5bd6:	09 95       	icall
    5bd8:	e6 cf       	rjmp	.-52     	; 0x5ba6 <_ZN7TwoWire11requestFromEhhmhh+0x34>
    5bda:	60 e0       	ldi	r22, 0x00	; 0
    5bdc:	c5 01       	movw	r24, r10
    5bde:	0e 94 a6 2d 	call	0x5b4c	; 0x5b4c <_ZN7TwoWire15endTransmissionEh>
    5be2:	4d 2f       	mov	r20, r29
    5be4:	d1 32       	cpi	r29, 0x21	; 33
    5be6:	08 f0       	brcs	.+2      	; 0x5bea <_ZN7TwoWire11requestFromEhhmhh+0x78>
    5be8:	40 e2       	ldi	r20, 0x20	; 32
    5bea:	2c 2d       	mov	r18, r12
    5bec:	64 e5       	ldi	r22, 0x54	; 84
    5bee:	74 e0       	ldi	r23, 0x04	; 4
    5bf0:	8f 2d       	mov	r24, r15
    5bf2:	0e 94 db 2f 	call	0x5fb6	; 0x5fb6 <twi_readFrom>
    5bf6:	10 92 53 04 	sts	0x0453, r1	; 0x800453 <_ZN7TwoWire13rxBufferIndexE>
    5bfa:	80 93 52 04 	sts	0x0452, r24	; 0x800452 <_ZN7TwoWire14rxBufferLengthE>
    5bfe:	df 91       	pop	r29
    5c00:	cf 91       	pop	r28
    5c02:	1f 91       	pop	r17
    5c04:	0f 91       	pop	r16
    5c06:	ff 90       	pop	r15
    5c08:	ef 90       	pop	r14
    5c0a:	cf 90       	pop	r12
    5c0c:	bf 90       	pop	r11
    5c0e:	af 90       	pop	r10
    5c10:	7f 90       	pop	r7
    5c12:	6f 90       	pop	r6
    5c14:	5f 90       	pop	r5
    5c16:	4f 90       	pop	r4
    5c18:	08 95       	ret

00005c1a <_ZN7TwoWire11requestFromEhhh>:
    5c1a:	cf 92       	push	r12
    5c1c:	ef 92       	push	r14
    5c1e:	0f 93       	push	r16
    5c20:	1f 93       	push	r17
    5c22:	c2 2e       	mov	r12, r18
    5c24:	e1 2c       	mov	r14, r1
    5c26:	00 e0       	ldi	r16, 0x00	; 0
    5c28:	10 e0       	ldi	r17, 0x00	; 0
    5c2a:	98 01       	movw	r18, r16
    5c2c:	0e 94 b9 2d 	call	0x5b72	; 0x5b72 <_ZN7TwoWire11requestFromEhhmhh>
    5c30:	1f 91       	pop	r17
    5c32:	0f 91       	pop	r16
    5c34:	ef 90       	pop	r14
    5c36:	cf 90       	pop	r12
    5c38:	08 95       	ret

00005c3a <_ZN7TwoWire11requestFromEhh>:
    5c3a:	21 e0       	ldi	r18, 0x01	; 1
    5c3c:	0c 94 0d 2e 	jmp	0x5c1a	; 0x5c1a <_ZN7TwoWire11requestFromEhhh>

00005c40 <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
}

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
    5c40:	8e e1       	ldi	r24, 0x1E	; 30
    5c42:	94 e0       	ldi	r25, 0x04	; 4
    5c44:	0c 94 76 2d 	jmp	0x5aec	; 0x5aec <_ZN7TwoWireC1Ev>

00005c48 <yield>:
 * libraries or sketches that supports cooperative threads.
 *
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
    5c48:	08 95       	ret

00005c4a <analogWrite>:
// Right now, PWM output only works on the pins with
// hardware support.  These are defined in the appropriate
// pins_*.c file.  For the rest of the pins, we default
// to digital output.
void analogWrite(uint8_t pin, int val)
{
    5c4a:	1f 93       	push	r17
    5c4c:	cf 93       	push	r28
    5c4e:	df 93       	push	r29
    5c50:	18 2f       	mov	r17, r24
    5c52:	eb 01       	movw	r28, r22
	// We need to make sure the PWM output is enabled for those pins
	// that support it, as we turn it off when digitally reading or
	// writing with them.  Also, make sure the pin is in output mode
	// for consistenty with Wiring, which doesn't require a pinMode
	// call for the analog output pins.
	pinMode(pin, OUTPUT);
    5c54:	61 e0       	ldi	r22, 0x01	; 1
    5c56:	0e 94 ad 2e 	call	0x5d5a	; 0x5d5a <pinMode>
	if (val == 0)
    5c5a:	20 97       	sbiw	r28, 0x00	; 0
    5c5c:	11 f4       	brne	.+4      	; 0x5c62 <analogWrite+0x18>
	{
		digitalWrite(pin, LOW);
    5c5e:	60 e0       	ldi	r22, 0x00	; 0
    5c60:	04 c0       	rjmp	.+8      	; 0x5c6a <analogWrite+0x20>
	}
	else if (val == 255)
    5c62:	cf 3f       	cpi	r28, 0xFF	; 255
    5c64:	d1 05       	cpc	r29, r1
    5c66:	39 f4       	brne	.+14     	; 0x5c76 <analogWrite+0x2c>
	{
		digitalWrite(pin, HIGH);
    5c68:	61 e0       	ldi	r22, 0x01	; 1
    5c6a:	81 2f       	mov	r24, r17
				} else {
					digitalWrite(pin, HIGH);
				}
		}
	}
}
    5c6c:	df 91       	pop	r29
    5c6e:	cf 91       	pop	r28
    5c70:	1f 91       	pop	r17
	{
		digitalWrite(pin, LOW);
	}
	else if (val == 255)
	{
		digitalWrite(pin, HIGH);
    5c72:	0c 94 e9 2e 	jmp	0x5dd2	; 0x5dd2 <digitalWrite>
	}
	else
	{
		switch(digitalPinToTimer(pin))
    5c76:	e1 2f       	mov	r30, r17
    5c78:	f0 e0       	ldi	r31, 0x00	; 0
    5c7a:	e1 52       	subi	r30, 0x21	; 33
    5c7c:	f9 4d       	sbci	r31, 0xD9	; 217
    5c7e:	e4 91       	lpm	r30, Z
    5c80:	e3 30       	cpi	r30, 0x03	; 3
    5c82:	f9 f0       	breq	.+62     	; 0x5cc2 <analogWrite+0x78>
    5c84:	48 f4       	brcc	.+18     	; 0x5c98 <analogWrite+0x4e>
    5c86:	e1 30       	cpi	r30, 0x01	; 1
    5c88:	b9 f0       	breq	.+46     	; 0x5cb8 <analogWrite+0x6e>
    5c8a:	e2 30       	cpi	r30, 0x02	; 2
    5c8c:	a1 f5       	brne	.+104    	; 0x5cf6 <analogWrite+0xac>
			#endif

			#if defined(TCCR0A) && defined(COM0B1)
			case TIMER0B:
				// connect pwm to pin on timer 0, channel B
				sbi(TCCR0A, COM0B1);
    5c8e:	84 b5       	in	r24, 0x24	; 36
    5c90:	80 62       	ori	r24, 0x20	; 32
    5c92:	84 bd       	out	0x24, r24	; 36
				OCR0B = val; // set pwm duty
    5c94:	c8 bd       	out	0x28, r28	; 40
				break;
    5c96:	34 c0       	rjmp	.+104    	; 0x5d00 <analogWrite+0xb6>
	{
		digitalWrite(pin, HIGH);
	}
	else
	{
		switch(digitalPinToTimer(pin))
    5c98:	e7 30       	cpi	r30, 0x07	; 7
    5c9a:	e9 f0       	breq	.+58     	; 0x5cd6 <analogWrite+0x8c>
    5c9c:	e8 30       	cpi	r30, 0x08	; 8
    5c9e:	19 f1       	breq	.+70     	; 0x5ce6 <analogWrite+0x9c>
    5ca0:	e4 30       	cpi	r30, 0x04	; 4
    5ca2:	49 f5       	brne	.+82     	; 0x5cf6 <analogWrite+0xac>
			#endif

			#if defined(TCCR1A) && defined(COM1B1)
			case TIMER1B:
				// connect pwm to pin on timer 1, channel B
				sbi(TCCR1A, COM1B1);
    5ca4:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    5ca8:	80 62       	ori	r24, 0x20	; 32
    5caa:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
				OCR1B = val; // set pwm duty
    5cae:	d0 93 8b 00 	sts	0x008B, r29	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
    5cb2:	c0 93 8a 00 	sts	0x008A, r28	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
				break;
    5cb6:	24 c0       	rjmp	.+72     	; 0x5d00 <analogWrite+0xb6>
			#endif

			#if defined(TCCR0A) && defined(COM0A1)
			case TIMER0A:
				// connect pwm to pin on timer 0, channel A
				sbi(TCCR0A, COM0A1);
    5cb8:	84 b5       	in	r24, 0x24	; 36
    5cba:	80 68       	ori	r24, 0x80	; 128
    5cbc:	84 bd       	out	0x24, r24	; 36
				OCR0A = val; // set pwm duty
    5cbe:	c7 bd       	out	0x27, r28	; 39
				break;
    5cc0:	1f c0       	rjmp	.+62     	; 0x5d00 <analogWrite+0xb6>
			#endif

			#if defined(TCCR1A) && defined(COM1A1)
			case TIMER1A:
				// connect pwm to pin on timer 1, channel A
				sbi(TCCR1A, COM1A1);
    5cc2:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    5cc6:	80 68       	ori	r24, 0x80	; 128
    5cc8:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
				OCR1A = val; // set pwm duty
    5ccc:	d0 93 89 00 	sts	0x0089, r29	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    5cd0:	c0 93 88 00 	sts	0x0088, r28	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
				break;
    5cd4:	15 c0       	rjmp	.+42     	; 0x5d00 <analogWrite+0xb6>
			#endif

			#if defined(TCCR2A) && defined(COM2A1)
			case TIMER2A:
				// connect pwm to pin on timer 2, channel A
				sbi(TCCR2A, COM2A1);
    5cd6:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    5cda:	80 68       	ori	r24, 0x80	; 128
    5cdc:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
				OCR2A = val; // set pwm duty
    5ce0:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
				break;
    5ce4:	0d c0       	rjmp	.+26     	; 0x5d00 <analogWrite+0xb6>
			#endif

			#if defined(TCCR2A) && defined(COM2B1)
			case TIMER2B:
				// connect pwm to pin on timer 2, channel B
				sbi(TCCR2A, COM2B1);
    5ce6:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    5cea:	80 62       	ori	r24, 0x20	; 32
    5cec:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
				OCR2B = val; // set pwm duty
    5cf0:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
				break;
    5cf4:	05 c0       	rjmp	.+10     	; 0x5d00 <analogWrite+0xb6>
				break;
			#endif

			case NOT_ON_TIMER:
			default:
				if (val < 128) {
    5cf6:	c0 38       	cpi	r28, 0x80	; 128
    5cf8:	d1 05       	cpc	r29, r1
    5cfa:	0c f0       	brlt	.+2      	; 0x5cfe <analogWrite+0xb4>
    5cfc:	b5 cf       	rjmp	.-150    	; 0x5c68 <analogWrite+0x1e>
    5cfe:	af cf       	rjmp	.-162    	; 0x5c5e <analogWrite+0x14>
				} else {
					digitalWrite(pin, HIGH);
				}
		}
	}
}
    5d00:	df 91       	pop	r29
    5d02:	cf 91       	pop	r28
    5d04:	1f 91       	pop	r17
    5d06:	08 95       	ret

00005d08 <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
    5d08:	83 30       	cpi	r24, 0x03	; 3
    5d0a:	81 f0       	breq	.+32     	; 0x5d2c <turnOffPWM+0x24>
    5d0c:	28 f4       	brcc	.+10     	; 0x5d18 <turnOffPWM+0x10>
    5d0e:	81 30       	cpi	r24, 0x01	; 1
    5d10:	99 f0       	breq	.+38     	; 0x5d38 <turnOffPWM+0x30>
    5d12:	82 30       	cpi	r24, 0x02	; 2
    5d14:	a1 f0       	breq	.+40     	; 0x5d3e <turnOffPWM+0x36>
    5d16:	08 95       	ret
    5d18:	87 30       	cpi	r24, 0x07	; 7
    5d1a:	a9 f0       	breq	.+42     	; 0x5d46 <turnOffPWM+0x3e>
    5d1c:	88 30       	cpi	r24, 0x08	; 8
    5d1e:	b9 f0       	breq	.+46     	; 0x5d4e <turnOffPWM+0x46>
    5d20:	84 30       	cpi	r24, 0x04	; 4
    5d22:	d1 f4       	brne	.+52     	; 0x5d58 <turnOffPWM+0x50>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    5d24:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    5d28:	8f 7d       	andi	r24, 0xDF	; 223
    5d2a:	03 c0       	rjmp	.+6      	; 0x5d32 <turnOffPWM+0x2a>
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
    5d2c:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    5d30:	8f 77       	andi	r24, 0x7F	; 127
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
    5d32:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    5d36:	08 95       	ret
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
    5d38:	84 b5       	in	r24, 0x24	; 36
    5d3a:	8f 77       	andi	r24, 0x7F	; 127
    5d3c:	02 c0       	rjmp	.+4      	; 0x5d42 <turnOffPWM+0x3a>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
    5d3e:	84 b5       	in	r24, 0x24	; 36
    5d40:	8f 7d       	andi	r24, 0xDF	; 223
    5d42:	84 bd       	out	0x24, r24	; 36
    5d44:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
    5d46:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    5d4a:	8f 77       	andi	r24, 0x7F	; 127
    5d4c:	03 c0       	rjmp	.+6      	; 0x5d54 <turnOffPWM+0x4c>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
    5d4e:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    5d52:	8f 7d       	andi	r24, 0xDF	; 223
    5d54:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    5d58:	08 95       	ret

00005d5a <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    5d5a:	cf 93       	push	r28
    5d5c:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    5d5e:	90 e0       	ldi	r25, 0x00	; 0
    5d60:	fc 01       	movw	r30, r24
    5d62:	ed 50       	subi	r30, 0x0D	; 13
    5d64:	f9 4d       	sbci	r31, 0xD9	; 217
    5d66:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
    5d68:	fc 01       	movw	r30, r24
    5d6a:	e9 5f       	subi	r30, 0xF9	; 249
    5d6c:	f8 4d       	sbci	r31, 0xD8	; 216
    5d6e:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    5d70:	88 23       	and	r24, r24
    5d72:	61 f1       	breq	.+88     	; 0x5dcc <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    5d74:	90 e0       	ldi	r25, 0x00	; 0
    5d76:	88 0f       	add	r24, r24
    5d78:	99 1f       	adc	r25, r25
    5d7a:	fc 01       	movw	r30, r24
    5d7c:	eb 5d       	subi	r30, 0xDB	; 219
    5d7e:	f8 4d       	sbci	r31, 0xD8	; 216
    5d80:	c5 91       	lpm	r28, Z+
    5d82:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
    5d84:	fc 01       	movw	r30, r24
    5d86:	e5 5e       	subi	r30, 0xE5	; 229
    5d88:	f8 4d       	sbci	r31, 0xD8	; 216
    5d8a:	a5 91       	lpm	r26, Z+
    5d8c:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
    5d8e:	61 11       	cpse	r22, r1
    5d90:	09 c0       	rjmp	.+18     	; 0x5da4 <pinMode+0x4a>
		uint8_t oldSREG = SREG;
    5d92:	9f b7       	in	r25, 0x3f	; 63
                cli();
    5d94:	f8 94       	cli
		*reg &= ~bit;
    5d96:	88 81       	ld	r24, Y
    5d98:	20 95       	com	r18
    5d9a:	82 23       	and	r24, r18
    5d9c:	88 83       	st	Y, r24
		*out &= ~bit;
    5d9e:	ec 91       	ld	r30, X
    5da0:	2e 23       	and	r18, r30
    5da2:	0b c0       	rjmp	.+22     	; 0x5dba <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
    5da4:	62 30       	cpi	r22, 0x02	; 2
    5da6:	61 f4       	brne	.+24     	; 0x5dc0 <pinMode+0x66>
		uint8_t oldSREG = SREG;
    5da8:	9f b7       	in	r25, 0x3f	; 63
                cli();
    5daa:	f8 94       	cli
		*reg &= ~bit;
    5dac:	88 81       	ld	r24, Y
    5dae:	32 2f       	mov	r19, r18
    5db0:	30 95       	com	r19
    5db2:	83 23       	and	r24, r19
    5db4:	88 83       	st	Y, r24
		*out |= bit;
    5db6:	ec 91       	ld	r30, X
    5db8:	2e 2b       	or	r18, r30
    5dba:	2c 93       	st	X, r18
		SREG = oldSREG;
    5dbc:	9f bf       	out	0x3f, r25	; 63
    5dbe:	06 c0       	rjmp	.+12     	; 0x5dcc <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
    5dc0:	8f b7       	in	r24, 0x3f	; 63
                cli();
    5dc2:	f8 94       	cli
		*reg |= bit;
    5dc4:	e8 81       	ld	r30, Y
    5dc6:	2e 2b       	or	r18, r30
    5dc8:	28 83       	st	Y, r18
		SREG = oldSREG;
    5dca:	8f bf       	out	0x3f, r24	; 63
	}
}
    5dcc:	df 91       	pop	r29
    5dce:	cf 91       	pop	r28
    5dd0:	08 95       	ret

00005dd2 <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
    5dd2:	1f 93       	push	r17
    5dd4:	cf 93       	push	r28
    5dd6:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
    5dd8:	28 2f       	mov	r18, r24
    5dda:	30 e0       	ldi	r19, 0x00	; 0
    5ddc:	f9 01       	movw	r30, r18
    5dde:	e1 52       	subi	r30, 0x21	; 33
    5de0:	f9 4d       	sbci	r31, 0xD9	; 217
    5de2:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
    5de4:	f9 01       	movw	r30, r18
    5de6:	ed 50       	subi	r30, 0x0D	; 13
    5de8:	f9 4d       	sbci	r31, 0xD9	; 217
    5dea:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
    5dec:	f9 01       	movw	r30, r18
    5dee:	e9 5f       	subi	r30, 0xF9	; 249
    5df0:	f8 4d       	sbci	r31, 0xD8	; 216
    5df2:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
    5df4:	cc 23       	and	r28, r28
    5df6:	c1 f0       	breq	.+48     	; 0x5e28 <digitalWrite+0x56>
    5df8:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    5dfa:	81 11       	cpse	r24, r1
    5dfc:	0e 94 84 2e 	call	0x5d08	; 0x5d08 <turnOffPWM>

	out = portOutputRegister(port);
    5e00:	ec 2f       	mov	r30, r28
    5e02:	f0 e0       	ldi	r31, 0x00	; 0
    5e04:	ee 0f       	add	r30, r30
    5e06:	ff 1f       	adc	r31, r31
    5e08:	e5 5e       	subi	r30, 0xE5	; 229
    5e0a:	f8 4d       	sbci	r31, 0xD8	; 216
    5e0c:	a5 91       	lpm	r26, Z+
    5e0e:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
    5e10:	9f b7       	in	r25, 0x3f	; 63
	cli();
    5e12:	f8 94       	cli

	if (val == LOW) {
    5e14:	11 11       	cpse	r17, r1
    5e16:	04 c0       	rjmp	.+8      	; 0x5e20 <digitalWrite+0x4e>
		*out &= ~bit;
    5e18:	8c 91       	ld	r24, X
    5e1a:	d0 95       	com	r29
    5e1c:	d8 23       	and	r29, r24
    5e1e:	02 c0       	rjmp	.+4      	; 0x5e24 <digitalWrite+0x52>
	} else {
		*out |= bit;
    5e20:	ec 91       	ld	r30, X
    5e22:	de 2b       	or	r29, r30
    5e24:	dc 93       	st	X, r29
	}

	SREG = oldSREG;
    5e26:	9f bf       	out	0x3f, r25	; 63
}
    5e28:	df 91       	pop	r29
    5e2a:	cf 91       	pop	r28
    5e2c:	1f 91       	pop	r17
    5e2e:	08 95       	ret

00005e30 <_ZN8SPIClass5beginEv>:
#ifdef SPI_TRANSACTION_MISMATCH_LED
uint8_t SPIClass::inTransactionFlag = 0;
#endif

void SPIClass::begin()
{
    5e30:	cf 93       	push	r28
  uint8_t sreg = SREG;
    5e32:	cf b7       	in	r28, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
    5e34:	f8 94       	cli
  if (!initialized) {
    5e36:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZN8SPIClass11initializedE>
    5e3a:	81 11       	cpse	r24, r1
    5e3c:	27 c0       	rjmp	.+78     	; 0x5e8c <_ZN8SPIClass5beginEv+0x5c>
    // Set SS to high so a connected chip will be "deselected" by default
    uint8_t port = digitalPinToPort(SS);
    5e3e:	e1 e1       	ldi	r30, 0x11	; 17
    5e40:	f7 e2       	ldi	r31, 0x27	; 39
    5e42:	84 91       	lpm	r24, Z
    uint8_t bit = digitalPinToBitMask(SS);
    5e44:	ed ef       	ldi	r30, 0xFD	; 253
    5e46:	f6 e2       	ldi	r31, 0x26	; 38
    5e48:	94 91       	lpm	r25, Z
    volatile uint8_t *reg = portModeRegister(port);
    5e4a:	e8 2f       	mov	r30, r24
    5e4c:	f0 e0       	ldi	r31, 0x00	; 0
    5e4e:	ee 0f       	add	r30, r30
    5e50:	ff 1f       	adc	r31, r31
    5e52:	eb 5d       	subi	r30, 0xDB	; 219
    5e54:	f8 4d       	sbci	r31, 0xD8	; 216
    5e56:	a5 91       	lpm	r26, Z+
    5e58:	b4 91       	lpm	r27, Z

    // if the SS pin is not already configured as an output
    // then set it high (to enable the internal pull-up resistor)
    if(!(*reg & bit)){
    5e5a:	ec 91       	ld	r30, X
    5e5c:	e9 23       	and	r30, r25
    5e5e:	21 f4       	brne	.+8      	; 0x5e68 <_ZN8SPIClass5beginEv+0x38>
      digitalWrite(SS, HIGH);
    5e60:	61 e0       	ldi	r22, 0x01	; 1
    5e62:	8a e0       	ldi	r24, 0x0A	; 10
    5e64:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <digitalWrite>
    }

    // When the SS pin is set as OUTPUT, it can be used as
    // a general purpose output port (it doesn't influence
    // SPI operations).
    pinMode(SS, OUTPUT);
    5e68:	61 e0       	ldi	r22, 0x01	; 1
    5e6a:	8a e0       	ldi	r24, 0x0A	; 10
    5e6c:	0e 94 ad 2e 	call	0x5d5a	; 0x5d5a <pinMode>

    // Warning: if the SS pin ever becomes a LOW INPUT then SPI
    // automatically switches to Slave, so the data direction of
    // the SS pin MUST be kept as OUTPUT.
    SPCR |= _BV(MSTR);
    5e70:	8c b5       	in	r24, 0x2c	; 44
    5e72:	80 61       	ori	r24, 0x10	; 16
    5e74:	8c bd       	out	0x2c, r24	; 44
    SPCR |= _BV(SPE);
    5e76:	8c b5       	in	r24, 0x2c	; 44
    5e78:	80 64       	ori	r24, 0x40	; 64
    5e7a:	8c bd       	out	0x2c, r24	; 44
    // MISO pin automatically overrides to INPUT.
    // By doing this AFTER enabling SPI, we avoid accidentally
    // clocking in a single bit since the lines go directly
    // from "input" to SPI control.
    // http://code.google.com/p/arduino/issues/detail?id=888
    pinMode(SCK, OUTPUT);
    5e7c:	61 e0       	ldi	r22, 0x01	; 1
    5e7e:	8d e0       	ldi	r24, 0x0D	; 13
    5e80:	0e 94 ad 2e 	call	0x5d5a	; 0x5d5a <pinMode>
    pinMode(MOSI, OUTPUT);
    5e84:	61 e0       	ldi	r22, 0x01	; 1
    5e86:	8b e0       	ldi	r24, 0x0B	; 11
    5e88:	0e 94 ad 2e 	call	0x5d5a	; 0x5d5a <pinMode>
  }
  initialized++; // reference count
    5e8c:	80 91 77 04 	lds	r24, 0x0477	; 0x800477 <_ZN8SPIClass11initializedE>
    5e90:	8f 5f       	subi	r24, 0xFF	; 255
    5e92:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <_ZN8SPIClass11initializedE>
  SREG = sreg;
    5e96:	cf bf       	out	0x3f, r28	; 63
}
    5e98:	cf 91       	pop	r28
    5e9a:	08 95       	ret

00005e9c <twi_init>:
  bool flag = twi_timed_out_flag;
  if (clear_flag){
    twi_timed_out_flag = false;
  }
  return(flag);
}
    5e9c:	10 92 eb 04 	sts	0x04EB, r1	; 0x8004eb <twi_state>
    5ea0:	81 e0       	ldi	r24, 0x01	; 1
    5ea2:	80 93 e9 04 	sts	0x04E9, r24	; 0x8004e9 <twi_sendStop>
    5ea6:	10 92 e8 04 	sts	0x04E8, r1	; 0x8004e8 <twi_inRepStart>
    5eaa:	61 e0       	ldi	r22, 0x01	; 1
    5eac:	82 e1       	ldi	r24, 0x12	; 18
    5eae:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <digitalWrite>
    5eb2:	61 e0       	ldi	r22, 0x01	; 1
    5eb4:	83 e1       	ldi	r24, 0x13	; 19
    5eb6:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <digitalWrite>
    5eba:	e9 eb       	ldi	r30, 0xB9	; 185
    5ebc:	f0 e0       	ldi	r31, 0x00	; 0
    5ebe:	80 81       	ld	r24, Z
    5ec0:	8e 7f       	andi	r24, 0xFE	; 254
    5ec2:	80 83       	st	Z, r24
    5ec4:	80 81       	ld	r24, Z
    5ec6:	8d 7f       	andi	r24, 0xFD	; 253
    5ec8:	80 83       	st	Z, r24
    5eca:	88 e4       	ldi	r24, 0x48	; 72
    5ecc:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    5ed0:	85 e4       	ldi	r24, 0x45	; 69
    5ed2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5ed6:	08 95       	ret

00005ed8 <twi_disable>:
    5ed8:	ec eb       	ldi	r30, 0xBC	; 188
    5eda:	f0 e0       	ldi	r31, 0x00	; 0
    5edc:	80 81       	ld	r24, Z
    5ede:	8a 7b       	andi	r24, 0xBA	; 186
    5ee0:	80 83       	st	Z, r24
    5ee2:	60 e0       	ldi	r22, 0x00	; 0
    5ee4:	82 e1       	ldi	r24, 0x12	; 18
    5ee6:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <digitalWrite>
    5eea:	60 e0       	ldi	r22, 0x00	; 0
    5eec:	83 e1       	ldi	r24, 0x13	; 19
    5eee:	0c 94 e9 2e 	jmp	0x5dd2	; 0x5dd2 <digitalWrite>

00005ef2 <twi_setFrequency>:
    5ef2:	9b 01       	movw	r18, r22
    5ef4:	ac 01       	movw	r20, r24
    5ef6:	60 e0       	ldi	r22, 0x00	; 0
    5ef8:	74 e2       	ldi	r23, 0x24	; 36
    5efa:	84 ef       	ldi	r24, 0xF4	; 244
    5efc:	90 e0       	ldi	r25, 0x00	; 0
    5efe:	0e 94 b4 33 	call	0x6768	; 0x6768 <__udivmodsi4>
    5f02:	da 01       	movw	r26, r20
    5f04:	c9 01       	movw	r24, r18
    5f06:	40 97       	sbiw	r24, 0x10	; 16
    5f08:	a1 09       	sbc	r26, r1
    5f0a:	b1 09       	sbc	r27, r1
    5f0c:	b6 95       	lsr	r27
    5f0e:	a7 95       	ror	r26
    5f10:	97 95       	ror	r25
    5f12:	87 95       	ror	r24
    5f14:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    5f18:	08 95       	ret

00005f1a <twi_transmit>:
    5f1a:	40 91 9a 04 	lds	r20, 0x049A	; 0x80049a <twi_txBufferLength>
    5f1e:	26 2f       	mov	r18, r22
    5f20:	30 e0       	ldi	r19, 0x00	; 0
    5f22:	24 0f       	add	r18, r20
    5f24:	31 1d       	adc	r19, r1
    5f26:	21 32       	cpi	r18, 0x21	; 33
    5f28:	31 05       	cpc	r19, r1
    5f2a:	dc f4       	brge	.+54     	; 0x5f62 <twi_transmit+0x48>
    5f2c:	20 91 eb 04 	lds	r18, 0x04EB	; 0x8004eb <twi_state>
    5f30:	24 30       	cpi	r18, 0x04	; 4
    5f32:	c9 f4       	brne	.+50     	; 0x5f66 <twi_transmit+0x4c>
    5f34:	fc 01       	movw	r30, r24
    5f36:	80 e0       	ldi	r24, 0x00	; 0
    5f38:	90 e0       	ldi	r25, 0x00	; 0
    5f3a:	86 17       	cp	r24, r22
    5f3c:	58 f4       	brcc	.+22     	; 0x5f54 <twi_transmit+0x3a>
    5f3e:	30 91 9a 04 	lds	r19, 0x049A	; 0x80049a <twi_txBufferLength>
    5f42:	21 91       	ld	r18, Z+
    5f44:	dc 01       	movw	r26, r24
    5f46:	a4 56       	subi	r26, 0x64	; 100
    5f48:	bb 4f       	sbci	r27, 0xFB	; 251
    5f4a:	a3 0f       	add	r26, r19
    5f4c:	b1 1d       	adc	r27, r1
    5f4e:	2c 93       	st	X, r18
    5f50:	01 96       	adiw	r24, 0x01	; 1
    5f52:	f3 cf       	rjmp	.-26     	; 0x5f3a <twi_transmit+0x20>
    5f54:	80 91 9a 04 	lds	r24, 0x049A	; 0x80049a <twi_txBufferLength>
    5f58:	68 0f       	add	r22, r24
    5f5a:	60 93 9a 04 	sts	0x049A, r22	; 0x80049a <twi_txBufferLength>
    5f5e:	80 e0       	ldi	r24, 0x00	; 0
    5f60:	08 95       	ret
    5f62:	81 e0       	ldi	r24, 0x01	; 1
    5f64:	08 95       	ret
    5f66:	82 e0       	ldi	r24, 0x02	; 2
    5f68:	08 95       	ret

00005f6a <twi_attachSlaveRxEvent>:
    5f6a:	90 93 df 04 	sts	0x04DF, r25	; 0x8004df <twi_onSlaveReceive+0x1>
    5f6e:	80 93 de 04 	sts	0x04DE, r24	; 0x8004de <twi_onSlaveReceive>
    5f72:	08 95       	ret

00005f74 <twi_attachSlaveTxEvent>:
    5f74:	90 93 e1 04 	sts	0x04E1, r25	; 0x8004e1 <twi_onSlaveTransmit+0x1>
    5f78:	80 93 e0 04 	sts	0x04E0, r24	; 0x8004e0 <twi_onSlaveTransmit>
    5f7c:	08 95       	ret

00005f7e <twi_releaseBus>:
    5f7e:	85 ec       	ldi	r24, 0xC5	; 197
    5f80:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    5f84:	10 92 eb 04 	sts	0x04EB, r1	; 0x8004eb <twi_state>
    5f88:	08 95       	ret

00005f8a <twi_handleTimeout>:
    5f8a:	cf 93       	push	r28
    5f8c:	df 93       	push	r29
    5f8e:	91 e0       	ldi	r25, 0x01	; 1
    5f90:	90 93 e3 04 	sts	0x04E3, r25	; 0x8004e3 <twi_timed_out_flag>
    5f94:	88 23       	and	r24, r24
    5f96:	61 f0       	breq	.+24     	; 0x5fb0 <twi_handleTimeout+0x26>
    5f98:	c0 91 b8 00 	lds	r28, 0x00B8	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    5f9c:	d0 91 ba 00 	lds	r29, 0x00BA	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7f80ba>
    5fa0:	0e 94 6c 2f 	call	0x5ed8	; 0x5ed8 <twi_disable>
    5fa4:	0e 94 4e 2f 	call	0x5e9c	; 0x5e9c <twi_init>
    5fa8:	d0 93 ba 00 	sts	0x00BA, r29	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7f80ba>
    5fac:	c0 93 b8 00 	sts	0x00B8, r28	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    5fb0:	df 91       	pop	r29
    5fb2:	cf 91       	pop	r28
    5fb4:	08 95       	ret

00005fb6 <twi_readFrom>:
    5fb6:	4f 92       	push	r4
    5fb8:	5f 92       	push	r5
    5fba:	6f 92       	push	r6
    5fbc:	7f 92       	push	r7
    5fbe:	8f 92       	push	r8
    5fc0:	9f 92       	push	r9
    5fc2:	af 92       	push	r10
    5fc4:	bf 92       	push	r11
    5fc6:	cf 92       	push	r12
    5fc8:	df 92       	push	r13
    5fca:	ef 92       	push	r14
    5fcc:	ff 92       	push	r15
    5fce:	0f 93       	push	r16
    5fd0:	1f 93       	push	r17
    5fd2:	cf 93       	push	r28
    5fd4:	df 93       	push	r29
    5fd6:	f8 2e       	mov	r15, r24
    5fd8:	16 2f       	mov	r17, r22
    5fda:	07 2f       	mov	r16, r23
    5fdc:	c4 2f       	mov	r28, r20
    5fde:	e2 2e       	mov	r14, r18
    5fe0:	41 32       	cpi	r20, 0x21	; 33
    5fe2:	08 f0       	brcs	.+2      	; 0x5fe6 <twi_readFrom+0x30>
    5fe4:	be c0       	rjmp	.+380    	; 0x6162 <twi_readFrom+0x1ac>
    5fe6:	0e 94 0d 1d 	call	0x3a1a	; 0x3a1a <micros>
    5fea:	4b 01       	movw	r8, r22
    5fec:	5c 01       	movw	r10, r24
    5fee:	d0 91 eb 04 	lds	r29, 0x04EB	; 0x8004eb <twi_state>
    5ff2:	dd 23       	and	r29, r29
    5ff4:	31 f1       	breq	.+76     	; 0x6042 <twi_readFrom+0x8c>
    5ff6:	80 91 e4 04 	lds	r24, 0x04E4	; 0x8004e4 <twi_timeout_us>
    5ffa:	90 91 e5 04 	lds	r25, 0x04E5	; 0x8004e5 <twi_timeout_us+0x1>
    5ffe:	a0 91 e6 04 	lds	r26, 0x04E6	; 0x8004e6 <twi_timeout_us+0x2>
    6002:	b0 91 e7 04 	lds	r27, 0x04E7	; 0x8004e7 <twi_timeout_us+0x3>
    6006:	89 2b       	or	r24, r25
    6008:	8a 2b       	or	r24, r26
    600a:	8b 2b       	or	r24, r27
    600c:	81 f3       	breq	.-32     	; 0x5fee <twi_readFrom+0x38>
    600e:	0e 94 0d 1d 	call	0x3a1a	; 0x3a1a <micros>
    6012:	40 90 e4 04 	lds	r4, 0x04E4	; 0x8004e4 <twi_timeout_us>
    6016:	50 90 e5 04 	lds	r5, 0x04E5	; 0x8004e5 <twi_timeout_us+0x1>
    601a:	60 90 e6 04 	lds	r6, 0x04E6	; 0x8004e6 <twi_timeout_us+0x2>
    601e:	70 90 e7 04 	lds	r7, 0x04E7	; 0x8004e7 <twi_timeout_us+0x3>
    6022:	dc 01       	movw	r26, r24
    6024:	cb 01       	movw	r24, r22
    6026:	88 19       	sub	r24, r8
    6028:	99 09       	sbc	r25, r9
    602a:	aa 09       	sbc	r26, r10
    602c:	bb 09       	sbc	r27, r11
    602e:	48 16       	cp	r4, r24
    6030:	59 06       	cpc	r5, r25
    6032:	6a 06       	cpc	r6, r26
    6034:	7b 06       	cpc	r7, r27
    6036:	d8 f6       	brcc	.-74     	; 0x5fee <twi_readFrom+0x38>
    6038:	80 91 e2 04 	lds	r24, 0x04E2	; 0x8004e2 <twi_do_reset_on_timeout>
    603c:	0e 94 c5 2f 	call	0x5f8a	; 0x5f8a <twi_handleTimeout>
    6040:	90 c0       	rjmp	.+288    	; 0x6162 <twi_readFrom+0x1ac>
    6042:	81 e0       	ldi	r24, 0x01	; 1
    6044:	80 93 eb 04 	sts	0x04EB, r24	; 0x8004eb <twi_state>
    6048:	e0 92 e9 04 	sts	0x04E9, r14	; 0x8004e9 <twi_sendStop>
    604c:	9f ef       	ldi	r25, 0xFF	; 255
    604e:	90 93 78 04 	sts	0x0478, r25	; 0x800478 <twi_error>
    6052:	10 92 bd 04 	sts	0x04BD, r1	; 0x8004bd <twi_masterBufferIndex>
    6056:	9c 0f       	add	r25, r28
    6058:	90 93 bc 04 	sts	0x04BC, r25	; 0x8004bc <twi_masterBufferLength>
    605c:	80 93 ea 04 	sts	0x04EA, r24	; 0x8004ea <twi_slarw>
    6060:	90 91 ea 04 	lds	r25, 0x04EA	; 0x8004ea <twi_slarw>
    6064:	8f 2d       	mov	r24, r15
    6066:	88 0f       	add	r24, r24
    6068:	89 2b       	or	r24, r25
    606a:	80 93 ea 04 	sts	0x04EA, r24	; 0x8004ea <twi_slarw>
    606e:	80 91 e8 04 	lds	r24, 0x04E8	; 0x8004e8 <twi_inRepStart>
    6072:	81 30       	cpi	r24, 0x01	; 1
    6074:	89 f5       	brne	.+98     	; 0x60d8 <twi_readFrom+0x122>
    6076:	10 92 e8 04 	sts	0x04E8, r1	; 0x8004e8 <twi_inRepStart>
    607a:	0e 94 0d 1d 	call	0x3a1a	; 0x3a1a <micros>
    607e:	6b 01       	movw	r12, r22
    6080:	7c 01       	movw	r14, r24
    6082:	80 91 ea 04 	lds	r24, 0x04EA	; 0x8004ea <twi_slarw>
    6086:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    608a:	80 91 e4 04 	lds	r24, 0x04E4	; 0x8004e4 <twi_timeout_us>
    608e:	90 91 e5 04 	lds	r25, 0x04E5	; 0x8004e5 <twi_timeout_us+0x1>
    6092:	a0 91 e6 04 	lds	r26, 0x04E6	; 0x8004e6 <twi_timeout_us+0x2>
    6096:	b0 91 e7 04 	lds	r27, 0x04E7	; 0x8004e7 <twi_timeout_us+0x3>
    609a:	89 2b       	or	r24, r25
    609c:	8a 2b       	or	r24, r26
    609e:	8b 2b       	or	r24, r27
    60a0:	a9 f0       	breq	.+42     	; 0x60cc <twi_readFrom+0x116>
    60a2:	0e 94 0d 1d 	call	0x3a1a	; 0x3a1a <micros>
    60a6:	80 90 e4 04 	lds	r8, 0x04E4	; 0x8004e4 <twi_timeout_us>
    60aa:	90 90 e5 04 	lds	r9, 0x04E5	; 0x8004e5 <twi_timeout_us+0x1>
    60ae:	a0 90 e6 04 	lds	r10, 0x04E6	; 0x8004e6 <twi_timeout_us+0x2>
    60b2:	b0 90 e7 04 	lds	r11, 0x04E7	; 0x8004e7 <twi_timeout_us+0x3>
    60b6:	dc 01       	movw	r26, r24
    60b8:	cb 01       	movw	r24, r22
    60ba:	8c 19       	sub	r24, r12
    60bc:	9d 09       	sbc	r25, r13
    60be:	ae 09       	sbc	r26, r14
    60c0:	bf 09       	sbc	r27, r15
    60c2:	88 16       	cp	r8, r24
    60c4:	99 06       	cpc	r9, r25
    60c6:	aa 06       	cpc	r10, r26
    60c8:	bb 06       	cpc	r11, r27
    60ca:	90 f1       	brcs	.+100    	; 0x6130 <twi_readFrom+0x17a>
    60cc:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    60d0:	83 fd       	sbrc	r24, 3
    60d2:	d7 cf       	rjmp	.-82     	; 0x6082 <twi_readFrom+0xcc>
    60d4:	85 ec       	ldi	r24, 0xC5	; 197
    60d6:	01 c0       	rjmp	.+2      	; 0x60da <twi_readFrom+0x124>
    60d8:	85 ee       	ldi	r24, 0xE5	; 229
    60da:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    60de:	0e 94 0d 1d 	call	0x3a1a	; 0x3a1a <micros>
    60e2:	6b 01       	movw	r12, r22
    60e4:	7c 01       	movw	r14, r24
    60e6:	80 91 eb 04 	lds	r24, 0x04EB	; 0x8004eb <twi_state>
    60ea:	81 30       	cpi	r24, 0x01	; 1
    60ec:	31 f5       	brne	.+76     	; 0x613a <twi_readFrom+0x184>
    60ee:	80 91 e4 04 	lds	r24, 0x04E4	; 0x8004e4 <twi_timeout_us>
    60f2:	90 91 e5 04 	lds	r25, 0x04E5	; 0x8004e5 <twi_timeout_us+0x1>
    60f6:	a0 91 e6 04 	lds	r26, 0x04E6	; 0x8004e6 <twi_timeout_us+0x2>
    60fa:	b0 91 e7 04 	lds	r27, 0x04E7	; 0x8004e7 <twi_timeout_us+0x3>
    60fe:	89 2b       	or	r24, r25
    6100:	8a 2b       	or	r24, r26
    6102:	8b 2b       	or	r24, r27
    6104:	81 f3       	breq	.-32     	; 0x60e6 <twi_readFrom+0x130>
    6106:	0e 94 0d 1d 	call	0x3a1a	; 0x3a1a <micros>
    610a:	80 90 e4 04 	lds	r8, 0x04E4	; 0x8004e4 <twi_timeout_us>
    610e:	90 90 e5 04 	lds	r9, 0x04E5	; 0x8004e5 <twi_timeout_us+0x1>
    6112:	a0 90 e6 04 	lds	r10, 0x04E6	; 0x8004e6 <twi_timeout_us+0x2>
    6116:	b0 90 e7 04 	lds	r11, 0x04E7	; 0x8004e7 <twi_timeout_us+0x3>
    611a:	dc 01       	movw	r26, r24
    611c:	cb 01       	movw	r24, r22
    611e:	8c 19       	sub	r24, r12
    6120:	9d 09       	sbc	r25, r13
    6122:	ae 09       	sbc	r26, r14
    6124:	bf 09       	sbc	r27, r15
    6126:	88 16       	cp	r8, r24
    6128:	99 06       	cpc	r9, r25
    612a:	aa 06       	cpc	r10, r26
    612c:	bb 06       	cpc	r11, r27
    612e:	d8 f6       	brcc	.-74     	; 0x60e6 <twi_readFrom+0x130>
    6130:	80 91 e2 04 	lds	r24, 0x04E2	; 0x8004e2 <twi_do_reset_on_timeout>
    6134:	0e 94 c5 2f 	call	0x5f8a	; 0x5f8a <twi_handleTimeout>
    6138:	15 c0       	rjmp	.+42     	; 0x6164 <twi_readFrom+0x1ae>
    613a:	80 91 bd 04 	lds	r24, 0x04BD	; 0x8004bd <twi_masterBufferIndex>
    613e:	8c 17       	cp	r24, r28
    6140:	10 f4       	brcc	.+4      	; 0x6146 <twi_readFrom+0x190>
    6142:	c0 91 bd 04 	lds	r28, 0x04BD	; 0x8004bd <twi_masterBufferIndex>
    6146:	ae eb       	ldi	r26, 0xBE	; 190
    6148:	b4 e0       	ldi	r27, 0x04	; 4
    614a:	91 2f       	mov	r25, r17
    614c:	e1 2f       	mov	r30, r17
    614e:	f0 2f       	mov	r31, r16
    6150:	8e 2f       	mov	r24, r30
    6152:	89 1b       	sub	r24, r25
    6154:	8c 17       	cp	r24, r28
    6156:	18 f4       	brcc	.+6      	; 0x615e <twi_readFrom+0x1a8>
    6158:	8d 91       	ld	r24, X+
    615a:	81 93       	st	Z+, r24
    615c:	f9 cf       	rjmp	.-14     	; 0x6150 <twi_readFrom+0x19a>
    615e:	dc 2f       	mov	r29, r28
    6160:	01 c0       	rjmp	.+2      	; 0x6164 <twi_readFrom+0x1ae>
    6162:	d0 e0       	ldi	r29, 0x00	; 0
    6164:	8d 2f       	mov	r24, r29
    6166:	df 91       	pop	r29
    6168:	cf 91       	pop	r28
    616a:	1f 91       	pop	r17
    616c:	0f 91       	pop	r16
    616e:	ff 90       	pop	r15
    6170:	ef 90       	pop	r14
    6172:	df 90       	pop	r13
    6174:	cf 90       	pop	r12
    6176:	bf 90       	pop	r11
    6178:	af 90       	pop	r10
    617a:	9f 90       	pop	r9
    617c:	8f 90       	pop	r8
    617e:	7f 90       	pop	r7
    6180:	6f 90       	pop	r6
    6182:	5f 90       	pop	r5
    6184:	4f 90       	pop	r4
    6186:	08 95       	ret

00006188 <twi_writeTo>:
    6188:	4f 92       	push	r4
    618a:	5f 92       	push	r5
    618c:	6f 92       	push	r6
    618e:	7f 92       	push	r7
    6190:	8f 92       	push	r8
    6192:	9f 92       	push	r9
    6194:	af 92       	push	r10
    6196:	bf 92       	push	r11
    6198:	cf 92       	push	r12
    619a:	df 92       	push	r13
    619c:	ef 92       	push	r14
    619e:	ff 92       	push	r15
    61a0:	0f 93       	push	r16
    61a2:	1f 93       	push	r17
    61a4:	cf 93       	push	r28
    61a6:	df 93       	push	r29
    61a8:	41 32       	cpi	r20, 0x21	; 33
    61aa:	08 f0       	brcs	.+2      	; 0x61ae <twi_writeTo+0x26>
    61ac:	c6 c0       	rjmp	.+396    	; 0x633a <twi_writeTo+0x1b2>
    61ae:	12 2f       	mov	r17, r18
    61b0:	f4 2e       	mov	r15, r20
    61b2:	d7 2e       	mov	r13, r23
    61b4:	e6 2e       	mov	r14, r22
    61b6:	d8 2f       	mov	r29, r24
    61b8:	0e 94 0d 1d 	call	0x3a1a	; 0x3a1a <micros>
    61bc:	4b 01       	movw	r8, r22
    61be:	5c 01       	movw	r10, r24
    61c0:	c0 91 eb 04 	lds	r28, 0x04EB	; 0x8004eb <twi_state>
    61c4:	cc 23       	and	r28, r28
    61c6:	11 f1       	breq	.+68     	; 0x620c <twi_writeTo+0x84>
    61c8:	80 91 e4 04 	lds	r24, 0x04E4	; 0x8004e4 <twi_timeout_us>
    61cc:	90 91 e5 04 	lds	r25, 0x04E5	; 0x8004e5 <twi_timeout_us+0x1>
    61d0:	a0 91 e6 04 	lds	r26, 0x04E6	; 0x8004e6 <twi_timeout_us+0x2>
    61d4:	b0 91 e7 04 	lds	r27, 0x04E7	; 0x8004e7 <twi_timeout_us+0x3>
    61d8:	89 2b       	or	r24, r25
    61da:	8a 2b       	or	r24, r26
    61dc:	8b 2b       	or	r24, r27
    61de:	81 f3       	breq	.-32     	; 0x61c0 <twi_writeTo+0x38>
    61e0:	0e 94 0d 1d 	call	0x3a1a	; 0x3a1a <micros>
    61e4:	40 90 e4 04 	lds	r4, 0x04E4	; 0x8004e4 <twi_timeout_us>
    61e8:	50 90 e5 04 	lds	r5, 0x04E5	; 0x8004e5 <twi_timeout_us+0x1>
    61ec:	60 90 e6 04 	lds	r6, 0x04E6	; 0x8004e6 <twi_timeout_us+0x2>
    61f0:	70 90 e7 04 	lds	r7, 0x04E7	; 0x8004e7 <twi_timeout_us+0x3>
    61f4:	dc 01       	movw	r26, r24
    61f6:	cb 01       	movw	r24, r22
    61f8:	88 19       	sub	r24, r8
    61fa:	99 09       	sbc	r25, r9
    61fc:	aa 09       	sbc	r26, r10
    61fe:	bb 09       	sbc	r27, r11
    6200:	48 16       	cp	r4, r24
    6202:	59 06       	cpc	r5, r25
    6204:	6a 06       	cpc	r6, r26
    6206:	7b 06       	cpc	r7, r27
    6208:	d8 f6       	brcc	.-74     	; 0x61c0 <twi_writeTo+0x38>
    620a:	83 c0       	rjmp	.+262    	; 0x6312 <twi_writeTo+0x18a>
    620c:	82 e0       	ldi	r24, 0x02	; 2
    620e:	80 93 eb 04 	sts	0x04EB, r24	; 0x8004eb <twi_state>
    6212:	00 93 e9 04 	sts	0x04E9, r16	; 0x8004e9 <twi_sendStop>
    6216:	8f ef       	ldi	r24, 0xFF	; 255
    6218:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <twi_error>
    621c:	10 92 bd 04 	sts	0x04BD, r1	; 0x8004bd <twi_masterBufferIndex>
    6220:	f0 92 bc 04 	sts	0x04BC, r15	; 0x8004bc <twi_masterBufferLength>
    6224:	9e 2d       	mov	r25, r14
    6226:	ae eb       	ldi	r26, 0xBE	; 190
    6228:	b4 e0       	ldi	r27, 0x04	; 4
    622a:	ee 2d       	mov	r30, r14
    622c:	fd 2d       	mov	r31, r13
    622e:	8e 2f       	mov	r24, r30
    6230:	89 1b       	sub	r24, r25
    6232:	8f 15       	cp	r24, r15
    6234:	18 f4       	brcc	.+6      	; 0x623c <twi_writeTo+0xb4>
    6236:	81 91       	ld	r24, Z+
    6238:	8d 93       	st	X+, r24
    623a:	f9 cf       	rjmp	.-14     	; 0x622e <twi_writeTo+0xa6>
    623c:	10 92 ea 04 	sts	0x04EA, r1	; 0x8004ea <twi_slarw>
    6240:	90 91 ea 04 	lds	r25, 0x04EA	; 0x8004ea <twi_slarw>
    6244:	dd 0f       	add	r29, r29
    6246:	d9 2b       	or	r29, r25
    6248:	d0 93 ea 04 	sts	0x04EA, r29	; 0x8004ea <twi_slarw>
    624c:	80 91 e8 04 	lds	r24, 0x04E8	; 0x8004e8 <twi_inRepStart>
    6250:	81 30       	cpi	r24, 0x01	; 1
    6252:	89 f5       	brne	.+98     	; 0x62b6 <twi_writeTo+0x12e>
    6254:	10 92 e8 04 	sts	0x04E8, r1	; 0x8004e8 <twi_inRepStart>
    6258:	0e 94 0d 1d 	call	0x3a1a	; 0x3a1a <micros>
    625c:	6b 01       	movw	r12, r22
    625e:	7c 01       	movw	r14, r24
    6260:	80 91 ea 04 	lds	r24, 0x04EA	; 0x8004ea <twi_slarw>
    6264:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    6268:	80 91 e4 04 	lds	r24, 0x04E4	; 0x8004e4 <twi_timeout_us>
    626c:	90 91 e5 04 	lds	r25, 0x04E5	; 0x8004e5 <twi_timeout_us+0x1>
    6270:	a0 91 e6 04 	lds	r26, 0x04E6	; 0x8004e6 <twi_timeout_us+0x2>
    6274:	b0 91 e7 04 	lds	r27, 0x04E7	; 0x8004e7 <twi_timeout_us+0x3>
    6278:	89 2b       	or	r24, r25
    627a:	8a 2b       	or	r24, r26
    627c:	8b 2b       	or	r24, r27
    627e:	a9 f0       	breq	.+42     	; 0x62aa <twi_writeTo+0x122>
    6280:	0e 94 0d 1d 	call	0x3a1a	; 0x3a1a <micros>
    6284:	80 90 e4 04 	lds	r8, 0x04E4	; 0x8004e4 <twi_timeout_us>
    6288:	90 90 e5 04 	lds	r9, 0x04E5	; 0x8004e5 <twi_timeout_us+0x1>
    628c:	a0 90 e6 04 	lds	r10, 0x04E6	; 0x8004e6 <twi_timeout_us+0x2>
    6290:	b0 90 e7 04 	lds	r11, 0x04E7	; 0x8004e7 <twi_timeout_us+0x3>
    6294:	dc 01       	movw	r26, r24
    6296:	cb 01       	movw	r24, r22
    6298:	8c 19       	sub	r24, r12
    629a:	9d 09       	sbc	r25, r13
    629c:	ae 09       	sbc	r26, r14
    629e:	bf 09       	sbc	r27, r15
    62a0:	88 16       	cp	r8, r24
    62a2:	99 06       	cpc	r9, r25
    62a4:	aa 06       	cpc	r10, r26
    62a6:	bb 06       	cpc	r11, r27
    62a8:	a0 f1       	brcs	.+104    	; 0x6312 <twi_writeTo+0x18a>
    62aa:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    62ae:	83 fd       	sbrc	r24, 3
    62b0:	d7 cf       	rjmp	.-82     	; 0x6260 <twi_writeTo+0xd8>
    62b2:	85 ec       	ldi	r24, 0xC5	; 197
    62b4:	01 c0       	rjmp	.+2      	; 0x62b8 <twi_writeTo+0x130>
    62b6:	85 ee       	ldi	r24, 0xE5	; 229
    62b8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    62bc:	0e 94 0d 1d 	call	0x3a1a	; 0x3a1a <micros>
    62c0:	6b 01       	movw	r12, r22
    62c2:	7c 01       	movw	r14, r24
    62c4:	11 23       	and	r17, r17
    62c6:	59 f1       	breq	.+86     	; 0x631e <twi_writeTo+0x196>
    62c8:	80 91 eb 04 	lds	r24, 0x04EB	; 0x8004eb <twi_state>
    62cc:	82 30       	cpi	r24, 0x02	; 2
    62ce:	39 f5       	brne	.+78     	; 0x631e <twi_writeTo+0x196>
    62d0:	80 91 e4 04 	lds	r24, 0x04E4	; 0x8004e4 <twi_timeout_us>
    62d4:	90 91 e5 04 	lds	r25, 0x04E5	; 0x8004e5 <twi_timeout_us+0x1>
    62d8:	a0 91 e6 04 	lds	r26, 0x04E6	; 0x8004e6 <twi_timeout_us+0x2>
    62dc:	b0 91 e7 04 	lds	r27, 0x04E7	; 0x8004e7 <twi_timeout_us+0x3>
    62e0:	89 2b       	or	r24, r25
    62e2:	8a 2b       	or	r24, r26
    62e4:	8b 2b       	or	r24, r27
    62e6:	71 f3       	breq	.-36     	; 0x62c4 <twi_writeTo+0x13c>
    62e8:	0e 94 0d 1d 	call	0x3a1a	; 0x3a1a <micros>
    62ec:	80 90 e4 04 	lds	r8, 0x04E4	; 0x8004e4 <twi_timeout_us>
    62f0:	90 90 e5 04 	lds	r9, 0x04E5	; 0x8004e5 <twi_timeout_us+0x1>
    62f4:	a0 90 e6 04 	lds	r10, 0x04E6	; 0x8004e6 <twi_timeout_us+0x2>
    62f8:	b0 90 e7 04 	lds	r11, 0x04E7	; 0x8004e7 <twi_timeout_us+0x3>
    62fc:	dc 01       	movw	r26, r24
    62fe:	cb 01       	movw	r24, r22
    6300:	8c 19       	sub	r24, r12
    6302:	9d 09       	sbc	r25, r13
    6304:	ae 09       	sbc	r26, r14
    6306:	bf 09       	sbc	r27, r15
    6308:	88 16       	cp	r8, r24
    630a:	99 06       	cpc	r9, r25
    630c:	aa 06       	cpc	r10, r26
    630e:	bb 06       	cpc	r11, r27
    6310:	c8 f6       	brcc	.-78     	; 0x62c4 <twi_writeTo+0x13c>
    6312:	80 91 e2 04 	lds	r24, 0x04E2	; 0x8004e2 <twi_do_reset_on_timeout>
    6316:	0e 94 c5 2f 	call	0x5f8a	; 0x5f8a <twi_handleTimeout>
    631a:	c5 e0       	ldi	r28, 0x05	; 5
    631c:	13 c0       	rjmp	.+38     	; 0x6344 <twi_writeTo+0x1bc>
    631e:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <twi_error>
    6322:	8f 3f       	cpi	r24, 0xFF	; 255
    6324:	79 f0       	breq	.+30     	; 0x6344 <twi_writeTo+0x1bc>
    6326:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <twi_error>
    632a:	80 32       	cpi	r24, 0x20	; 32
    632c:	41 f0       	breq	.+16     	; 0x633e <twi_writeTo+0x1b6>
    632e:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <twi_error>
    6332:	80 33       	cpi	r24, 0x30	; 48
    6334:	31 f0       	breq	.+12     	; 0x6342 <twi_writeTo+0x1ba>
    6336:	c4 e0       	ldi	r28, 0x04	; 4
    6338:	05 c0       	rjmp	.+10     	; 0x6344 <twi_writeTo+0x1bc>
    633a:	c1 e0       	ldi	r28, 0x01	; 1
    633c:	03 c0       	rjmp	.+6      	; 0x6344 <twi_writeTo+0x1bc>
    633e:	c2 e0       	ldi	r28, 0x02	; 2
    6340:	01 c0       	rjmp	.+2      	; 0x6344 <twi_writeTo+0x1bc>
    6342:	c3 e0       	ldi	r28, 0x03	; 3
    6344:	8c 2f       	mov	r24, r28
    6346:	df 91       	pop	r29
    6348:	cf 91       	pop	r28
    634a:	1f 91       	pop	r17
    634c:	0f 91       	pop	r16
    634e:	ff 90       	pop	r15
    6350:	ef 90       	pop	r14
    6352:	df 90       	pop	r13
    6354:	cf 90       	pop	r12
    6356:	bf 90       	pop	r11
    6358:	af 90       	pop	r10
    635a:	9f 90       	pop	r9
    635c:	8f 90       	pop	r8
    635e:	7f 90       	pop	r7
    6360:	6f 90       	pop	r6
    6362:	5f 90       	pop	r5
    6364:	4f 90       	pop	r4
    6366:	08 95       	ret

00006368 <twi_stop>:
    6368:	85 ed       	ldi	r24, 0xD5	; 213
    636a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    636e:	80 91 e4 04 	lds	r24, 0x04E4	; 0x8004e4 <twi_timeout_us>
    6372:	90 91 e5 04 	lds	r25, 0x04E5	; 0x8004e5 <twi_timeout_us+0x1>
    6376:	a0 91 e6 04 	lds	r26, 0x04E6	; 0x8004e6 <twi_timeout_us+0x2>
    637a:	b0 91 e7 04 	lds	r27, 0x04E7	; 0x8004e7 <twi_timeout_us+0x3>
    637e:	07 96       	adiw	r24, 0x07	; 7
    6380:	a1 1d       	adc	r26, r1
    6382:	b1 1d       	adc	r27, r1
    6384:	23 e0       	ldi	r18, 0x03	; 3
    6386:	b6 95       	lsr	r27
    6388:	a7 95       	ror	r26
    638a:	97 95       	ror	r25
    638c:	87 95       	ror	r24
    638e:	2a 95       	dec	r18
    6390:	d1 f7       	brne	.-12     	; 0x6386 <twi_stop+0x1e>
    6392:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    6396:	24 ff       	sbrs	r18, 4
    6398:	1c c0       	rjmp	.+56     	; 0x63d2 <twi_stop+0x6a>
    639a:	40 91 e4 04 	lds	r20, 0x04E4	; 0x8004e4 <twi_timeout_us>
    639e:	50 91 e5 04 	lds	r21, 0x04E5	; 0x8004e5 <twi_timeout_us+0x1>
    63a2:	60 91 e6 04 	lds	r22, 0x04E6	; 0x8004e6 <twi_timeout_us+0x2>
    63a6:	70 91 e7 04 	lds	r23, 0x04E7	; 0x8004e7 <twi_timeout_us+0x3>
    63aa:	45 2b       	or	r20, r21
    63ac:	46 2b       	or	r20, r22
    63ae:	47 2b       	or	r20, r23
    63b0:	81 f3       	breq	.-32     	; 0x6392 <twi_stop+0x2a>
    63b2:	00 97       	sbiw	r24, 0x00	; 0
    63b4:	a1 05       	cpc	r26, r1
    63b6:	b1 05       	cpc	r27, r1
    63b8:	41 f0       	breq	.+16     	; 0x63ca <twi_stop+0x62>
    63ba:	25 e3       	ldi	r18, 0x35	; 53
    63bc:	2a 95       	dec	r18
    63be:	f1 f7       	brne	.-4      	; 0x63bc <twi_stop+0x54>
    63c0:	00 00       	nop
    63c2:	01 97       	sbiw	r24, 0x01	; 1
    63c4:	a1 09       	sbc	r26, r1
    63c6:	b1 09       	sbc	r27, r1
    63c8:	e4 cf       	rjmp	.-56     	; 0x6392 <twi_stop+0x2a>
    63ca:	80 91 e2 04 	lds	r24, 0x04E2	; 0x8004e2 <twi_do_reset_on_timeout>
    63ce:	0c 94 c5 2f 	jmp	0x5f8a	; 0x5f8a <twi_handleTimeout>
    63d2:	10 92 eb 04 	sts	0x04EB, r1	; 0x8004eb <twi_state>
    63d6:	08 95       	ret

000063d8 <__vector_24>:

ISR(TWI_vect)
{
    63d8:	1f 92       	push	r1
    63da:	0f 92       	push	r0
    63dc:	0f b6       	in	r0, 0x3f	; 63
    63de:	0f 92       	push	r0
    63e0:	11 24       	eor	r1, r1
    63e2:	2f 93       	push	r18
    63e4:	3f 93       	push	r19
    63e6:	4f 93       	push	r20
    63e8:	5f 93       	push	r21
    63ea:	6f 93       	push	r22
    63ec:	7f 93       	push	r23
    63ee:	8f 93       	push	r24
    63f0:	9f 93       	push	r25
    63f2:	af 93       	push	r26
    63f4:	bf 93       	push	r27
    63f6:	ef 93       	push	r30
    63f8:	ff 93       	push	r31
  switch(TW_STATUS){
    63fa:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
    63fe:	88 7f       	andi	r24, 0xF8	; 248
    6400:	80 36       	cpi	r24, 0x60	; 96
    6402:	09 f4       	brne	.+2      	; 0x6406 <__vector_24+0x2e>
    6404:	9e c0       	rjmp	.+316    	; 0x6542 <__vector_24+0x16a>
    6406:	78 f5       	brcc	.+94     	; 0x6466 <__vector_24+0x8e>
    6408:	88 32       	cpi	r24, 0x28	; 40
    640a:	09 f4       	brne	.+2      	; 0x640e <__vector_24+0x36>
    640c:	5d c0       	rjmp	.+186    	; 0x64c8 <__vector_24+0xf0>
    640e:	90 f4       	brcc	.+36     	; 0x6434 <__vector_24+0x5c>
    6410:	80 31       	cpi	r24, 0x10	; 16
    6412:	09 f4       	brne	.+2      	; 0x6416 <__vector_24+0x3e>
    6414:	56 c0       	rjmp	.+172    	; 0x64c2 <__vector_24+0xea>
    6416:	38 f4       	brcc	.+14     	; 0x6426 <__vector_24+0x4e>
    6418:	88 23       	and	r24, r24
    641a:	09 f4       	brne	.+2      	; 0x641e <__vector_24+0x46>
    641c:	f5 c0       	rjmp	.+490    	; 0x6608 <__vector_24+0x230>
    641e:	88 30       	cpi	r24, 0x08	; 8
    6420:	09 f4       	brne	.+2      	; 0x6424 <__vector_24+0x4c>
    6422:	4f c0       	rjmp	.+158    	; 0x64c2 <__vector_24+0xea>
    6424:	f5 c0       	rjmp	.+490    	; 0x6610 <__vector_24+0x238>
    6426:	88 31       	cpi	r24, 0x18	; 24
    6428:	09 f4       	brne	.+2      	; 0x642c <__vector_24+0x54>
    642a:	4e c0       	rjmp	.+156    	; 0x64c8 <__vector_24+0xf0>
    642c:	80 32       	cpi	r24, 0x20	; 32
    642e:	09 f4       	brne	.+2      	; 0x6432 <__vector_24+0x5a>
    6430:	5f c0       	rjmp	.+190    	; 0x64f0 <__vector_24+0x118>
    6432:	ee c0       	rjmp	.+476    	; 0x6610 <__vector_24+0x238>
    6434:	80 34       	cpi	r24, 0x40	; 64
    6436:	09 f4       	brne	.+2      	; 0x643a <__vector_24+0x62>
    6438:	6a c0       	rjmp	.+212    	; 0x650e <__vector_24+0x136>
    643a:	58 f4       	brcc	.+22     	; 0x6452 <__vector_24+0x7a>
    643c:	80 33       	cpi	r24, 0x30	; 48
    643e:	09 f4       	brne	.+2      	; 0x6442 <__vector_24+0x6a>
    6440:	57 c0       	rjmp	.+174    	; 0x64f0 <__vector_24+0x118>
    6442:	88 33       	cpi	r24, 0x38	; 56
    6444:	09 f0       	breq	.+2      	; 0x6448 <__vector_24+0x70>
    6446:	e4 c0       	rjmp	.+456    	; 0x6610 <__vector_24+0x238>
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
    6448:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <twi_error>
      twi_releaseBus();
    644c:	0e 94 bf 2f 	call	0x5f7e	; 0x5f7e <twi_releaseBus>
      break;
    6450:	df c0       	rjmp	.+446    	; 0x6610 <__vector_24+0x238>
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    6452:	80 35       	cpi	r24, 0x50	; 80
    6454:	09 f4       	brne	.+2      	; 0x6458 <__vector_24+0x80>
    6456:	4f c0       	rjmp	.+158    	; 0x64f6 <__vector_24+0x11e>
    6458:	88 35       	cpi	r24, 0x58	; 88
    645a:	09 f4       	brne	.+2      	; 0x645e <__vector_24+0x86>
    645c:	5d c0       	rjmp	.+186    	; 0x6518 <__vector_24+0x140>
    645e:	88 34       	cpi	r24, 0x48	; 72
    6460:	09 f0       	breq	.+2      	; 0x6464 <__vector_24+0x8c>
    6462:	d6 c0       	rjmp	.+428    	; 0x6610 <__vector_24+0x238>
    6464:	d3 c0       	rjmp	.+422    	; 0x660c <__vector_24+0x234>
    6466:	88 39       	cpi	r24, 0x98	; 152
    6468:	09 f4       	brne	.+2      	; 0x646c <__vector_24+0x94>
    646a:	c4 c0       	rjmp	.+392    	; 0x65f4 <__vector_24+0x21c>
    646c:	a8 f4       	brcc	.+42     	; 0x6498 <__vector_24+0xc0>
    646e:	88 37       	cpi	r24, 0x78	; 120
    6470:	09 f4       	brne	.+2      	; 0x6474 <__vector_24+0x9c>
    6472:	67 c0       	rjmp	.+206    	; 0x6542 <__vector_24+0x16a>
    6474:	38 f4       	brcc	.+14     	; 0x6484 <__vector_24+0xac>
    6476:	88 36       	cpi	r24, 0x68	; 104
    6478:	09 f4       	brne	.+2      	; 0x647c <__vector_24+0xa4>
    647a:	63 c0       	rjmp	.+198    	; 0x6542 <__vector_24+0x16a>
    647c:	80 37       	cpi	r24, 0x70	; 112
    647e:	09 f4       	brne	.+2      	; 0x6482 <__vector_24+0xaa>
    6480:	60 c0       	rjmp	.+192    	; 0x6542 <__vector_24+0x16a>
    6482:	c6 c0       	rjmp	.+396    	; 0x6610 <__vector_24+0x238>
    6484:	88 38       	cpi	r24, 0x88	; 136
    6486:	09 f4       	brne	.+2      	; 0x648a <__vector_24+0xb2>
    6488:	b5 c0       	rjmp	.+362    	; 0x65f4 <__vector_24+0x21c>
    648a:	80 39       	cpi	r24, 0x90	; 144
    648c:	09 f4       	brne	.+2      	; 0x6490 <__vector_24+0xb8>
    648e:	5f c0       	rjmp	.+190    	; 0x654e <__vector_24+0x176>
    6490:	80 38       	cpi	r24, 0x80	; 128
    6492:	09 f0       	breq	.+2      	; 0x6496 <__vector_24+0xbe>
    6494:	bd c0       	rjmp	.+378    	; 0x6610 <__vector_24+0x238>
    6496:	5b c0       	rjmp	.+182    	; 0x654e <__vector_24+0x176>
    6498:	80 3b       	cpi	r24, 0xB0	; 176
    649a:	09 f4       	brne	.+2      	; 0x649e <__vector_24+0xc6>
    649c:	83 c0       	rjmp	.+262    	; 0x65a4 <__vector_24+0x1cc>
    649e:	38 f4       	brcc	.+14     	; 0x64ae <__vector_24+0xd6>
    64a0:	80 3a       	cpi	r24, 0xA0	; 160
    64a2:	09 f4       	brne	.+2      	; 0x64a6 <__vector_24+0xce>
    64a4:	66 c0       	rjmp	.+204    	; 0x6572 <__vector_24+0x19a>
    64a6:	88 3a       	cpi	r24, 0xA8	; 168
    64a8:	09 f4       	brne	.+2      	; 0x64ac <__vector_24+0xd4>
    64aa:	7c c0       	rjmp	.+248    	; 0x65a4 <__vector_24+0x1cc>
    64ac:	b1 c0       	rjmp	.+354    	; 0x6610 <__vector_24+0x238>
    64ae:	80 3c       	cpi	r24, 0xC0	; 192
    64b0:	09 f4       	brne	.+2      	; 0x64b4 <__vector_24+0xdc>
    64b2:	a4 c0       	rjmp	.+328    	; 0x65fc <__vector_24+0x224>
    64b4:	88 3c       	cpi	r24, 0xC8	; 200
    64b6:	09 f4       	brne	.+2      	; 0x64ba <__vector_24+0xe2>
    64b8:	a1 c0       	rjmp	.+322    	; 0x65fc <__vector_24+0x224>
    64ba:	88 3b       	cpi	r24, 0xB8	; 184
    64bc:	09 f4       	brne	.+2      	; 0x64c0 <__vector_24+0xe8>
    64be:	87 c0       	rjmp	.+270    	; 0x65ce <__vector_24+0x1f6>
    64c0:	a7 c0       	rjmp	.+334    	; 0x6610 <__vector_24+0x238>
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
    64c2:	80 91 ea 04 	lds	r24, 0x04EA	; 0x8004ea <twi_slarw>
    64c6:	10 c0       	rjmp	.+32     	; 0x64e8 <__vector_24+0x110>

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
    64c8:	90 91 bd 04 	lds	r25, 0x04BD	; 0x8004bd <twi_masterBufferIndex>
    64cc:	80 91 bc 04 	lds	r24, 0x04BC	; 0x8004bc <twi_masterBufferLength>
    64d0:	98 17       	cp	r25, r24
    64d2:	70 f5       	brcc	.+92     	; 0x6530 <__vector_24+0x158>
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    64d4:	e0 91 bd 04 	lds	r30, 0x04BD	; 0x8004bd <twi_masterBufferIndex>
    64d8:	81 e0       	ldi	r24, 0x01	; 1
    64da:	8e 0f       	add	r24, r30
    64dc:	80 93 bd 04 	sts	0x04BD, r24	; 0x8004bd <twi_masterBufferIndex>
    64e0:	f0 e0       	ldi	r31, 0x00	; 0
    64e2:	e2 54       	subi	r30, 0x42	; 66
    64e4:	fb 4f       	sbci	r31, 0xFB	; 251
    64e6:	80 81       	ld	r24, Z
    64e8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    64ec:	85 ec       	ldi	r24, 0xC5	; 197
    64ee:	83 c0       	rjmp	.+262    	; 0x65f6 <__vector_24+0x21e>
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
    64f0:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <twi_error>
    64f4:	8b c0       	rjmp	.+278    	; 0x660c <__vector_24+0x234>
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    64f6:	e0 91 bd 04 	lds	r30, 0x04BD	; 0x8004bd <twi_masterBufferIndex>
    64fa:	81 e0       	ldi	r24, 0x01	; 1
    64fc:	8e 0f       	add	r24, r30
    64fe:	80 93 bd 04 	sts	0x04BD, r24	; 0x8004bd <twi_masterBufferIndex>
    6502:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    6506:	f0 e0       	ldi	r31, 0x00	; 0
    6508:	e2 54       	subi	r30, 0x42	; 66
    650a:	fb 4f       	sbci	r31, 0xFB	; 251
    650c:	80 83       	st	Z, r24
      __attribute__ ((fallthrough));
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
    650e:	90 91 bd 04 	lds	r25, 0x04BD	; 0x8004bd <twi_masterBufferIndex>
    6512:	80 91 bc 04 	lds	r24, 0x04BC	; 0x8004bc <twi_masterBufferLength>
    6516:	6b c0       	rjmp	.+214    	; 0x65ee <__vector_24+0x216>
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    6518:	e0 91 bd 04 	lds	r30, 0x04BD	; 0x8004bd <twi_masterBufferIndex>
    651c:	81 e0       	ldi	r24, 0x01	; 1
    651e:	8e 0f       	add	r24, r30
    6520:	80 93 bd 04 	sts	0x04BD, r24	; 0x8004bd <twi_masterBufferIndex>
    6524:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    6528:	f0 e0       	ldi	r31, 0x00	; 0
    652a:	e2 54       	subi	r30, 0x42	; 66
    652c:	fb 4f       	sbci	r31, 0xFB	; 251
    652e:	80 83       	st	Z, r24
      if (twi_sendStop){
    6530:	80 91 e9 04 	lds	r24, 0x04E9	; 0x8004e9 <twi_sendStop>
    6534:	81 11       	cpse	r24, r1
    6536:	6a c0       	rjmp	.+212    	; 0x660c <__vector_24+0x234>
        twi_stop();
      } else {
        twi_inRepStart = true;	// we're gonna send the START
    6538:	81 e0       	ldi	r24, 0x01	; 1
    653a:	80 93 e8 04 	sts	0x04E8, r24	; 0x8004e8 <twi_inRepStart>
        // don't enable the interrupt. We'll generate the start, but we
        // avoid handling the interrupt until we're in the next transaction,
        // at the point where we would normally issue the start.
        TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    653e:	84 ea       	ldi	r24, 0xA4	; 164
    6540:	5e c0       	rjmp	.+188    	; 0x65fe <__vector_24+0x226>
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
    6542:	83 e0       	ldi	r24, 0x03	; 3
    6544:	80 93 eb 04 	sts	0x04EB, r24	; 0x8004eb <twi_state>
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
    6548:	10 92 79 04 	sts	0x0479, r1	; 0x800479 <twi_rxBufferIndex>
    654c:	cf cf       	rjmp	.-98     	; 0x64ec <__vector_24+0x114>
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    654e:	80 91 79 04 	lds	r24, 0x0479	; 0x800479 <twi_rxBufferIndex>
    6552:	80 32       	cpi	r24, 0x20	; 32
    6554:	08 f0       	brcs	.+2      	; 0x6558 <__vector_24+0x180>
    6556:	4e c0       	rjmp	.+156    	; 0x65f4 <__vector_24+0x21c>
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
    6558:	e0 91 79 04 	lds	r30, 0x0479	; 0x800479 <twi_rxBufferIndex>
    655c:	81 e0       	ldi	r24, 0x01	; 1
    655e:	8e 0f       	add	r24, r30
    6560:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <twi_rxBufferIndex>
    6564:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    6568:	f0 e0       	ldi	r31, 0x00	; 0
    656a:	e6 58       	subi	r30, 0x86	; 134
    656c:	fb 4f       	sbci	r31, 0xFB	; 251
    656e:	80 83       	st	Z, r24
    6570:	bd cf       	rjmp	.-134    	; 0x64ec <__vector_24+0x114>
        twi_reply(0);
      }
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
    6572:	0e 94 bf 2f 	call	0x5f7e	; 0x5f7e <twi_releaseBus>
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
    6576:	80 91 79 04 	lds	r24, 0x0479	; 0x800479 <twi_rxBufferIndex>
    657a:	80 32       	cpi	r24, 0x20	; 32
    657c:	30 f4       	brcc	.+12     	; 0x658a <__vector_24+0x1b2>
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
    657e:	e0 91 79 04 	lds	r30, 0x0479	; 0x800479 <twi_rxBufferIndex>
    6582:	f0 e0       	ldi	r31, 0x00	; 0
    6584:	e6 58       	subi	r30, 0x86	; 134
    6586:	fb 4f       	sbci	r31, 0xFB	; 251
    6588:	10 82       	st	Z, r1
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
    658a:	60 91 79 04 	lds	r22, 0x0479	; 0x800479 <twi_rxBufferIndex>
    658e:	70 e0       	ldi	r23, 0x00	; 0
    6590:	e0 91 de 04 	lds	r30, 0x04DE	; 0x8004de <twi_onSlaveReceive>
    6594:	f0 91 df 04 	lds	r31, 0x04DF	; 0x8004df <twi_onSlaveReceive+0x1>
    6598:	8a e7       	ldi	r24, 0x7A	; 122
    659a:	94 e0       	ldi	r25, 0x04	; 4
    659c:	09 95       	icall
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
    659e:	10 92 79 04 	sts	0x0479, r1	; 0x800479 <twi_rxBufferIndex>
      break;
    65a2:	36 c0       	rjmp	.+108    	; 0x6610 <__vector_24+0x238>
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
    65a4:	84 e0       	ldi	r24, 0x04	; 4
    65a6:	80 93 eb 04 	sts	0x04EB, r24	; 0x8004eb <twi_state>
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
    65aa:	10 92 9b 04 	sts	0x049B, r1	; 0x80049b <twi_txBufferIndex>
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
    65ae:	10 92 9a 04 	sts	0x049A, r1	; 0x80049a <twi_txBufferLength>
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
    65b2:	e0 91 e0 04 	lds	r30, 0x04E0	; 0x8004e0 <twi_onSlaveTransmit>
    65b6:	f0 91 e1 04 	lds	r31, 0x04E1	; 0x8004e1 <twi_onSlaveTransmit+0x1>
    65ba:	09 95       	icall
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
    65bc:	80 91 9a 04 	lds	r24, 0x049A	; 0x80049a <twi_txBufferLength>
    65c0:	81 11       	cpse	r24, r1
    65c2:	05 c0       	rjmp	.+10     	; 0x65ce <__vector_24+0x1f6>
        twi_txBufferLength = 1;
    65c4:	81 e0       	ldi	r24, 0x01	; 1
    65c6:	80 93 9a 04 	sts	0x049A, r24	; 0x80049a <twi_txBufferLength>
        twi_txBuffer[0] = 0x00;
    65ca:	10 92 9c 04 	sts	0x049C, r1	; 0x80049c <twi_txBuffer>
      }
      __attribute__ ((fallthrough));		  
      // transmit first byte from buffer, fall
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
    65ce:	e0 91 9b 04 	lds	r30, 0x049B	; 0x80049b <twi_txBufferIndex>
    65d2:	81 e0       	ldi	r24, 0x01	; 1
    65d4:	8e 0f       	add	r24, r30
    65d6:	80 93 9b 04 	sts	0x049B, r24	; 0x80049b <twi_txBufferIndex>
    65da:	f0 e0       	ldi	r31, 0x00	; 0
    65dc:	e4 56       	subi	r30, 0x64	; 100
    65de:	fb 4f       	sbci	r31, 0xFB	; 251
    65e0:	80 81       	ld	r24, Z
    65e2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    65e6:	90 91 9b 04 	lds	r25, 0x049B	; 0x80049b <twi_txBufferIndex>
    65ea:	80 91 9a 04 	lds	r24, 0x049A	; 0x80049a <twi_txBufferLength>
    65ee:	98 17       	cp	r25, r24
    65f0:	08 f4       	brcc	.+2      	; 0x65f4 <__vector_24+0x21c>
    65f2:	7c cf       	rjmp	.-264    	; 0x64ec <__vector_24+0x114>
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    65f4:	85 e8       	ldi	r24, 0x85	; 133
    65f6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    65fa:	0a c0       	rjmp	.+20     	; 0x6610 <__vector_24+0x238>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    65fc:	85 ec       	ldi	r24, 0xC5	; 197
    65fe:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
    6602:	10 92 eb 04 	sts	0x04EB, r1	; 0x8004eb <twi_state>
      break;
    6606:	04 c0       	rjmp	.+8      	; 0x6610 <__vector_24+0x238>

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
    6608:	10 92 78 04 	sts	0x0478, r1	; 0x800478 <twi_error>
      twi_stop();
    660c:	0e 94 b4 31 	call	0x6368	; 0x6368 <twi_stop>
      break;
  }
}
    6610:	ff 91       	pop	r31
    6612:	ef 91       	pop	r30
    6614:	bf 91       	pop	r27
    6616:	af 91       	pop	r26
    6618:	9f 91       	pop	r25
    661a:	8f 91       	pop	r24
    661c:	7f 91       	pop	r23
    661e:	6f 91       	pop	r22
    6620:	5f 91       	pop	r21
    6622:	4f 91       	pop	r20
    6624:	3f 91       	pop	r19
    6626:	2f 91       	pop	r18
    6628:	0f 90       	pop	r0
    662a:	0f be       	out	0x3f, r0	; 63
    662c:	0f 90       	pop	r0
    662e:	1f 90       	pop	r1
    6630:	18 95       	reti

00006632 <__cmpsf2>:
    6632:	0e 94 25 19 	call	0x324a	; 0x324a <__fp_cmp>
    6636:	08 f4       	brcc	.+2      	; 0x663a <__cmpsf2+0x8>
    6638:	81 e0       	ldi	r24, 0x01	; 1
    663a:	08 95       	ret

0000663c <__mulsf3>:
    663c:	0e 94 31 33 	call	0x6662	; 0x6662 <__mulsf3x>
    6640:	0c 94 e6 18 	jmp	0x31cc	; 0x31cc <__fp_round>
    6644:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <__fp_pscA>
    6648:	38 f0       	brcs	.+14     	; 0x6658 <__mulsf3+0x1c>
    664a:	0e 94 df 18 	call	0x31be	; 0x31be <__fp_pscB>
    664e:	20 f0       	brcs	.+8      	; 0x6658 <__mulsf3+0x1c>
    6650:	95 23       	and	r25, r21
    6652:	11 f0       	breq	.+4      	; 0x6658 <__mulsf3+0x1c>
    6654:	0c 94 cf 18 	jmp	0x319e	; 0x319e <__fp_inf>
    6658:	0c 94 d5 18 	jmp	0x31aa	; 0x31aa <__fp_nan>
    665c:	11 24       	eor	r1, r1
    665e:	0c 94 1a 19 	jmp	0x3234	; 0x3234 <__fp_szero>

00006662 <__mulsf3x>:
    6662:	0e 94 f7 18 	call	0x31ee	; 0x31ee <__fp_split3>
    6666:	70 f3       	brcs	.-36     	; 0x6644 <__mulsf3+0x8>

00006668 <__mulsf3_pse>:
    6668:	95 9f       	mul	r25, r21
    666a:	c1 f3       	breq	.-16     	; 0x665c <__mulsf3+0x20>
    666c:	95 0f       	add	r25, r21
    666e:	50 e0       	ldi	r21, 0x00	; 0
    6670:	55 1f       	adc	r21, r21
    6672:	62 9f       	mul	r22, r18
    6674:	f0 01       	movw	r30, r0
    6676:	72 9f       	mul	r23, r18
    6678:	bb 27       	eor	r27, r27
    667a:	f0 0d       	add	r31, r0
    667c:	b1 1d       	adc	r27, r1
    667e:	63 9f       	mul	r22, r19
    6680:	aa 27       	eor	r26, r26
    6682:	f0 0d       	add	r31, r0
    6684:	b1 1d       	adc	r27, r1
    6686:	aa 1f       	adc	r26, r26
    6688:	64 9f       	mul	r22, r20
    668a:	66 27       	eor	r22, r22
    668c:	b0 0d       	add	r27, r0
    668e:	a1 1d       	adc	r26, r1
    6690:	66 1f       	adc	r22, r22
    6692:	82 9f       	mul	r24, r18
    6694:	22 27       	eor	r18, r18
    6696:	b0 0d       	add	r27, r0
    6698:	a1 1d       	adc	r26, r1
    669a:	62 1f       	adc	r22, r18
    669c:	73 9f       	mul	r23, r19
    669e:	b0 0d       	add	r27, r0
    66a0:	a1 1d       	adc	r26, r1
    66a2:	62 1f       	adc	r22, r18
    66a4:	83 9f       	mul	r24, r19
    66a6:	a0 0d       	add	r26, r0
    66a8:	61 1d       	adc	r22, r1
    66aa:	22 1f       	adc	r18, r18
    66ac:	74 9f       	mul	r23, r20
    66ae:	33 27       	eor	r19, r19
    66b0:	a0 0d       	add	r26, r0
    66b2:	61 1d       	adc	r22, r1
    66b4:	23 1f       	adc	r18, r19
    66b6:	84 9f       	mul	r24, r20
    66b8:	60 0d       	add	r22, r0
    66ba:	21 1d       	adc	r18, r1
    66bc:	82 2f       	mov	r24, r18
    66be:	76 2f       	mov	r23, r22
    66c0:	6a 2f       	mov	r22, r26
    66c2:	11 24       	eor	r1, r1
    66c4:	9f 57       	subi	r25, 0x7F	; 127
    66c6:	50 40       	sbci	r21, 0x00	; 0
    66c8:	9a f0       	brmi	.+38     	; 0x66f0 <__mulsf3_pse+0x88>
    66ca:	f1 f0       	breq	.+60     	; 0x6708 <__mulsf3_pse+0xa0>
    66cc:	88 23       	and	r24, r24
    66ce:	4a f0       	brmi	.+18     	; 0x66e2 <__mulsf3_pse+0x7a>
    66d0:	ee 0f       	add	r30, r30
    66d2:	ff 1f       	adc	r31, r31
    66d4:	bb 1f       	adc	r27, r27
    66d6:	66 1f       	adc	r22, r22
    66d8:	77 1f       	adc	r23, r23
    66da:	88 1f       	adc	r24, r24
    66dc:	91 50       	subi	r25, 0x01	; 1
    66de:	50 40       	sbci	r21, 0x00	; 0
    66e0:	a9 f7       	brne	.-22     	; 0x66cc <__mulsf3_pse+0x64>
    66e2:	9e 3f       	cpi	r25, 0xFE	; 254
    66e4:	51 05       	cpc	r21, r1
    66e6:	80 f0       	brcs	.+32     	; 0x6708 <__mulsf3_pse+0xa0>
    66e8:	0c 94 cf 18 	jmp	0x319e	; 0x319e <__fp_inf>
    66ec:	0c 94 1a 19 	jmp	0x3234	; 0x3234 <__fp_szero>
    66f0:	5f 3f       	cpi	r21, 0xFF	; 255
    66f2:	e4 f3       	brlt	.-8      	; 0x66ec <__mulsf3_pse+0x84>
    66f4:	98 3e       	cpi	r25, 0xE8	; 232
    66f6:	d4 f3       	brlt	.-12     	; 0x66ec <__mulsf3_pse+0x84>
    66f8:	86 95       	lsr	r24
    66fa:	77 95       	ror	r23
    66fc:	67 95       	ror	r22
    66fe:	b7 95       	ror	r27
    6700:	f7 95       	ror	r31
    6702:	e7 95       	ror	r30
    6704:	9f 5f       	subi	r25, 0xFF	; 255
    6706:	c1 f7       	brne	.-16     	; 0x66f8 <__mulsf3_pse+0x90>
    6708:	fe 2b       	or	r31, r30
    670a:	88 0f       	add	r24, r24
    670c:	91 1d       	adc	r25, r1
    670e:	96 95       	lsr	r25
    6710:	87 95       	ror	r24
    6712:	97 f9       	bld	r25, 7
    6714:	08 95       	ret

00006716 <__unordsf2>:
    6716:	0e 94 25 19 	call	0x324a	; 0x324a <__fp_cmp>
    671a:	88 0b       	sbc	r24, r24
    671c:	99 0b       	sbc	r25, r25
    671e:	08 95       	ret

00006720 <__mulsi3>:
    6720:	db 01       	movw	r26, r22
    6722:	8f 93       	push	r24
    6724:	9f 93       	push	r25
    6726:	0e 94 fb 33 	call	0x67f6	; 0x67f6 <__muluhisi3>
    672a:	bf 91       	pop	r27
    672c:	af 91       	pop	r26
    672e:	a2 9f       	mul	r26, r18
    6730:	80 0d       	add	r24, r0
    6732:	91 1d       	adc	r25, r1
    6734:	a3 9f       	mul	r26, r19
    6736:	90 0d       	add	r25, r0
    6738:	b2 9f       	mul	r27, r18
    673a:	90 0d       	add	r25, r0
    673c:	11 24       	eor	r1, r1
    673e:	08 95       	ret

00006740 <__divmodhi4>:
    6740:	97 fb       	bst	r25, 7
    6742:	07 2e       	mov	r0, r23
    6744:	16 f4       	brtc	.+4      	; 0x674a <__divmodhi4+0xa>
    6746:	00 94       	com	r0
    6748:	07 d0       	rcall	.+14     	; 0x6758 <__divmodhi4_neg1>
    674a:	77 fd       	sbrc	r23, 7
    674c:	09 d0       	rcall	.+18     	; 0x6760 <__divmodhi4_neg2>
    674e:	0e 94 06 34 	call	0x680c	; 0x680c <__udivmodhi4>
    6752:	07 fc       	sbrc	r0, 7
    6754:	05 d0       	rcall	.+10     	; 0x6760 <__divmodhi4_neg2>
    6756:	3e f4       	brtc	.+14     	; 0x6766 <__divmodhi4_exit>

00006758 <__divmodhi4_neg1>:
    6758:	90 95       	com	r25
    675a:	81 95       	neg	r24
    675c:	9f 4f       	sbci	r25, 0xFF	; 255
    675e:	08 95       	ret

00006760 <__divmodhi4_neg2>:
    6760:	70 95       	com	r23
    6762:	61 95       	neg	r22
    6764:	7f 4f       	sbci	r23, 0xFF	; 255

00006766 <__divmodhi4_exit>:
    6766:	08 95       	ret

00006768 <__udivmodsi4>:
    6768:	a1 e2       	ldi	r26, 0x21	; 33
    676a:	1a 2e       	mov	r1, r26
    676c:	aa 1b       	sub	r26, r26
    676e:	bb 1b       	sub	r27, r27
    6770:	fd 01       	movw	r30, r26
    6772:	0d c0       	rjmp	.+26     	; 0x678e <__udivmodsi4_ep>

00006774 <__udivmodsi4_loop>:
    6774:	aa 1f       	adc	r26, r26
    6776:	bb 1f       	adc	r27, r27
    6778:	ee 1f       	adc	r30, r30
    677a:	ff 1f       	adc	r31, r31
    677c:	a2 17       	cp	r26, r18
    677e:	b3 07       	cpc	r27, r19
    6780:	e4 07       	cpc	r30, r20
    6782:	f5 07       	cpc	r31, r21
    6784:	20 f0       	brcs	.+8      	; 0x678e <__udivmodsi4_ep>
    6786:	a2 1b       	sub	r26, r18
    6788:	b3 0b       	sbc	r27, r19
    678a:	e4 0b       	sbc	r30, r20
    678c:	f5 0b       	sbc	r31, r21

0000678e <__udivmodsi4_ep>:
    678e:	66 1f       	adc	r22, r22
    6790:	77 1f       	adc	r23, r23
    6792:	88 1f       	adc	r24, r24
    6794:	99 1f       	adc	r25, r25
    6796:	1a 94       	dec	r1
    6798:	69 f7       	brne	.-38     	; 0x6774 <__udivmodsi4_loop>
    679a:	60 95       	com	r22
    679c:	70 95       	com	r23
    679e:	80 95       	com	r24
    67a0:	90 95       	com	r25
    67a2:	9b 01       	movw	r18, r22
    67a4:	ac 01       	movw	r20, r24
    67a6:	bd 01       	movw	r22, r26
    67a8:	cf 01       	movw	r24, r30
    67aa:	08 95       	ret

000067ac <__divmodsi4>:
    67ac:	05 2e       	mov	r0, r21
    67ae:	97 fb       	bst	r25, 7
    67b0:	1e f4       	brtc	.+6      	; 0x67b8 <__divmodsi4+0xc>
    67b2:	00 94       	com	r0
    67b4:	0e 94 ed 33 	call	0x67da	; 0x67da <__negsi2>
    67b8:	57 fd       	sbrc	r21, 7
    67ba:	07 d0       	rcall	.+14     	; 0x67ca <__divmodsi4_neg2>
    67bc:	0e 94 b4 33 	call	0x6768	; 0x6768 <__udivmodsi4>
    67c0:	07 fc       	sbrc	r0, 7
    67c2:	03 d0       	rcall	.+6      	; 0x67ca <__divmodsi4_neg2>
    67c4:	4e f4       	brtc	.+18     	; 0x67d8 <__divmodsi4_exit>
    67c6:	0c 94 ed 33 	jmp	0x67da	; 0x67da <__negsi2>

000067ca <__divmodsi4_neg2>:
    67ca:	50 95       	com	r21
    67cc:	40 95       	com	r20
    67ce:	30 95       	com	r19
    67d0:	21 95       	neg	r18
    67d2:	3f 4f       	sbci	r19, 0xFF	; 255
    67d4:	4f 4f       	sbci	r20, 0xFF	; 255
    67d6:	5f 4f       	sbci	r21, 0xFF	; 255

000067d8 <__divmodsi4_exit>:
    67d8:	08 95       	ret

000067da <__negsi2>:
    67da:	90 95       	com	r25
    67dc:	80 95       	com	r24
    67de:	70 95       	com	r23
    67e0:	61 95       	neg	r22
    67e2:	7f 4f       	sbci	r23, 0xFF	; 255
    67e4:	8f 4f       	sbci	r24, 0xFF	; 255
    67e6:	9f 4f       	sbci	r25, 0xFF	; 255
    67e8:	08 95       	ret

000067ea <__tablejump2__>:
    67ea:	ee 0f       	add	r30, r30
    67ec:	ff 1f       	adc	r31, r31
    67ee:	05 90       	lpm	r0, Z+
    67f0:	f4 91       	lpm	r31, Z
    67f2:	e0 2d       	mov	r30, r0
    67f4:	09 94       	ijmp

000067f6 <__muluhisi3>:
    67f6:	0e 94 1a 34 	call	0x6834	; 0x6834 <__umulhisi3>
    67fa:	a5 9f       	mul	r26, r21
    67fc:	90 0d       	add	r25, r0
    67fe:	b4 9f       	mul	r27, r20
    6800:	90 0d       	add	r25, r0
    6802:	a4 9f       	mul	r26, r20
    6804:	80 0d       	add	r24, r0
    6806:	91 1d       	adc	r25, r1
    6808:	11 24       	eor	r1, r1
    680a:	08 95       	ret

0000680c <__udivmodhi4>:
    680c:	aa 1b       	sub	r26, r26
    680e:	bb 1b       	sub	r27, r27
    6810:	51 e1       	ldi	r21, 0x11	; 17
    6812:	07 c0       	rjmp	.+14     	; 0x6822 <__udivmodhi4_ep>

00006814 <__udivmodhi4_loop>:
    6814:	aa 1f       	adc	r26, r26
    6816:	bb 1f       	adc	r27, r27
    6818:	a6 17       	cp	r26, r22
    681a:	b7 07       	cpc	r27, r23
    681c:	10 f0       	brcs	.+4      	; 0x6822 <__udivmodhi4_ep>
    681e:	a6 1b       	sub	r26, r22
    6820:	b7 0b       	sbc	r27, r23

00006822 <__udivmodhi4_ep>:
    6822:	88 1f       	adc	r24, r24
    6824:	99 1f       	adc	r25, r25
    6826:	5a 95       	dec	r21
    6828:	a9 f7       	brne	.-22     	; 0x6814 <__udivmodhi4_loop>
    682a:	80 95       	com	r24
    682c:	90 95       	com	r25
    682e:	bc 01       	movw	r22, r24
    6830:	cd 01       	movw	r24, r26
    6832:	08 95       	ret

00006834 <__umulhisi3>:
    6834:	a2 9f       	mul	r26, r18
    6836:	b0 01       	movw	r22, r0
    6838:	b3 9f       	mul	r27, r19
    683a:	c0 01       	movw	r24, r0
    683c:	a3 9f       	mul	r26, r19
    683e:	70 0d       	add	r23, r0
    6840:	81 1d       	adc	r24, r1
    6842:	11 24       	eor	r1, r1
    6844:	91 1d       	adc	r25, r1
    6846:	b2 9f       	mul	r27, r18
    6848:	70 0d       	add	r23, r0
    684a:	81 1d       	adc	r24, r1
    684c:	11 24       	eor	r1, r1
    684e:	91 1d       	adc	r25, r1
    6850:	08 95       	ret

00006852 <dtostrf>:
    6852:	ef 92       	push	r14
    6854:	0f 93       	push	r16
    6856:	1f 93       	push	r17
    6858:	cf 93       	push	r28
    685a:	df 93       	push	r29
    685c:	e8 01       	movw	r28, r16
    685e:	47 fd       	sbrc	r20, 7
    6860:	02 c0       	rjmp	.+4      	; 0x6866 <dtostrf+0x14>
    6862:	34 e0       	ldi	r19, 0x04	; 4
    6864:	01 c0       	rjmp	.+2      	; 0x6868 <dtostrf+0x16>
    6866:	34 e1       	ldi	r19, 0x14	; 20
    6868:	04 2e       	mov	r0, r20
    686a:	00 0c       	add	r0, r0
    686c:	55 0b       	sbc	r21, r21
    686e:	57 ff       	sbrs	r21, 7
    6870:	03 c0       	rjmp	.+6      	; 0x6878 <dtostrf+0x26>
    6872:	51 95       	neg	r21
    6874:	41 95       	neg	r20
    6876:	51 09       	sbc	r21, r1
    6878:	e3 2e       	mov	r14, r19
    687a:	02 2f       	mov	r16, r18
    687c:	24 2f       	mov	r18, r20
    687e:	ae 01       	movw	r20, r28
    6880:	0e 94 43 38 	call	0x7086	; 0x7086 <dtoa_prf>
    6884:	ce 01       	movw	r24, r28
    6886:	df 91       	pop	r29
    6888:	cf 91       	pop	r28
    688a:	1f 91       	pop	r17
    688c:	0f 91       	pop	r16
    688e:	ef 90       	pop	r14
    6890:	08 95       	ret

00006892 <malloc>:
    6892:	0f 93       	push	r16
    6894:	1f 93       	push	r17
    6896:	cf 93       	push	r28
    6898:	df 93       	push	r29
    689a:	82 30       	cpi	r24, 0x02	; 2
    689c:	91 05       	cpc	r25, r1
    689e:	10 f4       	brcc	.+4      	; 0x68a4 <malloc+0x12>
    68a0:	82 e0       	ldi	r24, 0x02	; 2
    68a2:	90 e0       	ldi	r25, 0x00	; 0
    68a4:	e0 91 ee 04 	lds	r30, 0x04EE	; 0x8004ee <__flp>
    68a8:	f0 91 ef 04 	lds	r31, 0x04EF	; 0x8004ef <__flp+0x1>
    68ac:	20 e0       	ldi	r18, 0x00	; 0
    68ae:	30 e0       	ldi	r19, 0x00	; 0
    68b0:	a0 e0       	ldi	r26, 0x00	; 0
    68b2:	b0 e0       	ldi	r27, 0x00	; 0
    68b4:	30 97       	sbiw	r30, 0x00	; 0
    68b6:	19 f1       	breq	.+70     	; 0x68fe <malloc+0x6c>
    68b8:	40 81       	ld	r20, Z
    68ba:	51 81       	ldd	r21, Z+1	; 0x01
    68bc:	02 81       	ldd	r16, Z+2	; 0x02
    68be:	13 81       	ldd	r17, Z+3	; 0x03
    68c0:	48 17       	cp	r20, r24
    68c2:	59 07       	cpc	r21, r25
    68c4:	c8 f0       	brcs	.+50     	; 0x68f8 <malloc+0x66>
    68c6:	84 17       	cp	r24, r20
    68c8:	95 07       	cpc	r25, r21
    68ca:	69 f4       	brne	.+26     	; 0x68e6 <malloc+0x54>
    68cc:	10 97       	sbiw	r26, 0x00	; 0
    68ce:	31 f0       	breq	.+12     	; 0x68dc <malloc+0x4a>
    68d0:	12 96       	adiw	r26, 0x02	; 2
    68d2:	0c 93       	st	X, r16
    68d4:	12 97       	sbiw	r26, 0x02	; 2
    68d6:	13 96       	adiw	r26, 0x03	; 3
    68d8:	1c 93       	st	X, r17
    68da:	27 c0       	rjmp	.+78     	; 0x692a <malloc+0x98>
    68dc:	00 93 ee 04 	sts	0x04EE, r16	; 0x8004ee <__flp>
    68e0:	10 93 ef 04 	sts	0x04EF, r17	; 0x8004ef <__flp+0x1>
    68e4:	22 c0       	rjmp	.+68     	; 0x692a <malloc+0x98>
    68e6:	21 15       	cp	r18, r1
    68e8:	31 05       	cpc	r19, r1
    68ea:	19 f0       	breq	.+6      	; 0x68f2 <malloc+0x60>
    68ec:	42 17       	cp	r20, r18
    68ee:	53 07       	cpc	r21, r19
    68f0:	18 f4       	brcc	.+6      	; 0x68f8 <malloc+0x66>
    68f2:	9a 01       	movw	r18, r20
    68f4:	bd 01       	movw	r22, r26
    68f6:	ef 01       	movw	r28, r30
    68f8:	df 01       	movw	r26, r30
    68fa:	f8 01       	movw	r30, r16
    68fc:	db cf       	rjmp	.-74     	; 0x68b4 <malloc+0x22>
    68fe:	21 15       	cp	r18, r1
    6900:	31 05       	cpc	r19, r1
    6902:	f9 f0       	breq	.+62     	; 0x6942 <malloc+0xb0>
    6904:	28 1b       	sub	r18, r24
    6906:	39 0b       	sbc	r19, r25
    6908:	24 30       	cpi	r18, 0x04	; 4
    690a:	31 05       	cpc	r19, r1
    690c:	80 f4       	brcc	.+32     	; 0x692e <malloc+0x9c>
    690e:	8a 81       	ldd	r24, Y+2	; 0x02
    6910:	9b 81       	ldd	r25, Y+3	; 0x03
    6912:	61 15       	cp	r22, r1
    6914:	71 05       	cpc	r23, r1
    6916:	21 f0       	breq	.+8      	; 0x6920 <malloc+0x8e>
    6918:	fb 01       	movw	r30, r22
    691a:	93 83       	std	Z+3, r25	; 0x03
    691c:	82 83       	std	Z+2, r24	; 0x02
    691e:	04 c0       	rjmp	.+8      	; 0x6928 <malloc+0x96>
    6920:	90 93 ef 04 	sts	0x04EF, r25	; 0x8004ef <__flp+0x1>
    6924:	80 93 ee 04 	sts	0x04EE, r24	; 0x8004ee <__flp>
    6928:	fe 01       	movw	r30, r28
    692a:	32 96       	adiw	r30, 0x02	; 2
    692c:	44 c0       	rjmp	.+136    	; 0x69b6 <malloc+0x124>
    692e:	fe 01       	movw	r30, r28
    6930:	e2 0f       	add	r30, r18
    6932:	f3 1f       	adc	r31, r19
    6934:	81 93       	st	Z+, r24
    6936:	91 93       	st	Z+, r25
    6938:	22 50       	subi	r18, 0x02	; 2
    693a:	31 09       	sbc	r19, r1
    693c:	39 83       	std	Y+1, r19	; 0x01
    693e:	28 83       	st	Y, r18
    6940:	3a c0       	rjmp	.+116    	; 0x69b6 <malloc+0x124>
    6942:	20 91 ec 04 	lds	r18, 0x04EC	; 0x8004ec <__brkval>
    6946:	30 91 ed 04 	lds	r19, 0x04ED	; 0x8004ed <__brkval+0x1>
    694a:	23 2b       	or	r18, r19
    694c:	41 f4       	brne	.+16     	; 0x695e <malloc+0xcc>
    694e:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    6952:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    6956:	30 93 ed 04 	sts	0x04ED, r19	; 0x8004ed <__brkval+0x1>
    695a:	20 93 ec 04 	sts	0x04EC, r18	; 0x8004ec <__brkval>
    695e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    6962:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    6966:	21 15       	cp	r18, r1
    6968:	31 05       	cpc	r19, r1
    696a:	41 f4       	brne	.+16     	; 0x697c <malloc+0xea>
    696c:	2d b7       	in	r18, 0x3d	; 61
    696e:	3e b7       	in	r19, 0x3e	; 62
    6970:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    6974:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    6978:	24 1b       	sub	r18, r20
    697a:	35 0b       	sbc	r19, r21
    697c:	e0 91 ec 04 	lds	r30, 0x04EC	; 0x8004ec <__brkval>
    6980:	f0 91 ed 04 	lds	r31, 0x04ED	; 0x8004ed <__brkval+0x1>
    6984:	e2 17       	cp	r30, r18
    6986:	f3 07       	cpc	r31, r19
    6988:	a0 f4       	brcc	.+40     	; 0x69b2 <malloc+0x120>
    698a:	2e 1b       	sub	r18, r30
    698c:	3f 0b       	sbc	r19, r31
    698e:	28 17       	cp	r18, r24
    6990:	39 07       	cpc	r19, r25
    6992:	78 f0       	brcs	.+30     	; 0x69b2 <malloc+0x120>
    6994:	ac 01       	movw	r20, r24
    6996:	4e 5f       	subi	r20, 0xFE	; 254
    6998:	5f 4f       	sbci	r21, 0xFF	; 255
    699a:	24 17       	cp	r18, r20
    699c:	35 07       	cpc	r19, r21
    699e:	48 f0       	brcs	.+18     	; 0x69b2 <malloc+0x120>
    69a0:	4e 0f       	add	r20, r30
    69a2:	5f 1f       	adc	r21, r31
    69a4:	50 93 ed 04 	sts	0x04ED, r21	; 0x8004ed <__brkval+0x1>
    69a8:	40 93 ec 04 	sts	0x04EC, r20	; 0x8004ec <__brkval>
    69ac:	81 93       	st	Z+, r24
    69ae:	91 93       	st	Z+, r25
    69b0:	02 c0       	rjmp	.+4      	; 0x69b6 <malloc+0x124>
    69b2:	e0 e0       	ldi	r30, 0x00	; 0
    69b4:	f0 e0       	ldi	r31, 0x00	; 0
    69b6:	cf 01       	movw	r24, r30
    69b8:	df 91       	pop	r29
    69ba:	cf 91       	pop	r28
    69bc:	1f 91       	pop	r17
    69be:	0f 91       	pop	r16
    69c0:	08 95       	ret

000069c2 <free>:
    69c2:	cf 93       	push	r28
    69c4:	df 93       	push	r29
    69c6:	00 97       	sbiw	r24, 0x00	; 0
    69c8:	09 f4       	brne	.+2      	; 0x69cc <free+0xa>
    69ca:	81 c0       	rjmp	.+258    	; 0x6ace <free+0x10c>
    69cc:	fc 01       	movw	r30, r24
    69ce:	32 97       	sbiw	r30, 0x02	; 2
    69d0:	13 82       	std	Z+3, r1	; 0x03
    69d2:	12 82       	std	Z+2, r1	; 0x02
    69d4:	a0 91 ee 04 	lds	r26, 0x04EE	; 0x8004ee <__flp>
    69d8:	b0 91 ef 04 	lds	r27, 0x04EF	; 0x8004ef <__flp+0x1>
    69dc:	10 97       	sbiw	r26, 0x00	; 0
    69de:	81 f4       	brne	.+32     	; 0x6a00 <free+0x3e>
    69e0:	20 81       	ld	r18, Z
    69e2:	31 81       	ldd	r19, Z+1	; 0x01
    69e4:	82 0f       	add	r24, r18
    69e6:	93 1f       	adc	r25, r19
    69e8:	20 91 ec 04 	lds	r18, 0x04EC	; 0x8004ec <__brkval>
    69ec:	30 91 ed 04 	lds	r19, 0x04ED	; 0x8004ed <__brkval+0x1>
    69f0:	28 17       	cp	r18, r24
    69f2:	39 07       	cpc	r19, r25
    69f4:	51 f5       	brne	.+84     	; 0x6a4a <free+0x88>
    69f6:	f0 93 ed 04 	sts	0x04ED, r31	; 0x8004ed <__brkval+0x1>
    69fa:	e0 93 ec 04 	sts	0x04EC, r30	; 0x8004ec <__brkval>
    69fe:	67 c0       	rjmp	.+206    	; 0x6ace <free+0x10c>
    6a00:	ed 01       	movw	r28, r26
    6a02:	20 e0       	ldi	r18, 0x00	; 0
    6a04:	30 e0       	ldi	r19, 0x00	; 0
    6a06:	ce 17       	cp	r28, r30
    6a08:	df 07       	cpc	r29, r31
    6a0a:	40 f4       	brcc	.+16     	; 0x6a1c <free+0x5a>
    6a0c:	4a 81       	ldd	r20, Y+2	; 0x02
    6a0e:	5b 81       	ldd	r21, Y+3	; 0x03
    6a10:	9e 01       	movw	r18, r28
    6a12:	41 15       	cp	r20, r1
    6a14:	51 05       	cpc	r21, r1
    6a16:	f1 f0       	breq	.+60     	; 0x6a54 <free+0x92>
    6a18:	ea 01       	movw	r28, r20
    6a1a:	f5 cf       	rjmp	.-22     	; 0x6a06 <free+0x44>
    6a1c:	d3 83       	std	Z+3, r29	; 0x03
    6a1e:	c2 83       	std	Z+2, r28	; 0x02
    6a20:	40 81       	ld	r20, Z
    6a22:	51 81       	ldd	r21, Z+1	; 0x01
    6a24:	84 0f       	add	r24, r20
    6a26:	95 1f       	adc	r25, r21
    6a28:	c8 17       	cp	r28, r24
    6a2a:	d9 07       	cpc	r29, r25
    6a2c:	59 f4       	brne	.+22     	; 0x6a44 <free+0x82>
    6a2e:	88 81       	ld	r24, Y
    6a30:	99 81       	ldd	r25, Y+1	; 0x01
    6a32:	84 0f       	add	r24, r20
    6a34:	95 1f       	adc	r25, r21
    6a36:	02 96       	adiw	r24, 0x02	; 2
    6a38:	91 83       	std	Z+1, r25	; 0x01
    6a3a:	80 83       	st	Z, r24
    6a3c:	8a 81       	ldd	r24, Y+2	; 0x02
    6a3e:	9b 81       	ldd	r25, Y+3	; 0x03
    6a40:	93 83       	std	Z+3, r25	; 0x03
    6a42:	82 83       	std	Z+2, r24	; 0x02
    6a44:	21 15       	cp	r18, r1
    6a46:	31 05       	cpc	r19, r1
    6a48:	29 f4       	brne	.+10     	; 0x6a54 <free+0x92>
    6a4a:	f0 93 ef 04 	sts	0x04EF, r31	; 0x8004ef <__flp+0x1>
    6a4e:	e0 93 ee 04 	sts	0x04EE, r30	; 0x8004ee <__flp>
    6a52:	3d c0       	rjmp	.+122    	; 0x6ace <free+0x10c>
    6a54:	e9 01       	movw	r28, r18
    6a56:	fb 83       	std	Y+3, r31	; 0x03
    6a58:	ea 83       	std	Y+2, r30	; 0x02
    6a5a:	49 91       	ld	r20, Y+
    6a5c:	59 91       	ld	r21, Y+
    6a5e:	c4 0f       	add	r28, r20
    6a60:	d5 1f       	adc	r29, r21
    6a62:	ec 17       	cp	r30, r28
    6a64:	fd 07       	cpc	r31, r29
    6a66:	61 f4       	brne	.+24     	; 0x6a80 <free+0xbe>
    6a68:	80 81       	ld	r24, Z
    6a6a:	91 81       	ldd	r25, Z+1	; 0x01
    6a6c:	84 0f       	add	r24, r20
    6a6e:	95 1f       	adc	r25, r21
    6a70:	02 96       	adiw	r24, 0x02	; 2
    6a72:	e9 01       	movw	r28, r18
    6a74:	99 83       	std	Y+1, r25	; 0x01
    6a76:	88 83       	st	Y, r24
    6a78:	82 81       	ldd	r24, Z+2	; 0x02
    6a7a:	93 81       	ldd	r25, Z+3	; 0x03
    6a7c:	9b 83       	std	Y+3, r25	; 0x03
    6a7e:	8a 83       	std	Y+2, r24	; 0x02
    6a80:	e0 e0       	ldi	r30, 0x00	; 0
    6a82:	f0 e0       	ldi	r31, 0x00	; 0
    6a84:	12 96       	adiw	r26, 0x02	; 2
    6a86:	8d 91       	ld	r24, X+
    6a88:	9c 91       	ld	r25, X
    6a8a:	13 97       	sbiw	r26, 0x03	; 3
    6a8c:	00 97       	sbiw	r24, 0x00	; 0
    6a8e:	19 f0       	breq	.+6      	; 0x6a96 <free+0xd4>
    6a90:	fd 01       	movw	r30, r26
    6a92:	dc 01       	movw	r26, r24
    6a94:	f7 cf       	rjmp	.-18     	; 0x6a84 <free+0xc2>
    6a96:	8d 91       	ld	r24, X+
    6a98:	9c 91       	ld	r25, X
    6a9a:	11 97       	sbiw	r26, 0x01	; 1
    6a9c:	9d 01       	movw	r18, r26
    6a9e:	2e 5f       	subi	r18, 0xFE	; 254
    6aa0:	3f 4f       	sbci	r19, 0xFF	; 255
    6aa2:	82 0f       	add	r24, r18
    6aa4:	93 1f       	adc	r25, r19
    6aa6:	20 91 ec 04 	lds	r18, 0x04EC	; 0x8004ec <__brkval>
    6aaa:	30 91 ed 04 	lds	r19, 0x04ED	; 0x8004ed <__brkval+0x1>
    6aae:	28 17       	cp	r18, r24
    6ab0:	39 07       	cpc	r19, r25
    6ab2:	69 f4       	brne	.+26     	; 0x6ace <free+0x10c>
    6ab4:	30 97       	sbiw	r30, 0x00	; 0
    6ab6:	29 f4       	brne	.+10     	; 0x6ac2 <free+0x100>
    6ab8:	10 92 ef 04 	sts	0x04EF, r1	; 0x8004ef <__flp+0x1>
    6abc:	10 92 ee 04 	sts	0x04EE, r1	; 0x8004ee <__flp>
    6ac0:	02 c0       	rjmp	.+4      	; 0x6ac6 <free+0x104>
    6ac2:	13 82       	std	Z+3, r1	; 0x03
    6ac4:	12 82       	std	Z+2, r1	; 0x02
    6ac6:	b0 93 ed 04 	sts	0x04ED, r27	; 0x8004ed <__brkval+0x1>
    6aca:	a0 93 ec 04 	sts	0x04EC, r26	; 0x8004ec <__brkval>
    6ace:	df 91       	pop	r29
    6ad0:	cf 91       	pop	r28
    6ad2:	08 95       	ret

00006ad4 <realloc>:
    6ad4:	a0 e0       	ldi	r26, 0x00	; 0
    6ad6:	b0 e0       	ldi	r27, 0x00	; 0
    6ad8:	e0 e7       	ldi	r30, 0x70	; 112
    6ada:	f5 e3       	ldi	r31, 0x35	; 53
    6adc:	0c 94 29 3b 	jmp	0x7652	; 0x7652 <__prologue_saves__+0x8>
    6ae0:	ec 01       	movw	r28, r24
    6ae2:	00 97       	sbiw	r24, 0x00	; 0
    6ae4:	21 f4       	brne	.+8      	; 0x6aee <realloc+0x1a>
    6ae6:	cb 01       	movw	r24, r22
    6ae8:	0e 94 49 34 	call	0x6892	; 0x6892 <malloc>
    6aec:	b4 c0       	rjmp	.+360    	; 0x6c56 <realloc+0x182>
    6aee:	fc 01       	movw	r30, r24
    6af0:	e6 0f       	add	r30, r22
    6af2:	f7 1f       	adc	r31, r23
    6af4:	9c 01       	movw	r18, r24
    6af6:	22 50       	subi	r18, 0x02	; 2
    6af8:	31 09       	sbc	r19, r1
    6afa:	e2 17       	cp	r30, r18
    6afc:	f3 07       	cpc	r31, r19
    6afe:	08 f4       	brcc	.+2      	; 0x6b02 <realloc+0x2e>
    6b00:	a8 c0       	rjmp	.+336    	; 0x6c52 <realloc+0x17e>
    6b02:	d9 01       	movw	r26, r18
    6b04:	0d 91       	ld	r16, X+
    6b06:	1c 91       	ld	r17, X
    6b08:	11 97       	sbiw	r26, 0x01	; 1
    6b0a:	06 17       	cp	r16, r22
    6b0c:	17 07       	cpc	r17, r23
    6b0e:	b0 f0       	brcs	.+44     	; 0x6b3c <realloc+0x68>
    6b10:	05 30       	cpi	r16, 0x05	; 5
    6b12:	11 05       	cpc	r17, r1
    6b14:	08 f4       	brcc	.+2      	; 0x6b18 <realloc+0x44>
    6b16:	9b c0       	rjmp	.+310    	; 0x6c4e <realloc+0x17a>
    6b18:	c8 01       	movw	r24, r16
    6b1a:	04 97       	sbiw	r24, 0x04	; 4
    6b1c:	86 17       	cp	r24, r22
    6b1e:	97 07       	cpc	r25, r23
    6b20:	08 f4       	brcc	.+2      	; 0x6b24 <realloc+0x50>
    6b22:	95 c0       	rjmp	.+298    	; 0x6c4e <realloc+0x17a>
    6b24:	02 50       	subi	r16, 0x02	; 2
    6b26:	11 09       	sbc	r17, r1
    6b28:	06 1b       	sub	r16, r22
    6b2a:	17 0b       	sbc	r17, r23
    6b2c:	01 93       	st	Z+, r16
    6b2e:	11 93       	st	Z+, r17
    6b30:	6d 93       	st	X+, r22
    6b32:	7c 93       	st	X, r23
    6b34:	cf 01       	movw	r24, r30
    6b36:	0e 94 e1 34 	call	0x69c2	; 0x69c2 <free>
    6b3a:	89 c0       	rjmp	.+274    	; 0x6c4e <realloc+0x17a>
    6b3c:	5b 01       	movw	r10, r22
    6b3e:	a0 1a       	sub	r10, r16
    6b40:	b1 0a       	sbc	r11, r17
    6b42:	4c 01       	movw	r8, r24
    6b44:	80 0e       	add	r8, r16
    6b46:	91 1e       	adc	r9, r17
    6b48:	a0 91 ee 04 	lds	r26, 0x04EE	; 0x8004ee <__flp>
    6b4c:	b0 91 ef 04 	lds	r27, 0x04EF	; 0x8004ef <__flp+0x1>
    6b50:	61 2c       	mov	r6, r1
    6b52:	71 2c       	mov	r7, r1
    6b54:	e1 2c       	mov	r14, r1
    6b56:	f1 2c       	mov	r15, r1
    6b58:	10 97       	sbiw	r26, 0x00	; 0
    6b5a:	09 f4       	brne	.+2      	; 0x6b5e <realloc+0x8a>
    6b5c:	46 c0       	rjmp	.+140    	; 0x6bea <realloc+0x116>
    6b5e:	8d 91       	ld	r24, X+
    6b60:	9c 91       	ld	r25, X
    6b62:	11 97       	sbiw	r26, 0x01	; 1
    6b64:	a8 15       	cp	r26, r8
    6b66:	b9 05       	cpc	r27, r9
    6b68:	b1 f5       	brne	.+108    	; 0x6bd6 <realloc+0x102>
    6b6a:	6c 01       	movw	r12, r24
    6b6c:	42 e0       	ldi	r20, 0x02	; 2
    6b6e:	c4 0e       	add	r12, r20
    6b70:	d1 1c       	adc	r13, r1
    6b72:	ca 14       	cp	r12, r10
    6b74:	db 04       	cpc	r13, r11
    6b76:	78 f1       	brcs	.+94     	; 0x6bd6 <realloc+0x102>
    6b78:	4c 01       	movw	r8, r24
    6b7a:	8a 18       	sub	r8, r10
    6b7c:	9b 08       	sbc	r9, r11
    6b7e:	64 01       	movw	r12, r8
    6b80:	42 e0       	ldi	r20, 0x02	; 2
    6b82:	c4 0e       	add	r12, r20
    6b84:	d1 1c       	adc	r13, r1
    6b86:	12 96       	adiw	r26, 0x02	; 2
    6b88:	bc 90       	ld	r11, X
    6b8a:	12 97       	sbiw	r26, 0x02	; 2
    6b8c:	13 96       	adiw	r26, 0x03	; 3
    6b8e:	ac 91       	ld	r26, X
    6b90:	b5 e0       	ldi	r27, 0x05	; 5
    6b92:	cb 16       	cp	r12, r27
    6b94:	d1 04       	cpc	r13, r1
    6b96:	40 f0       	brcs	.+16     	; 0x6ba8 <realloc+0xd4>
    6b98:	b2 82       	std	Z+2, r11	; 0x02
    6b9a:	a3 83       	std	Z+3, r26	; 0x03
    6b9c:	91 82       	std	Z+1, r9	; 0x01
    6b9e:	80 82       	st	Z, r8
    6ba0:	d9 01       	movw	r26, r18
    6ba2:	6d 93       	st	X+, r22
    6ba4:	7c 93       	st	X, r23
    6ba6:	09 c0       	rjmp	.+18     	; 0x6bba <realloc+0xe6>
    6ba8:	0e 5f       	subi	r16, 0xFE	; 254
    6baa:	1f 4f       	sbci	r17, 0xFF	; 255
    6bac:	80 0f       	add	r24, r16
    6bae:	91 1f       	adc	r25, r17
    6bb0:	f9 01       	movw	r30, r18
    6bb2:	91 83       	std	Z+1, r25	; 0x01
    6bb4:	80 83       	st	Z, r24
    6bb6:	eb 2d       	mov	r30, r11
    6bb8:	fa 2f       	mov	r31, r26
    6bba:	e1 14       	cp	r14, r1
    6bbc:	f1 04       	cpc	r15, r1
    6bbe:	31 f0       	breq	.+12     	; 0x6bcc <realloc+0xf8>
    6bc0:	d7 01       	movw	r26, r14
    6bc2:	13 96       	adiw	r26, 0x03	; 3
    6bc4:	fc 93       	st	X, r31
    6bc6:	ee 93       	st	-X, r30
    6bc8:	12 97       	sbiw	r26, 0x02	; 2
    6bca:	41 c0       	rjmp	.+130    	; 0x6c4e <realloc+0x17a>
    6bcc:	f0 93 ef 04 	sts	0x04EF, r31	; 0x8004ef <__flp+0x1>
    6bd0:	e0 93 ee 04 	sts	0x04EE, r30	; 0x8004ee <__flp>
    6bd4:	3c c0       	rjmp	.+120    	; 0x6c4e <realloc+0x17a>
    6bd6:	68 16       	cp	r6, r24
    6bd8:	79 06       	cpc	r7, r25
    6bda:	08 f4       	brcc	.+2      	; 0x6bde <realloc+0x10a>
    6bdc:	3c 01       	movw	r6, r24
    6bde:	7d 01       	movw	r14, r26
    6be0:	12 96       	adiw	r26, 0x02	; 2
    6be2:	0d 90       	ld	r0, X+
    6be4:	bc 91       	ld	r27, X
    6be6:	a0 2d       	mov	r26, r0
    6be8:	b7 cf       	rjmp	.-146    	; 0x6b58 <realloc+0x84>
    6bea:	80 91 ec 04 	lds	r24, 0x04EC	; 0x8004ec <__brkval>
    6bee:	90 91 ed 04 	lds	r25, 0x04ED	; 0x8004ed <__brkval+0x1>
    6bf2:	88 16       	cp	r8, r24
    6bf4:	99 06       	cpc	r9, r25
    6bf6:	e1 f4       	brne	.+56     	; 0x6c30 <realloc+0x15c>
    6bf8:	66 16       	cp	r6, r22
    6bfa:	77 06       	cpc	r7, r23
    6bfc:	c8 f4       	brcc	.+50     	; 0x6c30 <realloc+0x15c>
    6bfe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    6c02:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    6c06:	00 97       	sbiw	r24, 0x00	; 0
    6c08:	41 f4       	brne	.+16     	; 0x6c1a <realloc+0x146>
    6c0a:	8d b7       	in	r24, 0x3d	; 61
    6c0c:	9e b7       	in	r25, 0x3e	; 62
    6c0e:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    6c12:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    6c16:	84 1b       	sub	r24, r20
    6c18:	95 0b       	sbc	r25, r21
    6c1a:	e8 17       	cp	r30, r24
    6c1c:	f9 07       	cpc	r31, r25
    6c1e:	c8 f4       	brcc	.+50     	; 0x6c52 <realloc+0x17e>
    6c20:	f0 93 ed 04 	sts	0x04ED, r31	; 0x8004ed <__brkval+0x1>
    6c24:	e0 93 ec 04 	sts	0x04EC, r30	; 0x8004ec <__brkval>
    6c28:	f9 01       	movw	r30, r18
    6c2a:	71 83       	std	Z+1, r23	; 0x01
    6c2c:	60 83       	st	Z, r22
    6c2e:	0f c0       	rjmp	.+30     	; 0x6c4e <realloc+0x17a>
    6c30:	cb 01       	movw	r24, r22
    6c32:	0e 94 49 34 	call	0x6892	; 0x6892 <malloc>
    6c36:	7c 01       	movw	r14, r24
    6c38:	00 97       	sbiw	r24, 0x00	; 0
    6c3a:	59 f0       	breq	.+22     	; 0x6c52 <realloc+0x17e>
    6c3c:	a8 01       	movw	r20, r16
    6c3e:	be 01       	movw	r22, r28
    6c40:	0e 94 30 36 	call	0x6c60	; 0x6c60 <memcpy>
    6c44:	ce 01       	movw	r24, r28
    6c46:	0e 94 e1 34 	call	0x69c2	; 0x69c2 <free>
    6c4a:	c7 01       	movw	r24, r14
    6c4c:	04 c0       	rjmp	.+8      	; 0x6c56 <realloc+0x182>
    6c4e:	ce 01       	movw	r24, r28
    6c50:	02 c0       	rjmp	.+4      	; 0x6c56 <realloc+0x182>
    6c52:	80 e0       	ldi	r24, 0x00	; 0
    6c54:	90 e0       	ldi	r25, 0x00	; 0
    6c56:	cd b7       	in	r28, 0x3d	; 61
    6c58:	de b7       	in	r29, 0x3e	; 62
    6c5a:	ee e0       	ldi	r30, 0x0E	; 14
    6c5c:	0c 94 45 3b 	jmp	0x768a	; 0x768a <__epilogue_restores__+0x8>

00006c60 <memcpy>:
    6c60:	fb 01       	movw	r30, r22
    6c62:	dc 01       	movw	r26, r24
    6c64:	02 c0       	rjmp	.+4      	; 0x6c6a <memcpy+0xa>
    6c66:	01 90       	ld	r0, Z+
    6c68:	0d 92       	st	X+, r0
    6c6a:	41 50       	subi	r20, 0x01	; 1
    6c6c:	50 40       	sbci	r21, 0x00	; 0
    6c6e:	d8 f7       	brcc	.-10     	; 0x6c66 <memcpy+0x6>
    6c70:	08 95       	ret

00006c72 <strcpy>:
    6c72:	fb 01       	movw	r30, r22
    6c74:	dc 01       	movw	r26, r24
    6c76:	01 90       	ld	r0, Z+
    6c78:	0d 92       	st	X+, r0
    6c7a:	00 20       	and	r0, r0
    6c7c:	e1 f7       	brne	.-8      	; 0x6c76 <strcpy+0x4>
    6c7e:	08 95       	ret

00006c80 <sprintf>:
    6c80:	ae e0       	ldi	r26, 0x0E	; 14
    6c82:	b0 e0       	ldi	r27, 0x00	; 0
    6c84:	e6 e4       	ldi	r30, 0x46	; 70
    6c86:	f6 e3       	ldi	r31, 0x36	; 54
    6c88:	0c 94 33 3b 	jmp	0x7666	; 0x7666 <__prologue_saves__+0x1c>
    6c8c:	0d 89       	ldd	r16, Y+21	; 0x15
    6c8e:	1e 89       	ldd	r17, Y+22	; 0x16
    6c90:	86 e0       	ldi	r24, 0x06	; 6
    6c92:	8c 83       	std	Y+4, r24	; 0x04
    6c94:	1a 83       	std	Y+2, r17	; 0x02
    6c96:	09 83       	std	Y+1, r16	; 0x01
    6c98:	8f ef       	ldi	r24, 0xFF	; 255
    6c9a:	9f e7       	ldi	r25, 0x7F	; 127
    6c9c:	9e 83       	std	Y+6, r25	; 0x06
    6c9e:	8d 83       	std	Y+5, r24	; 0x05
    6ca0:	ae 01       	movw	r20, r28
    6ca2:	47 5e       	subi	r20, 0xE7	; 231
    6ca4:	5f 4f       	sbci	r21, 0xFF	; 255
    6ca6:	6f 89       	ldd	r22, Y+23	; 0x17
    6ca8:	78 8d       	ldd	r23, Y+24	; 0x18
    6caa:	ce 01       	movw	r24, r28
    6cac:	01 96       	adiw	r24, 0x01	; 1
    6cae:	0e 94 62 36 	call	0x6cc4	; 0x6cc4 <vfprintf>
    6cb2:	ef 81       	ldd	r30, Y+7	; 0x07
    6cb4:	f8 85       	ldd	r31, Y+8	; 0x08
    6cb6:	e0 0f       	add	r30, r16
    6cb8:	f1 1f       	adc	r31, r17
    6cba:	10 82       	st	Z, r1
    6cbc:	2e 96       	adiw	r28, 0x0e	; 14
    6cbe:	e4 e0       	ldi	r30, 0x04	; 4
    6cc0:	0c 94 4f 3b 	jmp	0x769e	; 0x769e <__epilogue_restores__+0x1c>

00006cc4 <vfprintf>:
    6cc4:	ab e0       	ldi	r26, 0x0B	; 11
    6cc6:	b0 e0       	ldi	r27, 0x00	; 0
    6cc8:	e8 e6       	ldi	r30, 0x68	; 104
    6cca:	f6 e3       	ldi	r31, 0x36	; 54
    6ccc:	0c 94 25 3b 	jmp	0x764a	; 0x764a <__prologue_saves__>
    6cd0:	6c 01       	movw	r12, r24
    6cd2:	7b 01       	movw	r14, r22
    6cd4:	8a 01       	movw	r16, r20
    6cd6:	fc 01       	movw	r30, r24
    6cd8:	17 82       	std	Z+7, r1	; 0x07
    6cda:	16 82       	std	Z+6, r1	; 0x06
    6cdc:	83 81       	ldd	r24, Z+3	; 0x03
    6cde:	81 ff       	sbrs	r24, 1
    6ce0:	cc c1       	rjmp	.+920    	; 0x707a <vfprintf+0x3b6>
    6ce2:	ce 01       	movw	r24, r28
    6ce4:	01 96       	adiw	r24, 0x01	; 1
    6ce6:	3c 01       	movw	r6, r24
    6ce8:	f6 01       	movw	r30, r12
    6cea:	93 81       	ldd	r25, Z+3	; 0x03
    6cec:	f7 01       	movw	r30, r14
    6cee:	93 fd       	sbrc	r25, 3
    6cf0:	85 91       	lpm	r24, Z+
    6cf2:	93 ff       	sbrs	r25, 3
    6cf4:	81 91       	ld	r24, Z+
    6cf6:	7f 01       	movw	r14, r30
    6cf8:	88 23       	and	r24, r24
    6cfa:	09 f4       	brne	.+2      	; 0x6cfe <vfprintf+0x3a>
    6cfc:	ba c1       	rjmp	.+884    	; 0x7072 <vfprintf+0x3ae>
    6cfe:	85 32       	cpi	r24, 0x25	; 37
    6d00:	39 f4       	brne	.+14     	; 0x6d10 <vfprintf+0x4c>
    6d02:	93 fd       	sbrc	r25, 3
    6d04:	85 91       	lpm	r24, Z+
    6d06:	93 ff       	sbrs	r25, 3
    6d08:	81 91       	ld	r24, Z+
    6d0a:	7f 01       	movw	r14, r30
    6d0c:	85 32       	cpi	r24, 0x25	; 37
    6d0e:	29 f4       	brne	.+10     	; 0x6d1a <vfprintf+0x56>
    6d10:	b6 01       	movw	r22, r12
    6d12:	90 e0       	ldi	r25, 0x00	; 0
    6d14:	0e 94 8b 3a 	call	0x7516	; 0x7516 <fputc>
    6d18:	e7 cf       	rjmp	.-50     	; 0x6ce8 <vfprintf+0x24>
    6d1a:	91 2c       	mov	r9, r1
    6d1c:	21 2c       	mov	r2, r1
    6d1e:	31 2c       	mov	r3, r1
    6d20:	ff e1       	ldi	r31, 0x1F	; 31
    6d22:	f3 15       	cp	r31, r3
    6d24:	d8 f0       	brcs	.+54     	; 0x6d5c <vfprintf+0x98>
    6d26:	8b 32       	cpi	r24, 0x2B	; 43
    6d28:	79 f0       	breq	.+30     	; 0x6d48 <vfprintf+0x84>
    6d2a:	38 f4       	brcc	.+14     	; 0x6d3a <vfprintf+0x76>
    6d2c:	80 32       	cpi	r24, 0x20	; 32
    6d2e:	79 f0       	breq	.+30     	; 0x6d4e <vfprintf+0x8a>
    6d30:	83 32       	cpi	r24, 0x23	; 35
    6d32:	a1 f4       	brne	.+40     	; 0x6d5c <vfprintf+0x98>
    6d34:	23 2d       	mov	r18, r3
    6d36:	20 61       	ori	r18, 0x10	; 16
    6d38:	1d c0       	rjmp	.+58     	; 0x6d74 <vfprintf+0xb0>
    6d3a:	8d 32       	cpi	r24, 0x2D	; 45
    6d3c:	61 f0       	breq	.+24     	; 0x6d56 <vfprintf+0x92>
    6d3e:	80 33       	cpi	r24, 0x30	; 48
    6d40:	69 f4       	brne	.+26     	; 0x6d5c <vfprintf+0x98>
    6d42:	23 2d       	mov	r18, r3
    6d44:	21 60       	ori	r18, 0x01	; 1
    6d46:	16 c0       	rjmp	.+44     	; 0x6d74 <vfprintf+0xb0>
    6d48:	83 2d       	mov	r24, r3
    6d4a:	82 60       	ori	r24, 0x02	; 2
    6d4c:	38 2e       	mov	r3, r24
    6d4e:	e3 2d       	mov	r30, r3
    6d50:	e4 60       	ori	r30, 0x04	; 4
    6d52:	3e 2e       	mov	r3, r30
    6d54:	2a c0       	rjmp	.+84     	; 0x6daa <vfprintf+0xe6>
    6d56:	f3 2d       	mov	r31, r3
    6d58:	f8 60       	ori	r31, 0x08	; 8
    6d5a:	1d c0       	rjmp	.+58     	; 0x6d96 <vfprintf+0xd2>
    6d5c:	37 fc       	sbrc	r3, 7
    6d5e:	2d c0       	rjmp	.+90     	; 0x6dba <vfprintf+0xf6>
    6d60:	20 ed       	ldi	r18, 0xD0	; 208
    6d62:	28 0f       	add	r18, r24
    6d64:	2a 30       	cpi	r18, 0x0A	; 10
    6d66:	40 f0       	brcs	.+16     	; 0x6d78 <vfprintf+0xb4>
    6d68:	8e 32       	cpi	r24, 0x2E	; 46
    6d6a:	b9 f4       	brne	.+46     	; 0x6d9a <vfprintf+0xd6>
    6d6c:	36 fc       	sbrc	r3, 6
    6d6e:	81 c1       	rjmp	.+770    	; 0x7072 <vfprintf+0x3ae>
    6d70:	23 2d       	mov	r18, r3
    6d72:	20 64       	ori	r18, 0x40	; 64
    6d74:	32 2e       	mov	r3, r18
    6d76:	19 c0       	rjmp	.+50     	; 0x6daa <vfprintf+0xe6>
    6d78:	36 fe       	sbrs	r3, 6
    6d7a:	06 c0       	rjmp	.+12     	; 0x6d88 <vfprintf+0xc4>
    6d7c:	8a e0       	ldi	r24, 0x0A	; 10
    6d7e:	98 9e       	mul	r9, r24
    6d80:	20 0d       	add	r18, r0
    6d82:	11 24       	eor	r1, r1
    6d84:	92 2e       	mov	r9, r18
    6d86:	11 c0       	rjmp	.+34     	; 0x6daa <vfprintf+0xe6>
    6d88:	ea e0       	ldi	r30, 0x0A	; 10
    6d8a:	2e 9e       	mul	r2, r30
    6d8c:	20 0d       	add	r18, r0
    6d8e:	11 24       	eor	r1, r1
    6d90:	22 2e       	mov	r2, r18
    6d92:	f3 2d       	mov	r31, r3
    6d94:	f0 62       	ori	r31, 0x20	; 32
    6d96:	3f 2e       	mov	r3, r31
    6d98:	08 c0       	rjmp	.+16     	; 0x6daa <vfprintf+0xe6>
    6d9a:	8c 36       	cpi	r24, 0x6C	; 108
    6d9c:	21 f4       	brne	.+8      	; 0x6da6 <vfprintf+0xe2>
    6d9e:	83 2d       	mov	r24, r3
    6da0:	80 68       	ori	r24, 0x80	; 128
    6da2:	38 2e       	mov	r3, r24
    6da4:	02 c0       	rjmp	.+4      	; 0x6daa <vfprintf+0xe6>
    6da6:	88 36       	cpi	r24, 0x68	; 104
    6da8:	41 f4       	brne	.+16     	; 0x6dba <vfprintf+0xf6>
    6daa:	f7 01       	movw	r30, r14
    6dac:	93 fd       	sbrc	r25, 3
    6dae:	85 91       	lpm	r24, Z+
    6db0:	93 ff       	sbrs	r25, 3
    6db2:	81 91       	ld	r24, Z+
    6db4:	7f 01       	movw	r14, r30
    6db6:	81 11       	cpse	r24, r1
    6db8:	b3 cf       	rjmp	.-154    	; 0x6d20 <vfprintf+0x5c>
    6dba:	98 2f       	mov	r25, r24
    6dbc:	9f 7d       	andi	r25, 0xDF	; 223
    6dbe:	95 54       	subi	r25, 0x45	; 69
    6dc0:	93 30       	cpi	r25, 0x03	; 3
    6dc2:	28 f4       	brcc	.+10     	; 0x6dce <vfprintf+0x10a>
    6dc4:	0c 5f       	subi	r16, 0xFC	; 252
    6dc6:	1f 4f       	sbci	r17, 0xFF	; 255
    6dc8:	9f e3       	ldi	r25, 0x3F	; 63
    6dca:	99 83       	std	Y+1, r25	; 0x01
    6dcc:	0d c0       	rjmp	.+26     	; 0x6de8 <vfprintf+0x124>
    6dce:	83 36       	cpi	r24, 0x63	; 99
    6dd0:	31 f0       	breq	.+12     	; 0x6dde <vfprintf+0x11a>
    6dd2:	83 37       	cpi	r24, 0x73	; 115
    6dd4:	71 f0       	breq	.+28     	; 0x6df2 <vfprintf+0x12e>
    6dd6:	83 35       	cpi	r24, 0x53	; 83
    6dd8:	09 f0       	breq	.+2      	; 0x6ddc <vfprintf+0x118>
    6dda:	59 c0       	rjmp	.+178    	; 0x6e8e <vfprintf+0x1ca>
    6ddc:	21 c0       	rjmp	.+66     	; 0x6e20 <vfprintf+0x15c>
    6dde:	f8 01       	movw	r30, r16
    6de0:	80 81       	ld	r24, Z
    6de2:	89 83       	std	Y+1, r24	; 0x01
    6de4:	0e 5f       	subi	r16, 0xFE	; 254
    6de6:	1f 4f       	sbci	r17, 0xFF	; 255
    6de8:	88 24       	eor	r8, r8
    6dea:	83 94       	inc	r8
    6dec:	91 2c       	mov	r9, r1
    6dee:	53 01       	movw	r10, r6
    6df0:	13 c0       	rjmp	.+38     	; 0x6e18 <vfprintf+0x154>
    6df2:	28 01       	movw	r4, r16
    6df4:	f2 e0       	ldi	r31, 0x02	; 2
    6df6:	4f 0e       	add	r4, r31
    6df8:	51 1c       	adc	r5, r1
    6dfa:	f8 01       	movw	r30, r16
    6dfc:	a0 80       	ld	r10, Z
    6dfe:	b1 80       	ldd	r11, Z+1	; 0x01
    6e00:	36 fe       	sbrs	r3, 6
    6e02:	03 c0       	rjmp	.+6      	; 0x6e0a <vfprintf+0x146>
    6e04:	69 2d       	mov	r22, r9
    6e06:	70 e0       	ldi	r23, 0x00	; 0
    6e08:	02 c0       	rjmp	.+4      	; 0x6e0e <vfprintf+0x14a>
    6e0a:	6f ef       	ldi	r22, 0xFF	; 255
    6e0c:	7f ef       	ldi	r23, 0xFF	; 255
    6e0e:	c5 01       	movw	r24, r10
    6e10:	0e 94 80 3a 	call	0x7500	; 0x7500 <strnlen>
    6e14:	4c 01       	movw	r8, r24
    6e16:	82 01       	movw	r16, r4
    6e18:	f3 2d       	mov	r31, r3
    6e1a:	ff 77       	andi	r31, 0x7F	; 127
    6e1c:	3f 2e       	mov	r3, r31
    6e1e:	16 c0       	rjmp	.+44     	; 0x6e4c <vfprintf+0x188>
    6e20:	28 01       	movw	r4, r16
    6e22:	22 e0       	ldi	r18, 0x02	; 2
    6e24:	42 0e       	add	r4, r18
    6e26:	51 1c       	adc	r5, r1
    6e28:	f8 01       	movw	r30, r16
    6e2a:	a0 80       	ld	r10, Z
    6e2c:	b1 80       	ldd	r11, Z+1	; 0x01
    6e2e:	36 fe       	sbrs	r3, 6
    6e30:	03 c0       	rjmp	.+6      	; 0x6e38 <vfprintf+0x174>
    6e32:	69 2d       	mov	r22, r9
    6e34:	70 e0       	ldi	r23, 0x00	; 0
    6e36:	02 c0       	rjmp	.+4      	; 0x6e3c <vfprintf+0x178>
    6e38:	6f ef       	ldi	r22, 0xFF	; 255
    6e3a:	7f ef       	ldi	r23, 0xFF	; 255
    6e3c:	c5 01       	movw	r24, r10
    6e3e:	0e 94 75 3a 	call	0x74ea	; 0x74ea <strnlen_P>
    6e42:	4c 01       	movw	r8, r24
    6e44:	f3 2d       	mov	r31, r3
    6e46:	f0 68       	ori	r31, 0x80	; 128
    6e48:	3f 2e       	mov	r3, r31
    6e4a:	82 01       	movw	r16, r4
    6e4c:	33 fc       	sbrc	r3, 3
    6e4e:	1b c0       	rjmp	.+54     	; 0x6e86 <vfprintf+0x1c2>
    6e50:	82 2d       	mov	r24, r2
    6e52:	90 e0       	ldi	r25, 0x00	; 0
    6e54:	88 16       	cp	r8, r24
    6e56:	99 06       	cpc	r9, r25
    6e58:	b0 f4       	brcc	.+44     	; 0x6e86 <vfprintf+0x1c2>
    6e5a:	b6 01       	movw	r22, r12
    6e5c:	80 e2       	ldi	r24, 0x20	; 32
    6e5e:	90 e0       	ldi	r25, 0x00	; 0
    6e60:	0e 94 8b 3a 	call	0x7516	; 0x7516 <fputc>
    6e64:	2a 94       	dec	r2
    6e66:	f4 cf       	rjmp	.-24     	; 0x6e50 <vfprintf+0x18c>
    6e68:	f5 01       	movw	r30, r10
    6e6a:	37 fc       	sbrc	r3, 7
    6e6c:	85 91       	lpm	r24, Z+
    6e6e:	37 fe       	sbrs	r3, 7
    6e70:	81 91       	ld	r24, Z+
    6e72:	5f 01       	movw	r10, r30
    6e74:	b6 01       	movw	r22, r12
    6e76:	90 e0       	ldi	r25, 0x00	; 0
    6e78:	0e 94 8b 3a 	call	0x7516	; 0x7516 <fputc>
    6e7c:	21 10       	cpse	r2, r1
    6e7e:	2a 94       	dec	r2
    6e80:	21 e0       	ldi	r18, 0x01	; 1
    6e82:	82 1a       	sub	r8, r18
    6e84:	91 08       	sbc	r9, r1
    6e86:	81 14       	cp	r8, r1
    6e88:	91 04       	cpc	r9, r1
    6e8a:	71 f7       	brne	.-36     	; 0x6e68 <vfprintf+0x1a4>
    6e8c:	e8 c0       	rjmp	.+464    	; 0x705e <vfprintf+0x39a>
    6e8e:	84 36       	cpi	r24, 0x64	; 100
    6e90:	11 f0       	breq	.+4      	; 0x6e96 <vfprintf+0x1d2>
    6e92:	89 36       	cpi	r24, 0x69	; 105
    6e94:	41 f5       	brne	.+80     	; 0x6ee6 <vfprintf+0x222>
    6e96:	f8 01       	movw	r30, r16
    6e98:	37 fe       	sbrs	r3, 7
    6e9a:	07 c0       	rjmp	.+14     	; 0x6eaa <vfprintf+0x1e6>
    6e9c:	60 81       	ld	r22, Z
    6e9e:	71 81       	ldd	r23, Z+1	; 0x01
    6ea0:	82 81       	ldd	r24, Z+2	; 0x02
    6ea2:	93 81       	ldd	r25, Z+3	; 0x03
    6ea4:	0c 5f       	subi	r16, 0xFC	; 252
    6ea6:	1f 4f       	sbci	r17, 0xFF	; 255
    6ea8:	08 c0       	rjmp	.+16     	; 0x6eba <vfprintf+0x1f6>
    6eaa:	60 81       	ld	r22, Z
    6eac:	71 81       	ldd	r23, Z+1	; 0x01
    6eae:	07 2e       	mov	r0, r23
    6eb0:	00 0c       	add	r0, r0
    6eb2:	88 0b       	sbc	r24, r24
    6eb4:	99 0b       	sbc	r25, r25
    6eb6:	0e 5f       	subi	r16, 0xFE	; 254
    6eb8:	1f 4f       	sbci	r17, 0xFF	; 255
    6eba:	f3 2d       	mov	r31, r3
    6ebc:	ff 76       	andi	r31, 0x6F	; 111
    6ebe:	3f 2e       	mov	r3, r31
    6ec0:	97 ff       	sbrs	r25, 7
    6ec2:	09 c0       	rjmp	.+18     	; 0x6ed6 <vfprintf+0x212>
    6ec4:	90 95       	com	r25
    6ec6:	80 95       	com	r24
    6ec8:	70 95       	com	r23
    6eca:	61 95       	neg	r22
    6ecc:	7f 4f       	sbci	r23, 0xFF	; 255
    6ece:	8f 4f       	sbci	r24, 0xFF	; 255
    6ed0:	9f 4f       	sbci	r25, 0xFF	; 255
    6ed2:	f0 68       	ori	r31, 0x80	; 128
    6ed4:	3f 2e       	mov	r3, r31
    6ed6:	2a e0       	ldi	r18, 0x0A	; 10
    6ed8:	30 e0       	ldi	r19, 0x00	; 0
    6eda:	a3 01       	movw	r20, r6
    6edc:	0e 94 c7 3a 	call	0x758e	; 0x758e <__ultoa_invert>
    6ee0:	88 2e       	mov	r8, r24
    6ee2:	86 18       	sub	r8, r6
    6ee4:	45 c0       	rjmp	.+138    	; 0x6f70 <vfprintf+0x2ac>
    6ee6:	85 37       	cpi	r24, 0x75	; 117
    6ee8:	31 f4       	brne	.+12     	; 0x6ef6 <vfprintf+0x232>
    6eea:	23 2d       	mov	r18, r3
    6eec:	2f 7e       	andi	r18, 0xEF	; 239
    6eee:	b2 2e       	mov	r11, r18
    6ef0:	2a e0       	ldi	r18, 0x0A	; 10
    6ef2:	30 e0       	ldi	r19, 0x00	; 0
    6ef4:	25 c0       	rjmp	.+74     	; 0x6f40 <vfprintf+0x27c>
    6ef6:	93 2d       	mov	r25, r3
    6ef8:	99 7f       	andi	r25, 0xF9	; 249
    6efa:	b9 2e       	mov	r11, r25
    6efc:	8f 36       	cpi	r24, 0x6F	; 111
    6efe:	c1 f0       	breq	.+48     	; 0x6f30 <vfprintf+0x26c>
    6f00:	18 f4       	brcc	.+6      	; 0x6f08 <vfprintf+0x244>
    6f02:	88 35       	cpi	r24, 0x58	; 88
    6f04:	79 f0       	breq	.+30     	; 0x6f24 <vfprintf+0x260>
    6f06:	b5 c0       	rjmp	.+362    	; 0x7072 <vfprintf+0x3ae>
    6f08:	80 37       	cpi	r24, 0x70	; 112
    6f0a:	19 f0       	breq	.+6      	; 0x6f12 <vfprintf+0x24e>
    6f0c:	88 37       	cpi	r24, 0x78	; 120
    6f0e:	21 f0       	breq	.+8      	; 0x6f18 <vfprintf+0x254>
    6f10:	b0 c0       	rjmp	.+352    	; 0x7072 <vfprintf+0x3ae>
    6f12:	e9 2f       	mov	r30, r25
    6f14:	e0 61       	ori	r30, 0x10	; 16
    6f16:	be 2e       	mov	r11, r30
    6f18:	b4 fe       	sbrs	r11, 4
    6f1a:	0d c0       	rjmp	.+26     	; 0x6f36 <vfprintf+0x272>
    6f1c:	fb 2d       	mov	r31, r11
    6f1e:	f4 60       	ori	r31, 0x04	; 4
    6f20:	bf 2e       	mov	r11, r31
    6f22:	09 c0       	rjmp	.+18     	; 0x6f36 <vfprintf+0x272>
    6f24:	34 fe       	sbrs	r3, 4
    6f26:	0a c0       	rjmp	.+20     	; 0x6f3c <vfprintf+0x278>
    6f28:	29 2f       	mov	r18, r25
    6f2a:	26 60       	ori	r18, 0x06	; 6
    6f2c:	b2 2e       	mov	r11, r18
    6f2e:	06 c0       	rjmp	.+12     	; 0x6f3c <vfprintf+0x278>
    6f30:	28 e0       	ldi	r18, 0x08	; 8
    6f32:	30 e0       	ldi	r19, 0x00	; 0
    6f34:	05 c0       	rjmp	.+10     	; 0x6f40 <vfprintf+0x27c>
    6f36:	20 e1       	ldi	r18, 0x10	; 16
    6f38:	30 e0       	ldi	r19, 0x00	; 0
    6f3a:	02 c0       	rjmp	.+4      	; 0x6f40 <vfprintf+0x27c>
    6f3c:	20 e1       	ldi	r18, 0x10	; 16
    6f3e:	32 e0       	ldi	r19, 0x02	; 2
    6f40:	f8 01       	movw	r30, r16
    6f42:	b7 fe       	sbrs	r11, 7
    6f44:	07 c0       	rjmp	.+14     	; 0x6f54 <vfprintf+0x290>
    6f46:	60 81       	ld	r22, Z
    6f48:	71 81       	ldd	r23, Z+1	; 0x01
    6f4a:	82 81       	ldd	r24, Z+2	; 0x02
    6f4c:	93 81       	ldd	r25, Z+3	; 0x03
    6f4e:	0c 5f       	subi	r16, 0xFC	; 252
    6f50:	1f 4f       	sbci	r17, 0xFF	; 255
    6f52:	06 c0       	rjmp	.+12     	; 0x6f60 <vfprintf+0x29c>
    6f54:	60 81       	ld	r22, Z
    6f56:	71 81       	ldd	r23, Z+1	; 0x01
    6f58:	80 e0       	ldi	r24, 0x00	; 0
    6f5a:	90 e0       	ldi	r25, 0x00	; 0
    6f5c:	0e 5f       	subi	r16, 0xFE	; 254
    6f5e:	1f 4f       	sbci	r17, 0xFF	; 255
    6f60:	a3 01       	movw	r20, r6
    6f62:	0e 94 c7 3a 	call	0x758e	; 0x758e <__ultoa_invert>
    6f66:	88 2e       	mov	r8, r24
    6f68:	86 18       	sub	r8, r6
    6f6a:	fb 2d       	mov	r31, r11
    6f6c:	ff 77       	andi	r31, 0x7F	; 127
    6f6e:	3f 2e       	mov	r3, r31
    6f70:	36 fe       	sbrs	r3, 6
    6f72:	0d c0       	rjmp	.+26     	; 0x6f8e <vfprintf+0x2ca>
    6f74:	23 2d       	mov	r18, r3
    6f76:	2e 7f       	andi	r18, 0xFE	; 254
    6f78:	a2 2e       	mov	r10, r18
    6f7a:	89 14       	cp	r8, r9
    6f7c:	58 f4       	brcc	.+22     	; 0x6f94 <vfprintf+0x2d0>
    6f7e:	34 fe       	sbrs	r3, 4
    6f80:	0b c0       	rjmp	.+22     	; 0x6f98 <vfprintf+0x2d4>
    6f82:	32 fc       	sbrc	r3, 2
    6f84:	09 c0       	rjmp	.+18     	; 0x6f98 <vfprintf+0x2d4>
    6f86:	83 2d       	mov	r24, r3
    6f88:	8e 7e       	andi	r24, 0xEE	; 238
    6f8a:	a8 2e       	mov	r10, r24
    6f8c:	05 c0       	rjmp	.+10     	; 0x6f98 <vfprintf+0x2d4>
    6f8e:	b8 2c       	mov	r11, r8
    6f90:	a3 2c       	mov	r10, r3
    6f92:	03 c0       	rjmp	.+6      	; 0x6f9a <vfprintf+0x2d6>
    6f94:	b8 2c       	mov	r11, r8
    6f96:	01 c0       	rjmp	.+2      	; 0x6f9a <vfprintf+0x2d6>
    6f98:	b9 2c       	mov	r11, r9
    6f9a:	a4 fe       	sbrs	r10, 4
    6f9c:	0f c0       	rjmp	.+30     	; 0x6fbc <vfprintf+0x2f8>
    6f9e:	fe 01       	movw	r30, r28
    6fa0:	e8 0d       	add	r30, r8
    6fa2:	f1 1d       	adc	r31, r1
    6fa4:	80 81       	ld	r24, Z
    6fa6:	80 33       	cpi	r24, 0x30	; 48
    6fa8:	21 f4       	brne	.+8      	; 0x6fb2 <vfprintf+0x2ee>
    6faa:	9a 2d       	mov	r25, r10
    6fac:	99 7e       	andi	r25, 0xE9	; 233
    6fae:	a9 2e       	mov	r10, r25
    6fb0:	09 c0       	rjmp	.+18     	; 0x6fc4 <vfprintf+0x300>
    6fb2:	a2 fe       	sbrs	r10, 2
    6fb4:	06 c0       	rjmp	.+12     	; 0x6fc2 <vfprintf+0x2fe>
    6fb6:	b3 94       	inc	r11
    6fb8:	b3 94       	inc	r11
    6fba:	04 c0       	rjmp	.+8      	; 0x6fc4 <vfprintf+0x300>
    6fbc:	8a 2d       	mov	r24, r10
    6fbe:	86 78       	andi	r24, 0x86	; 134
    6fc0:	09 f0       	breq	.+2      	; 0x6fc4 <vfprintf+0x300>
    6fc2:	b3 94       	inc	r11
    6fc4:	a3 fc       	sbrc	r10, 3
    6fc6:	11 c0       	rjmp	.+34     	; 0x6fea <vfprintf+0x326>
    6fc8:	a0 fe       	sbrs	r10, 0
    6fca:	06 c0       	rjmp	.+12     	; 0x6fd8 <vfprintf+0x314>
    6fcc:	b2 14       	cp	r11, r2
    6fce:	88 f4       	brcc	.+34     	; 0x6ff2 <vfprintf+0x32e>
    6fd0:	28 0c       	add	r2, r8
    6fd2:	92 2c       	mov	r9, r2
    6fd4:	9b 18       	sub	r9, r11
    6fd6:	0e c0       	rjmp	.+28     	; 0x6ff4 <vfprintf+0x330>
    6fd8:	b2 14       	cp	r11, r2
    6fda:	60 f4       	brcc	.+24     	; 0x6ff4 <vfprintf+0x330>
    6fdc:	b6 01       	movw	r22, r12
    6fde:	80 e2       	ldi	r24, 0x20	; 32
    6fe0:	90 e0       	ldi	r25, 0x00	; 0
    6fe2:	0e 94 8b 3a 	call	0x7516	; 0x7516 <fputc>
    6fe6:	b3 94       	inc	r11
    6fe8:	f7 cf       	rjmp	.-18     	; 0x6fd8 <vfprintf+0x314>
    6fea:	b2 14       	cp	r11, r2
    6fec:	18 f4       	brcc	.+6      	; 0x6ff4 <vfprintf+0x330>
    6fee:	2b 18       	sub	r2, r11
    6ff0:	02 c0       	rjmp	.+4      	; 0x6ff6 <vfprintf+0x332>
    6ff2:	98 2c       	mov	r9, r8
    6ff4:	21 2c       	mov	r2, r1
    6ff6:	a4 fe       	sbrs	r10, 4
    6ff8:	10 c0       	rjmp	.+32     	; 0x701a <vfprintf+0x356>
    6ffa:	b6 01       	movw	r22, r12
    6ffc:	80 e3       	ldi	r24, 0x30	; 48
    6ffe:	90 e0       	ldi	r25, 0x00	; 0
    7000:	0e 94 8b 3a 	call	0x7516	; 0x7516 <fputc>
    7004:	a2 fe       	sbrs	r10, 2
    7006:	17 c0       	rjmp	.+46     	; 0x7036 <vfprintf+0x372>
    7008:	a1 fc       	sbrc	r10, 1
    700a:	03 c0       	rjmp	.+6      	; 0x7012 <vfprintf+0x34e>
    700c:	88 e7       	ldi	r24, 0x78	; 120
    700e:	90 e0       	ldi	r25, 0x00	; 0
    7010:	02 c0       	rjmp	.+4      	; 0x7016 <vfprintf+0x352>
    7012:	88 e5       	ldi	r24, 0x58	; 88
    7014:	90 e0       	ldi	r25, 0x00	; 0
    7016:	b6 01       	movw	r22, r12
    7018:	0c c0       	rjmp	.+24     	; 0x7032 <vfprintf+0x36e>
    701a:	8a 2d       	mov	r24, r10
    701c:	86 78       	andi	r24, 0x86	; 134
    701e:	59 f0       	breq	.+22     	; 0x7036 <vfprintf+0x372>
    7020:	a1 fe       	sbrs	r10, 1
    7022:	02 c0       	rjmp	.+4      	; 0x7028 <vfprintf+0x364>
    7024:	8b e2       	ldi	r24, 0x2B	; 43
    7026:	01 c0       	rjmp	.+2      	; 0x702a <vfprintf+0x366>
    7028:	80 e2       	ldi	r24, 0x20	; 32
    702a:	a7 fc       	sbrc	r10, 7
    702c:	8d e2       	ldi	r24, 0x2D	; 45
    702e:	b6 01       	movw	r22, r12
    7030:	90 e0       	ldi	r25, 0x00	; 0
    7032:	0e 94 8b 3a 	call	0x7516	; 0x7516 <fputc>
    7036:	89 14       	cp	r8, r9
    7038:	38 f4       	brcc	.+14     	; 0x7048 <vfprintf+0x384>
    703a:	b6 01       	movw	r22, r12
    703c:	80 e3       	ldi	r24, 0x30	; 48
    703e:	90 e0       	ldi	r25, 0x00	; 0
    7040:	0e 94 8b 3a 	call	0x7516	; 0x7516 <fputc>
    7044:	9a 94       	dec	r9
    7046:	f7 cf       	rjmp	.-18     	; 0x7036 <vfprintf+0x372>
    7048:	8a 94       	dec	r8
    704a:	f3 01       	movw	r30, r6
    704c:	e8 0d       	add	r30, r8
    704e:	f1 1d       	adc	r31, r1
    7050:	80 81       	ld	r24, Z
    7052:	b6 01       	movw	r22, r12
    7054:	90 e0       	ldi	r25, 0x00	; 0
    7056:	0e 94 8b 3a 	call	0x7516	; 0x7516 <fputc>
    705a:	81 10       	cpse	r8, r1
    705c:	f5 cf       	rjmp	.-22     	; 0x7048 <vfprintf+0x384>
    705e:	22 20       	and	r2, r2
    7060:	09 f4       	brne	.+2      	; 0x7064 <vfprintf+0x3a0>
    7062:	42 ce       	rjmp	.-892    	; 0x6ce8 <vfprintf+0x24>
    7064:	b6 01       	movw	r22, r12
    7066:	80 e2       	ldi	r24, 0x20	; 32
    7068:	90 e0       	ldi	r25, 0x00	; 0
    706a:	0e 94 8b 3a 	call	0x7516	; 0x7516 <fputc>
    706e:	2a 94       	dec	r2
    7070:	f6 cf       	rjmp	.-20     	; 0x705e <vfprintf+0x39a>
    7072:	f6 01       	movw	r30, r12
    7074:	86 81       	ldd	r24, Z+6	; 0x06
    7076:	97 81       	ldd	r25, Z+7	; 0x07
    7078:	02 c0       	rjmp	.+4      	; 0x707e <vfprintf+0x3ba>
    707a:	8f ef       	ldi	r24, 0xFF	; 255
    707c:	9f ef       	ldi	r25, 0xFF	; 255
    707e:	2b 96       	adiw	r28, 0x0b	; 11
    7080:	e2 e1       	ldi	r30, 0x12	; 18
    7082:	0c 94 41 3b 	jmp	0x7682	; 0x7682 <__epilogue_restores__>

00007086 <dtoa_prf>:
    7086:	a9 e0       	ldi	r26, 0x09	; 9
    7088:	b0 e0       	ldi	r27, 0x00	; 0
    708a:	e9 e4       	ldi	r30, 0x49	; 73
    708c:	f8 e3       	ldi	r31, 0x38	; 56
    708e:	0c 94 2b 3b 	jmp	0x7656	; 0x7656 <__prologue_saves__+0xc>
    7092:	6a 01       	movw	r12, r20
    7094:	12 2f       	mov	r17, r18
    7096:	b0 2e       	mov	r11, r16
    7098:	2b e3       	ldi	r18, 0x3B	; 59
    709a:	20 17       	cp	r18, r16
    709c:	20 f0       	brcs	.+8      	; 0x70a6 <dtoa_prf+0x20>
    709e:	ff 24       	eor	r15, r15
    70a0:	f3 94       	inc	r15
    70a2:	f0 0e       	add	r15, r16
    70a4:	02 c0       	rjmp	.+4      	; 0x70aa <dtoa_prf+0x24>
    70a6:	2c e3       	ldi	r18, 0x3C	; 60
    70a8:	f2 2e       	mov	r15, r18
    70aa:	0f 2d       	mov	r16, r15
    70ac:	27 e0       	ldi	r18, 0x07	; 7
    70ae:	ae 01       	movw	r20, r28
    70b0:	4f 5f       	subi	r20, 0xFF	; 255
    70b2:	5f 4f       	sbci	r21, 0xFF	; 255
    70b4:	0e 94 9d 39 	call	0x733a	; 0x733a <__ftoa_engine>
    70b8:	bc 01       	movw	r22, r24
    70ba:	49 81       	ldd	r20, Y+1	; 0x01
    70bc:	84 2f       	mov	r24, r20
    70be:	89 70       	andi	r24, 0x09	; 9
    70c0:	81 30       	cpi	r24, 0x01	; 1
    70c2:	31 f0       	breq	.+12     	; 0x70d0 <dtoa_prf+0x4a>
    70c4:	e1 fc       	sbrc	r14, 1
    70c6:	06 c0       	rjmp	.+12     	; 0x70d4 <dtoa_prf+0x4e>
    70c8:	e0 fe       	sbrs	r14, 0
    70ca:	06 c0       	rjmp	.+12     	; 0x70d8 <dtoa_prf+0x52>
    70cc:	90 e2       	ldi	r25, 0x20	; 32
    70ce:	05 c0       	rjmp	.+10     	; 0x70da <dtoa_prf+0x54>
    70d0:	9d e2       	ldi	r25, 0x2D	; 45
    70d2:	03 c0       	rjmp	.+6      	; 0x70da <dtoa_prf+0x54>
    70d4:	9b e2       	ldi	r25, 0x2B	; 43
    70d6:	01 c0       	rjmp	.+2      	; 0x70da <dtoa_prf+0x54>
    70d8:	90 e0       	ldi	r25, 0x00	; 0
    70da:	5e 2d       	mov	r21, r14
    70dc:	50 71       	andi	r21, 0x10	; 16
    70de:	43 ff       	sbrs	r20, 3
    70e0:	3c c0       	rjmp	.+120    	; 0x715a <dtoa_prf+0xd4>
    70e2:	91 11       	cpse	r25, r1
    70e4:	02 c0       	rjmp	.+4      	; 0x70ea <dtoa_prf+0x64>
    70e6:	83 e0       	ldi	r24, 0x03	; 3
    70e8:	01 c0       	rjmp	.+2      	; 0x70ec <dtoa_prf+0x66>
    70ea:	84 e0       	ldi	r24, 0x04	; 4
    70ec:	81 17       	cp	r24, r17
    70ee:	18 f4       	brcc	.+6      	; 0x70f6 <dtoa_prf+0x70>
    70f0:	21 2f       	mov	r18, r17
    70f2:	28 1b       	sub	r18, r24
    70f4:	01 c0       	rjmp	.+2      	; 0x70f8 <dtoa_prf+0x72>
    70f6:	20 e0       	ldi	r18, 0x00	; 0
    70f8:	51 11       	cpse	r21, r1
    70fa:	0b c0       	rjmp	.+22     	; 0x7112 <dtoa_prf+0x8c>
    70fc:	f6 01       	movw	r30, r12
    70fe:	82 2f       	mov	r24, r18
    7100:	30 e2       	ldi	r19, 0x20	; 32
    7102:	88 23       	and	r24, r24
    7104:	19 f0       	breq	.+6      	; 0x710c <dtoa_prf+0x86>
    7106:	31 93       	st	Z+, r19
    7108:	81 50       	subi	r24, 0x01	; 1
    710a:	fb cf       	rjmp	.-10     	; 0x7102 <dtoa_prf+0x7c>
    710c:	c2 0e       	add	r12, r18
    710e:	d1 1c       	adc	r13, r1
    7110:	20 e0       	ldi	r18, 0x00	; 0
    7112:	99 23       	and	r25, r25
    7114:	29 f0       	breq	.+10     	; 0x7120 <dtoa_prf+0x9a>
    7116:	d6 01       	movw	r26, r12
    7118:	9c 93       	st	X, r25
    711a:	f6 01       	movw	r30, r12
    711c:	31 96       	adiw	r30, 0x01	; 1
    711e:	6f 01       	movw	r12, r30
    7120:	c6 01       	movw	r24, r12
    7122:	03 96       	adiw	r24, 0x03	; 3
    7124:	e2 fe       	sbrs	r14, 2
    7126:	0a c0       	rjmp	.+20     	; 0x713c <dtoa_prf+0xb6>
    7128:	3e e4       	ldi	r19, 0x4E	; 78
    712a:	d6 01       	movw	r26, r12
    712c:	3c 93       	st	X, r19
    712e:	41 e4       	ldi	r20, 0x41	; 65
    7130:	11 96       	adiw	r26, 0x01	; 1
    7132:	4c 93       	st	X, r20
    7134:	11 97       	sbiw	r26, 0x01	; 1
    7136:	12 96       	adiw	r26, 0x02	; 2
    7138:	3c 93       	st	X, r19
    713a:	06 c0       	rjmp	.+12     	; 0x7148 <dtoa_prf+0xc2>
    713c:	3e e6       	ldi	r19, 0x6E	; 110
    713e:	f6 01       	movw	r30, r12
    7140:	30 83       	st	Z, r19
    7142:	41 e6       	ldi	r20, 0x61	; 97
    7144:	41 83       	std	Z+1, r20	; 0x01
    7146:	32 83       	std	Z+2, r19	; 0x02
    7148:	fc 01       	movw	r30, r24
    714a:	32 2f       	mov	r19, r18
    714c:	40 e2       	ldi	r20, 0x20	; 32
    714e:	33 23       	and	r19, r19
    7150:	09 f4       	brne	.+2      	; 0x7154 <dtoa_prf+0xce>
    7152:	42 c0       	rjmp	.+132    	; 0x71d8 <dtoa_prf+0x152>
    7154:	41 93       	st	Z+, r20
    7156:	31 50       	subi	r19, 0x01	; 1
    7158:	fa cf       	rjmp	.-12     	; 0x714e <dtoa_prf+0xc8>
    715a:	42 ff       	sbrs	r20, 2
    715c:	44 c0       	rjmp	.+136    	; 0x71e6 <dtoa_prf+0x160>
    715e:	91 11       	cpse	r25, r1
    7160:	02 c0       	rjmp	.+4      	; 0x7166 <dtoa_prf+0xe0>
    7162:	83 e0       	ldi	r24, 0x03	; 3
    7164:	01 c0       	rjmp	.+2      	; 0x7168 <dtoa_prf+0xe2>
    7166:	84 e0       	ldi	r24, 0x04	; 4
    7168:	81 17       	cp	r24, r17
    716a:	18 f4       	brcc	.+6      	; 0x7172 <dtoa_prf+0xec>
    716c:	21 2f       	mov	r18, r17
    716e:	28 1b       	sub	r18, r24
    7170:	01 c0       	rjmp	.+2      	; 0x7174 <dtoa_prf+0xee>
    7172:	20 e0       	ldi	r18, 0x00	; 0
    7174:	51 11       	cpse	r21, r1
    7176:	0b c0       	rjmp	.+22     	; 0x718e <dtoa_prf+0x108>
    7178:	f6 01       	movw	r30, r12
    717a:	82 2f       	mov	r24, r18
    717c:	30 e2       	ldi	r19, 0x20	; 32
    717e:	88 23       	and	r24, r24
    7180:	19 f0       	breq	.+6      	; 0x7188 <dtoa_prf+0x102>
    7182:	31 93       	st	Z+, r19
    7184:	81 50       	subi	r24, 0x01	; 1
    7186:	fb cf       	rjmp	.-10     	; 0x717e <dtoa_prf+0xf8>
    7188:	c2 0e       	add	r12, r18
    718a:	d1 1c       	adc	r13, r1
    718c:	20 e0       	ldi	r18, 0x00	; 0
    718e:	99 23       	and	r25, r25
    7190:	29 f0       	breq	.+10     	; 0x719c <dtoa_prf+0x116>
    7192:	d6 01       	movw	r26, r12
    7194:	9c 93       	st	X, r25
    7196:	f6 01       	movw	r30, r12
    7198:	31 96       	adiw	r30, 0x01	; 1
    719a:	6f 01       	movw	r12, r30
    719c:	c6 01       	movw	r24, r12
    719e:	03 96       	adiw	r24, 0x03	; 3
    71a0:	e2 fe       	sbrs	r14, 2
    71a2:	0b c0       	rjmp	.+22     	; 0x71ba <dtoa_prf+0x134>
    71a4:	39 e4       	ldi	r19, 0x49	; 73
    71a6:	d6 01       	movw	r26, r12
    71a8:	3c 93       	st	X, r19
    71aa:	3e e4       	ldi	r19, 0x4E	; 78
    71ac:	11 96       	adiw	r26, 0x01	; 1
    71ae:	3c 93       	st	X, r19
    71b0:	11 97       	sbiw	r26, 0x01	; 1
    71b2:	36 e4       	ldi	r19, 0x46	; 70
    71b4:	12 96       	adiw	r26, 0x02	; 2
    71b6:	3c 93       	st	X, r19
    71b8:	07 c0       	rjmp	.+14     	; 0x71c8 <dtoa_prf+0x142>
    71ba:	39 e6       	ldi	r19, 0x69	; 105
    71bc:	f6 01       	movw	r30, r12
    71be:	30 83       	st	Z, r19
    71c0:	3e e6       	ldi	r19, 0x6E	; 110
    71c2:	31 83       	std	Z+1, r19	; 0x01
    71c4:	36 e6       	ldi	r19, 0x66	; 102
    71c6:	32 83       	std	Z+2, r19	; 0x02
    71c8:	fc 01       	movw	r30, r24
    71ca:	32 2f       	mov	r19, r18
    71cc:	40 e2       	ldi	r20, 0x20	; 32
    71ce:	33 23       	and	r19, r19
    71d0:	19 f0       	breq	.+6      	; 0x71d8 <dtoa_prf+0x152>
    71d2:	41 93       	st	Z+, r20
    71d4:	31 50       	subi	r19, 0x01	; 1
    71d6:	fb cf       	rjmp	.-10     	; 0x71ce <dtoa_prf+0x148>
    71d8:	fc 01       	movw	r30, r24
    71da:	e2 0f       	add	r30, r18
    71dc:	f1 1d       	adc	r31, r1
    71de:	10 82       	st	Z, r1
    71e0:	8e ef       	ldi	r24, 0xFE	; 254
    71e2:	9f ef       	ldi	r25, 0xFF	; 255
    71e4:	a6 c0       	rjmp	.+332    	; 0x7332 <dtoa_prf+0x2ac>
    71e6:	21 e0       	ldi	r18, 0x01	; 1
    71e8:	30 e0       	ldi	r19, 0x00	; 0
    71ea:	91 11       	cpse	r25, r1
    71ec:	02 c0       	rjmp	.+4      	; 0x71f2 <dtoa_prf+0x16c>
    71ee:	20 e0       	ldi	r18, 0x00	; 0
    71f0:	30 e0       	ldi	r19, 0x00	; 0
    71f2:	16 16       	cp	r1, r22
    71f4:	17 06       	cpc	r1, r23
    71f6:	1c f4       	brge	.+6      	; 0x71fe <dtoa_prf+0x178>
    71f8:	fb 01       	movw	r30, r22
    71fa:	31 96       	adiw	r30, 0x01	; 1
    71fc:	02 c0       	rjmp	.+4      	; 0x7202 <dtoa_prf+0x17c>
    71fe:	e1 e0       	ldi	r30, 0x01	; 1
    7200:	f0 e0       	ldi	r31, 0x00	; 0
    7202:	2e 0f       	add	r18, r30
    7204:	3f 1f       	adc	r19, r31
    7206:	bb 20       	and	r11, r11
    7208:	21 f0       	breq	.+8      	; 0x7212 <dtoa_prf+0x18c>
    720a:	eb 2d       	mov	r30, r11
    720c:	f0 e0       	ldi	r31, 0x00	; 0
    720e:	31 96       	adiw	r30, 0x01	; 1
    7210:	02 c0       	rjmp	.+4      	; 0x7216 <dtoa_prf+0x190>
    7212:	e0 e0       	ldi	r30, 0x00	; 0
    7214:	f0 e0       	ldi	r31, 0x00	; 0
    7216:	2e 0f       	add	r18, r30
    7218:	3f 1f       	adc	r19, r31
    721a:	e1 2f       	mov	r30, r17
    721c:	f0 e0       	ldi	r31, 0x00	; 0
    721e:	2e 17       	cp	r18, r30
    7220:	3f 07       	cpc	r19, r31
    7222:	1c f4       	brge	.+6      	; 0x722a <dtoa_prf+0x1a4>
    7224:	12 1b       	sub	r17, r18
    7226:	21 2f       	mov	r18, r17
    7228:	01 c0       	rjmp	.+2      	; 0x722c <dtoa_prf+0x1a6>
    722a:	20 e0       	ldi	r18, 0x00	; 0
    722c:	8e 2d       	mov	r24, r14
    722e:	88 71       	andi	r24, 0x18	; 24
    7230:	59 f4       	brne	.+22     	; 0x7248 <dtoa_prf+0x1c2>
    7232:	f6 01       	movw	r30, r12
    7234:	82 2f       	mov	r24, r18
    7236:	30 e2       	ldi	r19, 0x20	; 32
    7238:	88 23       	and	r24, r24
    723a:	19 f0       	breq	.+6      	; 0x7242 <dtoa_prf+0x1bc>
    723c:	31 93       	st	Z+, r19
    723e:	81 50       	subi	r24, 0x01	; 1
    7240:	fb cf       	rjmp	.-10     	; 0x7238 <dtoa_prf+0x1b2>
    7242:	c2 0e       	add	r12, r18
    7244:	d1 1c       	adc	r13, r1
    7246:	20 e0       	ldi	r18, 0x00	; 0
    7248:	99 23       	and	r25, r25
    724a:	29 f0       	breq	.+10     	; 0x7256 <dtoa_prf+0x1d0>
    724c:	d6 01       	movw	r26, r12
    724e:	9c 93       	st	X, r25
    7250:	f6 01       	movw	r30, r12
    7252:	31 96       	adiw	r30, 0x01	; 1
    7254:	6f 01       	movw	r12, r30
    7256:	51 11       	cpse	r21, r1
    7258:	0b c0       	rjmp	.+22     	; 0x7270 <dtoa_prf+0x1ea>
    725a:	f6 01       	movw	r30, r12
    725c:	82 2f       	mov	r24, r18
    725e:	90 e3       	ldi	r25, 0x30	; 48
    7260:	88 23       	and	r24, r24
    7262:	19 f0       	breq	.+6      	; 0x726a <dtoa_prf+0x1e4>
    7264:	91 93       	st	Z+, r25
    7266:	81 50       	subi	r24, 0x01	; 1
    7268:	fb cf       	rjmp	.-10     	; 0x7260 <dtoa_prf+0x1da>
    726a:	c2 0e       	add	r12, r18
    726c:	d1 1c       	adc	r13, r1
    726e:	20 e0       	ldi	r18, 0x00	; 0
    7270:	0f 2d       	mov	r16, r15
    7272:	06 0f       	add	r16, r22
    7274:	9a 81       	ldd	r25, Y+2	; 0x02
    7276:	34 2f       	mov	r19, r20
    7278:	30 71       	andi	r19, 0x10	; 16
    727a:	44 ff       	sbrs	r20, 4
    727c:	03 c0       	rjmp	.+6      	; 0x7284 <dtoa_prf+0x1fe>
    727e:	91 33       	cpi	r25, 0x31	; 49
    7280:	09 f4       	brne	.+2      	; 0x7284 <dtoa_prf+0x1fe>
    7282:	01 50       	subi	r16, 0x01	; 1
    7284:	10 16       	cp	r1, r16
    7286:	24 f4       	brge	.+8      	; 0x7290 <dtoa_prf+0x20a>
    7288:	09 30       	cpi	r16, 0x09	; 9
    728a:	18 f0       	brcs	.+6      	; 0x7292 <dtoa_prf+0x20c>
    728c:	08 e0       	ldi	r16, 0x08	; 8
    728e:	01 c0       	rjmp	.+2      	; 0x7292 <dtoa_prf+0x20c>
    7290:	01 e0       	ldi	r16, 0x01	; 1
    7292:	ab 01       	movw	r20, r22
    7294:	77 ff       	sbrs	r23, 7
    7296:	02 c0       	rjmp	.+4      	; 0x729c <dtoa_prf+0x216>
    7298:	40 e0       	ldi	r20, 0x00	; 0
    729a:	50 e0       	ldi	r21, 0x00	; 0
    729c:	fb 01       	movw	r30, r22
    729e:	e4 1b       	sub	r30, r20
    72a0:	f5 0b       	sbc	r31, r21
    72a2:	a1 e0       	ldi	r26, 0x01	; 1
    72a4:	b0 e0       	ldi	r27, 0x00	; 0
    72a6:	ac 0f       	add	r26, r28
    72a8:	bd 1f       	adc	r27, r29
    72aa:	ea 0f       	add	r30, r26
    72ac:	fb 1f       	adc	r31, r27
    72ae:	8e e2       	ldi	r24, 0x2E	; 46
    72b0:	a8 2e       	mov	r10, r24
    72b2:	4b 01       	movw	r8, r22
    72b4:	80 1a       	sub	r8, r16
    72b6:	91 08       	sbc	r9, r1
    72b8:	0b 2d       	mov	r16, r11
    72ba:	10 e0       	ldi	r17, 0x00	; 0
    72bc:	11 95       	neg	r17
    72be:	01 95       	neg	r16
    72c0:	11 09       	sbc	r17, r1
    72c2:	4f 3f       	cpi	r20, 0xFF	; 255
    72c4:	bf ef       	ldi	r27, 0xFF	; 255
    72c6:	5b 07       	cpc	r21, r27
    72c8:	21 f4       	brne	.+8      	; 0x72d2 <dtoa_prf+0x24c>
    72ca:	d6 01       	movw	r26, r12
    72cc:	ac 92       	st	X, r10
    72ce:	11 96       	adiw	r26, 0x01	; 1
    72d0:	6d 01       	movw	r12, r26
    72d2:	64 17       	cp	r22, r20
    72d4:	75 07       	cpc	r23, r21
    72d6:	2c f0       	brlt	.+10     	; 0x72e2 <dtoa_prf+0x25c>
    72d8:	84 16       	cp	r8, r20
    72da:	95 06       	cpc	r9, r21
    72dc:	14 f4       	brge	.+4      	; 0x72e2 <dtoa_prf+0x25c>
    72de:	81 81       	ldd	r24, Z+1	; 0x01
    72e0:	01 c0       	rjmp	.+2      	; 0x72e4 <dtoa_prf+0x25e>
    72e2:	80 e3       	ldi	r24, 0x30	; 48
    72e4:	41 50       	subi	r20, 0x01	; 1
    72e6:	51 09       	sbc	r21, r1
    72e8:	31 96       	adiw	r30, 0x01	; 1
    72ea:	d6 01       	movw	r26, r12
    72ec:	11 96       	adiw	r26, 0x01	; 1
    72ee:	7d 01       	movw	r14, r26
    72f0:	40 17       	cp	r20, r16
    72f2:	51 07       	cpc	r21, r17
    72f4:	24 f0       	brlt	.+8      	; 0x72fe <dtoa_prf+0x278>
    72f6:	d6 01       	movw	r26, r12
    72f8:	8c 93       	st	X, r24
    72fa:	67 01       	movw	r12, r14
    72fc:	e2 cf       	rjmp	.-60     	; 0x72c2 <dtoa_prf+0x23c>
    72fe:	64 17       	cp	r22, r20
    7300:	75 07       	cpc	r23, r21
    7302:	39 f4       	brne	.+14     	; 0x7312 <dtoa_prf+0x28c>
    7304:	96 33       	cpi	r25, 0x36	; 54
    7306:	20 f4       	brcc	.+8      	; 0x7310 <dtoa_prf+0x28a>
    7308:	95 33       	cpi	r25, 0x35	; 53
    730a:	19 f4       	brne	.+6      	; 0x7312 <dtoa_prf+0x28c>
    730c:	31 11       	cpse	r19, r1
    730e:	01 c0       	rjmp	.+2      	; 0x7312 <dtoa_prf+0x28c>
    7310:	81 e3       	ldi	r24, 0x31	; 49
    7312:	f6 01       	movw	r30, r12
    7314:	80 83       	st	Z, r24
    7316:	f7 01       	movw	r30, r14
    7318:	82 2f       	mov	r24, r18
    731a:	90 e2       	ldi	r25, 0x20	; 32
    731c:	88 23       	and	r24, r24
    731e:	19 f0       	breq	.+6      	; 0x7326 <dtoa_prf+0x2a0>
    7320:	91 93       	st	Z+, r25
    7322:	81 50       	subi	r24, 0x01	; 1
    7324:	fb cf       	rjmp	.-10     	; 0x731c <dtoa_prf+0x296>
    7326:	f7 01       	movw	r30, r14
    7328:	e2 0f       	add	r30, r18
    732a:	f1 1d       	adc	r31, r1
    732c:	10 82       	st	Z, r1
    732e:	80 e0       	ldi	r24, 0x00	; 0
    7330:	90 e0       	ldi	r25, 0x00	; 0
    7332:	29 96       	adiw	r28, 0x09	; 9
    7334:	ec e0       	ldi	r30, 0x0C	; 12
    7336:	0c 94 47 3b 	jmp	0x768e	; 0x768e <__epilogue_restores__+0xc>

0000733a <__ftoa_engine>:
    733a:	28 30       	cpi	r18, 0x08	; 8
    733c:	08 f0       	brcs	.+2      	; 0x7340 <__ftoa_engine+0x6>
    733e:	27 e0       	ldi	r18, 0x07	; 7
    7340:	33 27       	eor	r19, r19
    7342:	da 01       	movw	r26, r20
    7344:	99 0f       	add	r25, r25
    7346:	31 1d       	adc	r19, r1
    7348:	87 fd       	sbrc	r24, 7
    734a:	91 60       	ori	r25, 0x01	; 1
    734c:	00 96       	adiw	r24, 0x00	; 0
    734e:	61 05       	cpc	r22, r1
    7350:	71 05       	cpc	r23, r1
    7352:	39 f4       	brne	.+14     	; 0x7362 <__ftoa_engine+0x28>
    7354:	32 60       	ori	r19, 0x02	; 2
    7356:	2e 5f       	subi	r18, 0xFE	; 254
    7358:	3d 93       	st	X+, r19
    735a:	30 e3       	ldi	r19, 0x30	; 48
    735c:	2a 95       	dec	r18
    735e:	e1 f7       	brne	.-8      	; 0x7358 <__ftoa_engine+0x1e>
    7360:	08 95       	ret
    7362:	9f 3f       	cpi	r25, 0xFF	; 255
    7364:	30 f0       	brcs	.+12     	; 0x7372 <__ftoa_engine+0x38>
    7366:	80 38       	cpi	r24, 0x80	; 128
    7368:	71 05       	cpc	r23, r1
    736a:	61 05       	cpc	r22, r1
    736c:	09 f0       	breq	.+2      	; 0x7370 <__ftoa_engine+0x36>
    736e:	3c 5f       	subi	r19, 0xFC	; 252
    7370:	3c 5f       	subi	r19, 0xFC	; 252
    7372:	3d 93       	st	X+, r19
    7374:	91 30       	cpi	r25, 0x01	; 1
    7376:	08 f0       	brcs	.+2      	; 0x737a <__ftoa_engine+0x40>
    7378:	80 68       	ori	r24, 0x80	; 128
    737a:	91 1d       	adc	r25, r1
    737c:	df 93       	push	r29
    737e:	cf 93       	push	r28
    7380:	1f 93       	push	r17
    7382:	0f 93       	push	r16
    7384:	ff 92       	push	r15
    7386:	ef 92       	push	r14
    7388:	19 2f       	mov	r17, r25
    738a:	98 7f       	andi	r25, 0xF8	; 248
    738c:	96 95       	lsr	r25
    738e:	e9 2f       	mov	r30, r25
    7390:	96 95       	lsr	r25
    7392:	96 95       	lsr	r25
    7394:	e9 0f       	add	r30, r25
    7396:	ff 27       	eor	r31, r31
    7398:	e2 51       	subi	r30, 0x12	; 18
    739a:	ff 4f       	sbci	r31, 0xFF	; 255
    739c:	99 27       	eor	r25, r25
    739e:	33 27       	eor	r19, r19
    73a0:	ee 24       	eor	r14, r14
    73a2:	ff 24       	eor	r15, r15
    73a4:	a7 01       	movw	r20, r14
    73a6:	e7 01       	movw	r28, r14
    73a8:	05 90       	lpm	r0, Z+
    73aa:	08 94       	sec
    73ac:	07 94       	ror	r0
    73ae:	28 f4       	brcc	.+10     	; 0x73ba <__ftoa_engine+0x80>
    73b0:	36 0f       	add	r19, r22
    73b2:	e7 1e       	adc	r14, r23
    73b4:	f8 1e       	adc	r15, r24
    73b6:	49 1f       	adc	r20, r25
    73b8:	51 1d       	adc	r21, r1
    73ba:	66 0f       	add	r22, r22
    73bc:	77 1f       	adc	r23, r23
    73be:	88 1f       	adc	r24, r24
    73c0:	99 1f       	adc	r25, r25
    73c2:	06 94       	lsr	r0
    73c4:	a1 f7       	brne	.-24     	; 0x73ae <__ftoa_engine+0x74>
    73c6:	05 90       	lpm	r0, Z+
    73c8:	07 94       	ror	r0
    73ca:	28 f4       	brcc	.+10     	; 0x73d6 <__ftoa_engine+0x9c>
    73cc:	e7 0e       	add	r14, r23
    73ce:	f8 1e       	adc	r15, r24
    73d0:	49 1f       	adc	r20, r25
    73d2:	56 1f       	adc	r21, r22
    73d4:	c1 1d       	adc	r28, r1
    73d6:	77 0f       	add	r23, r23
    73d8:	88 1f       	adc	r24, r24
    73da:	99 1f       	adc	r25, r25
    73dc:	66 1f       	adc	r22, r22
    73de:	06 94       	lsr	r0
    73e0:	a1 f7       	brne	.-24     	; 0x73ca <__ftoa_engine+0x90>
    73e2:	05 90       	lpm	r0, Z+
    73e4:	07 94       	ror	r0
    73e6:	28 f4       	brcc	.+10     	; 0x73f2 <__ftoa_engine+0xb8>
    73e8:	f8 0e       	add	r15, r24
    73ea:	49 1f       	adc	r20, r25
    73ec:	56 1f       	adc	r21, r22
    73ee:	c7 1f       	adc	r28, r23
    73f0:	d1 1d       	adc	r29, r1
    73f2:	88 0f       	add	r24, r24
    73f4:	99 1f       	adc	r25, r25
    73f6:	66 1f       	adc	r22, r22
    73f8:	77 1f       	adc	r23, r23
    73fa:	06 94       	lsr	r0
    73fc:	a1 f7       	brne	.-24     	; 0x73e6 <__ftoa_engine+0xac>
    73fe:	05 90       	lpm	r0, Z+
    7400:	07 94       	ror	r0
    7402:	20 f4       	brcc	.+8      	; 0x740c <__ftoa_engine+0xd2>
    7404:	49 0f       	add	r20, r25
    7406:	56 1f       	adc	r21, r22
    7408:	c7 1f       	adc	r28, r23
    740a:	d8 1f       	adc	r29, r24
    740c:	99 0f       	add	r25, r25
    740e:	66 1f       	adc	r22, r22
    7410:	77 1f       	adc	r23, r23
    7412:	88 1f       	adc	r24, r24
    7414:	06 94       	lsr	r0
    7416:	a9 f7       	brne	.-22     	; 0x7402 <__ftoa_engine+0xc8>
    7418:	84 91       	lpm	r24, Z
    741a:	10 95       	com	r17
    741c:	17 70       	andi	r17, 0x07	; 7
    741e:	41 f0       	breq	.+16     	; 0x7430 <__ftoa_engine+0xf6>
    7420:	d6 95       	lsr	r29
    7422:	c7 95       	ror	r28
    7424:	57 95       	ror	r21
    7426:	47 95       	ror	r20
    7428:	f7 94       	ror	r15
    742a:	e7 94       	ror	r14
    742c:	1a 95       	dec	r17
    742e:	c1 f7       	brne	.-16     	; 0x7420 <__ftoa_engine+0xe6>
    7430:	e4 e9       	ldi	r30, 0x94	; 148
    7432:	f0 e0       	ldi	r31, 0x00	; 0
    7434:	68 94       	set
    7436:	15 90       	lpm	r1, Z+
    7438:	15 91       	lpm	r17, Z+
    743a:	35 91       	lpm	r19, Z+
    743c:	65 91       	lpm	r22, Z+
    743e:	95 91       	lpm	r25, Z+
    7440:	05 90       	lpm	r0, Z+
    7442:	7f e2       	ldi	r23, 0x2F	; 47
    7444:	73 95       	inc	r23
    7446:	e1 18       	sub	r14, r1
    7448:	f1 0a       	sbc	r15, r17
    744a:	43 0b       	sbc	r20, r19
    744c:	56 0b       	sbc	r21, r22
    744e:	c9 0b       	sbc	r28, r25
    7450:	d0 09       	sbc	r29, r0
    7452:	c0 f7       	brcc	.-16     	; 0x7444 <__ftoa_engine+0x10a>
    7454:	e1 0c       	add	r14, r1
    7456:	f1 1e       	adc	r15, r17
    7458:	43 1f       	adc	r20, r19
    745a:	56 1f       	adc	r21, r22
    745c:	c9 1f       	adc	r28, r25
    745e:	d0 1d       	adc	r29, r0
    7460:	7e f4       	brtc	.+30     	; 0x7480 <__ftoa_engine+0x146>
    7462:	70 33       	cpi	r23, 0x30	; 48
    7464:	11 f4       	brne	.+4      	; 0x746a <__ftoa_engine+0x130>
    7466:	8a 95       	dec	r24
    7468:	e6 cf       	rjmp	.-52     	; 0x7436 <__ftoa_engine+0xfc>
    746a:	e8 94       	clt
    746c:	01 50       	subi	r16, 0x01	; 1
    746e:	30 f0       	brcs	.+12     	; 0x747c <__ftoa_engine+0x142>
    7470:	08 0f       	add	r16, r24
    7472:	0a f4       	brpl	.+2      	; 0x7476 <__ftoa_engine+0x13c>
    7474:	00 27       	eor	r16, r16
    7476:	02 17       	cp	r16, r18
    7478:	08 f4       	brcc	.+2      	; 0x747c <__ftoa_engine+0x142>
    747a:	20 2f       	mov	r18, r16
    747c:	23 95       	inc	r18
    747e:	02 2f       	mov	r16, r18
    7480:	7a 33       	cpi	r23, 0x3A	; 58
    7482:	28 f0       	brcs	.+10     	; 0x748e <__ftoa_engine+0x154>
    7484:	79 e3       	ldi	r23, 0x39	; 57
    7486:	7d 93       	st	X+, r23
    7488:	2a 95       	dec	r18
    748a:	e9 f7       	brne	.-6      	; 0x7486 <__ftoa_engine+0x14c>
    748c:	10 c0       	rjmp	.+32     	; 0x74ae <__ftoa_engine+0x174>
    748e:	7d 93       	st	X+, r23
    7490:	2a 95       	dec	r18
    7492:	89 f6       	brne	.-94     	; 0x7436 <__ftoa_engine+0xfc>
    7494:	06 94       	lsr	r0
    7496:	97 95       	ror	r25
    7498:	67 95       	ror	r22
    749a:	37 95       	ror	r19
    749c:	17 95       	ror	r17
    749e:	17 94       	ror	r1
    74a0:	e1 18       	sub	r14, r1
    74a2:	f1 0a       	sbc	r15, r17
    74a4:	43 0b       	sbc	r20, r19
    74a6:	56 0b       	sbc	r21, r22
    74a8:	c9 0b       	sbc	r28, r25
    74aa:	d0 09       	sbc	r29, r0
    74ac:	98 f0       	brcs	.+38     	; 0x74d4 <__ftoa_engine+0x19a>
    74ae:	23 95       	inc	r18
    74b0:	7e 91       	ld	r23, -X
    74b2:	73 95       	inc	r23
    74b4:	7a 33       	cpi	r23, 0x3A	; 58
    74b6:	08 f0       	brcs	.+2      	; 0x74ba <__ftoa_engine+0x180>
    74b8:	70 e3       	ldi	r23, 0x30	; 48
    74ba:	7c 93       	st	X, r23
    74bc:	20 13       	cpse	r18, r16
    74be:	b8 f7       	brcc	.-18     	; 0x74ae <__ftoa_engine+0x174>
    74c0:	7e 91       	ld	r23, -X
    74c2:	70 61       	ori	r23, 0x10	; 16
    74c4:	7d 93       	st	X+, r23
    74c6:	30 f0       	brcs	.+12     	; 0x74d4 <__ftoa_engine+0x19a>
    74c8:	83 95       	inc	r24
    74ca:	71 e3       	ldi	r23, 0x31	; 49
    74cc:	7d 93       	st	X+, r23
    74ce:	70 e3       	ldi	r23, 0x30	; 48
    74d0:	2a 95       	dec	r18
    74d2:	e1 f7       	brne	.-8      	; 0x74cc <__ftoa_engine+0x192>
    74d4:	11 24       	eor	r1, r1
    74d6:	ef 90       	pop	r14
    74d8:	ff 90       	pop	r15
    74da:	0f 91       	pop	r16
    74dc:	1f 91       	pop	r17
    74de:	cf 91       	pop	r28
    74e0:	df 91       	pop	r29
    74e2:	99 27       	eor	r25, r25
    74e4:	87 fd       	sbrc	r24, 7
    74e6:	90 95       	com	r25
    74e8:	08 95       	ret

000074ea <strnlen_P>:
    74ea:	fc 01       	movw	r30, r24
    74ec:	05 90       	lpm	r0, Z+
    74ee:	61 50       	subi	r22, 0x01	; 1
    74f0:	70 40       	sbci	r23, 0x00	; 0
    74f2:	01 10       	cpse	r0, r1
    74f4:	d8 f7       	brcc	.-10     	; 0x74ec <strnlen_P+0x2>
    74f6:	80 95       	com	r24
    74f8:	90 95       	com	r25
    74fa:	8e 0f       	add	r24, r30
    74fc:	9f 1f       	adc	r25, r31
    74fe:	08 95       	ret

00007500 <strnlen>:
    7500:	fc 01       	movw	r30, r24
    7502:	61 50       	subi	r22, 0x01	; 1
    7504:	70 40       	sbci	r23, 0x00	; 0
    7506:	01 90       	ld	r0, Z+
    7508:	01 10       	cpse	r0, r1
    750a:	d8 f7       	brcc	.-10     	; 0x7502 <strnlen+0x2>
    750c:	80 95       	com	r24
    750e:	90 95       	com	r25
    7510:	8e 0f       	add	r24, r30
    7512:	9f 1f       	adc	r25, r31
    7514:	08 95       	ret

00007516 <fputc>:
    7516:	0f 93       	push	r16
    7518:	1f 93       	push	r17
    751a:	cf 93       	push	r28
    751c:	df 93       	push	r29
    751e:	fb 01       	movw	r30, r22
    7520:	23 81       	ldd	r18, Z+3	; 0x03
    7522:	21 fd       	sbrc	r18, 1
    7524:	03 c0       	rjmp	.+6      	; 0x752c <fputc+0x16>
    7526:	8f ef       	ldi	r24, 0xFF	; 255
    7528:	9f ef       	ldi	r25, 0xFF	; 255
    752a:	2c c0       	rjmp	.+88     	; 0x7584 <fputc+0x6e>
    752c:	22 ff       	sbrs	r18, 2
    752e:	16 c0       	rjmp	.+44     	; 0x755c <fputc+0x46>
    7530:	46 81       	ldd	r20, Z+6	; 0x06
    7532:	57 81       	ldd	r21, Z+7	; 0x07
    7534:	24 81       	ldd	r18, Z+4	; 0x04
    7536:	35 81       	ldd	r19, Z+5	; 0x05
    7538:	42 17       	cp	r20, r18
    753a:	53 07       	cpc	r21, r19
    753c:	44 f4       	brge	.+16     	; 0x754e <fputc+0x38>
    753e:	a0 81       	ld	r26, Z
    7540:	b1 81       	ldd	r27, Z+1	; 0x01
    7542:	9d 01       	movw	r18, r26
    7544:	2f 5f       	subi	r18, 0xFF	; 255
    7546:	3f 4f       	sbci	r19, 0xFF	; 255
    7548:	31 83       	std	Z+1, r19	; 0x01
    754a:	20 83       	st	Z, r18
    754c:	8c 93       	st	X, r24
    754e:	26 81       	ldd	r18, Z+6	; 0x06
    7550:	37 81       	ldd	r19, Z+7	; 0x07
    7552:	2f 5f       	subi	r18, 0xFF	; 255
    7554:	3f 4f       	sbci	r19, 0xFF	; 255
    7556:	37 83       	std	Z+7, r19	; 0x07
    7558:	26 83       	std	Z+6, r18	; 0x06
    755a:	14 c0       	rjmp	.+40     	; 0x7584 <fputc+0x6e>
    755c:	8b 01       	movw	r16, r22
    755e:	ec 01       	movw	r28, r24
    7560:	fb 01       	movw	r30, r22
    7562:	00 84       	ldd	r0, Z+8	; 0x08
    7564:	f1 85       	ldd	r31, Z+9	; 0x09
    7566:	e0 2d       	mov	r30, r0
    7568:	09 95       	icall
    756a:	89 2b       	or	r24, r25
    756c:	e1 f6       	brne	.-72     	; 0x7526 <fputc+0x10>
    756e:	d8 01       	movw	r26, r16
    7570:	16 96       	adiw	r26, 0x06	; 6
    7572:	8d 91       	ld	r24, X+
    7574:	9c 91       	ld	r25, X
    7576:	17 97       	sbiw	r26, 0x07	; 7
    7578:	01 96       	adiw	r24, 0x01	; 1
    757a:	17 96       	adiw	r26, 0x07	; 7
    757c:	9c 93       	st	X, r25
    757e:	8e 93       	st	-X, r24
    7580:	16 97       	sbiw	r26, 0x06	; 6
    7582:	ce 01       	movw	r24, r28
    7584:	df 91       	pop	r29
    7586:	cf 91       	pop	r28
    7588:	1f 91       	pop	r17
    758a:	0f 91       	pop	r16
    758c:	08 95       	ret

0000758e <__ultoa_invert>:
    758e:	fa 01       	movw	r30, r20
    7590:	aa 27       	eor	r26, r26
    7592:	28 30       	cpi	r18, 0x08	; 8
    7594:	51 f1       	breq	.+84     	; 0x75ea <__ultoa_invert+0x5c>
    7596:	20 31       	cpi	r18, 0x10	; 16
    7598:	81 f1       	breq	.+96     	; 0x75fa <__ultoa_invert+0x6c>
    759a:	e8 94       	clt
    759c:	6f 93       	push	r22
    759e:	6e 7f       	andi	r22, 0xFE	; 254
    75a0:	6e 5f       	subi	r22, 0xFE	; 254
    75a2:	7f 4f       	sbci	r23, 0xFF	; 255
    75a4:	8f 4f       	sbci	r24, 0xFF	; 255
    75a6:	9f 4f       	sbci	r25, 0xFF	; 255
    75a8:	af 4f       	sbci	r26, 0xFF	; 255
    75aa:	b1 e0       	ldi	r27, 0x01	; 1
    75ac:	3e d0       	rcall	.+124    	; 0x762a <__ultoa_invert+0x9c>
    75ae:	b4 e0       	ldi	r27, 0x04	; 4
    75b0:	3c d0       	rcall	.+120    	; 0x762a <__ultoa_invert+0x9c>
    75b2:	67 0f       	add	r22, r23
    75b4:	78 1f       	adc	r23, r24
    75b6:	89 1f       	adc	r24, r25
    75b8:	9a 1f       	adc	r25, r26
    75ba:	a1 1d       	adc	r26, r1
    75bc:	68 0f       	add	r22, r24
    75be:	79 1f       	adc	r23, r25
    75c0:	8a 1f       	adc	r24, r26
    75c2:	91 1d       	adc	r25, r1
    75c4:	a1 1d       	adc	r26, r1
    75c6:	6a 0f       	add	r22, r26
    75c8:	71 1d       	adc	r23, r1
    75ca:	81 1d       	adc	r24, r1
    75cc:	91 1d       	adc	r25, r1
    75ce:	a1 1d       	adc	r26, r1
    75d0:	20 d0       	rcall	.+64     	; 0x7612 <__ultoa_invert+0x84>
    75d2:	09 f4       	brne	.+2      	; 0x75d6 <__ultoa_invert+0x48>
    75d4:	68 94       	set
    75d6:	3f 91       	pop	r19
    75d8:	2a e0       	ldi	r18, 0x0A	; 10
    75da:	26 9f       	mul	r18, r22
    75dc:	11 24       	eor	r1, r1
    75de:	30 19       	sub	r19, r0
    75e0:	30 5d       	subi	r19, 0xD0	; 208
    75e2:	31 93       	st	Z+, r19
    75e4:	de f6       	brtc	.-74     	; 0x759c <__ultoa_invert+0xe>
    75e6:	cf 01       	movw	r24, r30
    75e8:	08 95       	ret
    75ea:	46 2f       	mov	r20, r22
    75ec:	47 70       	andi	r20, 0x07	; 7
    75ee:	40 5d       	subi	r20, 0xD0	; 208
    75f0:	41 93       	st	Z+, r20
    75f2:	b3 e0       	ldi	r27, 0x03	; 3
    75f4:	0f d0       	rcall	.+30     	; 0x7614 <__ultoa_invert+0x86>
    75f6:	c9 f7       	brne	.-14     	; 0x75ea <__ultoa_invert+0x5c>
    75f8:	f6 cf       	rjmp	.-20     	; 0x75e6 <__ultoa_invert+0x58>
    75fa:	46 2f       	mov	r20, r22
    75fc:	4f 70       	andi	r20, 0x0F	; 15
    75fe:	40 5d       	subi	r20, 0xD0	; 208
    7600:	4a 33       	cpi	r20, 0x3A	; 58
    7602:	18 f0       	brcs	.+6      	; 0x760a <__ultoa_invert+0x7c>
    7604:	49 5d       	subi	r20, 0xD9	; 217
    7606:	31 fd       	sbrc	r19, 1
    7608:	40 52       	subi	r20, 0x20	; 32
    760a:	41 93       	st	Z+, r20
    760c:	02 d0       	rcall	.+4      	; 0x7612 <__ultoa_invert+0x84>
    760e:	a9 f7       	brne	.-22     	; 0x75fa <__ultoa_invert+0x6c>
    7610:	ea cf       	rjmp	.-44     	; 0x75e6 <__ultoa_invert+0x58>
    7612:	b4 e0       	ldi	r27, 0x04	; 4
    7614:	a6 95       	lsr	r26
    7616:	97 95       	ror	r25
    7618:	87 95       	ror	r24
    761a:	77 95       	ror	r23
    761c:	67 95       	ror	r22
    761e:	ba 95       	dec	r27
    7620:	c9 f7       	brne	.-14     	; 0x7614 <__ultoa_invert+0x86>
    7622:	00 97       	sbiw	r24, 0x00	; 0
    7624:	61 05       	cpc	r22, r1
    7626:	71 05       	cpc	r23, r1
    7628:	08 95       	ret
    762a:	9b 01       	movw	r18, r22
    762c:	ac 01       	movw	r20, r24
    762e:	0a 2e       	mov	r0, r26
    7630:	06 94       	lsr	r0
    7632:	57 95       	ror	r21
    7634:	47 95       	ror	r20
    7636:	37 95       	ror	r19
    7638:	27 95       	ror	r18
    763a:	ba 95       	dec	r27
    763c:	c9 f7       	brne	.-14     	; 0x7630 <__ultoa_invert+0xa2>
    763e:	62 0f       	add	r22, r18
    7640:	73 1f       	adc	r23, r19
    7642:	84 1f       	adc	r24, r20
    7644:	95 1f       	adc	r25, r21
    7646:	a0 1d       	adc	r26, r0
    7648:	08 95       	ret

0000764a <__prologue_saves__>:
    764a:	2f 92       	push	r2
    764c:	3f 92       	push	r3
    764e:	4f 92       	push	r4
    7650:	5f 92       	push	r5
    7652:	6f 92       	push	r6
    7654:	7f 92       	push	r7
    7656:	8f 92       	push	r8
    7658:	9f 92       	push	r9
    765a:	af 92       	push	r10
    765c:	bf 92       	push	r11
    765e:	cf 92       	push	r12
    7660:	df 92       	push	r13
    7662:	ef 92       	push	r14
    7664:	ff 92       	push	r15
    7666:	0f 93       	push	r16
    7668:	1f 93       	push	r17
    766a:	cf 93       	push	r28
    766c:	df 93       	push	r29
    766e:	cd b7       	in	r28, 0x3d	; 61
    7670:	de b7       	in	r29, 0x3e	; 62
    7672:	ca 1b       	sub	r28, r26
    7674:	db 0b       	sbc	r29, r27
    7676:	0f b6       	in	r0, 0x3f	; 63
    7678:	f8 94       	cli
    767a:	de bf       	out	0x3e, r29	; 62
    767c:	0f be       	out	0x3f, r0	; 63
    767e:	cd bf       	out	0x3d, r28	; 61
    7680:	09 94       	ijmp

00007682 <__epilogue_restores__>:
    7682:	2a 88       	ldd	r2, Y+18	; 0x12
    7684:	39 88       	ldd	r3, Y+17	; 0x11
    7686:	48 88       	ldd	r4, Y+16	; 0x10
    7688:	5f 84       	ldd	r5, Y+15	; 0x0f
    768a:	6e 84       	ldd	r6, Y+14	; 0x0e
    768c:	7d 84       	ldd	r7, Y+13	; 0x0d
    768e:	8c 84       	ldd	r8, Y+12	; 0x0c
    7690:	9b 84       	ldd	r9, Y+11	; 0x0b
    7692:	aa 84       	ldd	r10, Y+10	; 0x0a
    7694:	b9 84       	ldd	r11, Y+9	; 0x09
    7696:	c8 84       	ldd	r12, Y+8	; 0x08
    7698:	df 80       	ldd	r13, Y+7	; 0x07
    769a:	ee 80       	ldd	r14, Y+6	; 0x06
    769c:	fd 80       	ldd	r15, Y+5	; 0x05
    769e:	0c 81       	ldd	r16, Y+4	; 0x04
    76a0:	1b 81       	ldd	r17, Y+3	; 0x03
    76a2:	aa 81       	ldd	r26, Y+2	; 0x02
    76a4:	b9 81       	ldd	r27, Y+1	; 0x01
    76a6:	ce 0f       	add	r28, r30
    76a8:	d1 1d       	adc	r29, r1
    76aa:	0f b6       	in	r0, 0x3f	; 63
    76ac:	f8 94       	cli
    76ae:	de bf       	out	0x3e, r29	; 62
    76b0:	0f be       	out	0x3f, r0	; 63
    76b2:	cd bf       	out	0x3d, r28	; 61
    76b4:	ed 01       	movw	r28, r26
    76b6:	08 95       	ret

000076b8 <__do_global_dtors>:
    76b8:	13 e1       	ldi	r17, 0x13	; 19
    76ba:	cb e9       	ldi	r28, 0x9B	; 155
    76bc:	d3 e1       	ldi	r29, 0x13	; 19
    76be:	04 c0       	rjmp	.+8      	; 0x76c8 <__do_global_dtors+0x10>
    76c0:	fe 01       	movw	r30, r28
    76c2:	0e 94 f5 33 	call	0x67ea	; 0x67ea <__tablejump2__>
    76c6:	21 96       	adiw	r28, 0x01	; 1
    76c8:	cc 39       	cpi	r28, 0x9C	; 156
    76ca:	d1 07       	cpc	r29, r17
    76cc:	c9 f7       	brne	.-14     	; 0x76c0 <__do_global_dtors+0x8>
    76ce:	f8 94       	cli

000076d0 <__stop_program>:
    76d0:	ff cf       	rjmp	.-2      	; 0x76d0 <__stop_program>
